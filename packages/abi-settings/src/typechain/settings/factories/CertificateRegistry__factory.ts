/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CertificateRegistry, CertificateRegistryInterface } from '../CertificateRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_daoRegistry',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_issuer',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AccessControlBadConfirmation',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'neededRole',
        type: 'bytes32',
      },
    ],
    name: 'AccessControlUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ECDSAInvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'ECDSAInvalidSignatureLength',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'ECDSAInvalidSignatureS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
    ],
    name: 'ExpiredCertificate',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidIssuer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'CertificateCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'issuer',
        type: 'address',
      },
    ],
    name: 'IssuerChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'certificateCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'daoRegistry',
    outputs: [
      {
        internalType: 'contract MystikoGovernorRegistry',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableCertificateCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableCertificateCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getIssuerAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'issuer',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'callerConfirmation',
        type: 'address',
      },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4',
      },
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newIssuer',
        type: 'address',
      },
    ],
    name: 'updateIssuerAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'account',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'asset',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'signature',
            type: 'bytes',
          },
        ],
        internalType: 'struct CertificateParams',
        name: '_params',
        type: 'tuple',
      },
    ],
    name: 'verifyCertificate',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526002805460ff60a01b1916600160a01b1790553480156200002457600080fd5b5060405162000f3a38038062000f3a8339810160408190526200004791620001cc565b600180546001600160a01b0319166001600160a01b03841690811790915560408051634162169f60e01b815290518492620000d792600092634162169f916004808201926020929091908290030181865afa158015620000ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d1919062000204565b62000100565b5050600280546001600160a01b0319166001600160a01b03929092169190911790555062000229565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16620001a5576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556200015c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001620001a9565b5060005b92915050565b80516001600160a01b0381168114620001c757600080fd5b919050565b60008060408385031215620001e057600080fd5b620001eb83620001af565b9150620001fb60208401620001af565b90509250929050565b6000602082840312156200021757600080fd5b6200022282620001af565b9392505050565b610d0180620002396000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806332e71ead11610097578063a217fddf11610066578063a217fddf1461022f578063be102b6a14610237578063d547741f1461024b578063e24207aa1461025e57600080fd5b806332e71ead146101c157806336568abe146101d2578063849e8b9f146101e557806391d14854146101f857600080fd5b806323f4c826116100d357806323f4c82614610162578063248a9ca31461016a5780632a2b6ba01461019b5780632f2ff15d146101ae57600080fd5b806301ffc9a7146100fa5780631d143848146101225780631dfab65b1461014d575b600080fd5b61010d610108366004610a8b565b610266565b60405190151581526020015b60405180910390f35b600254610135906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b61016061015b366004610ad1565b61029d565b005b61016061039d565b61018d610178366004610aee565b60009081526020819052604090206001015490565b604051908152602001610119565b600154610135906001600160a01b031681565b6101606101bc366004610b07565b610488565b6002546001600160a01b0316610135565b6101606101e0366004610b07565b6104b3565b61010d6101f3366004610ba7565b6104eb565b61010d610206366004610b07565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61018d600081565b60025461010d90600160a01b900460ff1681565b610160610259366004610b07565b6105f3565b610160610618565b60006001600160e01b03198216637965db0b60e01b148061029757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60015460408051634162169f60e01b8152905133926001600160a01b031691634162169f9160048083019260209291908290030181865afa1580156102e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030a9190610c98565b6001600160a01b0316146103315760405163177bc95160e11b815260040160405180910390fd5b600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527fcad349a575b7a312fc947b899cb436e2fde2cde8be518bf412258b1d7836a54e9060200160405180910390a150565b60015460408051634162169f60e01b8152905133926001600160a01b031691634162169f9160048083019260209291908290030181865afa1580156103e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040a9190610c98565b6001600160a01b0316146104315760405163177bc95160e11b815260040160405180910390fd5b6002805460ff60a01b1916908190556040517ffea2f793d2c6ac256ea0dfcb898c0e552223a2a6ed4d2c25d1ed2eca25aad3109161047e91600160a01b90910460ff161515815260200190565b60405180910390a1565b6000828152602081905260409020600101546104a3816106fb565b6104ad8383610708565b50505050565b6001600160a01b03811633146104dc5760405163334bd91960e11b815260040160405180910390fd5b6104e682826107b2565b505050565b600254600090600160a01b900460ff1661050757506001919050565b816040015142111561053d5781604001516040516366922ea760e01b815260040161053491815260200190565b60405180910390fd5b6000468360000151846020015185604001516040516020016105909493929190938452606092831b6bffffffffffffffffffffffff1990811660208601529190921b166034830152604882015260680190565b60405160208183030381529060405280519060200120905060006105b8828560600151610835565b6002549091506001600160a01b038083169116146105e957604051635edff10b60e11b815260040160405180910390fd5b5060019392505050565b60008281526020819052604090206001015461060e816106fb565b6104ad83836107b2565b60015460408051634162169f60e01b8152905133926001600160a01b031691634162169f9160048083019260209291908290030181865afa158015610661573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106859190610c98565b6001600160a01b0316146106ac5760405163177bc95160e11b815260040160405180910390fd5b6002805460ff60a01b1916600160a01b908117918290556040517ffea2f793d2c6ac256ea0dfcb898c0e552223a2a6ed4d2c25d1ed2eca25aad3109261047e92900460ff161515815260200190565b610705813361085f565b50565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166107aa576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556107623390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610297565b506000610297565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16156107aa576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610297565b60008060008061084586866108b6565b9250925092506108558282610903565b5090949350505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166108b25760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610534565b5050565b600080600083516041036108f05760208401516040850151606086015160001a6108e2888285856109bc565b9550955095505050506108fc565b50508151600091506002905b9250925092565b600082600381111561091757610917610cb5565b03610920575050565b600182600381111561093457610934610cb5565b036109525760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561096657610966610cb5565b036109875760405163fce698f760e01b815260048101829052602401610534565b600382600381111561099b5761099b610cb5565b036108b2576040516335e2f38360e21b815260048101829052602401610534565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156109f75750600091506003905082610a81565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610a4b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610a7757506000925060019150829050610a81565b9250600091508190505b9450945094915050565b600060208284031215610a9d57600080fd5b81356001600160e01b031981168114610ab557600080fd5b9392505050565b6001600160a01b038116811461070557600080fd5b600060208284031215610ae357600080fd5b8135610ab581610abc565b600060208284031215610b0057600080fd5b5035919050565b60008060408385031215610b1a57600080fd5b823591506020830135610b2c81610abc565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610b7057610b70610b37565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b9f57610b9f610b37565b604052919050565b60006020808385031215610bba57600080fd5b823567ffffffffffffffff80821115610bd257600080fd5b9084019060808287031215610be657600080fd5b610bee610b4d565b8235610bf981610abc565b815282840135610c0881610abc565b8185015260408381013590820152606083013582811115610c2857600080fd5b80840193505086601f840112610c3d57600080fd5b823582811115610c4f57610c4f610b37565b610c61601f8201601f19168601610b76565b92508083528785828601011115610c7757600080fd5b80858501868501376000908301909401939093526060830152509392505050565b600060208284031215610caa57600080fd5b8151610ab581610abc565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e0c078dac035ff89f1f4ad8a1a08ecc0960f1a6ff9abfe9890f21f0c29e55a6b64736f6c63430008140033';

type CertificateRegistryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CertificateRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CertificateRegistry__factory extends ContractFactory {
  constructor(...args: CertificateRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CertificateRegistry';
  }

  deploy(
    _daoRegistry: string,
    _issuer: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CertificateRegistry> {
    return super.deploy(_daoRegistry, _issuer, overrides || {}) as Promise<CertificateRegistry>;
  }
  getDeployTransaction(
    _daoRegistry: string,
    _issuer: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_daoRegistry, _issuer, overrides || {});
  }
  attach(address: string): CertificateRegistry {
    return super.attach(address) as CertificateRegistry;
  }
  connect(signer: Signer): CertificateRegistry__factory {
    return super.connect(signer) as CertificateRegistry__factory;
  }
  static readonly contractName: 'CertificateRegistry';
  public readonly contractName: 'CertificateRegistry';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CertificateRegistryInterface {
    return new utils.Interface(_abi) as CertificateRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CertificateRegistry {
    return new Contract(address, _abi, signerOrProvider) as CertificateRegistry;
  }
}
