/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Rollup16Verifier, Rollup16VerifierInterface } from '../Rollup16Verifier';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506114a7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046112a1565b610057565b604051901515815260200160405180910390f35b600081516004146100ae5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420696e707574206c656e677468000000000000000000000000604482015260640160405180910390fd5b6100b882846100bf565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100eb610316565b90508060800151518551600161010191906113ad565b1461010b57600080fd5b835151821161011957600080fd5b835160200151821161012a57600080fd5b60208401515151821161013c57600080fd5b602084810151015151821161015057600080fd5b602084810151510151821161016457600080fd5b6020848101518101510151821161017a57600080fd5b604084015151821161018b57600080fd5b818460400151602001511061019f57600080fd5b83516101aa90610814565b6101b357600080fd5b6101c0846020015161088c565b6101c957600080fd5b6101d68460400151610814565b6101df57600080fd5b604080518082019091526000808252602082018190525b865181101561028d578387828151811061021257610212611445565b60200260200101511061022457600080fd5b61027982610274856080015184600161023d91906113ad565b8151811061024d5761024d611445565b60200260200101518a858151811061026757610267611445565b6020026020010151610976565b6109d4565b915080610285816113dc565b9150506101f6565b506102b68183608001516000815181106102a9576102a9611445565b60200260200101516109d4565b90506102c181610814565b6102ca57600080fd5b61030c856000015186602001516102e084610a2e565b85604001516102f28a60400151610a2e565b6060880151885161030290610a2e565b8960200151610adc565b9695505050505050565b61031e61106b565b6040805180820182527f2c7762da39e2ff9080ee45e041a3996dd29724409a43c76b391eccf69ff3f15581527f0a756a28ebf393811037011e9ef58fe5add285c96b101ea0564902becf5c6f6d6020808301919091529083528151608080820184527f1ec57cd391b5b1c076a1f336feeb767beed5659342bcbac282321d016d1473008285019081527ebff69f46c8e63d920a41d61bdad806803b626a6fd9e5951175a815e38a05e3606080850191909152908352845180860186527f156fb68f14345a7bf01fa4138363127072aeb10109367755b0aae324c3dce7a081527f0435b887e6fe26abbe5763905dde6c596c45399dee8b953b45b9b721e7d83678818601528385015285840192909252835180820185527f2211449dd60484d52efdb8454a773dc3dee68d1cd891d2b7228d05cc1b8035188186019081527f181c1d5999ccb8192ed564bba377d6a451616780daa4b8056379c0e32e443d54828501528152845180860186527f0bb0c41e139b520483fd0064d8f94cf20ddb629526ca57c225f448c95cbfd06d81527f2c741a5581e9c7613205b43708e6ce2b518bccfc82d775c47418d9743756d404818601528185015285850152835190810184527f17337aefad3eb9db6105ab4f27a4541c8558d90cba1894855751f87a210d08be8185019081527f1a713b71b7c4fd2d9d1c9fb8e8dbece402d164b3d0653e587f86ae354f70f8de828401528152835180850185527f119276e04ee9b47b06227d3bf5876900209a929e23a9dfab015f7d69c6b1669581527f1f96a989bf9dfb99a437150ebeac4ae6f33f45684cbb969af9ea88f01a8d63bc8185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161059857505060808201908152604080518082019091527f10de3d72cbe5ff6166f4e74c6a534a0b5c8bab8ae4867595bf87fbbd4ad199b381527f158d89b6cfc41c020369ccc5001070cc2f0ee1b3924808e7ea7d510f64fc9b7a60208201529051805160009061062b5761062b611445565b602002602001018190525060405180604001604052807f0397014db138e08ad92767d0a1b9c2caf8dedb67de6e13f58fbcd79e95fd332981526020017f07372776e40fb4627be6e9b02109a5e3ce469238df8ee0412c170f48fa0d410881525081608001516001815181106106a2576106a2611445565b602002602001018190525060405180604001604052807f0ed847f8c6f88d219733b89c903679d884a446e76ca0c3ab3c44938894352a6e81526020017f0d124ae18c762d1918e8c14a4eb1b39cb3456c3bedbac793263c826eeed24b62815250816080015160028151811061071957610719611445565b602002602001018190525060405180604001604052807f0dcb9ad9a728d8dfeed4dafb5bb1d9d0dc0da12131c80cada397cc18ca7f6ebf81526020017eb8c989a8fd0f482731c55c1af8180afe33e1d98123f40a8438e1445569dcdd815250816080015160038151811061078f5761078f611445565b602002602001018190525060405180604001604052807f2c282c015f7ee2e6e029cc9c2f1964796c5bb975b97fd16a526ee56271c7d1ec81526020017f25becb5c200e8659c99df32e88d9bec41ad5f8b4c27563a3d22e859c98412270815250816080015160048151811061080657610806611445565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476108428160036113f7565b81806108505761085061142f565b845183806108605761086061142f565b865180090982806108735761087361142f565b6020860151800961088491906113c5565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926108fc92909190829060015b6020020151610f3d565b895180516020820151939750919550610921929060005b60200201518b5160016108f2565b8951919350915061093790839083906000610913565b909250905061094884848484610fbe565b909450925061095984848888610fbe565b90945092508315801561096a575082155b98975050505050505050565b60408051808201909152600080825260208201526109926110bc565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b575b50806109cc57600080fd5b505092915050565b60408051808201909152600080825260208201526109f06110da565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b576109c1565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610a99576040518060400160405280828560000151610a8891906113f7565b815260006020909101529392505050565b6040518060400160405280828560000151610ab491906113f7565b8152602001828560200151610ac991906113f7565b610ad390846113c5565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610b1d57610b1d611445565b6020026020010181815250508a6020015181600181518110610b4157610b41611445565b602090810291909101015289516001602002015181600281518110610b6857610b68611445565b6020908102919091010152895151815182906003908110610b8b57610b8b611445565b6020026020010181815250508960200151600160028110610bae57610bae611445565b602002015181600481518110610bc657610bc6611445565b6020026020010181815250508960200151600060028110610be957610be9611445565b602002015181600581518110610c0157610c01611445565b602002602001018181525050886000015181600681518110610c2557610c25611445565b602002602001018181525050886020015181600781518110610c4957610c49611445565b602090810291909101015287516001602002015181600881518110610c7057610c70611445565b6020908102919091010152875151815182906009908110610c9357610c93611445565b6020026020010181815250508760200151600160028110610cb657610cb6611445565b602002015181600a81518110610cce57610cce611445565b6020026020010181815250508760200151600060028110610cf157610cf1611445565b602002015181600b81518110610d0957610d09611445565b602002602001018181525050866000015181600c81518110610d2d57610d2d611445565b602002602001018181525050866020015181600d81518110610d5157610d51611445565b602090810291909101015285516001602002015181600e81518110610d7857610d78611445565b602090810291909101015285515181518290600f908110610d9b57610d9b611445565b6020026020010181815250508560200151600160028110610dbe57610dbe611445565b602002015181601081518110610dd657610dd6611445565b6020026020010181815250508560200151600060028110610df957610df9611445565b602002015181601181518110610e1157610e11611445565b602002602001018181525050846000015181601281518110610e3557610e35611445565b602002602001018181525050846020015181601381518110610e5957610e59611445565b602090810291909101015283516001602002015181601481518110610e8057610e80611445565b6020908102919091010152835151815182906015908110610ea357610ea3611445565b6020026020010181815250508360200151600160028110610ec657610ec6611445565b602002015181601681518110610ede57610ede611445565b6020026020010181815250508360200151600060028110610f0157610f01611445565b602002015181601781518110610f1957610f19611445565b602002602001018181525050610f2e81611006565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610f7f818689098280610f7657610f7661142f565b86890983611047565b8180610f8d57610f8d61142f565b8280610f9b57610f9b61142f565b8789098380610fac57610fac61142f565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610fed878683611047565b610ff8878684611047565b925092505094509492505050565b80516000906110136110f8565b6000602082602085026020880160086107d05a03fa905080801561002b57508061103c57600080fd5b505115159392505050565b600081806110575761105761142f565b61106184846113c5565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611095611116565b81526020016110a2611116565b81526020016110af611116565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061112961113b565b815260200161113661113b565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261116a57600080fd5b611172611361565b80838560408601111561118457600080fd5b60005b60028110156111a6578135845260209384019390910190600101611187565b509095945050505050565b600082601f8301126111c257600080fd5b8135602067ffffffffffffffff808311156111df576111df61145b565b8260051b604051601f19603f830116810181811084821117156112045761120461145b565b6040528481528381019250868401828801850189101561122357600080fd5b600092505b85831015611246578035845292840192600192909201918401611228565b50979650505050505050565b60006040828403121561126457600080fd5b6040516040810181811067ffffffffffffffff821117156112875761128761145b565b604052823581526020928301359281019290925250919050565b6000808284036101208112156112b657600080fd5b610100808212156112c657600080fd5b6112ce61138a565b6112d88787611252565b81526080603f19840112156112ec57600080fd5b6112f4611361565b92506113038760408801611159565b83526113128760808801611159565b602084015282602082015261132a8760c08801611252565b60408201529350840135905067ffffffffffffffff81111561134b57600080fd5b611357858286016111b1565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156113845761138461145b565b60405290565b6040516060810167ffffffffffffffff811182821017156113845761138461145b565b600082198211156113c0576113c0611419565b500190565b6000828210156113d7576113d7611419565b500390565b60006000198214156113f0576113f0611419565b5060010190565b60008261141457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ebb0c082f4dd2da962207592bbfa49e015141174ca1c20ba31f70d3e5b7de12664736f6c63430008070033';

type Rollup16VerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Rollup16VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup16Verifier__factory extends ContractFactory {
  constructor(...args: Rollup16VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Rollup16Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Rollup16Verifier> {
    return super.deploy(overrides || {}) as Promise<Rollup16Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Rollup16Verifier {
    return super.attach(address) as Rollup16Verifier;
  }
  connect(signer: Signer): Rollup16Verifier__factory {
    return super.connect(signer) as Rollup16Verifier__factory;
  }
  static readonly contractName: 'Rollup16Verifier';
  public readonly contractName: 'Rollup16Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Rollup16VerifierInterface {
    return new utils.Interface(_abi) as Rollup16VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup16Verifier {
    return new Contract(address, _abi, signerOrProvider) as Rollup16Verifier;
  }
}
