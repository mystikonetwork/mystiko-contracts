/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorPublicKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'publicKey',
        type: 'bytes32',
      },
    ],
    name: 'AuditorPublicKeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'auditorPublicKey',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'bytes32',
            name: 'randomAuditingPublicKey',
            type: 'bytes32',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_publicKey',
        type: 'bytes32',
      },
    ],
    name: 'updateAuditorPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b50604051620046db380380620046db8339810160408190526200006591620007c7565b6001600055808260ff81166200008e57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b581620000fe565b600a8190556000908152600960205260409020805460ff1916600117905550601580546001600160a01b039092166001600160a01b031990921691909117905550620008169050565b600060ff82166200013057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016457507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019857507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001cc57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001ff57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026757507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200029b57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002cf57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030357507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033757507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200036b57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200039f57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040757507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200043b57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200046f57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a257507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004d657507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200050a57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200053e57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005a657507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005da57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200060e57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064257507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067657507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006aa57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006de57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074657507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200077a57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007ae57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007db57600080fd5b825160ff81168114620007ed57600080fd5b60208401519092506001600160a01b03811681146200080b57600080fd5b809150509250929050565b608051613e9b620008406000396000818161035901528181610fc9015261194b0152613e9b6000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c806387780df911610160578063c2d41601116100d8578063e500f5041161008c578063f2da1d4111610071578063f2da1d4114610540578063f8f0538814610553578063ffa89b881461056657600080fd5b8063e500f5041461050d578063ec571c6a1461051557600080fd5b8063c9230c5d116100bd578063c9230c5d146104ea578063dd757c34146104f2578063deeff7cd146104fa57600080fd5b8063c2d41601146104bd578063c307fd1b146104d757600080fd5b8063a9b1d2961161012f578063b1c3942211610114578063b1c3942214610483578063b3b7563114610497578063c259e2e6146104aa57600080fd5b8063a9b1d29614610468578063b08892d01461047b57600080fd5b806387780df91461040c5780639b0a6fea1461041f5780639cc6b35414610432578063a6232a931461044557600080fd5b80633fe3347a116101f3578063618e1dde116101c257806378d60cd7116101a757806378d60cd7146103d35780637cbf0ff6146103e65780637fa4b09c146103f957600080fd5b8063618e1dde146103ab57806363bc7d32146103be57600080fd5b80633fe3347a14610348578063484eb652146103575780634eb069f71461037d578063570600161461038857600080fd5b8063115f574c1161024a578063176de7a81161022f578063176de7a8146102ed57806330f49cac146103025780633bb8d1b41461031557600080fd5b8063115f574c146102bf57806314a7737d146102da57600080fd5b806301dbf19f1461027c57806302d498f11461028657806303db98741461029957806306394c9b146102ac575b600080fd5b610284610576565b005b6102846102943660046133d0565b6105fa565b6102846102a73660046133d0565b610649565b6102846102ba3660046133d0565b610695565b6102c7600581565b6040519081526020015b60405180910390f35b6102846102e8366004613545565b610746565b6102f5610ca9565b6040516102d19190613a74565b6102846103103660046133d0565b610d2f565b61033861032336600461377b565b60009081526005602052604090205460ff1690565b60405190151581526020016102d1565b60006040516102d19190613a4c565b7f00000000000000000000000000000000000000000000000000000000000000006102c7565b600f5460ff16610338565b61033861039636600461377b565b60009081526004602052604090205460ff1690565b6102846103b93660046135b9565b610dbc565b6103c6611875565b6040516102d19190613a08565b6102846103e136600461349e565b6118f2565b6102846103f436600461377b565b611a21565b610284610407366004613855565b611a9f565b6102c761041a36600461377b565b611b82565b61028461042d3660046137d9565b611bba565b6102846104403660046133d0565b611cb2565b61033861045336600461377b565b60009081526009602052604090205460ff1690565b6102846104763660046133d0565b611cfe565b600c546102c7565b60015461033890600160a01b900460ff1681565b6102846104a53660046133ed565b611d4d565b6102846104b836600461382b565b611db9565b6104c5611e5d565b60405160ff90911681526020016102d1565b6102846104e5366004613794565b611eda565b6102f5611fb4565b610284611ff9565b6102846105083660046137f4565b612071565b6008546102c7565b600154610528906001600160a01b031681565b6040516001600160a01b0390911681526020016102d1565b6102c761054e3660046137b6565b6121b1565b6102846105613660046133ed565b61223a565b600f54610100900460ff16610338565b600b546001600160a01b031633146105a1576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926105f092900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610625576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610674576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146106c0576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b03828116911614156106ef576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600f54610100900460ff1615801561076e5750336000908152600d602052604090205460ff16155b1561078c576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156107bf5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806107fb575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561083b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516108539063ffffffff1682613dc8565b1561088e576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610832565b600061089e8284602001516121b1565b90506000836020015163ffffffff1667ffffffffffffffff8111156108c5576108c5613e2c565b6040519080825280602002602001820160405280156108ee578160200160208202803683370190505b5090506000805b856020015163ffffffff168110156109ec5760006109138287613c2f565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906109605760405163d3482f7b60e01b815260040160405180910390fd5b806000015185848151811061097757610977613e16565b6020026020010181815250508060200151846109939190613c2f565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a2505080806109e490613d69565b9150506108f5565b50846020015163ffffffff1660076000828254610a099190613cba565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610a4491906139b6565b6040516020818303038152906040528051906020012060001c610a679190613dc8565b905080866060015114610abd576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610832565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610af657610af6613e16565b602002602001018181525050866040015181600181518110610b1a57610b1a613e16565b6020026020010181815250508181600281518110610b3a57610b3a613e16565b6020026020010181815250508481600381518110610b5a57610b5a613e16565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610bb291908690600401613a87565b602060405180830381600087803b158015610bcc57600080fd5b505af1158015610be0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c04919061340a565b905080610c54576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610832565b876020015163ffffffff1660086000828254610c709190613c2f565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610c9f846122ae565b5050505050505050565b601554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610cee57600080fd5b505afa158015610d02573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d2a9190810190613427565b905090565b600b546001600160a01b03163314610d5a576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610e0f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610832565b60026000908155604083015151610e25906122c8565b90506000610e378460e00151516122c8565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610eb4576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610832565b8163ffffffff1684606001515114610f0f576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610832565b8063ffffffff168461010001515114610f6b576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610832565b8063ffffffff168461016001515114610fc7576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610832565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610fff9190613c2f565b6110099190613c2f565b111561102857604051633b5ccb4360e21b815260040160405180910390fd5b61103132612348565b1561104f57604051632e70c0b160e01b815260040160405180910390fd5b61105d846101200151612348565b1561107b57604051632e70c0b160e01b815260040160405180910390fd5b61108c600563ffffffff8416613c6f565b846101a0015151146110b157604051633acf48bb60e21b815260040160405180910390fd5b60006110bc856123e7565b90506110c88185612573565b6001600160a01b031660001b856080015114611127576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610832565b6000611134846002613c8e565b63ffffffff1690506000611149856002613c8e565b611154906004613c47565b63ffffffff1690506000611169856002613c8e565b6111799063ffffffff1683613c2f565b90506000600561118a886002613c47565b63ffffffff1661119a9190613c6f565b6111a5836002613c2f565b6111af9190613c2f565b67ffffffffffffffff8111156111c7576111c7613e2c565b6040519080825280602002602001820160405280156111f0578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff16611242576040516314e8955b60e21b8152600401610832906020808252600490820152631c9bdbdd60e21b604082015260600190565b88602001518160008151811061125a5761125a613e16565b60209081029190910101526000611272886001613c47565b63ffffffff16905060005b8863ffffffff1681101561137e5760008b6040015182815181106112a3576112a3613e16565b6020908102919091018101516000818152600590925260409091205490915060ff16156112fc576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8084611309846001613c2f565b8151811061131957611319613e16565b6020026020010181815250508b60600151828151811061133b5761133b613e16565b60200260200101518484846113509190613c2f565b8151811061136057611360613e16565b6020908102919091010152508061137681613d69565b91505061127d565b5060808a015182611390876001613c2f565b815181106113a0576113a0613e16565b602090810291909101015260a08a0151826113bc876002613c2f565b815181106113cc576113cc613e16565b602090810291909101015260c08a0151826113e8876003613c2f565b815181106113f8576113f8613e16565b6020908102919091010152600061141563ffffffff891686613c2f565b905060005b8863ffffffff1681101561158f57600460008d60e00151838151811061144257611442613e16565b60209081029190910181015182528101919091526040016000205460ff16156114ae5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610832565b600c548c610100015182815181106114c8576114c8613e16565b602002602001015110156114ef5760405163784f02bd60e11b815260040160405180910390fd5b8b60e00151818151811061150557611505613e16565b602002602001015184878361151a9190613c2f565b8151811061152a5761152a613e16565b6020026020010181815250508b6101000151818151811061154d5761154d613e16565b60200260200101518483836115629190613c2f565b8151811061157257611572613e16565b60209081029190910101528061158781613d69565b91505061141a565b5061159b8b8486612597565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c9417647916115f0918890600401613a87565b602060405180830381600087803b15801561160a57600080fd5b505af115801561161e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611642919061340a565b905080611692576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610832565b60005b8a63ffffffff1681101561174d576001600560008f6040015184815181106116bf576116bf613e16565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c60400151818151811061170257611702613e16565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061174581613d69565b915050611695565b5060005b8963ffffffff1681101561181e576001600460008f60e00151848151811061177b5761177b613e16565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555061180c8d60e0015182815181106117c1576117c1613e16565b60200260200101518e610100015183815181106117e0576117e0613e16565b60200260200101518f610160015184815181106117ff576117ff613e16565b602002602001015161274a565b8061181681613d69565b915050611751565b5060a08c01511561183c5761183c8c61012001518d60a001516127e9565b60c08c015115611859576118598c61014001518d60c001516127e9565b6118628c612800565b5050600160005550505050505050505050565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b60058110156118ec57601081600581106118bb576118bb613e16565b01548282815181106118cf576118cf613e16565b6020908102919091010152806118e481613d69565b91505061189f565b50919050565b336000908152600e602052604090205460ff166119225760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156119495760405163784f02bd60e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060075460085461197a9190613c2f565b1061199857604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff16156119ce5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611a0592919061274a565b604082015115611a1d57611a1d8183604001516127e9565b5050565b600b546001600160a01b03163314611a4c576040516327e1f1e560e01b815260040160405180910390fd5b80611a9a576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610832565b600c55565b600b546001600160a01b03163314611aca576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611aee576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611b1257604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b60006005611b91836001613c2f565b1115611b9f57506000919050565b60108260058110611bb257611bb2613e16565b015492915050565b600b546001600160a01b03163314611be5576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c09576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611c2357506104008163ffffffff16115b15611c5e576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610832565b611c69600182613cd1565b811663ffffffff16600014611c91576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611cdd576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611d29576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611d78576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610db1565b600b546001600160a01b03163314611de4576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611e08576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611e2c57604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6015546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015611ea257600080fd5b505afa158015611eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a919061389c565b600b546001600160a01b03163314611f05576040516327e1f1e560e01b815260040160405180910390fd5b6005611f12836001613c2f565b1115611f315760405163318c434560e21b815260040160405180910390fd5b8060108360058110611f4557611f45613e16565b01541415611f6557604051624a706760e31b815260040160405180910390fd5b8060108360058110611f7957611f79613e16565b015560405181815282907f30df8141f8e200e52a42580a8cc71ca94e8df53b3260557c582b8636354e133c9060200160405180910390a25050565b601554604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610cee57600080fd5b600b546001600160a01b03163314612024576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916105f091600160a01b90910460ff161515815260200190565b600b546001600160a01b0316331461209c576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156120c0576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821615806120da57506104008263ffffffff16115b15612115576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610832565b612120600183613cd1565b821663ffffffff16600014612148576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106121d75760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106121fa5760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061221d5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061223357600183901c92505b5090919050565b600b546001600160a01b03163314612265576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610db190831515815260200190565b6015546122c5906001600160a01b0316338361290d565b50565b600063ffffffff8211156123445760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610832565b5090565b600154600090600160a01b900460ff1661236457506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156123a957600080fd5b505afa1580156123bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e1919061340a565b92915050565b610160810151516000906003811061241257604051633fb1945d60e11b815260040160405180910390fd5b606081612466576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061251e565b81600114156124ad5783610120015184610140015185610160015160008151811061249357612493613e16565b602002602001015160405160200161245093929190613914565b8361012001518461014001518561016001516000815181106124d1576124d1613e16565b60200260200101518661016001516001815181106124f1576124f1613e16565b602002602001015160405160200161250c949392919061395a565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006125828585612979565b9150915061258f816129e9565b509392505050565b60006125a7846101800151612ba4565b905080600001518383815181106125c0576125c0613e16565b6020026020010181815250508060200151838360016125df9190613c2f565b815181106125ef576125ef613e16565b60200260200101818152505060005b60058110156126b65760006126266010836005811061261f5761261f613e16565b0154612ba4565b80519091508583612638876002613c2f565b6126429190613c2f565b8151811061265257612652613e16565b6020026020010181815250508060200151858360058760026126749190613c2f565b61267e9190613c2f565b6126889190613c2f565b8151811061269857612698613e16565b602090810291909101015250806126ae81613d69565b9150506125fe565b5060005b846101a001515181101561274357846101a0015181815181106126df576126df613e16565b60200260200101518482600560026126f79190613c6f565b612702876002613c2f565b61270c9190613c2f565b6127169190613c2f565b8151811061272657612726613e16565b60209081029190910101528061273b81613d69565b9150506126ba565b5050505050565b600060085460075461275c9190613c2f565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906127a0908490613c2f565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516127db93929190613b23565b60405180910390a250505050565b601554611a1d906001600160a01b0316838361290d565b60005b8160400151518163ffffffff161015611a1d5760005b60058163ffffffff1610156128fa5763ffffffff8116602083901b67ffffffff00000000168117907f057a877117d95589f0bad1b7e07364f289e1d32a0e988e0778a4584f683d23099082906010906005811061287857612878613e16565b0154866101a001518563ffffffff1660058863ffffffff1661289a9190613c6f565b6128a49190613c2f565b815181106128b4576128b4613e16565b6020908102919091018101516040805167ffffffffffffffff90951685529184019290925282015260600160405180910390a150806128f281613d84565b915050612819565b508061290581613d84565b915050612803565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612974908490612d4c565b505050565b6000808251604114156129b05760208301516040840151606085015160001a6129a487828585612e31565b945094505050506129e2565b8251604014156129da57602083015160408401516129cf868383612f1e565b9350935050506129e2565b506000905060025b9250929050565b60008160048111156129fd576129fd613e00565b1415612a065750565b6001816004811115612a1a57612a1a613e00565b1415612a685760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610832565b6002816004811115612a7c57612a7c613e00565b1415612aca5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610832565b6003816004811115612ade57612ade613e00565b1415612b375760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610832565b6004816004811115612b4b57612b4b613e00565b14156122c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610832565b6040805180820190915260008082526020820152600082604051602001612bcd91815260200190565b60408051808303601f190181526020808452838301909252925060009190602082018180368337019050509050612c17604051806040016040528060008152602001600081525090565b600783601f81518110612c2c57612c2c613e16565b0160200151608060f89190911c16901c60ff16815282518390601f908110612c5657612c56613e16565b01602001518251607f60f81b909116908390600090612c7757612c77613e16565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060015b60208160ff161015612d355783612cc182601f613cf6565b60ff1681518110612cd457612cd4613e16565b602001015160f81c60f81b838260ff1681518110612cf457612cf4613e16565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080612d2d81613da8565b915050612ca9565b50612d3f82613d19565b6020820152949350505050565b6000612da1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f709092919063ffffffff16565b8051909150156129745780806020019051810190612dbf919061340a565b6129745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610832565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612e685750600090506003612f15565b8460ff16601b14158015612e8057508460ff16601c14155b15612e915750600090506004612f15565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612ee5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f0e57600060019250925050612f15565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612f5460ff86901c601b613c2f565b9050612f6287828885612e31565b935093505050935093915050565b6060612f7f8484600085612f89565b90505b9392505050565b6060824710156130015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610832565b6001600160a01b0385163b6130585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610832565b600080866001600160a01b0316858760405161307491906139ec565b60006040518083038185875af1925050503d80600081146130b1576040519150601f19603f3d011682016040523d82523d6000602084013e6130b6565b606091505b50915091506130c68282866130d1565b979650505050505050565b606083156130e0575081612f82565b8251156130f05782518084602001fd5b8160405162461bcd60e51b81526004016108329190613a74565b803561311581613e42565b919050565b600082601f83011261312b57600080fd5b8135602061314061313b83613be3565b613bb2565b80838252828201915082860187848660051b890101111561316057600080fd5b6000805b868110156131a357823567ffffffffffffffff811115613182578283fd5b6131908b88838d0101613276565b8652509385019391850191600101613164565b509198975050505050505050565b600082601f8301126131c257600080fd5b6131ca613b42565b8083856040860111156131dc57600080fd5b60005b60028110156131fe5781358452602093840193909101906001016131df565b509095945050505050565b600082601f83011261321a57600080fd5b8135602061322a61313b83613be3565b80838252828201915082860187848660051b890101111561324a57600080fd5b60005b858110156132695781358452928401929084019060010161324d565b5090979650505050505050565b600082601f83011261328757600080fd5b813561329561313b82613c07565b8181528460208386010111156132aa57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156132d957600080fd5b6040516040810181811067ffffffffffffffff821117156132fc576132fc613e2c565b604052823581526020928301359281019290925250919050565b600081830361010081121561332a57600080fd5b6040516060810181811067ffffffffffffffff8211171561334d5761334d613e2c565b60405291508161335d85856132c7565b81526080603f198301121561337157600080fd5b613379613b42565b915061338885604086016131b1565b825261339785608086016131b1565b60208301528160208201526133af8560c086016132c7565b6040820152505092915050565b803563ffffffff8116811461311557600080fd5b6000602082840312156133e257600080fd5b8135612f8281613e42565b6000602082840312156133ff57600080fd5b8135612f8281613e57565b60006020828403121561341c57600080fd5b8151612f8281613e57565b60006020828403121561343957600080fd5b815167ffffffffffffffff81111561345057600080fd5b8201601f8101841361346157600080fd5b805161346f61313b82613c07565b81815285602083850101111561348457600080fd5b613495826020830160208601613d3d565b95945050505050565b600080604083850312156134b157600080fd5b823567ffffffffffffffff808211156134c957600080fd5b9084019060a082870312156134dd57600080fd5b6134e5613b6b565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561351957600080fd5b61352588828601613276565b608083015250935061353c9150506020840161310a565b90509250929050565b6000610160828403121561355857600080fd5b6040516080810181811067ffffffffffffffff8211171561357b5761357b613e2c565b6040526135888484613316565b815261359761010084016133bc565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156135cc57600080fd5b823567ffffffffffffffff808211156135e457600080fd5b908401906102a082870312156135f957600080fd5b613601613b8e565b61360b8784613316565b8152610100808401356020830152610120808501358481111561362d57600080fd5b6136398a828801613209565b604085015250610140808601358581111561365357600080fd5b61365f8b828901613209565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561369c57600080fd5b6136a88e828c01613209565b60e0890152506101e0890135888111156136c157600080fd5b6136cd8e828c01613209565b87890152506136df6102008a0161310a565b858801526136f06102208a0161310a565b8488015261024089013595508786111561370957600080fd5b6137158d878b0161311a565b838801526102608901358288015261028089013595508786111561373857600080fd5b6137448d878b01613209565b908701525093975050505060208601359250508082111561376457600080fd5b5061377185828601613276565b9150509250929050565b60006020828403121561378d57600080fd5b5035919050565b600080604083850312156137a757600080fd5b50508035926020909101359150565b600080604083850312156137c957600080fd5b8235915061353c602084016133bc565b6000602082840312156137eb57600080fd5b612f82826133bc565b6000806040838503121561380757600080fd5b613810836133bc565b9150602083013561382081613e42565b809150509250929050565b6000806040838503121561383e57600080fd5b613847836133bc565b915061353c602084016133bc565b60008060006060848603121561386a57600080fd5b613873846133bc565b9250613881602085016133bc565b9150604084013561389181613e42565b809150509250925092565b6000602082840312156138ae57600080fd5b815160ff81168114612f8257600080fd5b8060005b60028110156138e25781518452602093840193909101906001016138c3565b50505050565b60008151808452613900816020860160208601613d3d565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161394b816028850160208701613d3d565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613991816028850160208801613d3d565b8351908301906139a8816028840160208801613d3d565b016028019695505050505050565b815160009082906020808601845b838110156139e0578151855293820193908201906001016139c4565b50929695505050505050565b600082516139fe818460208701613d3d565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015613a4057835183529284019291840191600101613a24565b50909695505050505050565b6020810160028310613a6e57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612f8260208301846138e8565b6000610120808301613aa484875180518252602090810151910152565b602080870151613ab86040870182516138bf565b810151613ac860808701826138bf565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613b1657835185529382019392820192600101613afa565b5092979650505050505050565b83815282602082015260606040820152600061349560608301846138e8565b6040805190810167ffffffffffffffff81118282101715613b6557613b65613e2c565b60405290565b60405160a0810167ffffffffffffffff81118282101715613b6557613b65613e2c565b6040516101c0810167ffffffffffffffff81118282101715613b6557613b65613e2c565b604051601f8201601f1916810167ffffffffffffffff81118282101715613bdb57613bdb613e2c565b604052919050565b600067ffffffffffffffff821115613bfd57613bfd613e2c565b5060051b60200190565b600067ffffffffffffffff821115613c2157613c21613e2c565b50601f01601f191660200190565b60008219821115613c4257613c42613dea565b500190565b600063ffffffff808316818516808303821115613c6657613c66613dea565b01949350505050565b6000816000190483118215151615613c8957613c89613dea565b500290565b600063ffffffff80831681851681830481118215151615613cb157613cb1613dea565b02949350505050565b600082821015613ccc57613ccc613dea565b500390565b600063ffffffff83811690831681811015613cee57613cee613dea565b039392505050565b600060ff821660ff841680821015613d1057613d10613dea565b90039392505050565b805160208083015191908110156118ec5760001960209190910360031b1b16919050565b60005b83811015613d58578181015183820152602001613d40565b838111156138e25750506000910152565b6000600019821415613d7d57613d7d613dea565b5060010190565b600063ffffffff80831681811415613d9e57613d9e613dea565b6001019392505050565b600060ff821660ff811415613dbf57613dbf613dea565b60010192915050565b600082613de557634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146122c557600080fd5b80151581146122c557600080fdfea26469706673582212208714b5e6a4d7d240d539c8a61ba092860d8ad53bbfeeb5dfecf3d7ea9ef416a864736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
