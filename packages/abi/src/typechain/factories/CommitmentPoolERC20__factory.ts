/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162003e7a38038062003e7a8339810160408190526200006591620007ce565b6001600055808260ff81166200008e57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b58162000105565b600a8190556000908152600960205260409020805460ff1916600117905550600f80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200081d9050565b600060ff82166200013757507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016b57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019f57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001d357507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200020657507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023a57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026e57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002a257507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002d657507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030a57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033e57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200037257507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003a657507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003da57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040e57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200044257507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200047657507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a957507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004dd57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200051157507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200054557507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057957507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ad57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005e157507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200061557507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064957507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067d57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006b157507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006e557507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071957507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074d57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200078157507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007b557507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007e257600080fd5b825160ff81168114620007f457600080fd5b60208401519092506001600160a01b03811681146200081257600080fd5b809150509250929050565b60805161363362000847600039600081816102ee01528181610f25015261178201526136336000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c80639b0a6fea1161012a578063c2d41601116100bd578063e500f5041161008c578063f2da1d4111610071578063f2da1d4114610491578063f8f05388146104a4578063ffa89b88146104b757600080fd5b8063e500f5041461045e578063ec571c6a1461046657600080fd5b8063c2d4160114610421578063c9230c5d1461043b578063dd757c3414610443578063deeff7cd1461044b57600080fd5b8063b08892d0116100f9578063b08892d0146103df578063b1c39422146103e7578063b3b75631146103fb578063c259e2e61461040e57600080fd5b80639b0a6fea146103835780639cc6b35414610396578063a6232a93146103a9578063a9b1d296146103cc57600080fd5b80633fae882e116101a25780635706001611610171578063570600161461032757806378d60cd71461034a5780637cbf0ff61461035d5780637fa4b09c1461037057600080fd5b80633fae882e146102ca5780633fe3347a146102dd578063484eb652146102ec5780634eb069f71461031c57600080fd5b806314a7737d116101de57806314a7737d14610253578063176de7a81461026657806330f49cac146102845780633bb8d1b41461029757600080fd5b806301dbf19f1461021057806302d498f11461021a57806303db98741461022d57806306394c9b14610240575b600080fd5b6102186104c7565b005b610218610228366004612cab565b61054b565b61021861023b366004612cab565b61059a565b61021861024e366004612cab565b6105e6565b610218610261366004612e20565b610697565b61026e610bfa565b60405161027b91906132b6565b60405180910390f35b610218610292366004612cab565b610c8b565b6102ba6102a5366004613023565b60009081526005602052604090205460ff1690565b604051901515815260200161027b565b6102186102d8366004612e94565b610d18565b600060405161027b919061328e565b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161027b565b600f5460ff166102ba565b6102ba610335366004613023565b60009081526004602052604090205460ff1690565b610218610358366004612d79565b611729565b61021861036b366004613023565b611858565b61021861037e3660046130db565b6118d6565b61021861039136600461305f565b6119b9565b6102186103a4366004612cab565b611ab1565b6102ba6103b7366004613023565b60009081526009602052604090205460ff1690565b6102186103da366004612cab565b611afd565b600c5461030e565b6001546102ba90600160a01b900460ff1681565b610218610409366004612cc8565b611b4c565b61021861041c3660046130b1565b611bb8565b610429611c5c565b60405160ff909116815260200161027b565b61026e611ce4565b610218611d34565b61021861045936600461307a565b611dac565b60085461030e565b600154610479906001600160a01b031681565b6040516001600160a01b03909116815260200161027b565b61030e61049f36600461303c565b611eec565b6102186104b2366004612cc8565b611f75565b600f54610100900460ff166102ba565b600b546001600160a01b031633146104f2576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261054192900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610576576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146105c5576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610611576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b0382811691161415610640576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600f54610100900460ff161580156106bf5750336000908152600d602052604090205460ff16155b156106dd576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156107105760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff16118061074c575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561078c576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516107a49063ffffffff1682613560565b156107df576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610783565b60006107ef828460200151611eec565b90506000836020015163ffffffff1667ffffffffffffffff811115610816576108166135c4565b60405190808252806020026020018201604052801561083f578160200160208202803683370190505b5090506000805b856020015163ffffffff1681101561093d5760006108648287613471565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906108b15760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106108c8576108c86135ae565b6020026020010181815250508060200151846108e49190613471565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a25050808061093590613545565b915050610846565b50846020015163ffffffff166007600082825461095a91906134dd565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610995919061323c565b6040516020818303038152906040528051906020012060001c6109b89190613560565b905080866060015114610a0e576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610783565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610a4757610a476135ae565b602002602001018181525050866040015181600181518110610a6b57610a6b6135ae565b6020026020010181815250508181600281518110610a8b57610a8b6135ae565b6020026020010181815250508481600381518110610aab57610aab6135ae565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610b03919086906004016132c9565b602060405180830381600087803b158015610b1d57600080fd5b505af1158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b559190612ce5565b905080610ba5576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610783565b876020015163ffffffff1660086000828254610bc19190613471565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610bf084611fe9565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610c4a57600080fd5b505afa158015610c5e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c869190810190612d02565b905090565b600b546001600160a01b03163314610cb6576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610d6b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610783565b60026000908155604083015151610d8190612009565b90506000610d938460e0015151612009565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610e10576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610783565b8163ffffffff1684606001515114610e6b576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610783565b8063ffffffff168461010001515114610ec7576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610783565b8063ffffffff168461016001515114610f23576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610783565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610f5b9190613471565b610f659190613471565b1115610f8457604051633b5ccb4360e21b815260040160405180910390fd5b610f92846101200151612089565b15610fb057604051632e70c0b160e01b815260040160405180910390fd5b6000610fbb85612128565b9050610fc781856122b4565b6001600160a01b031660001b856080015114611026576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610783565b60006110338460026134b1565b63ffffffff16905060006110488560026134b1565b611053906004613489565b63ffffffff16905060006110688560026134b1565b6110789063ffffffff1683613471565b67ffffffffffffffff811115611090576110906135c4565b6040519080825280602002602001820160405280156110b9578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff1661110b576040516314e8955b60e21b8152600401610783906020808252600490820152631c9bdbdd60e21b604082015260600190565b876020015181600081518110611123576111236135ae565b6020908102919091010152600061113b876001613489565b63ffffffff16905060005b8763ffffffff168110156112475760008a60400151828151811061116c5761116c6135ae565b6020908102919091018101516000818152600590925260409091205490915060ff16156111c5576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846111d2846001613471565b815181106111e2576111e26135ae565b6020026020010181815250508a606001518281518110611204576112046135ae565b60200260200101518484846112199190613471565b81518110611229576112296135ae565b6020908102919091010152508061123f81613545565b915050611146565b50608089015182611259866001613471565b81518110611269576112696135ae565b602090810291909101015260a089015182611285866002613471565b81518110611295576112956135ae565b602090810291909101015260c0890151826112b1866003613471565b815181106112c1576112c16135ae565b602090810291909101015260006112de63ffffffff881685613471565b905060005b8763ffffffff1681101561145857600460008c60e00151838151811061130b5761130b6135ae565b60209081029190910181015182528101919091526040016000205460ff16156113775760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610783565b600c548b61010001518281518110611391576113916135ae565b602002602001015110156113b85760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106113ce576113ce6135ae565b60200260200101518486836113e39190613471565b815181106113f3576113f36135ae565b6020026020010181815250508a61010001518181518110611416576114166135ae565b602002602001015184838361142b9190613471565b8151811061143b5761143b6135ae565b60209081029190910101528061145081613545565b9150506112e3565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916114ae9188906004016132c9565b602060405180830381600087803b1580156114c857600080fd5b505af11580156114dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115009190612ce5565b905080611550576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610783565b60005b8963ffffffff1681101561160b576001600560008e60400151848151811061157d5761157d6135ae565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106115c0576115c06135ae565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061160381613545565b915050611553565b5060005b8863ffffffff168110156116dc576001600460008e60e001518481518110611639576116396135ae565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506116ca8c60e00151828151811061167f5761167f6135ae565b60200260200101518d6101000151838151811061169e5761169e6135ae565b60200260200101518e610160015184815181106116bd576116bd6135ae565b60200260200101516122d8565b806116d481613545565b91505061160f565b5060a08b0151156116fa576116fa8b61012001518c60a00151612377565b60c08b015115611717576117178b61014001518c60c00151612377565b50506001600055505050505050505050565b336000908152600e602052604090205460ff166117595760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156117805760405163784f02bd60e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006007546008546117b19190613471565b106117cf57604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff16156118055760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff19166001179055516060830151608084015161183c9291906122d8565b60408201511561185457611854818360400151612377565b5050565b600b546001600160a01b03163314611883576040516327e1f1e560e01b815260040160405180910390fd5b806118d1576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610783565b600c55565b600b546001600160a01b03163314611901576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611925576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff831661194957604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b031633146119e4576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611a08576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611a2257506104008163ffffffff16115b15611a5d576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610783565b611a686001826134f4565b811663ffffffff16600014611a90576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611adc576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611b28576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611b77576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610d0d565b600b546001600160a01b03163314611be3576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c07576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611c2b57604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611cac57600080fd5b505afa158015611cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c869190613122565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610c4a57600080fd5b600b546001600160a01b03163314611d5f576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161054191600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314611dd7576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611dfb576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611e1557506104008263ffffffff16115b15611e50576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610783565b611e5b6001836134f4565b821663ffffffff16600014611e83576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff1610611f125760088263ffffffff16901c9150600883901c92505b60108263ffffffff1610611f355760048263ffffffff16901c9150600483901c92505b60048263ffffffff1610611f585760028263ffffffff16901c9150600283901c92505b60028263ffffffff1610611f6e57600183901c92505b5090919050565b600b546001600160a01b03163314611fa0576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610d0d90831515815260200190565b600f54612006906201000090046001600160a01b03163383612390565b50565b600063ffffffff8211156120855760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610783565b5090565b600154600090600160a01b900460ff166120a557506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156120ea57600080fd5b505afa1580156120fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121229190612ce5565b92915050565b610160810151516000906003811061215357604051633fb1945d60e11b815260040160405180910390fd5b6060816121a7576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061225f565b81600114156121ee578361012001518461014001518561016001516000815181106121d4576121d46135ae565b60200260200101516040516020016121919392919061319a565b836101200151846101400151856101600151600081518110612212576122126135ae565b6020026020010151866101600151600181518110612232576122326135ae565b602002602001015160405160200161224d94939291906131e0565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006122c385856123fc565b915091506122d08161246c565b509392505050565b60006008546007546122ea9190613471565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061232e908490613471565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161236993929190613365565b60405180910390a250505050565b600f54611854906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526123f7908490612627565b505050565b6000808251604114156124335760208301516040840151606085015160001a6124278782858561270c565b94509450505050612465565b82516040141561245d57602083015160408401516124528683836127f9565b935093505050612465565b506000905060025b9250929050565b600081600481111561248057612480613598565b14156124895750565b600181600481111561249d5761249d613598565b14156124eb5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610783565b60028160048111156124ff576124ff613598565b141561254d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610783565b600381600481111561256157612561613598565b14156125ba5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610783565b60048160048111156125ce576125ce613598565b14156120065760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610783565b600061267c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661284b9092919063ffffffff16565b8051909150156123f7578080602001905181019061269a9190612ce5565b6123f75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610783565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561274357506000905060036127f0565b8460ff16601b1415801561275b57508460ff16601c14155b1561276c57506000905060046127f0565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156127c0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166127e9576000600192509250506127f0565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161282f60ff86901c601b613471565b905061283d8782888561270c565b935093505050935093915050565b606061285a8484600085612864565b90505b9392505050565b6060824710156128dc5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610783565b6001600160a01b0385163b6129335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610783565b600080866001600160a01b0316858760405161294f9190613272565b60006040518083038185875af1925050503d806000811461298c576040519150601f19603f3d011682016040523d82523d6000602084013e612991565b606091505b50915091506129a18282866129ac565b979650505050505050565b606083156129bb57508161285d565b8251156129cb5782518084602001fd5b8160405162461bcd60e51b815260040161078391906132b6565b80356129f0816135da565b919050565b600082601f830112612a0657600080fd5b81356020612a1b612a1683613425565b6133f4565b80838252828201915082860187848660051b8901011115612a3b57600080fd5b6000805b86811015612a7e57823567ffffffffffffffff811115612a5d578283fd5b612a6b8b88838d0101612b51565b8652509385019391850191600101612a3f565b509198975050505050505050565b600082601f830112612a9d57600080fd5b612aa5613384565b808385604086011115612ab757600080fd5b60005b6002811015612ad9578135845260209384019390910190600101612aba565b509095945050505050565b600082601f830112612af557600080fd5b81356020612b05612a1683613425565b80838252828201915082860187848660051b8901011115612b2557600080fd5b60005b85811015612b4457813584529284019290840190600101612b28565b5090979650505050505050565b600082601f830112612b6257600080fd5b8135612b70612a1682613449565b818152846020838601011115612b8557600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612bb457600080fd5b6040516040810181811067ffffffffffffffff82111715612bd757612bd76135c4565b604052823581526020928301359281019290925250919050565b6000818303610100811215612c0557600080fd5b6040516060810181811067ffffffffffffffff82111715612c2857612c286135c4565b604052915081612c388585612ba2565b81526080603f1983011215612c4c57600080fd5b612c54613384565b9150612c638560408601612a8c565b8252612c728560808601612a8c565b6020830152816020820152612c8a8560c08601612ba2565b6040820152505092915050565b803563ffffffff811681146129f057600080fd5b600060208284031215612cbd57600080fd5b813561285d816135da565b600060208284031215612cda57600080fd5b813561285d816135ef565b600060208284031215612cf757600080fd5b815161285d816135ef565b600060208284031215612d1457600080fd5b815167ffffffffffffffff811115612d2b57600080fd5b8201601f81018413612d3c57600080fd5b8051612d4a612a1682613449565b818152856020838501011115612d5f57600080fd5b612d70826020830160208601613519565b95945050505050565b60008060408385031215612d8c57600080fd5b823567ffffffffffffffff80821115612da457600080fd5b9084019060a08287031215612db857600080fd5b612dc06133ad565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612df457600080fd5b612e0088828601612b51565b6080830152509350612e17915050602084016129e5565b90509250929050565b60006101608284031215612e3357600080fd5b6040516080810181811067ffffffffffffffff82111715612e5657612e566135c4565b604052612e638484612bf1565b8152612e726101008401612c97565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612ea757600080fd5b823567ffffffffffffffff80821115612ebf57600080fd5b908401906102608287031215612ed457600080fd5b612edc6133d0565b612ee68784612bf1565b81526101008084013560208301526101208085013584811115612f0857600080fd5b612f148a828801612ae4565b6040850152506101408086013585811115612f2e57600080fd5b612f3a8b828901612ae4565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612f7557600080fd5b612f818c828a01612ae4565b60e0870152506101e087013586811115612f9a57600080fd5b612fa68c828a01612ae4565b8587015250612fb861020088016129e5565b83860152612fc961022088016129e5565b82860152610240870135935085841115612fe257600080fd5b612fee8b8589016129f5565b90850152509195505050602085013591508082111561300c57600080fd5b5061301985828601612b51565b9150509250929050565b60006020828403121561303557600080fd5b5035919050565b6000806040838503121561304f57600080fd5b82359150612e1760208401612c97565b60006020828403121561307157600080fd5b61285d82612c97565b6000806040838503121561308d57600080fd5b61309683612c97565b915060208301356130a6816135da565b809150509250929050565b600080604083850312156130c457600080fd5b6130cd83612c97565b9150612e1760208401612c97565b6000806000606084860312156130f057600080fd5b6130f984612c97565b925061310760208501612c97565b91506040840135613117816135da565b809150509250925092565b60006020828403121561313457600080fd5b815160ff8116811461285d57600080fd5b8060005b6002811015613168578151845260209384019390910190600101613149565b50505050565b60008151808452613186816020860160208601613519565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b1660148401525082516131d1816028850160208701613519565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613217816028850160208801613519565b83519083019061322e816028840160208801613519565b016028019695505050505050565b815160009082906020808601845b838110156132665781518552938201939082019060010161324a565b50929695505050505050565b60008251613284818460208701613519565b9190910192915050565b60208101600283106132b057634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600061285d602083018461316e565b60006101208083016132e684875180518252602090810151910152565b6020808701516132fa604087018251613145565b81015161330a6080870182613145565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156133585783518552938201939282019260010161333c565b5092979650505050505050565b838152826020820152606060408201526000612d70606083018461316e565b6040805190810167ffffffffffffffff811182821017156133a7576133a76135c4565b60405290565b60405160a0810167ffffffffffffffff811182821017156133a7576133a76135c4565b604051610180810167ffffffffffffffff811182821017156133a7576133a76135c4565b604051601f8201601f1916810167ffffffffffffffff8111828210171561341d5761341d6135c4565b604052919050565b600067ffffffffffffffff82111561343f5761343f6135c4565b5060051b60200190565b600067ffffffffffffffff821115613463576134636135c4565b50601f01601f191660200190565b6000821982111561348457613484613582565b500190565b600063ffffffff8083168185168083038211156134a8576134a8613582565b01949350505050565b600063ffffffff808316818516818304811182151516156134d4576134d4613582565b02949350505050565b6000828210156134ef576134ef613582565b500390565b600063ffffffff8381169083168181101561351157613511613582565b039392505050565b60005b8381101561353457818101518382015260200161351c565b838111156131685750506000910152565b600060001982141561355957613559613582565b5060010190565b60008261357d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461200657600080fd5b801515811461200657600080fdfea26469706673582212200d181ecc7cc954efcb8d296af5882d8b374ee5ea4b338fddfe8ec6d88d79879964736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
