/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b5060405162003d0838038062003d088339810160408190526200006491620007cd565b6001600055808260ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b48162000104565b600a8190556000908152600960205260409020805460ff1916600117905550600f80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200081c9050565b600060ff82166200013657507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016a57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019e57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001d257507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200020557507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023957507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026d57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002a157507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002d557507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030957507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033d57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200037157507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003a557507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d957507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040d57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200044157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200047557507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a857507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004dc57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200051057507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200054457507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057857507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ac57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005e057507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200061457507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064857507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067c57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006b057507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006e457507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071857507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074c57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200078057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007b457507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007e157600080fd5b825160ff81168114620007f357600080fd5b60208401519092506001600160a01b03811681146200081157600080fd5b809150509250929050565b6080516134c262000846600039600081816102de01528181610eae015261170b01526134c26000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063830d9ebe1161010f578063c2d41601116100a2578063ec571c6a11610071578063ec571c6a1461044e578063f2da1d4114610479578063f8f053881461048c578063ffa89b881461049f57600080fd5b8063c2d4160114610411578063c9230c5d1461042b578063deeff7cd14610433578063e500f5041461044657600080fd5b8063a9b1d296116100de578063a9b1d296146103d0578063b08892d0146103e3578063b3b75631146103eb578063c259e2e6146103fe57600080fd5b8063830d9ebe146103735780639b0a6fea146103875780639cc6b3541461039a578063a6232a93146103ad57600080fd5b80633fae882e116101875780635706001611610156578063570600161461031757806378d60cd71461033a5780637cbf0ff61461034d5780637fa4b09c1461036057600080fd5b80633fae882e146102ba5780633fe3347a146102cd578063484eb652146102dc5780634eb069f71461030c57600080fd5b806314a7737d116101c357806314a7737d14610243578063176de7a81461025657806330f49cac146102745780633bb8d1b41461028757600080fd5b806302d498f1146101f557806303db98741461020a57806306394c9b1461021d57806306b2ad5914610230575b600080fd5b610208610203366004612bdc565b6104af565b005b610208610218366004612bdc565b6104fe565b61020861022b366004612bdc565b61054a565b61020861023e366004612bf9565b6105a4565b610208610251366004612d51565b610627565b61025e610b8a565b60405161026b9190613145565b60405180910390f35b610208610282366004612bdc565b610c1b565b6102aa610295366004612f54565b60009081526005602052604090205460ff1690565b604051901515815260200161026b565b6102086102c8366004612dc5565b610ca1565b600060405161026b919061311d565b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161026b565b600f5460ff166102aa565b6102aa610325366004612f54565b60009081526004602052604090205460ff1690565b610208610348366004612caa565b6116b2565b61020861035b366004612f54565b6117e1565b61020861036e36600461300c565b61185f565b6001546102aa90600160a01b900460ff1681565b610208610395366004612f90565b611942565b6102086103a8366004612bdc565b611a3a565b6102aa6103bb366004612f54565b60009081526009602052604090205460ff1690565b6102086103de366004612bdc565b611a86565b600c546102fe565b6102086103f9366004612bf9565b611ad5565b61020861040c366004612fe2565b611b41565b610419611be5565b60405160ff909116815260200161026b565b61025e611c6d565b610208610441366004612fab565b611cbd565b6008546102fe565b600154610461906001600160a01b031681565b6040516001600160a01b03909116815260200161026b565b6102fe610487366004612f6d565b611dfd565b61020861049a366004612bf9565b611e86565b600f54610100900460ff166102aa565b600b546001600160a01b031633146104da576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610529576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610575576040516327e1f1e560e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146105cf576040516327e1f1e560e01b815260040160405180910390fd5b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061061c90831515815260200190565b60405180910390a150565b600f54610100900460ff1615801561064f5750336000908152600d602052604090205460ff16155b1561066d576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156106a05760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806106dc575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561071c576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516107349063ffffffff16826133ef565b1561076f576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610713565b600061077f828460200151611dfd565b90506000836020015163ffffffff1667ffffffffffffffff8111156107a6576107a6613453565b6040519080825280602002602001820160405280156107cf578160200160208202803683370190505b5090506000805b856020015163ffffffff168110156108cd5760006107f48287613300565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906108415760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106108585761085861343d565b6020026020010181815250508060200151846108749190613300565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a2505080806108c5906133d4565b9150506107d6565b50846020015163ffffffff16600760008282546108ea919061336c565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360405160200161092591906130cb565b6040516020818303038152906040528051906020012060001c61094891906133ef565b90508086606001511461099e576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610713565b60408051600480825260a0820190925260009160208201608080368337019050509050600a54816000815181106109d7576109d761343d565b6020026020010181815250508660400151816001815181106109fb576109fb61343d565b6020026020010181815250508181600281518110610a1b57610a1b61343d565b6020026020010181815250508481600381518110610a3b57610a3b61343d565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610a9391908690600401613158565b602060405180830381600087803b158015610aad57600080fd5b505af1158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190612c16565b905080610b35576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610713565b876020015163ffffffff1660086000828254610b519190613300565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610b8084611efa565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610bda57600080fd5b505afa158015610bee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c169190810190612c33565b905090565b600b546001600160a01b03163314610c46576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200161061c565b60026000541415610cf45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610713565b60026000908155604083015151610d0a90611f1a565b90506000610d1c8460e0015151611f1a565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610d99576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610713565b8163ffffffff1684606001515114610df4576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610713565b8063ffffffff168461010001515114610e50576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610713565b8063ffffffff168461016001515114610eac576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610713565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610ee49190613300565b610eee9190613300565b1115610f0d57604051633b5ccb4360e21b815260040160405180910390fd5b610f1b846101200151611f9a565b15610f3957604051632e70c0b160e01b815260040160405180910390fd5b6000610f448561203a565b9050610f5081856121e5565b6001600160a01b031660001b856080015114610faf576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610713565b6000610fbc846002613340565b63ffffffff1690506000610fd1856002613340565b610fdc906004613318565b63ffffffff1690506000610ff1856002613340565b6110019063ffffffff1683613300565b67ffffffffffffffff81111561101957611019613453565b604051908082528060200260200182016040528015611042578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff16611094576040516314e8955b60e21b8152600401610713906020808252600490820152631c9bdbdd60e21b604082015260600190565b8760200151816000815181106110ac576110ac61343d565b602090810291909101015260006110c4876001613318565b63ffffffff16905060005b8763ffffffff168110156111d05760008a6040015182815181106110f5576110f561343d565b6020908102919091018101516000818152600590925260409091205490915060ff161561114e576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461115b846001613300565b8151811061116b5761116b61343d565b6020026020010181815250508a60600151828151811061118d5761118d61343d565b60200260200101518484846111a29190613300565b815181106111b2576111b261343d565b602090810291909101015250806111c8816133d4565b9150506110cf565b506080890151826111e2866001613300565b815181106111f2576111f261343d565b602090810291909101015260a08901518261120e866002613300565b8151811061121e5761121e61343d565b602090810291909101015260c08901518261123a866003613300565b8151811061124a5761124a61343d565b6020908102919091010152600061126763ffffffff881685613300565b905060005b8763ffffffff168110156113e157600460008c60e0015183815181106112945761129461343d565b60209081029190910181015182528101919091526040016000205460ff16156113005760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610713565b600c548b6101000151828151811061131a5761131a61343d565b602002602001015110156113415760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106113575761135761343d565b602002602001015184868361136c9190613300565b8151811061137c5761137c61343d565b6020026020010181815250508a6101000151818151811061139f5761139f61343d565b60200260200101518483836113b49190613300565b815181106113c4576113c461343d565b6020908102919091010152806113d9816133d4565b91505061126c565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c941764791611437918890600401613158565b602060405180830381600087803b15801561145157600080fd5b505af1158015611465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114899190612c16565b9050806114d9576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610713565b60005b8963ffffffff16811015611594576001600560008e6040015184815181106115065761150661343d565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106115495761154961343d565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061158c816133d4565b9150506114dc565b5060005b8863ffffffff16811015611665576001600460008e60e0015184815181106115c2576115c261343d565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506116538c60e0015182815181106116085761160861343d565b60200260200101518d610100015183815181106116275761162761343d565b60200260200101518e610160015184815181106116465761164661343d565b6020026020010151612209565b8061165d816133d4565b915050611598565b5060a08b015115611683576116838b61012001518c60a001516122a8565b60c08b0151156116a0576116a08b61014001518c60c001516122a8565b50506001600055505050505050505050565b336000908152600e602052604090205460ff166116e25760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156117095760405163784f02bd60e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060075460085461173a9190613300565b1061175857604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff161561178e5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff1916600117905551606083015160808401516117c5929190612209565b6040820151156117dd576117dd8183604001516122a8565b5050565b600b546001600160a01b0316331461180c576040516327e1f1e560e01b815260040160405180910390fd5b8061185a576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610713565b600c55565b600b546001600160a01b0316331461188a576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156118ae576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff83166118d257604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b0316331461196d576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611991576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff811615806119ab57506104008163ffffffff16115b156119e6576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610713565b6119f1600182613383565b811663ffffffff16600014611a19576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611a65576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611ab1576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611b00576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e49060200161061c565b600b546001600160a01b03163314611b6c576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611b90576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611bb457604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611c3557600080fd5b505afa158015611c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190613053565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610bda57600080fd5b600b546001600160a01b03163314611ce8576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611d0c576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611d2657506104008263ffffffff16115b15611d61576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610713565b611d6c600183613383565b821663ffffffff16600014611d94576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff1610611e235760088263ffffffff16901c9150600883901c92505b60108263ffffffff1610611e465760048263ffffffff16901c9150600483901c92505b60048263ffffffff1610611e695760028263ffffffff16901c9150600283901c92505b60028263ffffffff1610611e7f57600183901c92505b5090919050565b600b546001600160a01b03163314611eb1576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b4799061061c90831515815260200190565b600f54611f17906201000090046001600160a01b031633836122c1565b50565b600063ffffffff821115611f965760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610713565b5090565b600154600090600160a01b900460ff1615611fb757506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015611ffc57600080fd5b505afa158015612010573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120349190612c16565b92915050565b610160810151516000906003811061206557604051633fb1945d60e11b815260040160405180910390fd5b61012083015161014084015160608060008561208357506028612101565b85600114156120b75760f990508761016001516000815181106120a8576120a861343d565b60200260200101519250612101565b6101ca90508761016001516000815181106120d4576120d461343d565b602002602001015192508761016001516001815181106120f6576120f661343d565b602002602001015191505b60006040518660601b60008201528560601b6014820152600088131561214a576028810160d18101602087015b8183101561214657805183526020928301920161212e565b5050505b600188131561217c5760f9810160d18101602086015b81831015612178578051835260209283019201612160565b5050505b82902090506121d8816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b60008060006121f4858561232d565b915091506122018161239d565b509392505050565b600060085460075461221b9190613300565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061225f908490613300565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161229a939291906131f4565b60405180910390a250505050565b600f546117dd906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612328908490612558565b505050565b6000808251604114156123645760208301516040840151606085015160001a6123588782858561263d565b94509450505050612396565b82516040141561238e576020830151604084015161238386838361272a565b935093505050612396565b506000905060025b9250929050565b60008160048111156123b1576123b1613427565b14156123ba5750565b60018160048111156123ce576123ce613427565b141561241c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610713565b600281600481111561243057612430613427565b141561247e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610713565b600381600481111561249257612492613427565b14156124eb5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610713565b60048160048111156124ff576124ff613427565b1415611f175760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610713565b60006125ad826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661277c9092919063ffffffff16565b80519091501561232857808060200190518101906125cb9190612c16565b6123285760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610713565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156126745750600090506003612721565b8460ff16601b1415801561268c57508460ff16601c14155b1561269d5750600090506004612721565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156126f1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661271a57600060019250925050612721565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161276060ff86901c601b613300565b905061276e8782888561263d565b935093505050935093915050565b606061278b8484600085612795565b90505b9392505050565b60608247101561280d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610713565b6001600160a01b0385163b6128645760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610713565b600080866001600160a01b031685876040516128809190613101565b60006040518083038185875af1925050503d80600081146128bd576040519150601f19603f3d011682016040523d82523d6000602084013e6128c2565b606091505b50915091506128d28282866128dd565b979650505050505050565b606083156128ec57508161278e565b8251156128fc5782518084602001fd5b8160405162461bcd60e51b81526004016107139190613145565b803561292181613469565b919050565b600082601f83011261293757600080fd5b8135602061294c612947836132b4565b613283565b80838252828201915082860187848660051b890101111561296c57600080fd5b6000805b868110156129af57823567ffffffffffffffff81111561298e578283fd5b61299c8b88838d0101612a82565b8652509385019391850191600101612970565b509198975050505050505050565b600082601f8301126129ce57600080fd5b6129d6613213565b8083856040860111156129e857600080fd5b60005b6002811015612a0a5781358452602093840193909101906001016129eb565b509095945050505050565b600082601f830112612a2657600080fd5b81356020612a36612947836132b4565b80838252828201915082860187848660051b8901011115612a5657600080fd5b60005b85811015612a7557813584529284019290840190600101612a59565b5090979650505050505050565b600082601f830112612a9357600080fd5b8135612aa1612947826132d8565b818152846020838601011115612ab657600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612ae557600080fd5b6040516040810181811067ffffffffffffffff82111715612b0857612b08613453565b604052823581526020928301359281019290925250919050565b6000818303610100811215612b3657600080fd5b6040516060810181811067ffffffffffffffff82111715612b5957612b59613453565b604052915081612b698585612ad3565b81526080603f1983011215612b7d57600080fd5b612b85613213565b9150612b9485604086016129bd565b8252612ba385608086016129bd565b6020830152816020820152612bbb8560c08601612ad3565b6040820152505092915050565b803563ffffffff8116811461292157600080fd5b600060208284031215612bee57600080fd5b813561278e81613469565b600060208284031215612c0b57600080fd5b813561278e8161347e565b600060208284031215612c2857600080fd5b815161278e8161347e565b600060208284031215612c4557600080fd5b815167ffffffffffffffff811115612c5c57600080fd5b8201601f81018413612c6d57600080fd5b8051612c7b612947826132d8565b818152856020838501011115612c9057600080fd5b612ca18260208301602086016133a8565b95945050505050565b60008060408385031215612cbd57600080fd5b823567ffffffffffffffff80821115612cd557600080fd5b9084019060a08287031215612ce957600080fd5b612cf161323c565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612d2557600080fd5b612d3188828601612a82565b6080830152509350612d4891505060208401612916565b90509250929050565b60006101608284031215612d6457600080fd5b6040516080810181811067ffffffffffffffff82111715612d8757612d87613453565b604052612d948484612b22565b8152612da36101008401612bc8565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612dd857600080fd5b823567ffffffffffffffff80821115612df057600080fd5b908401906102608287031215612e0557600080fd5b612e0d61325f565b612e178784612b22565b81526101008084013560208301526101208085013584811115612e3957600080fd5b612e458a828801612a15565b6040850152506101408086013585811115612e5f57600080fd5b612e6b8b828901612a15565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612ea657600080fd5b612eb28c828a01612a15565b60e0870152506101e087013586811115612ecb57600080fd5b612ed78c828a01612a15565b8587015250612ee96102008801612916565b83860152612efa6102208801612916565b82860152610240870135935085841115612f1357600080fd5b612f1f8b858901612926565b908501525091955050506020850135915080821115612f3d57600080fd5b50612f4a85828601612a82565b9150509250929050565b600060208284031215612f6657600080fd5b5035919050565b60008060408385031215612f8057600080fd5b82359150612d4860208401612bc8565b600060208284031215612fa257600080fd5b61278e82612bc8565b60008060408385031215612fbe57600080fd5b612fc783612bc8565b91506020830135612fd781613469565b809150509250929050565b60008060408385031215612ff557600080fd5b612ffe83612bc8565b9150612d4860208401612bc8565b60008060006060848603121561302157600080fd5b61302a84612bc8565b925061303860208501612bc8565b9150604084013561304881613469565b809150509250925092565b60006020828403121561306557600080fd5b815160ff8116811461278e57600080fd5b8060005b600281101561309957815184526020938401939091019060010161307a565b50505050565b600081518084526130b78160208601602086016133a8565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156130f5578151855293820193908201906001016130d9565b50929695505050505050565b600082516131138184602087016133a8565b9190910192915050565b602081016002831061313f57634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600061278e602083018461309f565b600061012080830161317584875180518252602090810151910152565b602080870151613189604087018251613076565b8101516131996080870182613076565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156131e7578351855293820193928201926001016131cb565b5092979650505050505050565b838152826020820152606060408201526000612ca1606083018461309f565b6040805190810167ffffffffffffffff8111828210171561323657613236613453565b60405290565b60405160a0810167ffffffffffffffff8111828210171561323657613236613453565b604051610180810167ffffffffffffffff8111828210171561323657613236613453565b604051601f8201601f1916810167ffffffffffffffff811182821017156132ac576132ac613453565b604052919050565b600067ffffffffffffffff8211156132ce576132ce613453565b5060051b60200190565b600067ffffffffffffffff8211156132f2576132f2613453565b50601f01601f191660200190565b6000821982111561331357613313613411565b500190565b600063ffffffff80831681851680830382111561333757613337613411565b01949350505050565b600063ffffffff8083168185168183048111821515161561336357613363613411565b02949350505050565b60008282101561337e5761337e613411565b500390565b600063ffffffff838116908316818110156133a0576133a0613411565b039392505050565b60005b838110156133c35781810151838201526020016133ab565b838111156130995750506000910152565b60006000198214156133e8576133e8613411565b5060010190565b60008261340c57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611f1757600080fd5b8015158114611f1757600080fdfea2646970667358221220dc40d39b491e82f313120a42d5264e24ecf3c9f05340127d6c3a9e7df7a16cbc64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
