/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
    ],
    name: 'AuditorKeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorKeys',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_key',
        type: 'bytes32',
      },
    ],
    name: 'updateAuditorKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162004116380380620041168339810160408190526200006591620007c7565b6001600055808260ff81166200008e57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b581620000fe565b600a8190556000908152600960205260409020805460ff1916600117905550601580546001600160a01b039092166001600160a01b031990921691909117905550620008169050565b600060ff82166200013057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016457507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019857507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001cc57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001ff57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026757507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200029b57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002cf57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030357507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033757507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200036b57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200039f57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040757507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200043b57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200046f57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a257507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004d657507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200050a57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200053e57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005a657507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005da57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200060e57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064257507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067657507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006aa57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006de57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074657507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200077a57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007ae57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007db57600080fd5b825160ff81168114620007ed57600080fd5b60208401519092506001600160a01b03811681146200080b57600080fd5b809150509250929050565b6080516138d662000840600039600081816103980152818161104a01526119e101526138d66000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c80637cbf0ff611610160578063c259e2e6116100d8578063e500f5041161008c578063f2da1d4111610071578063f2da1d4114610544578063f8f0538814610557578063ffa89b881461056a57600080fd5b8063e500f50414610511578063ec571c6a1461051957600080fd5b8063c9230c5d116100bd578063c9230c5d146104ee578063dd757c34146104f6578063deeff7cd146104fe57600080fd5b8063c259e2e6146104c1578063c2d41601146104d457600080fd5b8063a6232a931161012f578063b08892d011610114578063b08892d014610492578063b1c394221461049a578063b3b75631146104ae57600080fd5b8063a6232a931461045c578063a9b1d2961461047f57600080fd5b80637cbf0ff6146104105780637fa4b09c146104235780639b0a6fea146104365780639cc6b3541461044957600080fd5b80633bb8d1b4116101f3578063484eb652116101c257806357060016116101a757806357060016146103c75780636c75d664146103ea57806378d60cd7146103fd57600080fd5b8063484eb652146103965780634eb069f7146103bc57600080fd5b80633bb8d1b41461032e5780633fae882e146103615780633fe3347a1461037457806342c00ac31461038357600080fd5b806309c95ed81161024a57806314a7737d1161022f57806314a7737d146102f3578063176de7a81461030657806330f49cac1461031b57600080fd5b806309c95ed8146102bf578063115f574c146102dd57600080fd5b806301dbf19f1461027c57806302d498f11461028657806303db98741461029957806306394c9b146102ac575b600080fd5b61028461057a565b005b610284610294366004612ee8565b6105fe565b6102846102a7366004612ee8565b61064d565b6102846102ba366004612ee8565b610699565b6102c761074a565b6040516102d491906134ed565b60405180910390f35b6102e5600581565b6040519081526020016102d4565b61028461030136600461305d565b6107c7565b61030e610d2a565b6040516102d49190613559565b610284610329366004612ee8565b610db0565b61035161033c366004613260565b60009081526005602052604090205460ff1690565b60405190151581526020016102d4565b61028461036f3660046130d1565b610e3d565b60006040516102d49190613531565b6102e5610391366004613260565b611875565b7f00000000000000000000000000000000000000000000000000000000000000006102e5565b600f5460ff16610351565b6103516103d5366004613260565b60009081526004602052604090205460ff1690565b6102846103f8366004613279565b6118ad565b61028461040b366004612fb6565b611988565b61028461041e366004613260565b611ab7565b61028461043136600461333a565b611b35565b6102846104443660046132be565b611c18565b610284610457366004612ee8565b611d10565b61035161046a366004613260565b60009081526009602052604090205460ff1690565b61028461048d366004612ee8565b611d5c565b600c546102e5565b60015461035190600160a01b900460ff1681565b6102846104bc366004612f05565b611dab565b6102846104cf366004613310565b611e17565b6104dc611ebb565b60405160ff90911681526020016102d4565b61030e611f38565b610284611f7d565b61028461050c3660046132d9565b611ff5565b6008546102e5565b60015461052c906001600160a01b031681565b6040516001600160a01b0390911681526020016102d4565b6102e561055236600461329b565b612135565b610284610565366004612f05565b6121be565b600f54610100900460ff16610351565b600b546001600160a01b031633146105a5576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926105f492900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610629576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610678576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146106c4576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b03828116911614156106f3576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b60058110156107c1576010816005811061079057610790613851565b01548282815181106107a4576107a4613851565b6020908102919091010152806107b9816137e8565b915050610774565b50919050565b600f54610100900460ff161580156107ef5750336000908152600d602052604090205460ff16155b1561080d576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156108405760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff16118061087c575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b156108bc576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516108d49063ffffffff1682613803565b1561090f576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016108b3565b600061091f828460200151612135565b90506000836020015163ffffffff1667ffffffffffffffff81111561094657610946613867565b60405190808252806020026020018201604052801561096f578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610a6d5760006109948287613714565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906109e15760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106109f8576109f8613851565b602002602001018181525050806020015184610a149190613714565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610a65906137e8565b915050610976565b50846020015163ffffffff1660076000828254610a8a9190613780565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610ac5919061349b565b6040516020818303038152906040528051906020012060001c610ae89190613803565b905080866060015114610b3e576040516314e8955b60e21b815260206004820152600860248201527f6c6561664861736800000000000000000000000000000000000000000000000060448201526064016108b3565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610b7757610b77613851565b602002602001018181525050866040015181600181518110610b9b57610b9b613851565b6020026020010181815250508181600281518110610bbb57610bbb613851565b6020026020010181815250508481600381518110610bdb57610bdb613851565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c339190869060040161356c565b602060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c859190612f22565b905080610cd5576040516314e8955b60e21b815260206004820152600560248201527f70726f6f6600000000000000000000000000000000000000000000000000000060448201526064016108b3565b876020015163ffffffff1660086000828254610cf19190613714565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d2084612232565b5050505050505050565b601554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610d6f57600080fd5b505afa158015610d83573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dab9190810190612f3f565b905090565b600b546001600160a01b03163314610ddb576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610e905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108b3565b60026000908155604083015151610ea69061224c565b90506000610eb88460e001515161224c565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610f35576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e6774680000000000000000000000000000000000000000000060448201526064016108b3565b8163ffffffff1684606001515114610f90576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e6774680000000000000000000000000000000060448201526064016108b3565b8063ffffffff168461010001515114610fec576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e67746800000000000000000000000060448201526064016108b3565b8063ffffffff168461016001515114611048576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e677468000000000000000060448201526064016108b3565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546110809190613714565b61108a9190613714565b11156110a957604051633b5ccb4360e21b815260040160405180910390fd5b6110b2326122cc565b156110d057604051632e70c0b160e01b815260040160405180910390fd5b6110de8461012001516122cc565b156110fc57604051632e70c0b160e01b815260040160405180910390fd5b60006111078561236b565b905061111381856124f7565b6001600160a01b031660001b856080015114611172576040516314e8955b60e21b815260206004820152600960248201527f7369676e6174757265000000000000000000000000000000000000000000000060448201526064016108b3565b600061117f846002613754565b63ffffffff1690506000611194856002613754565b61119f90600461372c565b63ffffffff16905060006111b4856002613754565b6111c49063ffffffff1683613714565b67ffffffffffffffff8111156111dc576111dc613867565b604051908082528060200260200182016040528015611205578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff16611257576040516314e8955b60e21b81526004016108b3906020808252600490820152631c9bdbdd60e21b604082015260600190565b87602001518160008151811061126f5761126f613851565b6020908102919091010152600061128787600161372c565b63ffffffff16905060005b8763ffffffff168110156113935760008a6040015182815181106112b8576112b8613851565b6020908102919091018101516000818152600590925260409091205490915060ff1615611311576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461131e846001613714565b8151811061132e5761132e613851565b6020026020010181815250508a60600151828151811061135057611350613851565b60200260200101518484846113659190613714565b8151811061137557611375613851565b6020908102919091010152508061138b816137e8565b915050611292565b506080890151826113a5866001613714565b815181106113b5576113b5613851565b602090810291909101015260a0890151826113d1866002613714565b815181106113e1576113e1613851565b602090810291909101015260c0890151826113fd866003613714565b8151811061140d5761140d613851565b6020908102919091010152600061142a63ffffffff881685613714565b905060005b8763ffffffff168110156115a457600460008c60e00151838151811061145757611457613851565b60209081029190910181015182528101919091526040016000205460ff16156114c35760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e740000000000000000000000000000000000000000000060448201526064016108b3565b600c548b610100015182815181106114dd576114dd613851565b602002602001015110156115045760405163784f02bd60e11b815260040160405180910390fd5b8a60e00151818151811061151a5761151a613851565b602002602001015184868361152f9190613714565b8151811061153f5761153f613851565b6020026020010181815250508a6101000151818151811061156257611562613851565b60200260200101518483836115779190613714565b8151811061158757611587613851565b60209081029190910101528061159c816137e8565b91505061142f565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916115fa91889060040161356c565b602060405180830381600087803b15801561161457600080fd5b505af1158015611628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164c9190612f22565b90508061169c576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f6600000000000000000000000000000000000060448201526064016108b3565b60005b8963ffffffff16811015611757576001600560008e6040015184815181106116c9576116c9613851565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b60400151818151811061170c5761170c613851565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061174f816137e8565b91505061169f565b5060005b8863ffffffff16811015611828576001600460008e60e00151848151811061178557611785613851565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506118168c60e0015182815181106117cb576117cb613851565b60200260200101518d610100015183815181106117ea576117ea613851565b60200260200101518e6101600151848151811061180957611809613851565b602002602001015161251b565b80611820816137e8565b91505061175b565b5060a08b015115611846576118468b61012001518c60a001516125ba565b60c08b015115611863576118638b61014001518c60c001516125ba565b50506001600055505050505050505050565b60006005611884836001613714565b111561189257506000919050565b601082600581106118a5576118a5613851565b015492915050565b600b546001600160a01b031633146118d8576040516327e1f1e560e01b815260040160405180910390fd5b60056118e5836001613714565b11156119045760405163318c434560e21b815260040160405180910390fd5b806010836005811061191857611918613851565b015414156119395760405163e984c61760e01b815260040160405180910390fd5b806010836005811061194d5761194d613851565b015560405181815282907f8d463a7e10f676dd3b90506a17258d1f1a9f4f66adbdb6a22b2f8bbd3b484e239060200160405180910390a25050565b336000908152600e602052604090205460ff166119b85760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156119df5760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a109190613714565b10611a2e57604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611a645760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611a9b92919061251b565b604082015115611ab357611ab38183604001516125ba565b5050565b600b546001600160a01b03163314611ae2576040516327e1f1e560e01b815260040160405180910390fd5b80611b30576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c75704665650000000000000000000000000000000000000060448201526064016108b3565b600c55565b600b546001600160a01b03163314611b60576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611b84576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611ba857604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611c43576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c67576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611c8157506104008163ffffffff16115b15611cbc576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016108b3565b611cc7600182613797565b811663ffffffff16600014611cef576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611d3b576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611d87576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611dd6576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610e32565b600b546001600160a01b03163314611e42576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611e66576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611e8a57604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6015546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015611f0057600080fd5b505afa158015611f14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab9190613381565b601554604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610d6f57600080fd5b600b546001600160a01b03163314611fa8576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916105f491600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314612020576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615612044576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216158061205e57506104008263ffffffff16115b15612099576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016108b3565b6120a4600183613797565b821663ffffffff166000146120cc576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff161061215b5760088263ffffffff16901c9150600883901c92505b60108263ffffffff161061217e5760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106121a15760028263ffffffff16901c9150600283901c92505b60028263ffffffff16106121b757600183901c92505b5090919050565b600b546001600160a01b031633146121e9576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610e3290831515815260200190565b601554612249906001600160a01b031633836125cd565b50565b600063ffffffff8211156122c85760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016108b3565b5090565b600154600090600160a01b900460ff166122e857506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561232d57600080fd5b505afa158015612341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123659190612f22565b92915050565b610160810151516000906003811061239657604051633fb1945d60e11b815260040160405180910390fd5b6060816123ea576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b60405160208183030381529060405290506124a2565b81600114156124315783610120015184610140015185610160015160008151811061241757612417613851565b60200260200101516040516020016123d4939291906133f9565b83610120015184610140015185610160015160008151811061245557612455613851565b602002602001015186610160015160018151811061247557612475613851565b6020026020010151604051602001612490949392919061343f565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006125068585612639565b91509150612513816126a9565b509392505050565b600060085460075461252d9190613714565b604080518082018252868152602080820187815260008581526006909252928120915182559151600191820155600780549394509092909190612571908490613714565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516125ac93929190613608565b60405180910390a250505050565b601554611ab3906001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612634908490612864565b505050565b6000808251604114156126705760208301516040840151606085015160001a61266487828585612949565b945094505050506126a2565b82516040141561269a576020830151604084015161268f868383612a36565b9350935050506126a2565b506000905060025b9250929050565b60008160048111156126bd576126bd61383b565b14156126c65750565b60018160048111156126da576126da61383b565b14156127285760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016108b3565b600281600481111561273c5761273c61383b565b141561278a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016108b3565b600381600481111561279e5761279e61383b565b14156127f75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016108b3565b600481600481111561280b5761280b61383b565b14156122495760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016108b3565b60006128b9826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a889092919063ffffffff16565b80519091501561263457808060200190518101906128d79190612f22565b6126345760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108b3565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156129805750600090506003612a2d565b8460ff16601b1415801561299857508460ff16601c14155b156129a95750600090506004612a2d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156129fd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612a2657600060019250925050612a2d565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612a6c60ff86901c601b613714565b9050612a7a87828885612949565b935093505050935093915050565b6060612a978484600085612aa1565b90505b9392505050565b606082471015612b195760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108b3565b6001600160a01b0385163b612b705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108b3565b600080866001600160a01b03168587604051612b8c91906134d1565b60006040518083038185875af1925050503d8060008114612bc9576040519150601f19603f3d011682016040523d82523d6000602084013e612bce565b606091505b5091509150612bde828286612be9565b979650505050505050565b60608315612bf8575081612a9a565b825115612c085782518084602001fd5b8160405162461bcd60e51b81526004016108b39190613559565b8035612c2d8161387d565b919050565b600082601f830112612c4357600080fd5b81356020612c58612c53836136c8565b613697565b80838252828201915082860187848660051b8901011115612c7857600080fd5b6000805b86811015612cbb57823567ffffffffffffffff811115612c9a578283fd5b612ca88b88838d0101612d8e565b8652509385019391850191600101612c7c565b509198975050505050505050565b600082601f830112612cda57600080fd5b612ce2613627565b808385604086011115612cf457600080fd5b60005b6002811015612d16578135845260209384019390910190600101612cf7565b509095945050505050565b600082601f830112612d3257600080fd5b81356020612d42612c53836136c8565b80838252828201915082860187848660051b8901011115612d6257600080fd5b60005b85811015612d8157813584529284019290840190600101612d65565b5090979650505050505050565b600082601f830112612d9f57600080fd5b8135612dad612c53826136ec565b818152846020838601011115612dc257600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612df157600080fd5b6040516040810181811067ffffffffffffffff82111715612e1457612e14613867565b604052823581526020928301359281019290925250919050565b6000818303610100811215612e4257600080fd5b6040516060810181811067ffffffffffffffff82111715612e6557612e65613867565b604052915081612e758585612ddf565b81526080603f1983011215612e8957600080fd5b612e91613627565b9150612ea08560408601612cc9565b8252612eaf8560808601612cc9565b6020830152816020820152612ec78560c08601612ddf565b6040820152505092915050565b803563ffffffff81168114612c2d57600080fd5b600060208284031215612efa57600080fd5b8135612a9a8161387d565b600060208284031215612f1757600080fd5b8135612a9a81613892565b600060208284031215612f3457600080fd5b8151612a9a81613892565b600060208284031215612f5157600080fd5b815167ffffffffffffffff811115612f6857600080fd5b8201601f81018413612f7957600080fd5b8051612f87612c53826136ec565b818152856020838501011115612f9c57600080fd5b612fad8260208301602086016137bc565b95945050505050565b60008060408385031215612fc957600080fd5b823567ffffffffffffffff80821115612fe157600080fd5b9084019060a08287031215612ff557600080fd5b612ffd613650565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561303157600080fd5b61303d88828601612d8e565b608083015250935061305491505060208401612c22565b90509250929050565b6000610160828403121561307057600080fd5b6040516080810181811067ffffffffffffffff8211171561309357613093613867565b6040526130a08484612e2e565b81526130af6101008401612ed4565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156130e457600080fd5b823567ffffffffffffffff808211156130fc57600080fd5b90840190610260828703121561311157600080fd5b613119613673565b6131238784612e2e565b8152610100808401356020830152610120808501358481111561314557600080fd5b6131518a828801612d21565b604085015250610140808601358581111561316b57600080fd5b6131778b828901612d21565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156131b257600080fd5b6131be8c828a01612d21565b60e0870152506101e0870135868111156131d757600080fd5b6131e38c828a01612d21565b85870152506131f56102008801612c22565b838601526132066102208801612c22565b8286015261024087013593508584111561321f57600080fd5b61322b8b858901612c32565b90850152509195505050602085013591508082111561324957600080fd5b5061325685828601612d8e565b9150509250929050565b60006020828403121561327257600080fd5b5035919050565b6000806040838503121561328c57600080fd5b50508035926020909101359150565b600080604083850312156132ae57600080fd5b8235915061305460208401612ed4565b6000602082840312156132d057600080fd5b612a9a82612ed4565b600080604083850312156132ec57600080fd5b6132f583612ed4565b915060208301356133058161387d565b809150509250929050565b6000806040838503121561332357600080fd5b61332c83612ed4565b915061305460208401612ed4565b60008060006060848603121561334f57600080fd5b61335884612ed4565b925061336660208501612ed4565b915060408401356133768161387d565b809150509250925092565b60006020828403121561339357600080fd5b815160ff81168114612a9a57600080fd5b8060005b60028110156133c75781518452602093840193909101906001016133a8565b50505050565b600081518084526133e58160208601602086016137bc565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b1660148401525082516134308160288501602087016137bc565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083516134768160288501602088016137bc565b83519083019061348d8160288401602088016137bc565b016028019695505050505050565b815160009082906020808601845b838110156134c5578151855293820193908201906001016134a9565b50929695505050505050565b600082516134e38184602087016137bc565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b8181101561352557835183529284019291840191600101613509565b50909695505050505050565b602081016002831061355357634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612a9a60208301846133cd565b600061012080830161358984875180518252602090810151910152565b60208087015161359d6040870182516133a4565b8101516135ad60808701826133a4565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156135fb578351855293820193928201926001016135df565b5092979650505050505050565b838152826020820152606060408201526000612fad60608301846133cd565b6040805190810167ffffffffffffffff8111828210171561364a5761364a613867565b60405290565b60405160a0810167ffffffffffffffff8111828210171561364a5761364a613867565b604051610180810167ffffffffffffffff8111828210171561364a5761364a613867565b604051601f8201601f1916810167ffffffffffffffff811182821017156136c0576136c0613867565b604052919050565b600067ffffffffffffffff8211156136e2576136e2613867565b5060051b60200190565b600067ffffffffffffffff82111561370657613706613867565b50601f01601f191660200190565b6000821982111561372757613727613825565b500190565b600063ffffffff80831681851680830382111561374b5761374b613825565b01949350505050565b600063ffffffff8083168185168183048111821515161561377757613777613825565b02949350505050565b60008282101561379257613792613825565b500390565b600063ffffffff838116908316818110156137b4576137b4613825565b039392505050565b60005b838110156137d75781810151838201526020016137bf565b838111156133c75750506000910152565b60006000198214156137fc576137fc613825565b5060010190565b60008261382057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461224957600080fd5b801515811461224957600080fdfea26469706673582212205630d7714217a7cdae31fe8fd238c6870689cac7d284e6cf512b9a2f7e1c621564736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
