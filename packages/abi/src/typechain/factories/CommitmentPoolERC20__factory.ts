/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b506040516200423e3803806200423e83398101604081905262000064916200083d565b6001600055808260ff8116620000cd5760405162461bcd60e51b8152602060048201526024808201527f5f747265654865696768742073686f756c6420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000f48162000144565b600a8190556000908152600960205260409020805460ff1916600117905550600f80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200088c9050565b600060ff82166200017657507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff1660011415620001aa57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001de57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff16600314156200021257507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200024557507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200027957507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff1660061415620002ad57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002e157507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff16600814156200031557507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200034957507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200037d57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b1415620003b157507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003e557507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d14156200041957507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200044d57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200048157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff1660101415620004b557507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004e857507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff16601214156200051c57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200055057507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200058457507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff1660151415620005b857507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ec57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff16601714156200062057507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200065457507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200068857507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a1415620006bc57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006f057507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c14156200072457507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200075857507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200078c57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f1415620007c057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007f457507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b60405162461bcd60e51b815260206004820152601960248201527f7472656520686569676874206f7574206f6620626f756e6473000000000000006044820152606401620000c4565b600080604083850312156200085157600080fd5b825160ff811681146200086357600080fd5b60208401519092506001600160a01b03811681146200088157600080fd5b809150509250929050565b608051613988620008b6600039600081816102de0152818161108b0152611a2401526139886000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063830d9ebe1161010f578063c2d41601116100a2578063ec571c6a11610071578063ec571c6a1461044e578063f2da1d4114610479578063f8f053881461048c578063ffa89b881461049f57600080fd5b8063c2d4160114610411578063c9230c5d1461042b578063deeff7cd14610433578063e500f5041461044657600080fd5b8063a9b1d296116100de578063a9b1d296146103d0578063b08892d0146103e3578063b3b75631146103eb578063c259e2e6146103fe57600080fd5b8063830d9ebe146103735780639b0a6fea146103875780639cc6b3541461039a578063a6232a93146103ad57600080fd5b80633fae882e116101875780635706001611610156578063570600161461031757806378d60cd71461033a5780637cbf0ff61461034d5780637fa4b09c1461036057600080fd5b80633fae882e146102ba5780633fe3347a146102cd578063484eb652146102dc5780634eb069f71461030c57600080fd5b806314a7737d116101c357806314a7737d14610243578063176de7a81461025657806334c33e83146102745780633bb8d1b41461028757600080fd5b806302d498f1146101f557806303db98741461020a57806306394c9b1461021d57806306b2ad5914610230575b600080fd5b6102086102033660046130c7565b6104af565b005b6102086102183660046130c7565b610523565b61020861022b3660046130c7565b61058f565b61020861023e3660046130e4565b610609565b61020861025136600461323c565b6106ac565b61025e610d65565b60405161026b9190613630565b60405180910390f35b6102086102823660046130c7565b610df6565b6102aa61029536600461343f565b60009081526005602052604090205460ff1690565b604051901515815260200161026b565b6102086102c83660046132b0565b610e9c565b600060405161026b9190613608565b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161026b565b600f5460ff166102aa565b6102aa61032536600461343f565b60009081526004602052604090205460ff1690565b610208610348366004613195565b61196d565b61020861035b36600461343f565b611b51565b61020861036e3660046134f7565b611bf1565b6001546102aa90600160a01b900460ff1681565b61020861039536600461347b565b611d61565b6102086103a83660046130c7565b611e77565b6102aa6103bb36600461343f565b60009081526009602052604090205460ff1690565b6102086103de3660046130c7565b611ee3565b600c546102fe565b6102086103f93660046130e4565b611f52565b61020861040c3660046134cd565b611fde565b61041961210f565b60405160ff909116815260200161026b565b61025e612197565b610208610441366004613496565b6121e7565b6008546102fe565b600154610461906001600160a01b031681565b6040516001600160a01b03909116815260200161026b565b6102fe610487366004613458565b612367565b61020861049a3660046130e4565b6123a2565b600f54610100900460ff166102aa565b600b546001600160a01b031633146104ff5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b0316331461056e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146105da5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146106545760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a443906106a190831515815260200190565b60405180910390a150565b600f54610100900460ff16806106d15750336000908152600d602052604090205460ff165b61071d5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e000000000000000060448201526064016104f6565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018160400151106107b65760405162461bcd60e51b815260206004820152602660248201527f6e6577526f6f742073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016104f6565b60408082015160009081526009602052205460ff16156108185760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c696361746564000000000000000000000060448201526064016104f6565b6000816020015163ffffffff1611801561083e5750600754816020015163ffffffff1611155b801561086b575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b6108ac5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f6565b60085460208201516108c49063ffffffff16826138b5565b1561091d5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b60648201526084016104f6565b600061092d828460200151612367565b90506000836020015163ffffffff1667ffffffffffffffff81111561095457610954613919565b60405190808252806020026020018201604052801561097d578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610aaa5760006109a282876137eb565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a1e5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016104f6565b8060000151858481518110610a3557610a35613903565b602002602001018181525050806020015184610a5191906137eb565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610aa29061389a565b915050610984565b50846020015163ffffffff1660076000828254610ac79190613857565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b0291906135b6565b6040516020818303038152906040528051906020012060001c610b2591906138b5565b905080866060015114610b7a5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c656166486173680000000000000000000000000000000060448201526064016104f6565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610bb357610bb3613903565b602002602001018181525050866040015181600181518110610bd757610bd7613903565b6020026020010181815250508181600281518110610bf757610bf7613903565b6020026020010181815250508481600381518110610c1757610c17613903565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c6f91908690600401613643565b602060405180830381600087803b158015610c8957600080fd5b505af1158015610c9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc19190613101565b905080610d105760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016104f6565b876020015163ffffffff1660086000828254610d2c91906137eb565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d5b84612436565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610db557600080fd5b505afa158015610dc9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610df1919081019061311e565b905090565b600b546001600160a01b03163314610e415760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016106a1565b60026000541415610eef5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f6565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff16610f795760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e677468000000000000000000000000000060448201526064016104f6565b8163ffffffff1684606001515114610fd35760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e677468000000000000000060448201526064016104f6565b8063ffffffff16846101000151511461102e5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e6774680000000060448201526064016104f6565b8063ffffffff1684610160015151146110895760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e67746860448201526064016104f6565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546110c191906137eb565b6110cb91906137eb565b11156111085760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016104f6565b611116846101200151612456565b156111635760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016104f6565b600061116e856124f6565b9050600061117c82866126d0565b60808701519091506001600160a01b038216146111db5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016104f6565b60006111e884600261382b565b6111f386600261382b565b6111fe906004613803565b6112089190613803565b63ffffffff1667ffffffffffffffff81111561122657611226613919565b60405190808252806020026020018201604052801561124f578160200160208202803683370190505b5060208089015160009081526009909152604090205490915060ff166112b75760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f74000000000000000000000000000000000000000060448201526064016104f6565b8660200151816000815181106112cf576112cf613903565b602090810291909101015260006112e7866001613803565b63ffffffff16905060005b8663ffffffff168110156114095760008960400151828151811061131857611318613903565b6020908102919091018101516000818152600590925260409091205490915060ff16156113875760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e7400000000000000000060448201526064016104f6565b80846113948460016137eb565b815181106113a4576113a4613903565b602002602001018181525050896060015182815181106113c6576113c6613903565b60200260200101518484846113db91906137eb565b815181106113eb576113eb613903565b602090810291909101015250806114018161389a565b9150506112f2565b5060808801518261141b88600261382b565b611426906001613803565b63ffffffff168151811061143c5761143c613903565b602090810291909101015260a08801518261145888600261382b565b611463906002613803565b63ffffffff168151811061147957611479613903565b602090810291909101015260c08801518261149588600261382b565b6114a0906003613803565b63ffffffff16815181106114b6576114b6613903565b602090810291909101015260006114ce87600261382b565b6114d9906004613803565b63ffffffff16905060008663ffffffff16826114f591906137eb565b905060005b8763ffffffff1681101561169d57600460008c60e00151838151811061152257611522613903565b60209081029190910181015182528101919091526040016000205460ff161561158d5760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e7400000000000000000000000060448201526064016104f6565b600c548b610100015182815181106115a7576115a7613903565b602002602001015110156115fd5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f77000000000000000000000000000060448201526064016104f6565b8a60e00151818151811061161357611613613903565b602002602001015185848361162891906137eb565b8151811061163857611638613903565b6020026020010181815250508a6101000151818151811061165b5761165b613903565b602002602001015185838361167091906137eb565b8151811061168057611680613903565b6020908102919091010152806116958161389a565b9150506114fa565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916116f3918990600401613643565b602060405180830381600087803b15801561170d57600080fd5b505af1158015611721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117459190613101565b9050806117945760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f660000000000000000000060448201526064016104f6565b60005b8963ffffffff1681101561184f576001600560008e6040015184815181106117c1576117c1613903565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b60400151818151811061180457611804613903565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806118478161389a565b915050611797565b5060005b8863ffffffff16811015611920576001600460008e60e00151848151811061187d5761187d613903565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555061190e8c60e0015182815181106118c3576118c3613903565b60200260200101518d610100015183815181106118e2576118e2613903565b60200260200101518e6101600151848151811061190157611901613903565b60200260200101516126f4565b806119188161389a565b915050611853565b5060a08b01511561193e5761193e8b61012001518c60a00151612793565b60c08b01511561195b5761195b8b61014001518c60c00151612793565b50506001600055505050505050505050565b336000908152600e602052604090205460ff166119cc5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e000000000000000060448201526064016104f6565b600c5482606001511015611a225760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016104f6565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a5391906137eb565b10611a8f5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016104f6565b60208083015160009081526004909152604090205460ff1615611afe5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016104f6565b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611b359291906126f4565b604082015115611b4d57611b4d818360400151612793565b5050565b600b546001600160a01b03163314611b9c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b60008111611bec5760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c7570466565000000000000000000000060448201526064016104f6565b600c55565b600b546001600160a01b03163314611c3c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff1615611c9b5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008363ffffffff1611611cf15760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016104f6565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611dac5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff1615611e0b5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008163ffffffff1611611e565760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f6565b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611ec25760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611f2e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611f9d5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e4906020016106a1565b600b546001600160a01b031633146120295760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff16156120885760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008263ffffffff16116120de5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016104f6565b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561215f57600080fd5b505afa158015612173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df1919061353e565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610db557600080fd5b600b546001600160a01b031633146122325760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff16156122915760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b8163ffffffff16600114806122ac57508163ffffffff166004145b806122bd57508163ffffffff166010145b6122fe5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f6565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60008163ffffffff166010141561238457600483901c925061239b565b8163ffffffff166004141561239b57600283901c92505b5090919050565b600b546001600160a01b031633146123ed5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b479906106a190831515815260200190565b600f54612453906201000090046001600160a01b031633836127ac565b50565b600154600090600160a01b900460ff161561247357506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156124b857600080fd5b505afa1580156124cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f09190613101565b92915050565b61016081015151600090600381106125505760405162461bcd60e51b815260206004820152601860248201527f6f7574707574206e6f746573206c657373207468616e2033000000000000000060448201526064016104f6565b61012083015161014084015160608060008561256e575060286125ec565b85600114156125a25760f9905087610160015160008151811061259357612593613903565b602002602001015192506125ec565b6101ca90508761016001516000815181106125bf576125bf613903565b602002602001015192508761016001516001815181106125e1576125e1613903565b602002602001015191505b60006040518660601b60008201528560601b60148201526000881315612635576028810160d18101602087015b81831015612631578051835260209283019201612619565b5050505b60018813156126675760f9810160d18101602086015b8183101561266357805183526020928301920161264b565b5050505b82902090506126c3816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b60008060006126df8585612818565b915091506126ec81612888565b509392505050565b600060085460075461270691906137eb565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061274a9084906137eb565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612785939291906136df565b60405180910390a250505050565b600f54611b4d906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612813908490612a43565b505050565b60008082516041141561284f5760208301516040840151606085015160001a61284387828585612b28565b94509450505050612881565b825160401415612879576020830151604084015161286e868383612c15565b935093505050612881565b506000905060025b9250929050565b600081600481111561289c5761289c6138ed565b14156128a55750565b60018160048111156128b9576128b96138ed565b14156129075760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104f6565b600281600481111561291b5761291b6138ed565b14156129695760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104f6565b600381600481111561297d5761297d6138ed565b14156129d65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104f6565b60048160048111156129ea576129ea6138ed565b14156124535760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104f6565b6000612a98826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612c679092919063ffffffff16565b8051909150156128135780806020019051810190612ab69190613101565b6128135760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612b5f5750600090506003612c0c565b8460ff16601b14158015612b7757508460ff16601c14155b15612b885750600090506004612c0c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612bdc573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612c0557600060019250925050612c0c565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612c4b60ff86901c601b6137eb565b9050612c5987828885612b28565b935093505050935093915050565b6060612c768484600085612c80565b90505b9392505050565b606082471015612cf85760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104f6565b6001600160a01b0385163b612d4f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f6565b600080866001600160a01b03168587604051612d6b91906135ec565b60006040518083038185875af1925050503d8060008114612da8576040519150601f19603f3d011682016040523d82523d6000602084013e612dad565b606091505b5091509150612dbd828286612dc8565b979650505050505050565b60608315612dd7575081612c79565b825115612de75782518084602001fd5b8160405162461bcd60e51b81526004016104f69190613630565b8035612e0c8161392f565b919050565b600082601f830112612e2257600080fd5b81356020612e37612e328361379f565b61376e565b80838252828201915082860187848660051b8901011115612e5757600080fd5b6000805b86811015612e9a57823567ffffffffffffffff811115612e79578283fd5b612e878b88838d0101612f6d565b8652509385019391850191600101612e5b565b509198975050505050505050565b600082601f830112612eb957600080fd5b612ec16136fe565b808385604086011115612ed357600080fd5b60005b6002811015612ef5578135845260209384019390910190600101612ed6565b509095945050505050565b600082601f830112612f1157600080fd5b81356020612f21612e328361379f565b80838252828201915082860187848660051b8901011115612f4157600080fd5b60005b85811015612f6057813584529284019290840190600101612f44565b5090979650505050505050565b600082601f830112612f7e57600080fd5b8135612f8c612e32826137c3565b818152846020838601011115612fa157600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612fd057600080fd5b6040516040810181811067ffffffffffffffff82111715612ff357612ff3613919565b604052823581526020928301359281019290925250919050565b600081830361010081121561302157600080fd5b6040516060810181811067ffffffffffffffff8211171561304457613044613919565b6040529150816130548585612fbe565b81526080603f198301121561306857600080fd5b6130706136fe565b915061307f8560408601612ea8565b825261308e8560808601612ea8565b60208301528160208201526130a68560c08601612fbe565b6040820152505092915050565b803563ffffffff81168114612e0c57600080fd5b6000602082840312156130d957600080fd5b8135612c798161392f565b6000602082840312156130f657600080fd5b8135612c7981613944565b60006020828403121561311357600080fd5b8151612c7981613944565b60006020828403121561313057600080fd5b815167ffffffffffffffff81111561314757600080fd5b8201601f8101841361315857600080fd5b8051613166612e32826137c3565b81815285602083850101111561317b57600080fd5b61318c82602083016020860161386e565b95945050505050565b600080604083850312156131a857600080fd5b823567ffffffffffffffff808211156131c057600080fd5b9084019060a082870312156131d457600080fd5b6131dc613727565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561321057600080fd5b61321c88828601612f6d565b608083015250935061323391505060208401612e01565b90509250929050565b6000610160828403121561324f57600080fd5b6040516080810181811067ffffffffffffffff8211171561327257613272613919565b60405261327f848461300d565b815261328e61010084016130b3565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156132c357600080fd5b823567ffffffffffffffff808211156132db57600080fd5b9084019061026082870312156132f057600080fd5b6132f861374a565b613302878461300d565b8152610100808401356020830152610120808501358481111561332457600080fd5b6133308a828801612f00565b604085015250610140808601358581111561334a57600080fd5b6133568b828901612f00565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561339157600080fd5b61339d8c828a01612f00565b60e0870152506101e0870135868111156133b657600080fd5b6133c28c828a01612f00565b85870152506133d46102008801612e01565b838601526133e56102208801612e01565b828601526102408701359350858411156133fe57600080fd5b61340a8b858901612e11565b90850152509195505050602085013591508082111561342857600080fd5b5061343585828601612f6d565b9150509250929050565b60006020828403121561345157600080fd5b5035919050565b6000806040838503121561346b57600080fd5b82359150613233602084016130b3565b60006020828403121561348d57600080fd5b612c79826130b3565b600080604083850312156134a957600080fd5b6134b2836130b3565b915060208301356134c28161392f565b809150509250929050565b600080604083850312156134e057600080fd5b6134e9836130b3565b9150613233602084016130b3565b60008060006060848603121561350c57600080fd5b613515846130b3565b9250613523602085016130b3565b915060408401356135338161392f565b809150509250925092565b60006020828403121561355057600080fd5b815160ff81168114612c7957600080fd5b8060005b6002811015613584578151845260209384019390910190600101613565565b50505050565b600081518084526135a281602086016020860161386e565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156135e0578151855293820193908201906001016135c4565b50929695505050505050565b600082516135fe81846020870161386e565b9190910192915050565b602081016002831061362a57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612c79602083018461358a565b600061012080830161366084875180518252602090810151910152565b602080870151613674604087018251613561565b8101516136846080870182613561565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156136d2578351855293820193928201926001016136b6565b5092979650505050505050565b83815282602082015260606040820152600061318c606083018461358a565b6040805190810167ffffffffffffffff8111828210171561372157613721613919565b60405290565b60405160a0810167ffffffffffffffff8111828210171561372157613721613919565b604051610180810167ffffffffffffffff8111828210171561372157613721613919565b604051601f8201601f1916810167ffffffffffffffff8111828210171561379757613797613919565b604052919050565b600067ffffffffffffffff8211156137b9576137b9613919565b5060051b60200190565b600067ffffffffffffffff8211156137dd576137dd613919565b50601f01601f191660200190565b600082198211156137fe576137fe6138d7565b500190565b600063ffffffff808316818516808303821115613822576138226138d7565b01949350505050565b600063ffffffff8083168185168183048111821515161561384e5761384e6138d7565b02949350505050565b600082821015613869576138696138d7565b500390565b60005b83811015613889578181015183820152602001613871565b838111156135845750506000910152565b60006000198214156138ae576138ae6138d7565b5060010190565b6000826138d257634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461245357600080fd5b801515811461245357600080fdfea264697066735822122059d79ba0f4a85c7752ca545b9f79864ced100502fafdbfacfefe1726d98063ad64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
