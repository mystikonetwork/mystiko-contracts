/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'ChainalysisSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'MystikoSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainalysisSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mystikoSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateChainalysisSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateMystikoSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a01b0319167340c57923924b5c5c5455c48d93317139addac8fb1790556002805460ff60a01b1916600160a01b179055600060088190556009553480156200005457600080fd5b5060405162004029380380620040298339810160408190526200007791620007e0565b6001600055808260ff8116620000a057604051632c4f29b160e21b815260040160405180910390fd5b600c80546001600160a01b03191633179055600160ff82161b608052620000c78162000117565b600b8190556000908152600a60205260409020805460ff1916600117905550601080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200082f9050565b600060ff82166200014957507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200017d57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001b157507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001e557507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200021857507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200024c57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200028057507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002b457507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002e857507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200031c57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200035057507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200038457507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003b857507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003ec57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200042057507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200045457507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200048857507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004bb57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004ef57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200052357507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200055757507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200058b57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005bf57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005f357507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200062757507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200065b57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200068f57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006c357507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006f757507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200072b57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200075f57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200079357507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007c757507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007f457600080fd5b825160ff811681146200080657600080fd5b60208401519092506001600160a01b03811681146200082457600080fd5b809150509250929050565b6080516137d0620008596000396000818161032401528181610f83015261180701526137d06000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80638c07681211610145578063c259e2e6116100bd578063deeff7cd1161008c578063f2da1d4111610071578063f2da1d41146104ed578063f8f0538814610500578063ffa89b881461051357600080fd5b8063deeff7cd146104d2578063e500f504146104e557600080fd5b8063c259e2e614610495578063c2d41601146104a8578063c9230c5d146104c2578063dd757c34146104ca57600080fd5b8063a7542e3711610114578063b08892d0116100f9578063b08892d014610466578063b1c394221461046e578063b3b756311461048257600080fd5b8063a7542e3714610440578063a9b1d2961461045357600080fd5b80638c076812146103e45780639b0a6fea146103f75780639cc6b3541461040a578063a6232a931461041d57600080fd5b80633fae882e116101d85780634eb069f7116101a757806378d60cd71161018c57806378d60cd7146103ab5780637cbf0ff6146103be5780637fa4b09c146103d157600080fd5b80634eb069f71461037d578063570600161461038857600080fd5b80633fae882e146103005780633fe3347a14610313578063484eb652146103225780634973203d1461035257600080fd5b806314a7737d1161021457806314a7737d14610289578063176de7a81461029c57806331b2d332146102ba5780633bb8d1b4146102cd57600080fd5b806301dbf19f1461024657806302d498f11461025057806303db98741461026357806306394c9b14610276575b600080fd5b61024e610523565b005b61024e61025e366004612e48565b6105a7565b61024e610271366004612e48565b6105f6565b61024e610284366004612e48565b610642565b61024e610297366004612fbd565b6106f3565b6102a4610c58565b6040516102b19190613453565b60405180910390f35b61024e6102c8366004612e48565b610ce9565b6102f06102db3660046131c0565b60009081526006602052604090205460ff1690565b60405190151581526020016102b1565b61024e61030e366004613031565b610d76565b60006040516102b1919061342b565b7f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102b1565b600154610365906001600160a01b031681565b6040516001600160a01b0390911681526020016102b1565b60105460ff166102f0565b6102f06103963660046131c0565b60009081526005602052604090205460ff1690565b61024e6103b9366004612f16565b6117ae565b61024e6103cc3660046131c0565b6118dd565b61024e6103df366004613278565b61195b565b600254610365906001600160a01b031681565b61024e6104053660046131fc565b611a3e565b61024e610418366004612e48565b611b36565b6102f061042b3660046131c0565b6000908152600a602052604090205460ff1690565b61024e61044e366004612e48565b611b82565b61024e610461366004612e48565b611c08565b600d54610344565b6002546102f090600160a01b900460ff1681565b61024e610490366004612e65565b611c57565b61024e6104a336600461324e565b611cc3565b6104b0611d67565b60405160ff90911681526020016102b1565b6102a4611def565b61024e611e3f565b61024e6104e0366004613217565b611eb7565b600954610344565b6103446104fb3660046131d9565b611ff7565b61024e61050e366004612e65565b612080565b601054610100900460ff166102f0565b600c546001600160a01b0316331461054e576040516327e1f1e560e01b815260040160405180910390fd5b6002805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261059d92900460ff161515815260200190565b60405180910390a1565b600c546001600160a01b031633146105d2576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600c546001600160a01b03163314610621576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b600c546001600160a01b0316331461066d576040516327e1f1e560e01b815260040160405180910390fd5b600c546001600160a01b038281169116141561069c576040516336a1c33f60e01b815260040160405180910390fd5b600c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b601054610100900460ff1615801561071b5750336000908152600e602052604090205460ff16155b15610739576040516321ce01f360e01b815260040160405180910390fd5b6040808201516000908152600a602052205460ff161561076c5760405163e2e1210360e01b815260040160405180910390fd5b600854816020015163ffffffff1611806107a8575060208181015163ffffffff16600090815260049091526040902054600160a01b900460ff16155b156107e8576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60095460208201516108009063ffffffff16826136fd565b1561083b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016107df565b600061084b828460200151611ff7565b90506000836020015163ffffffff1667ffffffffffffffff81111561087257610872613761565b60405190808252806020026020018201604052801561089b578160200160208202803683370190505b5090506000805b856020015163ffffffff168110156109995760006108c0828761360e565b60008181526007602090815260409182902082518084019093528054808452600190910154918301919091529192509061090d5760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106109245761092461374b565b602002602001018181525050806020015184610940919061360e565b60008381526007602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610991906136e2565b9150506108a2565b50846020015163ffffffff16600860008282546109b6919061367a565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001836040516020016109f191906133d9565b6040516020818303038152906040528051906020012060001c610a1491906136fd565b905080866060015114610a6a576040516314e8955b60e21b815260206004820152600860248201527f6c6561664861736800000000000000000000000000000000000000000000000060448201526064016107df565b60408051600480825260a0820190925260009160208201608080368337019050509050600b5481600081518110610aa357610aa361374b565b602002602001018181525050866040015181600181518110610ac757610ac761374b565b6020026020010181815250508181600281518110610ae757610ae761374b565b6020026020010181815250508481600381518110610b0757610b0761374b565b6020908102919091018101919091528781015163ffffffff1660009081526004918290526040808220548a51915163c941764760e01b815292936001600160a01b039091169263c941764792610b61929091879101613466565b602060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190612e82565b905080610c03576040516314e8955b60e21b815260206004820152600560248201527f70726f6f6600000000000000000000000000000000000000000000000000000060448201526064016107df565b876020015163ffffffff1660096000828254610c1f919061360e565b9091555050604080890151600b8190556000908152600a60205220805460ff19166001179055610c4e846120f4565b5050505050505050565b6060601060029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ce49190810190612e9f565b905090565b600c546001600160a01b03163314610d14576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f017e1ccd0899030de557a9d08af3a798fc32e1f31fb548ebf6dfe71e082ec529906020015b60405180910390a150565b60026000541415610dc95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107df565b60026000908155604083015151610ddf90612114565b90506000610df18460e0015151612114565b63ffffffff838116600090815260036020908152604080832093851683529290522054909150600160a01b900460ff16610e6e576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e6774680000000000000000000000000000000000000000000060448201526064016107df565b8163ffffffff1684606001515114610ec9576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e6774680000000000000000000000000000000060448201526064016107df565b8063ffffffff168461010001515114610f25576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e67746800000000000000000000000060448201526064016107df565b8063ffffffff168461016001515114610f81576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e677468000000000000000060448201526064016107df565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600854600954610fb9919061360e565b610fc3919061360e565b1115610fe257604051633b5ccb4360e21b815260040160405180910390fd5b610feb32612194565b1561100957604051632e70c0b160e01b815260040160405180910390fd5b611017846101200151612194565b1561103557604051632e70c0b160e01b815260040160405180910390fd5b6000611040856122ca565b905061104c8185612456565b6001600160a01b031660001b8560800151146110ab576040516314e8955b60e21b815260206004820152600960248201527f7369676e6174757265000000000000000000000000000000000000000000000060448201526064016107df565b60006110b884600261364e565b63ffffffff16905060006110cd85600261364e565b6110d8906004613626565b63ffffffff16905060006110ed85600261364e565b6110fd9063ffffffff168361360e565b67ffffffffffffffff81111561111557611115613761565b60405190808252806020026020018201604052801561113e578160200160208202803683370190505b506020808a01516000908152600a909152604090205490915060ff16611190576040516314e8955b60e21b81526004016107df906020808252600490820152631c9bdbdd60e21b604082015260600190565b8760200151816000815181106111a8576111a861374b565b602090810291909101015260006111c0876001613626565b63ffffffff16905060005b8763ffffffff168110156112cc5760008a6040015182815181106111f1576111f161374b565b6020908102919091018101516000818152600690925260409091205490915060ff161561124a576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461125784600161360e565b815181106112675761126761374b565b6020026020010181815250508a6060015182815181106112895761128961374b565b602002602001015184848461129e919061360e565b815181106112ae576112ae61374b565b602090810291909101015250806112c4816136e2565b9150506111cb565b506080890151826112de86600161360e565b815181106112ee576112ee61374b565b602090810291909101015260a08901518261130a86600261360e565b8151811061131a5761131a61374b565b602090810291909101015260c08901518261133686600361360e565b815181106113465761134661374b565b6020908102919091010152600061136363ffffffff88168561360e565b905060005b8763ffffffff168110156114dd57600560008c60e0015183815181106113905761139061374b565b60209081029190910181015182528101919091526040016000205460ff16156113fc5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e740000000000000000000000000000000000000000000060448201526064016107df565b600d548b610100015182815181106114165761141661374b565b6020026020010151101561143d5760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106114535761145361374b565b6020026020010151848683611468919061360e565b815181106114785761147861374b565b6020026020010181815250508a6101000151818151811061149b5761149b61374b565b60200260200101518483836114b0919061360e565b815181106114c0576114c061374b565b6020908102919091010152806114d5816136e2565b915050611368565b5063ffffffff8089166000908152600360209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c941764791611533918890600401613466565b602060405180830381600087803b15801561154d57600080fd5b505af1158015611561573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115859190612e82565b9050806115d5576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f6600000000000000000000000000000000000060448201526064016107df565b60005b8963ffffffff16811015611690576001600660008e6040015184815181106116025761160261374b565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106116455761164561374b565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611688816136e2565b9150506115d8565b5060005b8863ffffffff16811015611761576001600560008e60e0015184815181106116be576116be61374b565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555061174f8c60e0015182815181106117045761170461374b565b60200260200101518d610100015183815181106117235761172361374b565b60200260200101518e610160015184815181106117425761174261374b565b602002602001015161247a565b80611759816136e2565b915050611694565b5060a08b01511561177f5761177f8b61012001518c60a00151612519565b60c08b01511561179c5761179c8b61014001518c60c00151612519565b50506001600055505050505050505050565b336000908152600f602052604090205460ff166117de5760405163f75e9fc760e01b815260040160405180910390fd5b600d54826060015110156118055760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600854600954611836919061360e565b1061185457604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526005909152604090205460ff161561188a5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260059092526040909120805460ff1916600117905551606083015160808401516118c192919061247a565b6040820151156118d9576118d9818360400151612519565b5050565b600c546001600160a01b03163314611908576040516327e1f1e560e01b815260040160405180910390fd5b80611956576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c75704665650000000000000000000000000000000000000060448201526064016107df565b600d55565b600c546001600160a01b03163314611986576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff16156119aa576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff83166119ce57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600382528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600c546001600160a01b03163314611a69576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611a8d576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611aa757506104008163ffffffff16115b15611ae2576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016107df565b611aed600182613691565b811663ffffffff16600014611b15576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600460205260409020805460ff60a01b19169055565b600c546001600160a01b03163314611b61576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600c546001600160a01b03163314611bad576040516327e1f1e560e01b815260040160405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f93c42ce86c3480aa42cb7e04c0270c66bcee4eaf35410ed3f00ea08bb3b32a8490602001610d6b565b600c546001600160a01b03163314611c33576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b600c546001600160a01b03163314611c82576040516327e1f1e560e01b815260040160405180910390fd5b6010805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610d6b565b600c546001600160a01b03163314611cee576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611d12576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611d3657604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526003602090815260408083209390941682529190915220805460ff60a01b19169055565b6000601060029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611db757600080fd5b505afa158015611dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce491906132bf565b6060601060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610ca857600080fd5b600c546001600160a01b03163314611e6a576040516327e1f1e560e01b815260040160405180910390fd5b6002805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161059d91600160a01b90910460ff161515815260200190565b600c546001600160a01b03163314611ee2576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611f06576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611f2057506104008263ffffffff16115b15611f5b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016107df565b611f66600183613691565b821663ffffffff16600014611f8e576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526004909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff161061201d5760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106120405760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106120635760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061207957600183901c92505b5090919050565b600c546001600160a01b031633146120ab576040516327e1f1e560e01b815260040160405180910390fd5b601080548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610d6b90831515815260200190565b601054612111906201000090046001600160a01b03163383612532565b50565b600063ffffffff8211156121905760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016107df565b5090565b600254600090600160a01b900460ff166121b057506000919050565b60025460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156121f557600080fd5b505afa158015612209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061222d9190612e82565b806122b0575060015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561227857600080fd5b505afa15801561228c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b09190612e82565b156122bd57506001919050565b506000919050565b919050565b61016081015151600090600381106122f557604051633fb1945d60e11b815260040160405180910390fd5b606081612349576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612401565b8160011415612390578361012001518461014001518561016001516000815181106123765761237661374b565b602002602001015160405160200161233393929190613337565b8361012001518461014001518561016001516000815181106123b4576123b461374b565b60200260200101518661016001516001815181106123d4576123d461374b565b60200260200101516040516020016123ef949392919061337d565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b6000806000612465858561259e565b915091506124728161260e565b509392505050565b600060095460085461248c919061360e565b6040805180820182528681526020808201878152600085815260079092529281209151825591516001918201556008805493945090929091906124d090849061360e565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161250b93929190613502565b60405180910390a250505050565b6010546118d9906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526125999084906127c9565b505050565b6000808251604114156125d55760208301516040840151606085015160001a6125c9878285856128ae565b94509450505050612607565b8251604014156125ff57602083015160408401516125f486838361299b565b935093505050612607565b506000905060025b9250929050565b600081600481111561262257612622613735565b141561262b5750565b600181600481111561263f5761263f613735565b141561268d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107df565b60028160048111156126a1576126a1613735565b14156126ef5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107df565b600381600481111561270357612703613735565b141561275c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107df565b600481600481111561277057612770613735565b14156121115760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107df565b600061281e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129ed9092919063ffffffff16565b805190915015612599578080602001905181019061283c9190612e82565b6125995760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107df565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156128e55750600090506003612992565b8460ff16601b141580156128fd57508460ff16601c14155b1561290e5750600090506004612992565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612962573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661298b57600060019250925050612992565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816129d160ff86901c601b61360e565b90506129df878288856128ae565b935093505050935093915050565b60606129fc8484600085612a06565b90505b9392505050565b606082471015612a7e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016107df565b6001600160a01b0385163b612ad55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107df565b600080866001600160a01b03168587604051612af1919061340f565b60006040518083038185875af1925050503d8060008114612b2e576040519150601f19603f3d011682016040523d82523d6000602084013e612b33565b606091505b5091509150612b43828286612b4e565b979650505050505050565b60608315612b5d5750816129ff565b825115612b6d5782518084602001fd5b8160405162461bcd60e51b81526004016107df9190613453565b80356122c581613777565b600082601f830112612ba357600080fd5b81356020612bb8612bb3836135c2565b613591565b80838252828201915082860187848660051b8901011115612bd857600080fd5b6000805b86811015612c1b57823567ffffffffffffffff811115612bfa578283fd5b612c088b88838d0101612cee565b8652509385019391850191600101612bdc565b509198975050505050505050565b600082601f830112612c3a57600080fd5b612c42613521565b808385604086011115612c5457600080fd5b60005b6002811015612c76578135845260209384019390910190600101612c57565b509095945050505050565b600082601f830112612c9257600080fd5b81356020612ca2612bb3836135c2565b80838252828201915082860187848660051b8901011115612cc257600080fd5b60005b85811015612ce157813584529284019290840190600101612cc5565b5090979650505050505050565b600082601f830112612cff57600080fd5b8135612d0d612bb3826135e6565b818152846020838601011115612d2257600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612d5157600080fd5b6040516040810181811067ffffffffffffffff82111715612d7457612d74613761565b604052823581526020928301359281019290925250919050565b6000818303610100811215612da257600080fd5b6040516060810181811067ffffffffffffffff82111715612dc557612dc5613761565b604052915081612dd58585612d3f565b81526080603f1983011215612de957600080fd5b612df1613521565b9150612e008560408601612c29565b8252612e0f8560808601612c29565b6020830152816020820152612e278560c08601612d3f565b6040820152505092915050565b803563ffffffff811681146122c557600080fd5b600060208284031215612e5a57600080fd5b81356129ff81613777565b600060208284031215612e7757600080fd5b81356129ff8161378c565b600060208284031215612e9457600080fd5b81516129ff8161378c565b600060208284031215612eb157600080fd5b815167ffffffffffffffff811115612ec857600080fd5b8201601f81018413612ed957600080fd5b8051612ee7612bb3826135e6565b818152856020838501011115612efc57600080fd5b612f0d8260208301602086016136b6565b95945050505050565b60008060408385031215612f2957600080fd5b823567ffffffffffffffff80821115612f4157600080fd5b9084019060a08287031215612f5557600080fd5b612f5d61354a565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612f9157600080fd5b612f9d88828601612cee565b6080830152509350612fb491505060208401612b87565b90509250929050565b60006101608284031215612fd057600080fd5b6040516080810181811067ffffffffffffffff82111715612ff357612ff3613761565b6040526130008484612d8e565b815261300f6101008401612e34565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561304457600080fd5b823567ffffffffffffffff8082111561305c57600080fd5b90840190610260828703121561307157600080fd5b61307961356d565b6130838784612d8e565b815261010080840135602083015261012080850135848111156130a557600080fd5b6130b18a828801612c81565b60408501525061014080860135858111156130cb57600080fd5b6130d78b828901612c81565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561311257600080fd5b61311e8c828a01612c81565b60e0870152506101e08701358681111561313757600080fd5b6131438c828a01612c81565b85870152506131556102008801612b87565b838601526131666102208801612b87565b8286015261024087013593508584111561317f57600080fd5b61318b8b858901612b92565b9085015250919550505060208501359150808211156131a957600080fd5b506131b685828601612cee565b9150509250929050565b6000602082840312156131d257600080fd5b5035919050565b600080604083850312156131ec57600080fd5b82359150612fb460208401612e34565b60006020828403121561320e57600080fd5b6129ff82612e34565b6000806040838503121561322a57600080fd5b61323383612e34565b9150602083013561324381613777565b809150509250929050565b6000806040838503121561326157600080fd5b61326a83612e34565b9150612fb460208401612e34565b60008060006060848603121561328d57600080fd5b61329684612e34565b92506132a460208501612e34565b915060408401356132b481613777565b809150509250925092565b6000602082840312156132d157600080fd5b815160ff811681146129ff57600080fd5b8060005b60028110156133055781518452602093840193909101906001016132e6565b50505050565b600081518084526133238160208601602086016136b6565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161336e8160288501602087016136b6565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083516133b48160288501602088016136b6565b8351908301906133cb8160288401602088016136b6565b016028019695505050505050565b815160009082906020808601845b83811015613403578151855293820193908201906001016133e7565b50929695505050505050565b600082516134218184602087016136b6565b9190910192915050565b602081016002831061344d57634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006129ff602083018461330b565b600061012080830161348384875180518252602090810151910152565b6020808701516134976040870182516132e2565b8101516134a760808701826132e2565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156134f5578351855293820193928201926001016134d9565b5092979650505050505050565b838152826020820152606060408201526000612f0d606083018461330b565b6040805190810167ffffffffffffffff8111828210171561354457613544613761565b60405290565b60405160a0810167ffffffffffffffff8111828210171561354457613544613761565b604051610180810167ffffffffffffffff8111828210171561354457613544613761565b604051601f8201601f1916810167ffffffffffffffff811182821017156135ba576135ba613761565b604052919050565b600067ffffffffffffffff8211156135dc576135dc613761565b5060051b60200190565b600067ffffffffffffffff82111561360057613600613761565b50601f01601f191660200190565b600082198211156136215761362161371f565b500190565b600063ffffffff8083168185168083038211156136455761364561371f565b01949350505050565b600063ffffffff808316818516818304811182151516156136715761367161371f565b02949350505050565b60008282101561368c5761368c61371f565b500390565b600063ffffffff838116908316818110156136ae576136ae61371f565b039392505050565b60005b838110156136d15781810151838201526020016136b9565b838111156133055750506000910152565b60006000198214156136f6576136f661371f565b5060010190565b60008261371a57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461211157600080fd5b801515811461211157600080fdfea2646970667358221220c99559832f90db7cc33e73e4f4d39acd49d85552f9ce426733ffea3f0b2a28d964736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
