/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'uint32',
        name: '_rootHistoryLength',
        type: 'uint32',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getRootHistoryLength',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905560006007819055600855600b805463ffffffff191690553480156200004e57600080fd5b506040516200459a3803806200459a8339810160408190526200007191620008d4565b600160005580838363ffffffff8116620000e65760405162461bcd60e51b815260206004820152602b60248201527f5f726f6f74486973746f72794c656e6774682073686f756c642062652067726560448201526a061746572207468616e20360ac1b60648201526084015b60405180910390fd5b60008260ff1611620001475760405162461bcd60e51b8152602060048201526024808201527f5f747265654865696768742073686f756c6420626520677265617465722074686044820152630616e20360e41b6064820152608401620000dd565b600b8054600160201b600160c01b031916336401000000000217905560e081901b6001600160e01b03191660a052600160ff83161b6080526200018a82620001db565b600a819055600b5463ffffffff166000908152600960205260409020555050600f80546001600160a01b03909216620100000262010000600160b01b03199092169190911790555062000940915050565b600060ff82166200020d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200024157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200027557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620002a957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620002dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200031057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200034457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200037857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620003ac57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620003e057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200041457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200044857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200047c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620004b057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620004e457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200051857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200054c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200057f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620005b357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620005e757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200061b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200064f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200068357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620006b757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620006eb57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200071f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200075357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200078757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620007bb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620007ef57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200082357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200085757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200088b57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b60405162461bcd60e51b815260206004820152601960248201527f7472656520686569676874206f7574206f6620626f756e6473000000000000006044820152606401620000dd565b600080600060608486031215620008ea57600080fd5b835160ff81168114620008fc57600080fd5b602085015190935063ffffffff811681146200091757600080fd5b60408501519092506001600160a01b03811681146200093557600080fd5b809150509250925092565b60805160a05160e01c613c1562000985600039600081816103ac01528181610da8015261205c0152600081816102f90152818161115b0152611ae80152613c156000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063830d9ebe1161012a578063c259e2e6116100bd578063e500f5041161008c578063f2da1d4111610071578063f2da1d41146104b8578063f8f05388146104cb578063ffa89b88146104de57600080fd5b8063e500f50414610485578063ec571c6a1461048d57600080fd5b8063c259e2e61461043d578063c2d4160114610450578063c9230c5d1461046a578063deeff7cd1461047257600080fd5b8063a6232a93116100f9578063a6232a93146103fc578063a9b1d2961461040f578063b08892d014610422578063b3b756311461042a57600080fd5b8063830d9ebe1461038e578063934aef27146103a25780639b0a6fea146103d65780639cc6b354146103e957600080fd5b80633fae882e116101a25780635706001611610171578063570600161461033257806378d60cd7146103555780637cbf0ff6146103685780637fa4b09c1461037b57600080fd5b80633fae882e146102d55780633fe3347a146102e8578063484eb652146102f75780634eb069f71461032757600080fd5b806314a7737d116101de57806314a7737d1461025e578063176de7a81461027157806334c33e831461028f5780633bb8d1b4146102a257600080fd5b806302d498f11461021057806303db98741461022557806306394c9b1461023857806306b2ad591461024b575b600080fd5b61022361021e3660046132e4565b6104ee565b005b6102236102333660046132e4565b61056a565b6102236102463660046132e4565b6105de565b610223610259366004613301565b610673565b61022361026c366004613459565b61071e565b610279610e22565b604051610286919061384d565b60405180910390f35b61022361029d3660046132e4565b610eb3565b6102c56102b036600461365c565b60009081526005602052604090205460ff1690565b6040519015158152602001610286565b6102236102e33660046134cd565b610f6c565b60006040516102869190613825565b7f00000000000000000000000000000000000000000000000000000000000000005b604051908152602001610286565b600f5460ff166102c5565b6102c561034036600461365c565b60009081526004602052604090205460ff1690565b6102236103633660046133b2565b611a31565b61022361037636600461365c565b611c15565b610223610389366004613714565b611cbd565b6001546102c590600160a01b900460ff1681565b60405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610286565b6102236103e4366004613698565b611e35565b6102236103f73660046132e4565b611f53565b6102c561040a36600461365c565b611fc7565b61022361041d3660046132e4565b6120d8565b600c54610319565b610223610438366004613301565b61214f565b61022361044b3660046136ea565b6121e3565b61045861231c565b60405160ff9091168152602001610286565b6102796123a4565b6102236104803660046136b3565b6123f4565b600854610319565b6001546104a0906001600160a01b031681565b6040516001600160a01b039091168152602001610286565b6103196104c6366004613675565b61257c565b6102236104d9366004613301565b6125b7565b600f54610100900460ff166102c5565b600b5464010000000090046001600160a01b031633146105465760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b5464010000000090046001600160a01b031633146105bd5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b5464010000000090046001600160a01b031633146106315760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600b80546001600160a01b03909216640100000000027fffffffffffffffff0000000000000000000000000000000000000000ffffffff909216919091179055565b600b5464010000000090046001600160a01b031633146106c65760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061071390831515815260200190565b60405180910390a150565b600f54610100900460ff16806107435750336000908152600d602052604090205460ff165b61078f5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e0000000000000000604482015260640161053d565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018160400151106108285760405162461bcd60e51b815260206004820152602660248201527f6e6577526f6f742073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a450000000000000000000000000000000000000000000000000000606482015260840161053d565b6108358160400151611fc7565b156108825760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c6963617465640000000000000000000000604482015260640161053d565b6000816020015163ffffffff161180156108a85750600754816020015163ffffffff1611155b80156108d5575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b6109165760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161053d565b600854602082015161092e9063ffffffff1682613b17565b156109875760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b606482015260840161053d565b600061099782846020015161257c565b90506000836020015163ffffffff1667ffffffffffffffff8111156109be576109be613ba6565b6040519080825280602002602001820160405280156109e7578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610b14576000610a0c8287613a08565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a885760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e640000000000000000000000000000604482015260640161053d565b8060000151858481518110610a9f57610a9f613b90565b602002602001018181525050806020015184610abb9190613a08565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610b0c90613afc565b9150506109ee565b50846020015163ffffffff1660076000828254610b319190613a74565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b6c91906137d3565b6040516020818303038152906040528051906020012060001c610b8f9190613b17565b905080866060015114610be45760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c6561664861736800000000000000000000000000000000604482015260640161053d565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610c1d57610c1d613b90565b602002602001018181525050866040015181600181518110610c4157610c41613b90565b6020026020010181815250508181600281518110610c6157610c61613b90565b6020026020010181815250508481600381518110610c8157610c81613b90565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610cd991908690600401613860565b602060405180830381600087803b158015610cf357600080fd5b505af1158015610d07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2b919061331e565b905080610d7a5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161053d565b876020015163ffffffff1660086000828254610d969190613a08565b90915550506040880151600a55600b547f000000000000000000000000000000000000000000000000000000000000000090610dd99063ffffffff166001613a20565b610de39190613b2b565b600b805463ffffffff191663ffffffff92909216918217905560408981015160009283526009602052912055610e1884612653565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610e7257600080fd5b505afa158015610e86573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610eae919081019061333b565b905090565b600b5464010000000090046001600160a01b03163314610f065760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b190602001610713565b60026000541415610fbf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161053d565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166110495760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e6774680000000000000000000000000000604482015260640161053d565b8163ffffffff16846060015151146110a35760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e6774680000000000000000604482015260640161053d565b8063ffffffff1684610100015151146110fe5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e67746800000000604482015260640161053d565b8063ffffffff1684610160015151146111595760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e677468604482015260640161053d565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546111919190613a08565b61119b9190613a08565b11156111d85760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161053d565b6111e6846101200151612673565b156112335760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e656420616464726573730000000000000000000000000000604482015260640161053d565b600061123e85612713565b9050600061124c82866128ed565b60808701519091506001600160a01b038216146112ab5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e6174757265000000000000000000000000000000604482015260640161053d565b60006112b8846002613a48565b6112c3866002613a48565b6112ce906004613a20565b6112d89190613a20565b63ffffffff1667ffffffffffffffff8111156112f6576112f6613ba6565b60405190808252806020026020018201604052801561131f578160200160208202803683370190505b50905061132f8760200151611fc7565b61137b5760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f740000000000000000000000000000000000000000604482015260640161053d565b86602001518160008151811061139357611393613b90565b602090810291909101015260006113ab866001613a20565b63ffffffff16905060005b8663ffffffff168110156114cd576000896040015182815181106113dc576113dc613b90565b6020908102919091018101516000818152600590925260409091205490915060ff161561144b5760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e74000000000000000000604482015260640161053d565b8084611458846001613a08565b8151811061146857611468613b90565b6020026020010181815250508960600151828151811061148a5761148a613b90565b602002602001015184848461149f9190613a08565b815181106114af576114af613b90565b602090810291909101015250806114c581613afc565b9150506113b6565b506080880151826114df886002613a48565b6114ea906001613a20565b63ffffffff168151811061150057611500613b90565b602090810291909101015260a08801518261151c886002613a48565b611527906002613a20565b63ffffffff168151811061153d5761153d613b90565b602090810291909101015260c088015182611559886002613a48565b611564906003613a20565b63ffffffff168151811061157a5761157a613b90565b60209081029190910101526000611592876002613a48565b61159d906004613a20565b63ffffffff16905060008663ffffffff16826115b99190613a08565b905060005b8763ffffffff1681101561176157600460008c60e0015183815181106115e6576115e6613b90565b60209081029190910181015182528101919091526040016000205460ff16156116515760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e74000000000000000000000000604482015260640161053d565b600c548b6101000151828151811061166b5761166b613b90565b602002602001015110156116c15760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f770000000000000000000000000000604482015260640161053d565b8a60e0015181815181106116d7576116d7613b90565b60200260200101518584836116ec9190613a08565b815181106116fc576116fc613b90565b6020026020010181815250508a6101000151818151811061171f5761171f613b90565b60200260200101518583836117349190613a08565b8151811061174457611744613b90565b60209081029190910101528061175981613afc565b9150506115be565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916117b7918990600401613860565b602060405180830381600087803b1580156117d157600080fd5b505af11580156117e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611809919061331e565b9050806118585760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f6600000000000000000000604482015260640161053d565b60005b8963ffffffff16811015611913576001600560008e60400151848151811061188557611885613b90565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106118c8576118c8613b90565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061190b81613afc565b91505061185b565b5060005b8863ffffffff168110156119e4576001600460008e60e00151848151811061194157611941613b90565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119d28c60e00151828151811061198757611987613b90565b60200260200101518d610100015183815181106119a6576119a6613b90565b60200260200101518e610160015184815181106119c5576119c5613b90565b6020026020010151612911565b806119dc81613afc565b915050611917565b5060a08b015115611a0257611a028b61012001518c60a001516129b0565b60c08b015115611a1f57611a1f8b61014001518c60c001516129b0565b50506001600055505050505050505050565b336000908152600e602052604090205460ff16611a905760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e0000000000000000604482015260640161053d565b600c5482606001511015611ae65760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161053d565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611b179190613a08565b10611b535760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b604482015260640161053d565b60208083015160009081526004909152604090205460ff1615611bc25760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b606482015260840161053d565b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611bf9929190612911565b604082015115611c1157611c118183604001516129b0565b5050565b600b5464010000000090046001600160a01b03163314611c685760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b60008111611cb85760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c75704665650000000000000000000000604482015260640161053d565b600c55565b600b5464010000000090046001600160a01b03163314611d105760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600f5460ff1615611d6f5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161053d565b60008363ffffffff1611611dc55760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161053d565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b5464010000000090046001600160a01b03163314611e885760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600f5460ff1615611ee75760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161053d565b60008163ffffffff1611611f325760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161053d565b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b5464010000000090046001600160a01b03163314611fa65760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b5460009063ffffffff165b63ffffffff8116156120185763ffffffff81166000908152600960205260409020548314156120065750600192915050565b8061201081613adc565b915050611fd4565b506000805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b5482141561205357506001919050565b600061208060017f0000000000000000000000000000000000000000000000000000000000000000613a8b565b90505b600b5463ffffffff90811690821611156120cf5763ffffffff81166000908152600960205260409020548314156120bd5750600192915050565b806120c781613adc565b915050612083565b50600092915050565b600b5464010000000090046001600160a01b0316331461212b5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b5464010000000090046001600160a01b031633146121a25760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610713565b600b5464010000000090046001600160a01b031633146122365760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600f5460ff16156122955760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161053d565b60008263ffffffff16116122eb5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e2030000000000000000000000000604482015260640161053d565b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561236c57600080fd5b505afa158015612380573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae919061375b565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610e7257600080fd5b600b5464010000000090046001600160a01b031633146124475760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600f5460ff16156124a65760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b606482015260840161053d565b8163ffffffff16600114806124c157508163ffffffff166004145b806124d257508163ffffffff166010145b6125135760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b604482015260640161053d565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60008163ffffffff166010141561259957600483901c92506125b0565b8163ffffffff16600414156125b057600283901c92505b5090919050565b600b5464010000000090046001600160a01b0316331461260a5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161053d565b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b4799061071390831515815260200190565b600f54612670906201000090046001600160a01b031633836129c9565b50565b600154600090600160a01b900460ff161561269057506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156126d557600080fd5b505afa1580156126e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270d919061331e565b92915050565b610160810151516000906003811061276d5760405162461bcd60e51b815260206004820152601860248201527f6f7574707574206e6f746573206c657373207468616e20330000000000000000604482015260640161053d565b61012083015161014084015160608060008561278b57506028612809565b85600114156127bf5760f990508761016001516000815181106127b0576127b0613b90565b60200260200101519250612809565b6101ca90508761016001516000815181106127dc576127dc613b90565b602002602001015192508761016001516001815181106127fe576127fe613b90565b602002602001015191505b60006040518660601b60008201528560601b60148201526000881315612852576028810160d18101602087015b8183101561284e578051835260209283019201612836565b5050505b60018813156128845760f9810160d18101602086015b81831015612880578051835260209283019201612868565b5050505b82902090506128e0816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b60008060006128fc8585612a35565b9150915061290981612aa5565b509392505050565b60006008546007546129239190613a08565b604080518082018252868152602080820187815260008581526006909252928120915182559151600191820155600780549394509092909190612967908490613a08565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516129a2939291906138fc565b60405180910390a250505050565b600f54611c11906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612a30908490612c60565b505050565b600080825160411415612a6c5760208301516040840151606085015160001a612a6087828585612d45565b94509450505050612a9e565b825160401415612a965760208301516040840151612a8b868383612e32565b935093505050612a9e565b506000905060025b9250929050565b6000816004811115612ab957612ab9613b7a565b1415612ac25750565b6001816004811115612ad657612ad6613b7a565b1415612b245760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161053d565b6002816004811115612b3857612b38613b7a565b1415612b865760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161053d565b6003816004811115612b9a57612b9a613b7a565b1415612bf35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161053d565b6004816004811115612c0757612c07613b7a565b14156126705760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161053d565b6000612cb5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e849092919063ffffffff16565b805190915015612a305780806020019051810190612cd3919061331e565b612a305760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161053d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612d7c5750600090506003612e29565b8460ff16601b14158015612d9457508460ff16601c14155b15612da55750600090506004612e29565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612df9573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612e2257600060019250925050612e29565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612e6860ff86901c601b613a08565b9050612e7687828885612d45565b935093505050935093915050565b6060612e938484600085612e9d565b90505b9392505050565b606082471015612f155760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161053d565b6001600160a01b0385163b612f6c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161053d565b600080866001600160a01b03168587604051612f889190613809565b60006040518083038185875af1925050503d8060008114612fc5576040519150601f19603f3d011682016040523d82523d6000602084013e612fca565b606091505b5091509150612fda828286612fe5565b979650505050505050565b60608315612ff4575081612e96565b8251156130045782518084602001fd5b8160405162461bcd60e51b815260040161053d919061384d565b803561302981613bbc565b919050565b600082601f83011261303f57600080fd5b8135602061305461304f836139bc565b61398b565b80838252828201915082860187848660051b890101111561307457600080fd5b6000805b868110156130b757823567ffffffffffffffff811115613096578283fd5b6130a48b88838d010161318a565b8652509385019391850191600101613078565b509198975050505050505050565b600082601f8301126130d657600080fd5b6130de61391b565b8083856040860111156130f057600080fd5b60005b60028110156131125781358452602093840193909101906001016130f3565b509095945050505050565b600082601f83011261312e57600080fd5b8135602061313e61304f836139bc565b80838252828201915082860187848660051b890101111561315e57600080fd5b60005b8581101561317d57813584529284019290840190600101613161565b5090979650505050505050565b600082601f83011261319b57600080fd5b81356131a961304f826139e0565b8181528460208386010111156131be57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156131ed57600080fd5b6040516040810181811067ffffffffffffffff8211171561321057613210613ba6565b604052823581526020928301359281019290925250919050565b600081830361010081121561323e57600080fd5b6040516060810181811067ffffffffffffffff8211171561326157613261613ba6565b60405291508161327185856131db565b81526080603f198301121561328557600080fd5b61328d61391b565b915061329c85604086016130c5565b82526132ab85608086016130c5565b60208301528160208201526132c38560c086016131db565b6040820152505092915050565b803563ffffffff8116811461302957600080fd5b6000602082840312156132f657600080fd5b8135612e9681613bbc565b60006020828403121561331357600080fd5b8135612e9681613bd1565b60006020828403121561333057600080fd5b8151612e9681613bd1565b60006020828403121561334d57600080fd5b815167ffffffffffffffff81111561336457600080fd5b8201601f8101841361337557600080fd5b805161338361304f826139e0565b81815285602083850101111561339857600080fd5b6133a9826020830160208601613ab0565b95945050505050565b600080604083850312156133c557600080fd5b823567ffffffffffffffff808211156133dd57600080fd5b9084019060a082870312156133f157600080fd5b6133f9613944565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561342d57600080fd5b6134398882860161318a565b60808301525093506134509150506020840161301e565b90509250929050565b6000610160828403121561346c57600080fd5b6040516080810181811067ffffffffffffffff8211171561348f5761348f613ba6565b60405261349c848461322a565b81526134ab61010084016132d0565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156134e057600080fd5b823567ffffffffffffffff808211156134f857600080fd5b90840190610260828703121561350d57600080fd5b613515613967565b61351f878461322a565b8152610100808401356020830152610120808501358481111561354157600080fd5b61354d8a82880161311d565b604085015250610140808601358581111561356757600080fd5b6135738b82890161311d565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156135ae57600080fd5b6135ba8c828a0161311d565b60e0870152506101e0870135868111156135d357600080fd5b6135df8c828a0161311d565b85870152506135f1610200880161301e565b83860152613602610220880161301e565b8286015261024087013593508584111561361b57600080fd5b6136278b85890161302e565b90850152509195505050602085013591508082111561364557600080fd5b506136528582860161318a565b9150509250929050565b60006020828403121561366e57600080fd5b5035919050565b6000806040838503121561368857600080fd5b82359150613450602084016132d0565b6000602082840312156136aa57600080fd5b612e96826132d0565b600080604083850312156136c657600080fd5b6136cf836132d0565b915060208301356136df81613bbc565b809150509250929050565b600080604083850312156136fd57600080fd5b613706836132d0565b9150613450602084016132d0565b60008060006060848603121561372957600080fd5b613732846132d0565b9250613740602085016132d0565b9150604084013561375081613bbc565b809150509250925092565b60006020828403121561376d57600080fd5b815160ff81168114612e9657600080fd5b8060005b60028110156137a1578151845260209384019390910190600101613782565b50505050565b600081518084526137bf816020860160208601613ab0565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156137fd578151855293820193908201906001016137e1565b50929695505050505050565b6000825161381b818460208701613ab0565b9190910192915050565b602081016002831061384757634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612e9660208301846137a7565b600061012080830161387d84875180518252602090810151910152565b60208087015161389160408701825161377e565b8101516138a1608087018261377e565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156138ef578351855293820193928201926001016138d3565b5092979650505050505050565b8381528260208201526060604082015260006133a960608301846137a7565b6040805190810167ffffffffffffffff8111828210171561393e5761393e613ba6565b60405290565b60405160a0810167ffffffffffffffff8111828210171561393e5761393e613ba6565b604051610180810167ffffffffffffffff8111828210171561393e5761393e613ba6565b604051601f8201601f1916810167ffffffffffffffff811182821017156139b4576139b4613ba6565b604052919050565b600067ffffffffffffffff8211156139d6576139d6613ba6565b5060051b60200190565b600067ffffffffffffffff8211156139fa576139fa613ba6565b50601f01601f191660200190565b60008219821115613a1b57613a1b613b4e565b500190565b600063ffffffff808316818516808303821115613a3f57613a3f613b4e565b01949350505050565b600063ffffffff80831681851681830481118215151615613a6b57613a6b613b4e565b02949350505050565b600082821015613a8657613a86613b4e565b500390565b600063ffffffff83811690831681811015613aa857613aa8613b4e565b039392505050565b60005b83811015613acb578181015183820152602001613ab3565b838111156137a15750506000910152565b600063ffffffff821680613af257613af2613b4e565b6000190192915050565b6000600019821415613b1057613b10613b4e565b5060010190565b600082613b2657613b26613b64565b500690565b600063ffffffff80841680613b4257613b42613b64565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461267057600080fd5b801515811461267057600080fdfea2646970667358221220245034d25c78e8a39a37ad6077d830cec35b5e62b9725cc34776ac5151f3c35f64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _rootHistoryLength,
      _token,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _rootHistoryLength: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _rootHistoryLength, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
