/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b5060405162004025380380620040258339810160408190526200006491620007cd565b6001600055808260ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b48162000104565b600a8190556000908152600960205260409020805460ff1916600117905550600f80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200081c9050565b600060ff82166200013657507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016a57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019e57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001d257507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200020557507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023957507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026d57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002a157507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002d557507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030957507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033d57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200037157507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003a557507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d957507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040d57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200044157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200047557507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a857507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004dc57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200051057507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200054457507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057857507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ac57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005e057507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200061457507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064857507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067c57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006b057507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006e457507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071857507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074c57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200078057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007b457507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007e157600080fd5b825160ff81168114620007f357600080fd5b60208401519092506001600160a01b03811681146200081157600080fd5b809150509250929050565b6080516137df62000846600039600081816102de01528181610ee10152611a2101526137df6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063830d9ebe1161010f578063c2d41601116100a2578063ec571c6a11610071578063ec571c6a1461044e578063f2da1d4114610479578063f8f053881461048c578063ffa89b881461049f57600080fd5b8063c2d4160114610411578063c9230c5d1461042b578063deeff7cd14610433578063e500f5041461044657600080fd5b8063a9b1d296116100de578063a9b1d296146103d0578063b08892d0146103e3578063b3b75631146103eb578063c259e2e6146103fe57600080fd5b8063830d9ebe146103735780639b0a6fea146103875780639cc6b3541461039a578063a6232a93146103ad57600080fd5b80633fae882e116101875780635706001611610156578063570600161461031757806378d60cd71461033a5780637cbf0ff61461034d5780637fa4b09c1461036057600080fd5b80633fae882e146102ba5780633fe3347a146102cd578063484eb652146102dc5780634eb069f71461030c57600080fd5b806314a7737d116101c357806314a7737d14610243578063176de7a81461025657806330f49cac146102745780633bb8d1b41461028757600080fd5b806302d498f1146101f557806303db98741461020a57806306394c9b1461021d57806306b2ad5914610230575b600080fd5b610208610203366004612ed9565b6104af565b005b610208610218366004612ed9565b6104fe565b61020861022b366004612ed9565b61054a565b61020861023e366004612ef6565b6105a4565b61020861025136600461304e565b610627565b61025e610bbd565b60405161026b9190613442565b60405180910390f35b610208610282366004612ed9565b610c4e565b6102aa610295366004613251565b60009081526005602052604090205460ff1690565b604051901515815260200161026b565b6102086102c83660046130c2565b610cd4565b600060405161026b919061341a565b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161026b565b600f5460ff166102aa565b6102aa610325366004613251565b60009081526004602052604090205460ff1690565b610208610348366004612fa7565b6119c8565b61020861035b366004613251565b611af7565b61020861036e366004613309565b611b78565b6001546102aa90600160a01b900460ff1681565b61020861039536600461328d565b611c5e565b6102086103a8366004612ed9565b611d57565b6102aa6103bb366004613251565b60009081526009602052604090205460ff1690565b6102086103de366004612ed9565b611da3565b600c546102fe565b6102086103f9366004612ef6565b611df2565b61020861040c3660046132df565b611e5e565b610419611f05565b60405160ff909116815260200161026b565b61025e611f8d565b6102086104413660046132a8565b611fdd565b6008546102fe565b600154610461906001600160a01b031681565b6040516001600160a01b03909116815260200161026b565b6102fe61048736600461326a565b61211e565b61020861049a366004612ef6565b612183565b600f54610100900460ff166102aa565b600b546001600160a01b031633146104da576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610529576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610575576040516327e1f1e560e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146105cf576040516327e1f1e560e01b815260040160405180910390fd5b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061061c90831515815260200190565b60405180910390a150565b600f54610100900460ff1615801561064f5750336000908152600d602052604090205460ff16155b1561066d576040516321ce01f360e01b815260040160405180910390fd5b60008051602061378a83398151915281604001511061069f57604051630daa246560e31b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156106d25760405163e2e1210360e01b815260040160405180910390fd5b602081015163ffffffff1615806106f45750600754816020015163ffffffff16115b80610721575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610761576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516107799063ffffffff16826136ec565b156107b4576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610758565b60006107c482846020015161211e565b90506000836020015163ffffffff1667ffffffffffffffff8111156107eb576107eb613750565b604051908082528060200260200182016040528015610814578160200160208202803683370190505b5090506000805b856020015163ffffffff1681101561091257600061083982876135fd565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906108865760405163d3482f7b60e01b815260040160405180910390fd5b806000015185848151811061089d5761089d61373a565b6020026020010181815250508060200151846108b991906135fd565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a25050808061090a906136d1565b91505061081b565b50846020015163ffffffff166007600082825461092f9190613669565b92505081905550600060008051602061378a8339815191528360405160200161095891906133c8565b6040516020818303038152906040528051906020012060001c61097b91906136ec565b9050808660600151146109d1576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610758565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610a0a57610a0a61373a565b602002602001018181525050866040015181600181518110610a2e57610a2e61373a565b6020026020010181815250508181600281518110610a4e57610a4e61373a565b6020026020010181815250508481600381518110610a6e57610a6e61373a565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610ac691908690600401613455565b602060405180830381600087803b158015610ae057600080fd5b505af1158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b189190612f13565b905080610b68576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610758565b876020015163ffffffff1660086000828254610b8491906135fd565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610bb3846121f7565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610c0d57600080fd5b505afa158015610c21573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c499190810190612f30565b905090565b600b546001600160a01b03163314610c79576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200161061c565b60026000541415610d275760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610758565b60026000908155604083015151610d3d90612217565b90506000610d4f8460e0015151612217565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610dcc576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610758565b8163ffffffff1684606001515114610e27576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610758565b8063ffffffff168461010001515114610e83576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610758565b8063ffffffff168461016001515114610edf576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610758565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610f1791906135fd565b610f2191906135fd565b1115610f4057604051633b5ccb4360e21b815260040160405180910390fd5b610f4e846101200151612297565b15610f6c57604051632e70c0b160e01b815260040160405180910390fd5b6000610f7785612337565b90506000610f8582866124e2565b60808701519091506001600160a01b03821614610fe5576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610758565b6000610ff285600261363d565b63ffffffff169050600061100786600261363d565b611012906004613615565b63ffffffff169050600061102786600261363d565b6110379063ffffffff16836135fd565b67ffffffffffffffff81111561104f5761104f613750565b604051908082528060200260200182016040528015611078578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff166110ca576040516314e8955b60e21b8152600401610758906020808252600490820152631c9bdbdd60e21b604082015260600190565b8860200151816000815181106110e2576110e261373a565b602090810291909101015260006110fa886001613615565b63ffffffff16905060005b8863ffffffff168110156112c85760008b60400151828151811061112b5761112b61373a565b6020908102919091018101516000818152600590925260409091205490915060ff1615611184576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008051602061378a83398151915281106111cb576040516314e8955b60e21b8152600401610758906020808252600490820152636e6f746560e01b604082015260600190565b60008051602061378a8339815191528c6060015183815181106111f0576111f061373a565b602002602001015110611246576040516314e8955b60e21b815260206004820152600760248201527f73696748617368000000000000000000000000000000000000000000000000006044820152606401610758565b80846112538460016135fd565b815181106112635761126361373a565b6020026020010181815250508b6060015182815181106112855761128561373a565b602002602001015184848461129a91906135fd565b815181106112aa576112aa61373a565b602090810291909101015250806112c0816136d1565b915050611105565b5060808a015160008051602061378a8339815191521161132b576040516314e8955b60e21b815260206004820152600560248201527f736967506b0000000000000000000000000000000000000000000000000000006044820152606401610758565b60008051602061378a8339815191528a60a001511061138d576040516314e8955b60e21b815260206004820152600660248201527f616d6f756e7400000000000000000000000000000000000000000000000000006044820152606401610758565b60008051602061378a8339815191528a60c00151106113ef576040516314e8955b60e21b815260206004820152601260248201527f72656c617965722066656520616d6f756e7400000000000000000000000000006044820152606401610758565b60808a0151826114008660016135fd565b815181106114105761141061373a565b602090810291909101015260a08a01518261142c8660026135fd565b8151811061143c5761143c61373a565b602090810291909101015260c08a0151826114588660036135fd565b815181106114685761146861373a565b6020908102919091010152600061148563ffffffff8916856135fd565b905060005b8863ffffffff168110156116f657600460008d60e0015183815181106114b2576114b261373a565b60209081029190910181015182528101919091526040016000205460ff161561151e5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610758565b60008051602061378a8339815191528c60e0015182815181106115435761154361373a565b602002602001015110611599576040516314e8955b60e21b815260206004820152600e60248201527f6f757420636f6d6d69746d656e740000000000000000000000000000000000006044820152606401610758565b600c548c610100015182815181106115b3576115b361373a565b602002602001015110156115da5760405163784f02bd60e11b815260040160405180910390fd5b60008051602061378a8339815191528c610100015182815181106116005761160061373a565b602002602001015110611656576040516314e8955b60e21b815260206004820152600e60248201527f6f757420726f6c6c7570206665650000000000000000000000000000000000006044820152606401610758565b8b60e00151818151811061166c5761166c61373a565b602002602001015184868361168191906135fd565b815181106116915761169161373a565b6020026020010181815250508b610100015181815181106116b4576116b461373a565b60200260200101518483836116c991906135fd565b815181106116d9576116d961373a565b6020908102919091010152806116ee816136d1565b91505061148a565b5063ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c94176479161174c918890600401613455565b602060405180830381600087803b15801561176657600080fd5b505af115801561177a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179e9190612f13565b9050806117ee576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610758565b60005b8a63ffffffff168110156118a9576001600560008f60400151848151811061181b5761181b61373a565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c60400151818151811061185e5761185e61373a565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806118a1816136d1565b9150506117f1565b5060005b8963ffffffff1681101561197a576001600460008f60e0015184815181106118d7576118d761373a565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119688d60e00151828151811061191d5761191d61373a565b60200260200101518e6101000151838151811061193c5761193c61373a565b60200260200101518f6101600151848151811061195b5761195b61373a565b6020026020010151612506565b80611972816136d1565b9150506118ad565b5060a08c015115611998576119988c61012001518d60a001516125a5565b60c08c0151156119b5576119b58c61014001518d60c001516125a5565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff166119f85760405163f75e9fc760e01b815260040160405180910390fd5b600c5482606001511015611a1f5760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a5091906135fd565b10611a6e57604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611aa45760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611adb929190612506565b604082015115611af357611af38183604001516125a5565b5050565b600b546001600160a01b03163314611b22576040516327e1f1e560e01b815260040160405180910390fd5b60008111611b73576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610758565b600c55565b600b546001600160a01b03163314611ba3576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611bc7576040516336e3e09560e01b815260040160405180910390fd5b60008363ffffffff1611611bee57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611c89576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611cad576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611cc857506101008163ffffffff1610155b15611d03576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610758565b611d0e600182613680565b811663ffffffff16600014611d36576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611d82576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611dce576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611e1d576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e49060200161061c565b600b546001600160a01b03163314611e89576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611ead576040516336e3e09560e01b815260040160405180910390fd5b60008263ffffffff1611611ed457604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611f5557600080fd5b505afa158015611f69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c499190613350565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610c0d57600080fd5b600b546001600160a01b03163314612008576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff161561202c576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216158061204757506101008263ffffffff1610155b15612082576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610758565b61208d600183613680565b821663ffffffff166000146120b5576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600060108263ffffffff16106121435760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106121665760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061217c57600183901c92505b5090919050565b600b546001600160a01b031633146121ae576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b4799061061c90831515815260200190565b600f54612214906201000090046001600160a01b031633836125be565b50565b600063ffffffff8211156122935760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610758565b5090565b600154600090600160a01b900460ff16156122b457506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156122f957600080fd5b505afa15801561230d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123319190612f13565b92915050565b610160810151516000906003811061236257604051633fb1945d60e11b815260040160405180910390fd5b610120830151610140840151606080600085612380575060286123fe565b85600114156123b45760f990508761016001516000815181106123a5576123a561373a565b602002602001015192506123fe565b6101ca90508761016001516000815181106123d1576123d161373a565b602002602001015192508761016001516001815181106123f3576123f361373a565b602002602001015191505b60006040518660601b60008201528560601b60148201526000881315612447576028810160d18101602087015b8183101561244357805183526020928301920161242b565b5050505b60018813156124795760f9810160d18101602086015b8183101561247557805183526020928301920161245d565b5050505b82902090506124d5816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b60008060006124f1858561262a565b915091506124fe8161269a565b509392505050565b600060085460075461251891906135fd565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061255c9084906135fd565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612597939291906134f1565b60405180910390a250505050565b600f54611af3906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612625908490612855565b505050565b6000808251604114156126615760208301516040840151606085015160001a6126558782858561293a565b94509450505050612693565b82516040141561268b5760208301516040840151612680868383612a27565b935093505050612693565b506000905060025b9250929050565b60008160048111156126ae576126ae613724565b14156126b75750565b60018160048111156126cb576126cb613724565b14156127195760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610758565b600281600481111561272d5761272d613724565b141561277b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610758565b600381600481111561278f5761278f613724565b14156127e85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610758565b60048160048111156127fc576127fc613724565b14156122145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610758565b60006128aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a799092919063ffffffff16565b80519091501561262557808060200190518101906128c89190612f13565b6126255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610758565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156129715750600090506003612a1e565b8460ff16601b1415801561298957508460ff16601c14155b1561299a5750600090506004612a1e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156129ee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612a1757600060019250925050612a1e565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612a5d60ff86901c601b6135fd565b9050612a6b8782888561293a565b935093505050935093915050565b6060612a888484600085612a92565b90505b9392505050565b606082471015612b0a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610758565b6001600160a01b0385163b612b615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610758565b600080866001600160a01b03168587604051612b7d91906133fe565b60006040518083038185875af1925050503d8060008114612bba576040519150601f19603f3d011682016040523d82523d6000602084013e612bbf565b606091505b5091509150612bcf828286612bda565b979650505050505050565b60608315612be9575081612a8b565b825115612bf95782518084602001fd5b8160405162461bcd60e51b81526004016107589190613442565b8035612c1e81613766565b919050565b600082601f830112612c3457600080fd5b81356020612c49612c44836135b1565b613580565b80838252828201915082860187848660051b8901011115612c6957600080fd5b6000805b86811015612cac57823567ffffffffffffffff811115612c8b578283fd5b612c998b88838d0101612d7f565b8652509385019391850191600101612c6d565b509198975050505050505050565b600082601f830112612ccb57600080fd5b612cd3613510565b808385604086011115612ce557600080fd5b60005b6002811015612d07578135845260209384019390910190600101612ce8565b509095945050505050565b600082601f830112612d2357600080fd5b81356020612d33612c44836135b1565b80838252828201915082860187848660051b8901011115612d5357600080fd5b60005b85811015612d7257813584529284019290840190600101612d56565b5090979650505050505050565b600082601f830112612d9057600080fd5b8135612d9e612c44826135d5565b818152846020838601011115612db357600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612de257600080fd5b6040516040810181811067ffffffffffffffff82111715612e0557612e05613750565b604052823581526020928301359281019290925250919050565b6000818303610100811215612e3357600080fd5b6040516060810181811067ffffffffffffffff82111715612e5657612e56613750565b604052915081612e668585612dd0565b81526080603f1983011215612e7a57600080fd5b612e82613510565b9150612e918560408601612cba565b8252612ea08560808601612cba565b6020830152816020820152612eb88560c08601612dd0565b6040820152505092915050565b803563ffffffff81168114612c1e57600080fd5b600060208284031215612eeb57600080fd5b8135612a8b81613766565b600060208284031215612f0857600080fd5b8135612a8b8161377b565b600060208284031215612f2557600080fd5b8151612a8b8161377b565b600060208284031215612f4257600080fd5b815167ffffffffffffffff811115612f5957600080fd5b8201601f81018413612f6a57600080fd5b8051612f78612c44826135d5565b818152856020838501011115612f8d57600080fd5b612f9e8260208301602086016136a5565b95945050505050565b60008060408385031215612fba57600080fd5b823567ffffffffffffffff80821115612fd257600080fd5b9084019060a08287031215612fe657600080fd5b612fee613539565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561302257600080fd5b61302e88828601612d7f565b608083015250935061304591505060208401612c13565b90509250929050565b6000610160828403121561306157600080fd5b6040516080810181811067ffffffffffffffff8211171561308457613084613750565b6040526130918484612e1f565b81526130a06101008401612ec5565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156130d557600080fd5b823567ffffffffffffffff808211156130ed57600080fd5b90840190610260828703121561310257600080fd5b61310a61355c565b6131148784612e1f565b8152610100808401356020830152610120808501358481111561313657600080fd5b6131428a828801612d12565b604085015250610140808601358581111561315c57600080fd5b6131688b828901612d12565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156131a357600080fd5b6131af8c828a01612d12565b60e0870152506101e0870135868111156131c857600080fd5b6131d48c828a01612d12565b85870152506131e66102008801612c13565b838601526131f76102208801612c13565b8286015261024087013593508584111561321057600080fd5b61321c8b858901612c23565b90850152509195505050602085013591508082111561323a57600080fd5b5061324785828601612d7f565b9150509250929050565b60006020828403121561326357600080fd5b5035919050565b6000806040838503121561327d57600080fd5b8235915061304560208401612ec5565b60006020828403121561329f57600080fd5b612a8b82612ec5565b600080604083850312156132bb57600080fd5b6132c483612ec5565b915060208301356132d481613766565b809150509250929050565b600080604083850312156132f257600080fd5b6132fb83612ec5565b915061304560208401612ec5565b60008060006060848603121561331e57600080fd5b61332784612ec5565b925061333560208501612ec5565b9150604084013561334581613766565b809150509250925092565b60006020828403121561336257600080fd5b815160ff81168114612a8b57600080fd5b8060005b6002811015613396578151845260209384019390910190600101613377565b50505050565b600081518084526133b48160208601602086016136a5565b601f01601f19169290920160200192915050565b815160009082906020808601845b838110156133f2578151855293820193908201906001016133d6565b50929695505050505050565b600082516134108184602087016136a5565b9190910192915050565b602081016002831061343c57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612a8b602083018461339c565b600061012080830161347284875180518252602090810151910152565b602080870151613486604087018251613373565b8101516134966080870182613373565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156134e4578351855293820193928201926001016134c8565b5092979650505050505050565b838152826020820152606060408201526000612f9e606083018461339c565b6040805190810167ffffffffffffffff8111828210171561353357613533613750565b60405290565b60405160a0810167ffffffffffffffff8111828210171561353357613533613750565b604051610180810167ffffffffffffffff8111828210171561353357613533613750565b604051601f8201601f1916810167ffffffffffffffff811182821017156135a9576135a9613750565b604052919050565b600067ffffffffffffffff8211156135cb576135cb613750565b5060051b60200190565b600067ffffffffffffffff8211156135ef576135ef613750565b50601f01601f191660200190565b600082198211156136105761361061370e565b500190565b600063ffffffff8083168185168083038211156136345761363461370e565b01949350505050565b600063ffffffff808316818516818304811182151516156136605761366061370e565b02949350505050565b60008282101561367b5761367b61370e565b500390565b600063ffffffff8381169083168181101561369d5761369d61370e565b039392505050565b60005b838110156136c05781810151838201526020016136a8565b838111156133965750506000910152565b60006000198214156136e5576136e561370e565b5060010190565b60008261370957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461221457600080fd5b801515811461221457600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212203b969b531ea9afd4d566fe2a30ed5b4a4165c36f92989ebf15e4f091c1e308c464736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
