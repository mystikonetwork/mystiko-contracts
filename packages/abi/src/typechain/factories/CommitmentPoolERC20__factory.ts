/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'ChainalysisSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'MystikoSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainalysisSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mystikoSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateChainalysisSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateMystikoSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a01b0319167340c57923924b5c5c5455c48d93317139addac8fb1790556002805460ff60a01b1916600160a01b179055600060088190556009553480156200005457600080fd5b5060405162004002380380620040028339810160408190526200007791620007e0565b6001600055808260ff8116620000a057604051632c4f29b160e21b815260040160405180910390fd5b600c80546001600160a01b03191633179055600160ff82161b608052620000c78162000117565b600b8190556000908152600a60205260409020805460ff1916600117905550601080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200082f9050565b600060ff82166200014957507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200017d57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001b157507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001e557507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200021857507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200024c57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200028057507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002b457507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002e857507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200031c57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200035057507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200038457507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003b857507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003ec57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200042057507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200045457507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200048857507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004bb57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004ef57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200052357507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200055757507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200058b57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005bf57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005f357507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200062757507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200065b57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200068f57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006c357507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006f757507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200072b57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200075f57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200079357507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007c757507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007f457600080fd5b825160ff811681146200080657600080fd5b60208401519092506001600160a01b03811681146200082457600080fd5b809150509250929050565b6080516137a9620008596000396000818161032401528181610f8301526117e001526137a96000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80638c07681211610145578063c259e2e6116100bd578063deeff7cd1161008c578063f2da1d4111610071578063f2da1d41146104ed578063f8f0538814610500578063ffa89b881461051357600080fd5b8063deeff7cd146104d2578063e500f504146104e557600080fd5b8063c259e2e614610495578063c2d41601146104a8578063c9230c5d146104c2578063dd757c34146104ca57600080fd5b8063a7542e3711610114578063b08892d0116100f9578063b08892d014610466578063b1c394221461046e578063b3b756311461048257600080fd5b8063a7542e3714610440578063a9b1d2961461045357600080fd5b80638c076812146103e45780639b0a6fea146103f75780639cc6b3541461040a578063a6232a931461041d57600080fd5b80633fae882e116101d85780634eb069f7116101a757806378d60cd71161018c57806378d60cd7146103ab5780637cbf0ff6146103be5780637fa4b09c146103d157600080fd5b80634eb069f71461037d578063570600161461038857600080fd5b80633fae882e146103005780633fe3347a14610313578063484eb652146103225780634973203d1461035257600080fd5b806314a7737d1161021457806314a7737d14610289578063176de7a81461029c57806331b2d332146102ba5780633bb8d1b4146102cd57600080fd5b806301dbf19f1461024657806302d498f11461025057806303db98741461026357806306394c9b14610276575b600080fd5b61024e610523565b005b61024e61025e366004612e21565b6105a7565b61024e610271366004612e21565b6105f6565b61024e610284366004612e21565b610642565b61024e610297366004612f96565b6106f3565b6102a4610c58565b6040516102b1919061342c565b60405180910390f35b61024e6102c8366004612e21565b610ce9565b6102f06102db366004613199565b60009081526006602052604090205460ff1690565b60405190151581526020016102b1565b61024e61030e36600461300a565b610d76565b60006040516102b19190613404565b7f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102b1565b600154610365906001600160a01b031681565b6040516001600160a01b0390911681526020016102b1565b60105460ff166102f0565b6102f0610396366004613199565b60009081526005602052604090205460ff1690565b61024e6103b9366004612eef565b611787565b61024e6103cc366004613199565b6118b6565b61024e6103df366004613251565b611934565b600254610365906001600160a01b031681565b61024e6104053660046131d5565b611a17565b61024e610418366004612e21565b611b0f565b6102f061042b366004613199565b6000908152600a602052604090205460ff1690565b61024e61044e366004612e21565b611b5b565b61024e610461366004612e21565b611be1565b600d54610344565b6002546102f090600160a01b900460ff1681565b61024e610490366004612e3e565b611c30565b61024e6104a3366004613227565b611c9c565b6104b0611d40565b60405160ff90911681526020016102b1565b6102a4611dc8565b61024e611e18565b61024e6104e03660046131f0565b611e90565b600954610344565b6103446104fb3660046131b2565b611fd0565b61024e61050e366004612e3e565b612059565b601054610100900460ff166102f0565b600c546001600160a01b0316331461054e576040516327e1f1e560e01b815260040160405180910390fd5b6002805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261059d92900460ff161515815260200190565b60405180910390a1565b600c546001600160a01b031633146105d2576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600c546001600160a01b03163314610621576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b600c546001600160a01b0316331461066d576040516327e1f1e560e01b815260040160405180910390fd5b600c546001600160a01b038281169116141561069c576040516336a1c33f60e01b815260040160405180910390fd5b600c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b601054610100900460ff1615801561071b5750336000908152600e602052604090205460ff16155b15610739576040516321ce01f360e01b815260040160405180910390fd5b6040808201516000908152600a602052205460ff161561076c5760405163e2e1210360e01b815260040160405180910390fd5b600854816020015163ffffffff1611806107a8575060208181015163ffffffff16600090815260049091526040902054600160a01b900460ff16155b156107e8576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60095460208201516108009063ffffffff16826136d6565b1561083b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016107df565b600061084b828460200151611fd0565b90506000836020015163ffffffff1667ffffffffffffffff8111156108725761087261373a565b60405190808252806020026020018201604052801561089b578160200160208202803683370190505b5090506000805b856020015163ffffffff168110156109995760006108c082876135e7565b60008181526007602090815260409182902082518084019093528054808452600190910154918301919091529192509061090d5760405163d3482f7b60e01b815260040160405180910390fd5b806000015185848151811061092457610924613724565b60200260200101818152505080602001518461094091906135e7565b60008381526007602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610991906136bb565b9150506108a2565b50846020015163ffffffff16600860008282546109b69190613653565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001836040516020016109f191906133b2565b6040516020818303038152906040528051906020012060001c610a1491906136d6565b905080866060015114610a6a576040516314e8955b60e21b815260206004820152600860248201527f6c6561664861736800000000000000000000000000000000000000000000000060448201526064016107df565b60408051600480825260a0820190925260009160208201608080368337019050509050600b5481600081518110610aa357610aa3613724565b602002602001018181525050866040015181600181518110610ac757610ac7613724565b6020026020010181815250508181600281518110610ae757610ae7613724565b6020026020010181815250508481600381518110610b0757610b07613724565b6020908102919091018101919091528781015163ffffffff1660009081526004918290526040808220548a51915163c941764760e01b815292936001600160a01b039091169263c941764792610b6192909187910161343f565b602060405180830381600087803b158015610b7b57600080fd5b505af1158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190612e5b565b905080610c03576040516314e8955b60e21b815260206004820152600560248201527f70726f6f6600000000000000000000000000000000000000000000000000000060448201526064016107df565b876020015163ffffffff1660096000828254610c1f91906135e7565b9091555050604080890151600b8190556000908152600a60205220805460ff19166001179055610c4e846120cd565b5050505050505050565b6060601060029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610ca857600080fd5b505afa158015610cbc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ce49190810190612e78565b905090565b600c546001600160a01b03163314610d14576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f017e1ccd0899030de557a9d08af3a798fc32e1f31fb548ebf6dfe71e082ec529906020015b60405180910390a150565b60026000541415610dc95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016107df565b60026000908155604083015151610ddf906120ed565b90506000610df18460e00151516120ed565b63ffffffff838116600090815260036020908152604080832093851683529290522054909150600160a01b900460ff16610e6e576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e6774680000000000000000000000000000000000000000000060448201526064016107df565b8163ffffffff1684606001515114610ec9576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e6774680000000000000000000000000000000060448201526064016107df565b8063ffffffff168461010001515114610f25576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e67746800000000000000000000000060448201526064016107df565b8063ffffffff168461016001515114610f81576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e677468000000000000000060448201526064016107df565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600854600954610fb991906135e7565b610fc391906135e7565b1115610fe257604051633b5ccb4360e21b815260040160405180910390fd5b610ff084610120015161216d565b1561100e57604051632e70c0b160e01b815260040160405180910390fd5b6000611019856122a3565b9050611025818561242f565b6001600160a01b031660001b856080015114611084576040516314e8955b60e21b815260206004820152600960248201527f7369676e6174757265000000000000000000000000000000000000000000000060448201526064016107df565b6000611091846002613627565b63ffffffff16905060006110a6856002613627565b6110b19060046135ff565b63ffffffff16905060006110c6856002613627565b6110d69063ffffffff16836135e7565b67ffffffffffffffff8111156110ee576110ee61373a565b604051908082528060200260200182016040528015611117578160200160208202803683370190505b506020808a01516000908152600a909152604090205490915060ff16611169576040516314e8955b60e21b81526004016107df906020808252600490820152631c9bdbdd60e21b604082015260600190565b87602001518160008151811061118157611181613724565b602090810291909101015260006111998760016135ff565b63ffffffff16905060005b8763ffffffff168110156112a55760008a6040015182815181106111ca576111ca613724565b6020908102919091018101516000818152600690925260409091205490915060ff1615611223576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846112308460016135e7565b8151811061124057611240613724565b6020026020010181815250508a60600151828151811061126257611262613724565b602002602001015184848461127791906135e7565b8151811061128757611287613724565b6020908102919091010152508061129d816136bb565b9150506111a4565b506080890151826112b78660016135e7565b815181106112c7576112c7613724565b602090810291909101015260a0890151826112e38660026135e7565b815181106112f3576112f3613724565b602090810291909101015260c08901518261130f8660036135e7565b8151811061131f5761131f613724565b6020908102919091010152600061133c63ffffffff8816856135e7565b905060005b8763ffffffff168110156114b657600560008c60e00151838151811061136957611369613724565b60209081029190910181015182528101919091526040016000205460ff16156113d55760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e740000000000000000000000000000000000000000000060448201526064016107df565b600d548b610100015182815181106113ef576113ef613724565b602002602001015110156114165760405163784f02bd60e11b815260040160405180910390fd5b8a60e00151818151811061142c5761142c613724565b602002602001015184868361144191906135e7565b8151811061145157611451613724565b6020026020010181815250508a6101000151818151811061147457611474613724565b602002602001015184838361148991906135e7565b8151811061149957611499613724565b6020908102919091010152806114ae816136bb565b915050611341565b5063ffffffff8089166000908152600360209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c94176479161150c91889060040161343f565b602060405180830381600087803b15801561152657600080fd5b505af115801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e9190612e5b565b9050806115ae576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f6600000000000000000000000000000000000060448201526064016107df565b60005b8963ffffffff16811015611669576001600660008e6040015184815181106115db576115db613724565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b60400151818151811061161e5761161e613724565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611661816136bb565b9150506115b1565b5060005b8863ffffffff1681101561173a576001600560008e60e00151848151811061169757611697613724565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506117288c60e0015182815181106116dd576116dd613724565b60200260200101518d610100015183815181106116fc576116fc613724565b60200260200101518e6101600151848151811061171b5761171b613724565b6020026020010151612453565b80611732816136bb565b91505061166d565b5060a08b015115611758576117588b61012001518c60a001516124f2565b60c08b015115611775576117758b61014001518c60c001516124f2565b50506001600055505050505050505050565b336000908152600f602052604090205460ff166117b75760405163f75e9fc760e01b815260040160405180910390fd5b600d54826060015110156117de5760405163784f02bd60e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060085460095461180f91906135e7565b1061182d57604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526005909152604090205460ff16156118635760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260059092526040909120805460ff19166001179055516060830151608084015161189a929190612453565b6040820151156118b2576118b28183604001516124f2565b5050565b600c546001600160a01b031633146118e1576040516327e1f1e560e01b815260040160405180910390fd5b8061192f576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c75704665650000000000000000000000000000000000000060448201526064016107df565b600d55565b600c546001600160a01b0316331461195f576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611983576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff83166119a757604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600382528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600c546001600160a01b03163314611a42576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611a66576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611a8057506104008163ffffffff16115b15611abb576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016107df565b611ac660018261366a565b811663ffffffff16600014611aee576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600460205260409020805460ff60a01b19169055565b600c546001600160a01b03163314611b3a576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600c546001600160a01b03163314611b86576040516327e1f1e560e01b815260040160405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f93c42ce86c3480aa42cb7e04c0270c66bcee4eaf35410ed3f00ea08bb3b32a8490602001610d6b565b600c546001600160a01b03163314611c0c576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b600c546001600160a01b03163314611c5b576040516327e1f1e560e01b815260040160405180910390fd5b6010805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610d6b565b600c546001600160a01b03163314611cc7576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611ceb576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611d0f57604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526003602090815260408083209390941682529190915220805460ff60a01b19169055565b6000601060029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015611d9057600080fd5b505afa158015611da4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce49190613298565b6060601060029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610ca857600080fd5b600c546001600160a01b03163314611e43576040516327e1f1e560e01b815260040160405180910390fd5b6002805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161059d91600160a01b90910460ff161515815260200190565b600c546001600160a01b03163314611ebb576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611edf576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611ef957506104008263ffffffff16115b15611f34576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016107df565b611f3f60018361366a565b821663ffffffff16600014611f67576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526004909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff1610611ff65760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106120195760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061203c5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061205257600183901c92505b5090919050565b600c546001600160a01b03163314612084576040516327e1f1e560e01b815260040160405180910390fd5b601080548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610d6b90831515815260200190565b6010546120ea906201000090046001600160a01b0316338361250b565b50565b600063ffffffff8211156121695760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016107df565b5090565b600254600090600160a01b900460ff1661218957506000919050565b60025460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156121ce57600080fd5b505afa1580156121e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122069190612e5b565b80612289575060015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561225157600080fd5b505afa158015612265573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122899190612e5b565b1561229657506001919050565b506000919050565b919050565b61016081015151600090600381106122ce57604051633fb1945d60e11b815260040160405180910390fd5b606081612322576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b60405160208183030381529060405290506123da565b81600114156123695783610120015184610140015185610160015160008151811061234f5761234f613724565b602002602001015160405160200161230c93929190613310565b83610120015184610140015185610160015160008151811061238d5761238d613724565b60200260200101518661016001516001815181106123ad576123ad613724565b60200260200101516040516020016123c89493929190613356565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b600080600061243e8585612577565b9150915061244b816125e7565b509392505050565b600060095460085461246591906135e7565b6040805180820182528681526020808201878152600085815260079092529281209151825591516001918201556008805493945090929091906124a99084906135e7565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516124e4939291906134db565b60405180910390a250505050565b6010546118b2906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526125729084906127a2565b505050565b6000808251604114156125ae5760208301516040840151606085015160001a6125a287828585612887565b945094505050506125e0565b8251604014156125d857602083015160408401516125cd868383612974565b9350935050506125e0565b506000905060025b9250929050565b60008160048111156125fb576125fb61370e565b14156126045750565b60018160048111156126185761261861370e565b14156126665760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107df565b600281600481111561267a5761267a61370e565b14156126c85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107df565b60038160048111156126dc576126dc61370e565b14156127355760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107df565b60048160048111156127495761274961370e565b14156120ea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016107df565b60006127f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129c69092919063ffffffff16565b80519091501561257257808060200190518101906128159190612e5b565b6125725760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016107df565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156128be575060009050600361296b565b8460ff16601b141580156128d657508460ff16601c14155b156128e7575060009050600461296b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561293b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129645760006001925092505061296b565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816129aa60ff86901c601b6135e7565b90506129b887828885612887565b935093505050935093915050565b60606129d584846000856129df565b90505b9392505050565b606082471015612a575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016107df565b6001600160a01b0385163b612aae5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107df565b600080866001600160a01b03168587604051612aca91906133e8565b60006040518083038185875af1925050503d8060008114612b07576040519150601f19603f3d011682016040523d82523d6000602084013e612b0c565b606091505b5091509150612b1c828286612b27565b979650505050505050565b60608315612b365750816129d8565b825115612b465782518084602001fd5b8160405162461bcd60e51b81526004016107df919061342c565b803561229e81613750565b600082601f830112612b7c57600080fd5b81356020612b91612b8c8361359b565b61356a565b80838252828201915082860187848660051b8901011115612bb157600080fd5b6000805b86811015612bf457823567ffffffffffffffff811115612bd3578283fd5b612be18b88838d0101612cc7565b8652509385019391850191600101612bb5565b509198975050505050505050565b600082601f830112612c1357600080fd5b612c1b6134fa565b808385604086011115612c2d57600080fd5b60005b6002811015612c4f578135845260209384019390910190600101612c30565b509095945050505050565b600082601f830112612c6b57600080fd5b81356020612c7b612b8c8361359b565b80838252828201915082860187848660051b8901011115612c9b57600080fd5b60005b85811015612cba57813584529284019290840190600101612c9e565b5090979650505050505050565b600082601f830112612cd857600080fd5b8135612ce6612b8c826135bf565b818152846020838601011115612cfb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612d2a57600080fd5b6040516040810181811067ffffffffffffffff82111715612d4d57612d4d61373a565b604052823581526020928301359281019290925250919050565b6000818303610100811215612d7b57600080fd5b6040516060810181811067ffffffffffffffff82111715612d9e57612d9e61373a565b604052915081612dae8585612d18565b81526080603f1983011215612dc257600080fd5b612dca6134fa565b9150612dd98560408601612c02565b8252612de88560808601612c02565b6020830152816020820152612e008560c08601612d18565b6040820152505092915050565b803563ffffffff8116811461229e57600080fd5b600060208284031215612e3357600080fd5b81356129d881613750565b600060208284031215612e5057600080fd5b81356129d881613765565b600060208284031215612e6d57600080fd5b81516129d881613765565b600060208284031215612e8a57600080fd5b815167ffffffffffffffff811115612ea157600080fd5b8201601f81018413612eb257600080fd5b8051612ec0612b8c826135bf565b818152856020838501011115612ed557600080fd5b612ee682602083016020860161368f565b95945050505050565b60008060408385031215612f0257600080fd5b823567ffffffffffffffff80821115612f1a57600080fd5b9084019060a08287031215612f2e57600080fd5b612f36613523565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612f6a57600080fd5b612f7688828601612cc7565b6080830152509350612f8d91505060208401612b60565b90509250929050565b60006101608284031215612fa957600080fd5b6040516080810181811067ffffffffffffffff82111715612fcc57612fcc61373a565b604052612fd98484612d67565b8152612fe86101008401612e0d565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561301d57600080fd5b823567ffffffffffffffff8082111561303557600080fd5b90840190610260828703121561304a57600080fd5b613052613546565b61305c8784612d67565b8152610100808401356020830152610120808501358481111561307e57600080fd5b61308a8a828801612c5a565b60408501525061014080860135858111156130a457600080fd5b6130b08b828901612c5a565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156130eb57600080fd5b6130f78c828a01612c5a565b60e0870152506101e08701358681111561311057600080fd5b61311c8c828a01612c5a565b858701525061312e6102008801612b60565b8386015261313f6102208801612b60565b8286015261024087013593508584111561315857600080fd5b6131648b858901612b6b565b90850152509195505050602085013591508082111561318257600080fd5b5061318f85828601612cc7565b9150509250929050565b6000602082840312156131ab57600080fd5b5035919050565b600080604083850312156131c557600080fd5b82359150612f8d60208401612e0d565b6000602082840312156131e757600080fd5b6129d882612e0d565b6000806040838503121561320357600080fd5b61320c83612e0d565b9150602083013561321c81613750565b809150509250929050565b6000806040838503121561323a57600080fd5b61324383612e0d565b9150612f8d60208401612e0d565b60008060006060848603121561326657600080fd5b61326f84612e0d565b925061327d60208501612e0d565b9150604084013561328d81613750565b809150509250925092565b6000602082840312156132aa57600080fd5b815160ff811681146129d857600080fd5b8060005b60028110156132de5781518452602093840193909101906001016132bf565b50505050565b600081518084526132fc81602086016020860161368f565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161334781602885016020870161368f565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250835161338d81602885016020880161368f565b8351908301906133a481602884016020880161368f565b016028019695505050505050565b815160009082906020808601845b838110156133dc578151855293820193908201906001016133c0565b50929695505050505050565b600082516133fa81846020870161368f565b9190910192915050565b602081016002831061342657634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006129d860208301846132e4565b600061012080830161345c84875180518252602090810151910152565b6020808701516134706040870182516132bb565b81015161348060808701826132bb565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156134ce578351855293820193928201926001016134b2565b5092979650505050505050565b838152826020820152606060408201526000612ee660608301846132e4565b6040805190810167ffffffffffffffff8111828210171561351d5761351d61373a565b60405290565b60405160a0810167ffffffffffffffff8111828210171561351d5761351d61373a565b604051610180810167ffffffffffffffff8111828210171561351d5761351d61373a565b604051601f8201601f1916810167ffffffffffffffff811182821017156135935761359361373a565b604052919050565b600067ffffffffffffffff8211156135b5576135b561373a565b5060051b60200190565b600067ffffffffffffffff8211156135d9576135d961373a565b50601f01601f191660200190565b600082198211156135fa576135fa6136f8565b500190565b600063ffffffff80831681851680830382111561361e5761361e6136f8565b01949350505050565b600063ffffffff8083168185168183048111821515161561364a5761364a6136f8565b02949350505050565b600082821015613665576136656136f8565b500390565b600063ffffffff83811690831681811015613687576136876136f8565b039392505050565b60005b838110156136aa578181015183820152602001613692565b838111156132de5750506000910152565b60006000198214156136cf576136cf6136f8565b5060010190565b6000826136f357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146120ea57600080fd5b80151581146120ea57600080fdfea26469706673582212204150b6a6d437abc81b710bfaeeaf44035a960e102a7c5357a0d9240bfb6b0fe564736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
