/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'RollupFeeToLow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Unauthorized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Unexpected',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b50604051620046de380380620046de83398101604081905262000064916200083e565b6001600055808260ff8116620000ce5760405163c83ad1cd60e01b8152602060048201526024808201527f5f747265654865696768742073686f756c6420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000f58162000145565b600a8190556000908152600960205260409020805460ff1916600117905550600f80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200088d9050565b600060ff82166200017757507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff1660011415620001ab57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001df57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff16600314156200021357507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200024657507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200027a57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff1660061415620002ae57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002e257507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff16600814156200031657507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200034a57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200037e57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b1415620003b257507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003e657507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d14156200041a57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200044e57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200048257507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff1660101415620004b657507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004e957507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff16601214156200051d57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200055157507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200058557507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff1660151415620005b957507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ed57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff16601714156200062157507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200065557507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200068957507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a1415620006bd57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006f157507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c14156200072557507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200075957507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200078d57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f1415620007c157507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007f557507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b60405162461bcd60e51b815260206004820152601960248201527f7472656520686569676874206f7574206f6620626f756e6473000000000000006044820152606401620000c5565b600080604083850312156200085257600080fd5b825160ff811681146200086457600080fd5b60208401519092506001600160a01b03811681146200088257600080fd5b809150509250929050565b608051613e27620008b7600039600081816102de015281816110930152611cf70152613e276000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063830d9ebe1161010f578063c2d41601116100a2578063ec571c6a11610071578063ec571c6a1461044e578063f2da1d4114610479578063f8f053881461048c578063ffa89b881461049f57600080fd5b8063c2d4160114610411578063c9230c5d1461042b578063deeff7cd14610433578063e500f5041461044657600080fd5b8063a9b1d296116100de578063a9b1d296146103d0578063b08892d0146103e3578063b3b75631146103eb578063c259e2e6146103fe57600080fd5b8063830d9ebe146103735780639b0a6fea146103875780639cc6b3541461039a578063a6232a93146103ad57600080fd5b80633fae882e116101875780635706001611610156578063570600161461031757806378d60cd71461033a5780637cbf0ff61461034d5780637fa4b09c1461036057600080fd5b80633fae882e146102ba5780633fe3347a146102cd578063484eb652146102dc5780634eb069f71461030c57600080fd5b806314a7737d116101c357806314a7737d14610243578063176de7a81461025657806330f49cac146102745780633bb8d1b41461028757600080fd5b806302d498f1146101f557806303db98741461020a57806306394c9b1461021d57806306b2ad5914610230575b600080fd5b610208610203366004613521565b6104af565b005b610208610218366004613521565b610524565b61020861022b366004613521565b610591565b61020861023e36600461353e565b61060c565b610208610251366004613696565b6106b0565b61025e610d4e565b60405161026b9190613a8a565b60405180910390f35b610208610282366004613521565b610ddf565b6102aa610295366004613899565b60009081526005602052604090205460ff1690565b604051901515815260200161026b565b6102086102c836600461370a565b610e86565b600060405161026b9190613a62565b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161026b565b600f5460ff166102aa565b6102aa610325366004613899565b60009081526004602052604090205460ff1690565b6102086103483660046135ef565b611c3e565b61020861035b366004613899565b611e26565b61020861036e366004613951565b611ec8565b6001546102aa90600160a01b900460ff1681565b6102086103953660046138d5565b61203b565b6102086103a8366004613521565b6121c9565b6102aa6103bb366004613899565b60009081526009602052604090205460ff1690565b6102086103de366004613521565b612236565b600c546102fe565b6102086103f936600461353e565b6122a6565b61020861040c366004613927565b612333565b610419612467565b60405160ff909116815260200161026b565b61025e6124ef565b6102086104413660046138f0565b61253f565b6008546102fe565b600154610461906001600160a01b031681565b6040516001600160a01b03909116815260200161026b565b6102fe6104873660046138b2565b612715565b61020861049a36600461353e565b61277a565b600f54610100900460ff166102aa565b600b546001600160a01b031633146105005760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146105705760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146105dd5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146106585760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a443906106a590831515815260200190565b60405180910390a150565b600f54610100900460ff161580156106d85750336000908152600d602052604090205460ff16155b156107265760405163c83ad1cd60e01b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e000000000000000060448201526064016104f7565b600080516020613dd28339815191528160400151106107ae5760405163c83ad1cd60e01b815260206004820152602660248201527f6e6577526f6f742073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016104f7565b60408082015160009081526009602052205460ff16156108115760405163bee3611160e01b815260206004820152601560248201527f6e6577526f6f74206973206475706c696361746564000000000000000000000060448201526064016104f7565b602081015163ffffffff1615806108335750600754816020015163ffffffff16115b80610860575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b156108a3576040516314e8955b60e21b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f7565b60085460208201516108bb9063ffffffff1682613d34565b15610915576040516314e8955b60e21b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b60648201526084016104f7565b6000610925828460200151612715565b90506000836020015163ffffffff1667ffffffffffffffff81111561094c5761094c613d98565b604051908082528060200260200182016040528015610975578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610aa357600061099a8287613c45565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a175760405163c83ad1cd60e01b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016104f7565b8060000151858481518110610a2e57610a2e613d82565b602002602001018181525050806020015184610a4a9190613c45565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610a9b90613d19565b91505061097c565b50846020015163ffffffff1660076000828254610ac09190613cb1565b925050819055506000600080516020613dd283398151915283604051602001610ae99190613a10565b6040516020818303038152906040528051906020012060001c610b0c9190613d34565b905080866060015114610b62576040516314e8955b60e21b815260206004820152601060248201527f696e76616c6964206c656166486173680000000000000000000000000000000060448201526064016104f7565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610b9b57610b9b613d82565b602002602001018181525050866040015181600181518110610bbf57610bbf613d82565b6020026020010181815250508181600281518110610bdf57610bdf613d82565b6020026020010181815250508481600381518110610bff57610bff613d82565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c5791908690600401613a9d565b602060405180830381600087803b158015610c7157600080fd5b505af1158015610c85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca9919061355b565b905080610cf9576040516314e8955b60e21b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016104f7565b876020015163ffffffff1660086000828254610d159190613c45565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d448461280f565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dda9190810190613578565b905090565b600b546001600160a01b03163314610e2b5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016106a5565b60026000541415610ed95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f7565b60026000908155604083015151610eef9061282f565b90506000610f018460e001515161282f565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610f7e576040516314e8955b60e21b815260206004820152601260248201527f696e76616c696420692f6f206c656e677468000000000000000000000000000060448201526064016104f7565b8163ffffffff1684606001515114610fd9576040516314e8955b60e21b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e677468000000000000000060448201526064016104f7565b8063ffffffff168461010001515114611035576040516314e8955b60e21b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e6774680000000060448201526064016104f7565b8063ffffffff168461016001515114611091576040516314e8955b60e21b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e67746860448201526064016104f7565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546110c99190613c45565b6110d39190613c45565b11156111115760405163c83ad1cd60e01b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016104f7565b61111f8461012001516128af565b1561116d5760405163c83ad1cd60e01b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016104f7565b60006111788561294f565b905060006111868286612b2a565b60808701519091506001600160a01b038216146111e6576040516314e8955b60e21b815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016104f7565b60006111f3856002613c85565b63ffffffff1690506000611208866002613c85565b611213906004613c5d565b63ffffffff1690506000611228866002613c85565b6112389063ffffffff1683613c45565b67ffffffffffffffff81111561125057611250613d98565b604051908082528060200260200182016040528015611279578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff166112e2576040516314e8955b60e21b815260206004820152600c60248201527f696e76616c696420726f6f74000000000000000000000000000000000000000060448201526064016104f7565b8860200151816000815181106112fa576112fa613d82565b60209081029190910101526000611312886001613c5d565b63ffffffff16905060005b8863ffffffff1681101561150e5760008b60400151828151811061134357611343613d82565b6020908102919091018101516000818152600590925260409091205490915060ff16156113b35760405163c83ad1cd60e01b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e7400000000000000000060448201526064016104f7565b600080516020613dd28339815191528110611411576040516314e8955b60e21b815260206004820152601060248201527f746865206e6f746520696e76616c69640000000000000000000000000000000060448201526064016104f7565b600080516020613dd28339815191528c60600151838151811061143657611436613d82565b60200260200101511061148c576040516314e8955b60e21b815260206004820152601060248201527f736967206861736820696e76616c69640000000000000000000000000000000060448201526064016104f7565b8084611499846001613c45565b815181106114a9576114a9613d82565b6020026020010181815250508b6060015182815181106114cb576114cb613d82565b60200260200101518484846114e09190613c45565b815181106114f0576114f0613d82565b6020908102919091010152508061150681613d19565b91505061131d565b5060808a0151600080516020613dd283398151915211611571576040516314e8955b60e21b815260206004820152600e60248201527f696e76616c69642073696720706b00000000000000000000000000000000000060448201526064016104f7565b600080516020613dd28339815191528a60a00151106115d3576040516314e8955b60e21b815260206004820152600e60248201527f696e76616c696420616d6f756e7400000000000000000000000000000000000060448201526064016104f7565b600080516020613dd28339815191528a60c0015110611635576040516314e8955b60e21b815260206004820152601a60248201527f696e76616c69642072656c617965722066656520616d6f756e7400000000000060448201526064016104f7565b60808a015182611646866001613c45565b8151811061165657611656613d82565b602090810291909101015260a08a015182611672866002613c45565b8151811061168257611682613d82565b602090810291909101015260c08a01518261169e866003613c45565b815181106116ae576116ae613d82565b602090810291909101015260006116cb63ffffffff891685613c45565b905060005b8863ffffffff1681101561196c57600460008d60e0015183815181106116f8576116f8613d82565b60209081029190910181015182528101919091526040016000205460ff16156117645760405163bee3611160e01b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e7400000000000000000000000060448201526064016104f7565b600080516020613dd28339815191528c60e00151828151811061178957611789613d82565b6020026020010151106117df576040516314e8955b60e21b815260206004820152601660248201527f696e76616c6964206f757420636f6d6d69746d656e740000000000000000000060448201526064016104f7565b600c548c610100015182815181106117f9576117f9613d82565b6020026020010151101561185057604051631f13bc5760e21b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f77000000000000000000000000000060448201526064016104f7565b600080516020613dd28339815191528c6101000151828151811061187657611876613d82565b6020026020010151106118cc576040516314e8955b60e21b815260206004820152601660248201527f696e76616c6964206f757420726f6c6c7570206665650000000000000000000060448201526064016104f7565b8b60e0015181815181106118e2576118e2613d82565b60200260200101518486836118f79190613c45565b8151811061190757611907613d82565b6020026020010181815250508b6101000151818151811061192a5761192a613d82565b602002602001015184838361193f9190613c45565b8151811061194f5761194f613d82565b60209081029190910101528061196481613d19565b9150506116d0565b5063ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c9417647916119c2918890600401613a9d565b602060405180830381600087803b1580156119dc57600080fd5b505af11580156119f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a14919061355b565b905080611a64576040516314e8955b60e21b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f660000000000000000000060448201526064016104f7565b60005b8a63ffffffff16811015611b1f576001600560008f604001518481518110611a9157611a91613d82565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c604001518181518110611ad457611ad4613d82565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611b1781613d19565b915050611a67565b5060005b8963ffffffff16811015611bf0576001600460008f60e001518481518110611b4d57611b4d613d82565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611bde8d60e001518281518110611b9357611b93613d82565b60200260200101518e61010001518381518110611bb257611bb2613d82565b60200260200101518f61016001518481518110611bd157611bd1613d82565b6020026020010151612b4e565b80611be881613d19565b915050611b23565b5060a08c015115611c0e57611c0e8c61012001518d60a00151612bed565b60c08c015115611c2b57611c2b8c61014001518d60c00151612bed565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff16611c9e5760405163c83ad1cd60e01b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e000000000000000060448201526064016104f7565b600c5482606001511015611cf557604051631f13bc5760e21b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016104f7565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611d269190613c45565b10611d635760405163c83ad1cd60e01b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016104f7565b60208083015160009081526004909152604090205460ff1615611dd35760405163c83ad1cd60e01b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016104f7565b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611e0a929190612b4e565b604082015115611e2257611e22818360400151612bed565b5050565b600b546001600160a01b03163314611e725760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b60008111611ec3576040516314e8955b60e21b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c7570466565000000000000000000000060448201526064016104f7565b600c55565b600b546001600160a01b03163314611f145760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600f5460ff1615611f745760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f7565b60008363ffffffff1611611fcb5760405163c83ad1cd60e01b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016104f7565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b031633146120875760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600f5460ff16156120e75760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f7565b63ffffffff8116158061210257506101008163ffffffff1610155b15612145576040516314e8955b60e21b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f7565b612150600182613cc8565b811663ffffffff166000146121a85760405163c83ad1cd60e01b815260206004820152601a60248201527f726f6c6c75702073697a65206e6f7420706f776572206f66203200000000000060448201526064016104f7565b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b031633146122155760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b031633146122825760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b031633146122f25760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e4906020016106a5565b600b546001600160a01b0316331461237f5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600f5460ff16156123df5760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f7565b60008263ffffffff16116124365760405163c83ad1cd60e01b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016104f7565b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156124b757600080fd5b505afa1580156124cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dda9190613998565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610d9e57600080fd5b600b546001600160a01b0316331461258b5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600f5460ff16156125eb5760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f7565b63ffffffff8216158061260657506101008263ffffffff1610155b15612649576040516314e8955b60e21b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f7565b612654600183613cc8565b821663ffffffff166000146126ac5760405163c83ad1cd60e01b815260206004820152601a60248201527f726f6c6c75702073697a65206e6f7420706f776572206f66203200000000000060448201526064016104f7565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600060108263ffffffff161061273a5760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061275d5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061277357600183901c92505b5090919050565b600b546001600160a01b031633146127c65760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f7565b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b479906106a590831515815260200190565b600f5461282c906201000090046001600160a01b03163383612c06565b50565b600063ffffffff8211156128ab5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016104f7565b5090565b600154600090600160a01b900460ff16156128cc57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561291157600080fd5b505afa158015612925573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612949919061355b565b92915050565b61016081015151600090600381106129aa5760405163c83ad1cd60e01b815260206004820152601860248201527f6f7574707574206e6f746573206c657373207468616e2033000000000000000060448201526064016104f7565b6101208301516101408401516060806000856129c857506028612a46565b85600114156129fc5760f990508761016001516000815181106129ed576129ed613d82565b60200260200101519250612a46565b6101ca9050876101600151600081518110612a1957612a19613d82565b60200260200101519250876101600151600181518110612a3b57612a3b613d82565b602002602001015191505b60006040518660601b60008201528560601b60148201526000881315612a8f576028810160d18101602087015b81831015612a8b578051835260209283019201612a73565b5050505b6001881315612ac15760f9810160d18101602086015b81831015612abd578051835260209283019201612aa5565b5050505b8290209050612b1d816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b6000806000612b398585612c72565b91509150612b4681612ce2565b509392505050565b6000600854600754612b609190613c45565b604080518082018252868152602080820187815260008581526006909252928120915182559151600191820155600780549394509092909190612ba4908490613c45565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612bdf93929190613b39565b60405180910390a250505050565b600f54611e22906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612c6d908490612e9d565b505050565b600080825160411415612ca95760208301516040840151606085015160001a612c9d87828585612f82565b94509450505050612cdb565b825160401415612cd35760208301516040840151612cc886838361306f565b935093505050612cdb565b506000905060025b9250929050565b6000816004811115612cf657612cf6613d6c565b1415612cff5750565b6001816004811115612d1357612d13613d6c565b1415612d615760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104f7565b6002816004811115612d7557612d75613d6c565b1415612dc35760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104f7565b6003816004811115612dd757612dd7613d6c565b1415612e305760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104f7565b6004816004811115612e4457612e44613d6c565b141561282c5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104f7565b6000612ef2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166130c19092919063ffffffff16565b805190915015612c6d5780806020019051810190612f10919061355b565b612c6d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104f7565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612fb95750600090506003613066565b8460ff16601b14158015612fd157508460ff16601c14155b15612fe25750600090506004613066565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613036573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661305f57600060019250925050613066565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816130a560ff86901c601b613c45565b90506130b387828885612f82565b935093505050935093915050565b60606130d084846000856130da565b90505b9392505050565b6060824710156131525760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104f7565b6001600160a01b0385163b6131a95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f7565b600080866001600160a01b031685876040516131c59190613a46565b60006040518083038185875af1925050503d8060008114613202576040519150601f19603f3d011682016040523d82523d6000602084013e613207565b606091505b5091509150613217828286613222565b979650505050505050565b606083156132315750816130d3565b8251156132415782518084602001fd5b8160405162461bcd60e51b81526004016104f79190613a8a565b803561326681613dae565b919050565b600082601f83011261327c57600080fd5b8135602061329161328c83613bf9565b613bc8565b80838252828201915082860187848660051b89010111156132b157600080fd5b6000805b868110156132f457823567ffffffffffffffff8111156132d3578283fd5b6132e18b88838d01016133c7565b86525093850193918501916001016132b5565b509198975050505050505050565b600082601f83011261331357600080fd5b61331b613b58565b80838560408601111561332d57600080fd5b60005b600281101561334f578135845260209384019390910190600101613330565b509095945050505050565b600082601f83011261336b57600080fd5b8135602061337b61328c83613bf9565b80838252828201915082860187848660051b890101111561339b57600080fd5b60005b858110156133ba5781358452928401929084019060010161339e565b5090979650505050505050565b600082601f8301126133d857600080fd5b81356133e661328c82613c1d565b8181528460208386010111156133fb57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561342a57600080fd5b6040516040810181811067ffffffffffffffff8211171561344d5761344d613d98565b604052823581526020928301359281019290925250919050565b600081830361010081121561347b57600080fd5b6040516060810181811067ffffffffffffffff8211171561349e5761349e613d98565b6040529150816134ae8585613418565b81526080603f19830112156134c257600080fd5b6134ca613b58565b91506134d98560408601613302565b82526134e88560808601613302565b60208301528160208201526135008560c08601613418565b6040820152505092915050565b803563ffffffff8116811461326657600080fd5b60006020828403121561353357600080fd5b81356130d381613dae565b60006020828403121561355057600080fd5b81356130d381613dc3565b60006020828403121561356d57600080fd5b81516130d381613dc3565b60006020828403121561358a57600080fd5b815167ffffffffffffffff8111156135a157600080fd5b8201601f810184136135b257600080fd5b80516135c061328c82613c1d565b8181528560208385010111156135d557600080fd5b6135e6826020830160208601613ced565b95945050505050565b6000806040838503121561360257600080fd5b823567ffffffffffffffff8082111561361a57600080fd5b9084019060a0828703121561362e57600080fd5b613636613b81565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561366a57600080fd5b613676888286016133c7565b608083015250935061368d9150506020840161325b565b90509250929050565b600061016082840312156136a957600080fd5b6040516080810181811067ffffffffffffffff821117156136cc576136cc613d98565b6040526136d98484613467565b81526136e8610100840161350d565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561371d57600080fd5b823567ffffffffffffffff8082111561373557600080fd5b90840190610260828703121561374a57600080fd5b613752613ba4565b61375c8784613467565b8152610100808401356020830152610120808501358481111561377e57600080fd5b61378a8a82880161335a565b60408501525061014080860135858111156137a457600080fd5b6137b08b82890161335a565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c0870135868111156137eb57600080fd5b6137f78c828a0161335a565b60e0870152506101e08701358681111561381057600080fd5b61381c8c828a0161335a565b858701525061382e610200880161325b565b8386015261383f610220880161325b565b8286015261024087013593508584111561385857600080fd5b6138648b85890161326b565b90850152509195505050602085013591508082111561388257600080fd5b5061388f858286016133c7565b9150509250929050565b6000602082840312156138ab57600080fd5b5035919050565b600080604083850312156138c557600080fd5b8235915061368d6020840161350d565b6000602082840312156138e757600080fd5b6130d38261350d565b6000806040838503121561390357600080fd5b61390c8361350d565b9150602083013561391c81613dae565b809150509250929050565b6000806040838503121561393a57600080fd5b6139438361350d565b915061368d6020840161350d565b60008060006060848603121561396657600080fd5b61396f8461350d565b925061397d6020850161350d565b9150604084013561398d81613dae565b809150509250925092565b6000602082840312156139aa57600080fd5b815160ff811681146130d357600080fd5b8060005b60028110156139de5781518452602093840193909101906001016139bf565b50505050565b600081518084526139fc816020860160208601613ced565b601f01601f19169290920160200192915050565b815160009082906020808601845b83811015613a3a57815185529382019390820190600101613a1e565b50929695505050505050565b60008251613a58818460208701613ced565b9190910192915050565b6020810160028310613a8457634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006130d360208301846139e4565b6000610120808301613aba84875180518252602090810151910152565b602080870151613ace6040870182516139bb565b810151613ade60808701826139bb565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613b2c57835185529382019392820192600101613b10565b5092979650505050505050565b8381528260208201526060604082015260006135e660608301846139e4565b6040805190810167ffffffffffffffff81118282101715613b7b57613b7b613d98565b60405290565b60405160a0810167ffffffffffffffff81118282101715613b7b57613b7b613d98565b604051610180810167ffffffffffffffff81118282101715613b7b57613b7b613d98565b604051601f8201601f1916810167ffffffffffffffff81118282101715613bf157613bf1613d98565b604052919050565b600067ffffffffffffffff821115613c1357613c13613d98565b5060051b60200190565b600067ffffffffffffffff821115613c3757613c37613d98565b50601f01601f191660200190565b60008219821115613c5857613c58613d56565b500190565b600063ffffffff808316818516808303821115613c7c57613c7c613d56565b01949350505050565b600063ffffffff80831681851681830481118215151615613ca857613ca8613d56565b02949350505050565b600082821015613cc357613cc3613d56565b500390565b600063ffffffff83811690831681811015613ce557613ce5613d56565b039392505050565b60005b83811015613d08578181015183820152602001613cf0565b838111156139de5750506000910152565b6000600019821415613d2d57613d2d613d56565b5060010190565b600082613d5157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461282c57600080fd5b801515811461282c57600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a26469706673582212202f4b645ca0cc28e1dc32cde2c603a157a37a99d005aec5f3d67c444c5094702064736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
