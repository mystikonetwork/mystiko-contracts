/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
    ],
    name: 'AuditorKeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_key',
        type: 'bytes32',
      },
    ],
    name: 'updateAuditorKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162004021380380620040218339810160408190526200006591620007c7565b6001600055808260ff81166200008e57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b581620000fe565b600a8190556000908152600960205260409020805460ff1916600117905550601580546001600160a01b039092166001600160a01b031990921691909117905550620008169050565b600060ff82166200013057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016457507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019857507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001cc57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001ff57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026757507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200029b57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002cf57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030357507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033757507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200036b57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200039f57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040757507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200043b57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200046f57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a257507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004d657507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200050a57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200053e57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005a657507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005da57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200060e57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064257507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067657507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006aa57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006de57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074657507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200077a57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007ae57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007db57600080fd5b825160ff81168114620007ed57600080fd5b60208401519092506001600160a01b03811681146200080b57600080fd5b809150509250929050565b6080516137e1620008406000396000818161036401528181610f99015261193001526137e16000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c80637fa4b09c11610145578063c2d41601116100bd578063e500f5041161008c578063f2da1d4111610071578063f2da1d4114610510578063f8f0538814610523578063ffa89b881461053657600080fd5b8063e500f504146104dd578063ec571c6a146104e557600080fd5b8063c2d41601146104a0578063c9230c5d146104ba578063dd757c34146104c2578063deeff7cd146104ca57600080fd5b8063a9b1d29611610114578063b1c39422116100f9578063b1c3942214610466578063b3b756311461047a578063c259e2e61461048d57600080fd5b8063a9b1d2961461044b578063b08892d01461045e57600080fd5b80637fa4b09c146103ef5780639b0a6fea146104025780639cc6b35414610415578063a6232a931461042857600080fd5b80633fae882e116101d85780634eb069f7116101a75780636c75d6641161018c5780636c75d664146103b657806378d60cd7146103c95780637cbf0ff6146103dc57600080fd5b80634eb069f714610388578063570600161461039357600080fd5b80633fae882e1461032d5780633fe3347a1461034057806342c00ac31461034f578063484eb6521461036257600080fd5b8063115f574c1161022f578063176de7a811610214578063176de7a8146102d257806330f49cac146102e75780633bb8d1b4146102fa57600080fd5b8063115f574c146102a457806314a7737d146102bf57600080fd5b806301dbf19f1461026157806302d498f11461026b57806303db98741461027e57806306394c9b14610291575b600080fd5b610269610546565b005b610269610279366004612e37565b6105ca565b61026961028c366004612e37565b610619565b61026961029f366004612e37565b610665565b6102ac600581565b6040519081526020015b60405180910390f35b6102696102cd366004612fac565b610716565b6102da610c79565b6040516102b69190613464565b6102696102f5366004612e37565b610cff565b61031d6103083660046131af565b60009081526005602052604090205460ff1690565b60405190151581526020016102b6565b61026961033b366004613020565b610d8c565b60006040516102b6919061343c565b6102ac61035d3660046131af565b6117c4565b7f00000000000000000000000000000000000000000000000000000000000000006102ac565b600f5460ff1661031d565b61031d6103a13660046131af565b60009081526004602052604090205460ff1690565b6102696103c43660046131c8565b6117fc565b6102696103d7366004612f05565b6118d7565b6102696103ea3660046131af565b611a06565b6102696103fd366004613289565b611a84565b61026961041036600461320d565b611b67565b610269610423366004612e37565b611c5f565b61031d6104363660046131af565b60009081526009602052604090205460ff1690565b610269610459366004612e37565b611cab565b600c546102ac565b60015461031d90600160a01b900460ff1681565b610269610488366004612e54565b611cfa565b61026961049b36600461325f565b611d66565b6104a8611e0a565b60405160ff90911681526020016102b6565b6102da611e87565b610269611ecc565b6102696104d8366004613228565b611f44565b6008546102ac565b6001546104f8906001600160a01b031681565b6040516001600160a01b0390911681526020016102b6565b6102ac61051e3660046131ea565b612084565b610269610531366004612e54565b61210d565b600f54610100900460ff1661031d565b600b546001600160a01b03163314610571576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926105c092900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b031633146105f5576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610644576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610690576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b03828116911614156106bf576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600f54610100900460ff1615801561073e5750336000908152600d602052604090205460ff16155b1561075c576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff161561078f5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806107cb575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561080b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516108239063ffffffff168261370e565b1561085e576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610802565b600061086e828460200151612084565b90506000836020015163ffffffff1667ffffffffffffffff81111561089557610895613772565b6040519080825280602002602001820160405280156108be578160200160208202803683370190505b5090506000805b856020015163ffffffff168110156109bc5760006108e3828761361f565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906109305760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106109475761094761375c565b602002602001018181525050806020015184610963919061361f565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a2505080806109b4906136f3565b9150506108c5565b50846020015163ffffffff16600760008282546109d9919061368b565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610a1491906133ea565b6040516020818303038152906040528051906020012060001c610a37919061370e565b905080866060015114610a8d576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610802565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610ac657610ac661375c565b602002602001018181525050866040015181600181518110610aea57610aea61375c565b6020026020010181815250508181600281518110610b0a57610b0a61375c565b6020026020010181815250508481600381518110610b2a57610b2a61375c565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610b8291908690600401613477565b602060405180830381600087803b158015610b9c57600080fd5b505af1158015610bb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd49190612e71565b905080610c24576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610802565b876020015163ffffffff1660086000828254610c40919061361f565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610c6f84612181565b5050505050505050565b601554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610cbe57600080fd5b505afa158015610cd2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610cfa9190810190612e8e565b905090565b600b546001600160a01b03163314610d2a576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610ddf5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610802565b60026000908155604083015151610df59061219b565b90506000610e078460e001515161219b565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610e84576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610802565b8163ffffffff1684606001515114610edf576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610802565b8063ffffffff168461010001515114610f3b576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610802565b8063ffffffff168461016001515114610f97576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610802565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610fcf919061361f565b610fd9919061361f565b1115610ff857604051633b5ccb4360e21b815260040160405180910390fd5b6110013261221b565b1561101f57604051632e70c0b160e01b815260040160405180910390fd5b61102d84610120015161221b565b1561104b57604051632e70c0b160e01b815260040160405180910390fd5b6000611056856122ba565b90506110628185612446565b6001600160a01b031660001b8560800151146110c1576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610802565b60006110ce84600261365f565b63ffffffff16905060006110e385600261365f565b6110ee906004613637565b63ffffffff169050600061110385600261365f565b6111139063ffffffff168361361f565b67ffffffffffffffff81111561112b5761112b613772565b604051908082528060200260200182016040528015611154578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff166111a6576040516314e8955b60e21b8152600401610802906020808252600490820152631c9bdbdd60e21b604082015260600190565b8760200151816000815181106111be576111be61375c565b602090810291909101015260006111d6876001613637565b63ffffffff16905060005b8763ffffffff168110156112e25760008a6040015182815181106112075761120761375c565b6020908102919091018101516000818152600590925260409091205490915060ff1615611260576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461126d84600161361f565b8151811061127d5761127d61375c565b6020026020010181815250508a60600151828151811061129f5761129f61375c565b60200260200101518484846112b4919061361f565b815181106112c4576112c461375c565b602090810291909101015250806112da816136f3565b9150506111e1565b506080890151826112f486600161361f565b815181106113045761130461375c565b602090810291909101015260a08901518261132086600261361f565b815181106113305761133061375c565b602090810291909101015260c08901518261134c86600361361f565b8151811061135c5761135c61375c565b6020908102919091010152600061137963ffffffff88168561361f565b905060005b8763ffffffff168110156114f357600460008c60e0015183815181106113a6576113a661375c565b60209081029190910181015182528101919091526040016000205460ff16156114125760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610802565b600c548b6101000151828151811061142c5761142c61375c565b602002602001015110156114535760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106114695761146961375c565b602002602001015184868361147e919061361f565b8151811061148e5761148e61375c565b6020026020010181815250508a610100015181815181106114b1576114b161375c565b60200260200101518483836114c6919061361f565b815181106114d6576114d661375c565b6020908102919091010152806114eb816136f3565b91505061137e565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c941764791611549918890600401613477565b602060405180830381600087803b15801561156357600080fd5b505af1158015611577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159b9190612e71565b9050806115eb576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610802565b60005b8963ffffffff168110156116a6576001600560008e6040015184815181106116185761161861375c565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b60400151818151811061165b5761165b61375c565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061169e816136f3565b9150506115ee565b5060005b8863ffffffff16811015611777576001600460008e60e0015184815181106116d4576116d461375c565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506117658c60e00151828151811061171a5761171a61375c565b60200260200101518d610100015183815181106117395761173961375c565b60200260200101518e610160015184815181106117585761175861375c565b602002602001015161246a565b8061176f816136f3565b9150506116aa565b5060a08b015115611795576117958b61012001518c60a00151612509565b60c08b0151156117b2576117b28b61014001518c60c00151612509565b50506001600055505050505050505050565b600060056117d383600161361f565b11156117e157506000919050565b601082600581106117f4576117f461375c565b015492915050565b600b546001600160a01b03163314611827576040516327e1f1e560e01b815260040160405180910390fd5b600561183483600161361f565b11156118535760405163318c434560e21b815260040160405180910390fd5b80601083600581106118675761186761375c565b015414156118885760405163e984c61760e01b815260040160405180910390fd5b806010836005811061189c5761189c61375c565b015560405181815282907f8d463a7e10f676dd3b90506a17258d1f1a9f4f66adbdb6a22b2f8bbd3b484e239060200160405180910390a25050565b336000908152600e602052604090205460ff166119075760405163f75e9fc760e01b815260040160405180910390fd5b600c548260600151101561192e5760405163784f02bd60e11b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060075460085461195f919061361f565b1061197d57604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff16156119b35760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff1916600117905551606083015160808401516119ea92919061246a565b604082015115611a0257611a02818360400151612509565b5050565b600b546001600160a01b03163314611a31576040516327e1f1e560e01b815260040160405180910390fd5b80611a7f576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610802565b600c55565b600b546001600160a01b03163314611aaf576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611ad3576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611af757604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611b92576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611bb6576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611bd057506104008163ffffffff16115b15611c0b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610802565b611c166001826136a2565b811663ffffffff16600014611c3e576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611c8a576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611cd6576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611d25576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610d81565b600b546001600160a01b03163314611d91576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611db5576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611dd957604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6015546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015611e4f57600080fd5b505afa158015611e63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa91906132d0565b601554604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610cbe57600080fd5b600b546001600160a01b03163314611ef7576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916105c091600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314611f6f576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611f93576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611fad57506104008263ffffffff16115b15611fe8576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610802565b611ff36001836136a2565b821663ffffffff1660001461201b576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106120aa5760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106120cd5760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106120f05760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061210657600183901c92505b5090919050565b600b546001600160a01b03163314612138576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610d8190831515815260200190565b601554612198906001600160a01b0316338361251c565b50565b600063ffffffff8211156122175760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610802565b5090565b600154600090600160a01b900460ff1661223757506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561227c57600080fd5b505afa158015612290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122b49190612e71565b92915050565b61016081015151600090600381106122e557604051633fb1945d60e11b815260040160405180910390fd5b606081612339576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b60405160208183030381529060405290506123f1565b8160011415612380578361012001518461014001518561016001516000815181106123665761236661375c565b602002602001015160405160200161232393929190613348565b8361012001518461014001518561016001516000815181106123a4576123a461375c565b60200260200101518661016001516001815181106123c4576123c461375c565b60200260200101516040516020016123df949392919061338e565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006124558585612588565b91509150612462816125f8565b509392505050565b600060085460075461247c919061361f565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906124c090849061361f565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516124fb93929190613513565b60405180910390a250505050565b601554611a02906001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526125839084906127b3565b505050565b6000808251604114156125bf5760208301516040840151606085015160001a6125b387828585612898565b945094505050506125f1565b8251604014156125e957602083015160408401516125de868383612985565b9350935050506125f1565b506000905060025b9250929050565b600081600481111561260c5761260c613746565b14156126155750565b600181600481111561262957612629613746565b14156126775760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610802565b600281600481111561268b5761268b613746565b14156126d95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610802565b60038160048111156126ed576126ed613746565b14156127465760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610802565b600481600481111561275a5761275a613746565b14156121985760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610802565b6000612808826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166129d79092919063ffffffff16565b80519091501561258357808060200190518101906128269190612e71565b6125835760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610802565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156128cf575060009050600361297c565b8460ff16601b141580156128e757508460ff16601c14155b156128f8575060009050600461297c565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561294c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129755760006001925092505061297c565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816129bb60ff86901c601b61361f565b90506129c987828885612898565b935093505050935093915050565b60606129e684846000856129f0565b90505b9392505050565b606082471015612a685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610802565b6001600160a01b0385163b612abf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610802565b600080866001600160a01b03168587604051612adb9190613420565b60006040518083038185875af1925050503d8060008114612b18576040519150601f19603f3d011682016040523d82523d6000602084013e612b1d565b606091505b5091509150612b2d828286612b38565b979650505050505050565b60608315612b475750816129e9565b825115612b575782518084602001fd5b8160405162461bcd60e51b81526004016108029190613464565b8035612b7c81613788565b919050565b600082601f830112612b9257600080fd5b81356020612ba7612ba2836135d3565b6135a2565b80838252828201915082860187848660051b8901011115612bc757600080fd5b6000805b86811015612c0a57823567ffffffffffffffff811115612be9578283fd5b612bf78b88838d0101612cdd565b8652509385019391850191600101612bcb565b509198975050505050505050565b600082601f830112612c2957600080fd5b612c31613532565b808385604086011115612c4357600080fd5b60005b6002811015612c65578135845260209384019390910190600101612c46565b509095945050505050565b600082601f830112612c8157600080fd5b81356020612c91612ba2836135d3565b80838252828201915082860187848660051b8901011115612cb157600080fd5b60005b85811015612cd057813584529284019290840190600101612cb4565b5090979650505050505050565b600082601f830112612cee57600080fd5b8135612cfc612ba2826135f7565b818152846020838601011115612d1157600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612d4057600080fd5b6040516040810181811067ffffffffffffffff82111715612d6357612d63613772565b604052823581526020928301359281019290925250919050565b6000818303610100811215612d9157600080fd5b6040516060810181811067ffffffffffffffff82111715612db457612db4613772565b604052915081612dc48585612d2e565b81526080603f1983011215612dd857600080fd5b612de0613532565b9150612def8560408601612c18565b8252612dfe8560808601612c18565b6020830152816020820152612e168560c08601612d2e565b6040820152505092915050565b803563ffffffff81168114612b7c57600080fd5b600060208284031215612e4957600080fd5b81356129e981613788565b600060208284031215612e6657600080fd5b81356129e98161379d565b600060208284031215612e8357600080fd5b81516129e98161379d565b600060208284031215612ea057600080fd5b815167ffffffffffffffff811115612eb757600080fd5b8201601f81018413612ec857600080fd5b8051612ed6612ba2826135f7565b818152856020838501011115612eeb57600080fd5b612efc8260208301602086016136c7565b95945050505050565b60008060408385031215612f1857600080fd5b823567ffffffffffffffff80821115612f3057600080fd5b9084019060a08287031215612f4457600080fd5b612f4c61355b565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612f8057600080fd5b612f8c88828601612cdd565b6080830152509350612fa391505060208401612b71565b90509250929050565b60006101608284031215612fbf57600080fd5b6040516080810181811067ffffffffffffffff82111715612fe257612fe2613772565b604052612fef8484612d7d565b8152612ffe6101008401612e23565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561303357600080fd5b823567ffffffffffffffff8082111561304b57600080fd5b90840190610260828703121561306057600080fd5b61306861357e565b6130728784612d7d565b8152610100808401356020830152610120808501358481111561309457600080fd5b6130a08a828801612c70565b60408501525061014080860135858111156130ba57600080fd5b6130c68b828901612c70565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561310157600080fd5b61310d8c828a01612c70565b60e0870152506101e08701358681111561312657600080fd5b6131328c828a01612c70565b85870152506131446102008801612b71565b838601526131556102208801612b71565b8286015261024087013593508584111561316e57600080fd5b61317a8b858901612b81565b90850152509195505050602085013591508082111561319857600080fd5b506131a585828601612cdd565b9150509250929050565b6000602082840312156131c157600080fd5b5035919050565b600080604083850312156131db57600080fd5b50508035926020909101359150565b600080604083850312156131fd57600080fd5b82359150612fa360208401612e23565b60006020828403121561321f57600080fd5b6129e982612e23565b6000806040838503121561323b57600080fd5b61324483612e23565b9150602083013561325481613788565b809150509250929050565b6000806040838503121561327257600080fd5b61327b83612e23565b9150612fa360208401612e23565b60008060006060848603121561329e57600080fd5b6132a784612e23565b92506132b560208501612e23565b915060408401356132c581613788565b809150509250925092565b6000602082840312156132e257600080fd5b815160ff811681146129e957600080fd5b8060005b60028110156133165781518452602093840193909101906001016132f7565b50505050565b600081518084526133348160208601602086016136c7565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161337f8160288501602087016136c7565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083516133c58160288501602088016136c7565b8351908301906133dc8160288401602088016136c7565b016028019695505050505050565b815160009082906020808601845b83811015613414578151855293820193908201906001016133f8565b50929695505050505050565b600082516134328184602087016136c7565b9190910192915050565b602081016002831061345e57634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006129e9602083018461331c565b600061012080830161349484875180518252602090810151910152565b6020808701516134a86040870182516132f3565b8101516134b860808701826132f3565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b81811015613506578351855293820193928201926001016134ea565b5092979650505050505050565b838152826020820152606060408201526000612efc606083018461331c565b6040805190810167ffffffffffffffff8111828210171561355557613555613772565b60405290565b60405160a0810167ffffffffffffffff8111828210171561355557613555613772565b604051610180810167ffffffffffffffff8111828210171561355557613555613772565b604051601f8201601f1916810167ffffffffffffffff811182821017156135cb576135cb613772565b604052919050565b600067ffffffffffffffff8211156135ed576135ed613772565b5060051b60200190565b600067ffffffffffffffff82111561361157613611613772565b50601f01601f191660200190565b6000821982111561363257613632613730565b500190565b600063ffffffff80831681851680830382111561365657613656613730565b01949350505050565b600063ffffffff8083168185168183048111821515161561368257613682613730565b02949350505050565b60008282101561369d5761369d613730565b500390565b600063ffffffff838116908316818110156136bf576136bf613730565b039392505050565b60005b838110156136e25781810151838201526020016136ca565b838111156133165750506000910152565b600060001982141561370757613707613730565b5060010190565b60008261372b57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461219857600080fd5b801515811461219857600080fdfea26469706673582212209e68aad4c2a3df2861d33aba6926189d49d7ab9827cdc5dd4f17ec04e47ba06c64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
