/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b50604051620043043803806200430483398101604081905262000064916200083d565b6001600055808260ff8116620000cd5760405162461bcd60e51b8152602060048201526024808201527f5f747265654865696768742073686f756c6420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000f48162000144565b600a8190556000908152600960205260409020805460ff1916600117905550600f80546001600160a01b03909216620100000262010000600160b01b0319909216919091179055506200088c9050565b600060ff82166200017657507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff1660011415620001aa57507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001de57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff16600314156200021257507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200024557507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200027957507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff1660061415620002ad57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002e157507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff16600814156200031557507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200034957507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200037d57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b1415620003b157507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003e557507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d14156200041957507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200044d57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200048157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff1660101415620004b557507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004e857507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff16601214156200051c57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200055057507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200058457507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff1660151415620005b857507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ec57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff16601714156200062057507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200065457507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200068857507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a1415620006bc57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006f057507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c14156200072457507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200075857507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200078c57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f1415620007c057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007f457507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b60405162461bcd60e51b815260206004820152601960248201527f7472656520686569676874206f7574206f6620626f756e6473000000000000006044820152606401620000c4565b600080604083850312156200085157600080fd5b825160ff811681146200086357600080fd5b60208401519092506001600160a01b03811681146200088157600080fd5b809150509250929050565b608051613a4e620008b6600039600081816102de0152818161103a01526119d30152613a4e6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c8063830d9ebe1161010f578063c2d41601116100a2578063ec571c6a11610071578063ec571c6a1461044e578063f2da1d4114610479578063f8f053881461048c578063ffa89b881461049f57600080fd5b8063c2d4160114610411578063c9230c5d1461042b578063deeff7cd14610433578063e500f5041461044657600080fd5b8063a9b1d296116100de578063a9b1d296146103d0578063b08892d0146103e3578063b3b75631146103eb578063c259e2e6146103fe57600080fd5b8063830d9ebe146103735780639b0a6fea146103875780639cc6b3541461039a578063a6232a93146103ad57600080fd5b80633fae882e116101875780635706001611610156578063570600161461031757806378d60cd71461033a5780637cbf0ff61461034d5780637fa4b09c1461036057600080fd5b80633fae882e146102ba5780633fe3347a146102cd578063484eb652146102dc5780634eb069f71461030c57600080fd5b806314a7737d116101c357806314a7737d14610243578063176de7a81461025657806330f49cac146102745780633bb8d1b41461028757600080fd5b806302d498f1146101f557806303db98741461020a57806306394c9b1461021d57806306b2ad5914610230575b600080fd5b610208610203366004613168565b6104af565b005b610208610218366004613168565b610523565b61020861022b366004613168565b61058f565b61020861023e366004613185565b610609565b6102086102513660046132dd565b6106ac565b61025e610d14565b60405161026b91906136d1565b60405180910390f35b610208610282366004613168565b610da5565b6102aa6102953660046134e0565b60009081526005602052604090205460ff1690565b604051901515815260200161026b565b6102086102c8366004613351565b610e4b565b600060405161026b91906136a9565b7f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161026b565b600f5460ff166102aa565b6102aa6103253660046134e0565b60009081526004602052604090205460ff1690565b610208610348366004613236565b61191c565b61020861035b3660046134e0565b611b00565b61020861036e366004613598565b611ba0565b6001546102aa90600160a01b900460ff1681565b61020861039536600461351c565b611d10565b6102086103a8366004613168565b611e9b565b6102aa6103bb3660046134e0565b60009081526009602052604090205460ff1690565b6102086103de366004613168565b611f07565b600c546102fe565b6102086103f9366004613185565b611f76565b61020861040c36600461356e565b612002565b610419612133565b60405160ff909116815260200161026b565b61025e6121bb565b610208610441366004613537565b61220b565b6008546102fe565b600154610461906001600160a01b031681565b6040516001600160a01b03909116815260200161026b565b6102fe6104873660046134f9565b6123de565b61020861049a366004613185565b612443565b600f54610100900460ff166102aa565b600b546001600160a01b031633146104ff5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b0316331461056e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146105da5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146106545760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a443906106a190831515815260200190565b60405180910390a150565b600f54610100900460ff16806106d15750336000908152600d602052604090205460ff165b61071d5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e000000000000000060448201526064016104f6565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018160400151106107b65760405162461bcd60e51b815260206004820152602660248201527f6e6577526f6f742073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016104f6565b60408082015160009081526009602052205460ff16156108185760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c696361746564000000000000000000000060448201526064016104f6565b6000816020015163ffffffff1611801561083e5750600754816020015163ffffffff1611155b801561086b575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b6108ac5760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f6565b60085460208201516108c49063ffffffff168261397b565b1561091d5760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b60648201526084016104f6565b600061092d8284602001516123de565b90506000836020015163ffffffff1667ffffffffffffffff811115610954576109546139df565b60405190808252806020026020018201604052801561097d578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610aaa5760006109a2828761388c565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a1e5760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e64000000000000000000000000000060448201526064016104f6565b8060000151858481518110610a3557610a356139c9565b602002602001018181525050806020015184610a51919061388c565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610aa290613960565b915050610984565b50846020015163ffffffff1660076000828254610ac791906138f8565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b029190613657565b6040516020818303038152906040528051906020012060001c610b25919061397b565b60408051600480825260a082019092529192506000919060208201608080368337019050509050600a5481600081518110610b6257610b626139c9565b602002602001018181525050866040015181600181518110610b8657610b866139c9565b6020026020010181815250508181600281518110610ba657610ba66139c9565b6020026020010181815250508481600381518110610bc657610bc66139c9565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c1e919086906004016136e4565b602060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7091906131a2565b905080610cbf5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016104f6565b876020015163ffffffff1660086000828254610cdb919061388c565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d0a846124d7565b5050505050505050565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610d6457600080fd5b505afa158015610d78573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610da091908101906131bf565b905090565b600b546001600160a01b03163314610df05760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016106a1565b60026000541415610e9e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f6565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff16610f285760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e677468000000000000000000000000000060448201526064016104f6565b8163ffffffff1684606001515114610f825760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e677468000000000000000060448201526064016104f6565b8063ffffffff168461010001515114610fdd5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e6774680000000060448201526064016104f6565b8063ffffffff1684610160015151146110385760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e67746860448201526064016104f6565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854611070919061388c565b61107a919061388c565b11156110b75760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016104f6565b6110c58461012001516124f7565b156111125760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016104f6565b600061111d85612597565b9050600061112b8286612771565b60808701519091506001600160a01b0382161461118a5760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e617475726500000000000000000000000000000060448201526064016104f6565b60006111978460026138cc565b6111a28660026138cc565b6111ad9060046138a4565b6111b791906138a4565b63ffffffff1667ffffffffffffffff8111156111d5576111d56139df565b6040519080825280602002602001820160405280156111fe578160200160208202803683370190505b5060208089015160009081526009909152604090205490915060ff166112665760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f74000000000000000000000000000000000000000060448201526064016104f6565b86602001518160008151811061127e5761127e6139c9565b602090810291909101015260006112968660016138a4565b63ffffffff16905060005b8663ffffffff168110156113b8576000896040015182815181106112c7576112c76139c9565b6020908102919091018101516000818152600590925260409091205490915060ff16156113365760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e7400000000000000000060448201526064016104f6565b808461134384600161388c565b81518110611353576113536139c9565b60200260200101818152505089606001518281518110611375576113756139c9565b602002602001015184848461138a919061388c565b8151811061139a5761139a6139c9565b602090810291909101015250806113b081613960565b9150506112a1565b506080880151826113ca8860026138cc565b6113d59060016138a4565b63ffffffff16815181106113eb576113eb6139c9565b602090810291909101015260a0880151826114078860026138cc565b6114129060026138a4565b63ffffffff1681518110611428576114286139c9565b602090810291909101015260c0880151826114448860026138cc565b61144f9060036138a4565b63ffffffff1681518110611465576114656139c9565b6020908102919091010152600061147d8760026138cc565b6114889060046138a4565b63ffffffff16905060008663ffffffff16826114a4919061388c565b905060005b8763ffffffff1681101561164c57600460008c60e0015183815181106114d1576114d16139c9565b60209081029190910181015182528101919091526040016000205460ff161561153c5760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e7400000000000000000000000060448201526064016104f6565b600c548b61010001518281518110611556576115566139c9565b602002602001015110156115ac5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f77000000000000000000000000000060448201526064016104f6565b8a60e0015181815181106115c2576115c26139c9565b60200260200101518584836115d7919061388c565b815181106115e7576115e76139c9565b6020026020010181815250508a6101000151818151811061160a5761160a6139c9565b602002602001015185838361161f919061388c565b8151811061162f5761162f6139c9565b60209081029190910101528061164481613960565b9150506114a9565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916116a29189906004016136e4565b602060405180830381600087803b1580156116bc57600080fd5b505af11580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f491906131a2565b9050806117435760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f660000000000000000000060448201526064016104f6565b60005b8963ffffffff168110156117fe576001600560008e604001518481518110611770576117706139c9565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106117b3576117b36139c9565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806117f681613960565b915050611746565b5060005b8863ffffffff168110156118cf576001600460008e60e00151848151811061182c5761182c6139c9565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506118bd8c60e001518281518110611872576118726139c9565b60200260200101518d61010001518381518110611891576118916139c9565b60200260200101518e610160015184815181106118b0576118b06139c9565b6020026020010151612795565b806118c781613960565b915050611802565b5060a08b0151156118ed576118ed8b61012001518c60a00151612834565b60c08b01511561190a5761190a8b61014001518c60c00151612834565b50506001600055505050505050505050565b336000908152600e602052604090205460ff1661197b5760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e000000000000000060448201526064016104f6565b600c54826060015110156119d15760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f20666577000000000000000000000000000060448201526064016104f6565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a02919061388c565b10611a3e5760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b60448201526064016104f6565b60208083015160009081526004909152604090205460ff1615611aad5760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b60648201526084016104f6565b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611ae4929190612795565b604082015115611afc57611afc818360400151612834565b5050565b600b546001600160a01b03163314611b4b5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b60008111611b9b5760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c7570466565000000000000000000000060448201526064016104f6565b600c55565b600b546001600160a01b03163314611beb5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff1615611c4a5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008363ffffffff1611611ca05760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016104f6565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611d5b5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff1615611dba5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008163ffffffff16118015611dd757506101008163ffffffff16105b611e185760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f6565b611e2360018261390f565b811663ffffffff16600014611e7a5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c75702073697a65206e6f7420706f776572206f66203200000000000060448201526064016104f6565b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611ee65760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611f525760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611fc15760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e4906020016106a1565b600b546001600160a01b0316331461204d5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff16156120ac5760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008263ffffffff16116121025760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e203000000000000000000000000060448201526064016104f6565b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6000600f60029054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561218357600080fd5b505afa158015612197573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da091906135df565b6060600f60029054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610d6457600080fd5b600b546001600160a01b031633146122565760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f5460ff16156122b55760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b60648201526084016104f6565b60008263ffffffff161180156122d257506101008263ffffffff16105b6123135760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b60448201526064016104f6565b61231e60018361390f565b821663ffffffff166000146123755760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c75702073697a65206e6f7420706f776572206f66203200000000000060448201526064016104f6565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600060108263ffffffff16106124035760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106124265760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061243c57600183901c92505b5090919050565b600b546001600160a01b0316331461248e5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064016104f6565b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b479906106a190831515815260200190565b600f546124f4906201000090046001600160a01b0316338361284d565b50565b600154600090600160a01b900460ff161561251457506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561255957600080fd5b505afa15801561256d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259191906131a2565b92915050565b61016081015151600090600381106125f15760405162461bcd60e51b815260206004820152601860248201527f6f7574707574206e6f746573206c657373207468616e2033000000000000000060448201526064016104f6565b61012083015161014084015160608060008561260f5750602861268d565b85600114156126435760f99050876101600151600081518110612634576126346139c9565b6020026020010151925061268d565b6101ca9050876101600151600081518110612660576126606139c9565b60200260200101519250876101600151600181518110612682576126826139c9565b602002602001015191505b60006040518660601b60008201528560601b601482015260008813156126d6576028810160d18101602087015b818310156126d25780518352602092830192016126ba565b5050505b60018813156127085760f9810160d18101602086015b818310156127045780518352602092830192016126ec565b5050505b8290209050612764816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b600080600061278085856128b9565b9150915061278d81612929565b509392505050565b60006008546007546127a7919061388c565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906127eb90849061388c565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161282693929190613780565b60405180910390a250505050565b600f54611afc906201000090046001600160a01b031683835b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526128b4908490612ae4565b505050565b6000808251604114156128f05760208301516040840151606085015160001a6128e487828585612bc9565b94509450505050612922565b82516040141561291a576020830151604084015161290f868383612cb6565b935093505050612922565b506000905060025b9250929050565b600081600481111561293d5761293d6139b3565b14156129465750565b600181600481111561295a5761295a6139b3565b14156129a85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104f6565b60028160048111156129bc576129bc6139b3565b1415612a0a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104f6565b6003816004811115612a1e57612a1e6139b3565b1415612a775760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104f6565b6004816004811115612a8b57612a8b6139b3565b14156124f45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104f6565b6000612b39826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d089092919063ffffffff16565b8051909150156128b45780806020019051810190612b5791906131a2565b6128b45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612c005750600090506003612cad565b8460ff16601b14158015612c1857508460ff16601c14155b15612c295750600090506004612cad565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612c7d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612ca657600060019250925050612cad565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612cec60ff86901c601b61388c565b9050612cfa87828885612bc9565b935093505050935093915050565b6060612d178484600085612d21565b90505b9392505050565b606082471015612d995760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104f6565b6001600160a01b0385163b612df05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f6565b600080866001600160a01b03168587604051612e0c919061368d565b60006040518083038185875af1925050503d8060008114612e49576040519150601f19603f3d011682016040523d82523d6000602084013e612e4e565b606091505b5091509150612e5e828286612e69565b979650505050505050565b60608315612e78575081612d1a565b825115612e885782518084602001fd5b8160405162461bcd60e51b81526004016104f691906136d1565b8035612ead816139f5565b919050565b600082601f830112612ec357600080fd5b81356020612ed8612ed383613840565b61380f565b80838252828201915082860187848660051b8901011115612ef857600080fd5b6000805b86811015612f3b57823567ffffffffffffffff811115612f1a578283fd5b612f288b88838d010161300e565b8652509385019391850191600101612efc565b509198975050505050505050565b600082601f830112612f5a57600080fd5b612f6261379f565b808385604086011115612f7457600080fd5b60005b6002811015612f96578135845260209384019390910190600101612f77565b509095945050505050565b600082601f830112612fb257600080fd5b81356020612fc2612ed383613840565b80838252828201915082860187848660051b8901011115612fe257600080fd5b60005b8581101561300157813584529284019290840190600101612fe5565b5090979650505050505050565b600082601f83011261301f57600080fd5b813561302d612ed382613864565b81815284602083860101111561304257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561307157600080fd5b6040516040810181811067ffffffffffffffff82111715613094576130946139df565b604052823581526020928301359281019290925250919050565b60008183036101008112156130c257600080fd5b6040516060810181811067ffffffffffffffff821117156130e5576130e56139df565b6040529150816130f5858561305f565b81526080603f198301121561310957600080fd5b61311161379f565b91506131208560408601612f49565b825261312f8560808601612f49565b60208301528160208201526131478560c0860161305f565b6040820152505092915050565b803563ffffffff81168114612ead57600080fd5b60006020828403121561317a57600080fd5b8135612d1a816139f5565b60006020828403121561319757600080fd5b8135612d1a81613a0a565b6000602082840312156131b457600080fd5b8151612d1a81613a0a565b6000602082840312156131d157600080fd5b815167ffffffffffffffff8111156131e857600080fd5b8201601f810184136131f957600080fd5b8051613207612ed382613864565b81815285602083850101111561321c57600080fd5b61322d826020830160208601613934565b95945050505050565b6000806040838503121561324957600080fd5b823567ffffffffffffffff8082111561326157600080fd5b9084019060a0828703121561327557600080fd5b61327d6137c8565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156132b157600080fd5b6132bd8882860161300e565b60808301525093506132d491505060208401612ea2565b90509250929050565b600061016082840312156132f057600080fd5b6040516080810181811067ffffffffffffffff82111715613313576133136139df565b60405261332084846130ae565b815261332f6101008401613154565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561336457600080fd5b823567ffffffffffffffff8082111561337c57600080fd5b90840190610260828703121561339157600080fd5b6133996137eb565b6133a387846130ae565b815261010080840135602083015261012080850135848111156133c557600080fd5b6133d18a828801612fa1565b60408501525061014080860135858111156133eb57600080fd5b6133f78b828901612fa1565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561343257600080fd5b61343e8c828a01612fa1565b60e0870152506101e08701358681111561345757600080fd5b6134638c828a01612fa1565b85870152506134756102008801612ea2565b838601526134866102208801612ea2565b8286015261024087013593508584111561349f57600080fd5b6134ab8b858901612eb2565b9085015250919550505060208501359150808211156134c957600080fd5b506134d68582860161300e565b9150509250929050565b6000602082840312156134f257600080fd5b5035919050565b6000806040838503121561350c57600080fd5b823591506132d460208401613154565b60006020828403121561352e57600080fd5b612d1a82613154565b6000806040838503121561354a57600080fd5b61355383613154565b91506020830135613563816139f5565b809150509250929050565b6000806040838503121561358157600080fd5b61358a83613154565b91506132d460208401613154565b6000806000606084860312156135ad57600080fd5b6135b684613154565b92506135c460208501613154565b915060408401356135d4816139f5565b809150509250925092565b6000602082840312156135f157600080fd5b815160ff81168114612d1a57600080fd5b8060005b6002811015613625578151845260209384019390910190600101613606565b50505050565b60008151808452613643816020860160208601613934565b601f01601f19169290920160200192915050565b815160009082906020808601845b8381101561368157815185529382019390820190600101613665565b50929695505050505050565b6000825161369f818460208701613934565b9190910192915050565b60208101600283106136cb57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612d1a602083018461362b565b600061012080830161370184875180518252602090810151910152565b602080870151613715604087018251613602565b8101516137256080870182613602565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561377357835185529382019392820192600101613757565b5092979650505050505050565b83815282602082015260606040820152600061322d606083018461362b565b6040805190810167ffffffffffffffff811182821017156137c2576137c26139df565b60405290565b60405160a0810167ffffffffffffffff811182821017156137c2576137c26139df565b604051610180810167ffffffffffffffff811182821017156137c2576137c26139df565b604051601f8201601f1916810167ffffffffffffffff81118282101715613838576138386139df565b604052919050565b600067ffffffffffffffff82111561385a5761385a6139df565b5060051b60200190565b600067ffffffffffffffff82111561387e5761387e6139df565b50601f01601f191660200190565b6000821982111561389f5761389f61399d565b500190565b600063ffffffff8083168185168083038211156138c3576138c361399d565b01949350505050565b600063ffffffff808316818516818304811182151516156138ef576138ef61399d565b02949350505050565b60008282101561390a5761390a61399d565b500390565b600063ffffffff8381169083168181101561392c5761392c61399d565b039392505050565b60005b8381101561394f578181015183820152602001613937565b838111156136255750506000910152565b60006000198214156139745761397461399d565b5060010190565b60008261399857634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146124f457600080fd5b80151581146124f457600080fdfea26469706673582212207002f7151a48dacbab06d3022d3c0bf1f7344ff593bbdeae4877bcf5a1a353e264736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
