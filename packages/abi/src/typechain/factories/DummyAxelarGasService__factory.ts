/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DummyAxelarGasService, DummyAxelarGasServiceInterface } from '../DummyAxelarGasService';

const _abi = [
  {
    inputs: [],
    name: 'NothingReceived',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'collectFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractId',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'refund',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610ed6806100206000396000f3fe6080604052600436106100705760003560e01c8063c62c20021161004e578063c62c2002146100ea578063da854d75146100fd578063edb6b3a51461011d578063fd09e3bd1461013d57600080fd5b80630c93e3bb146100755780638291286c1461008a57806382ad6f35146100ca575b600080fd5b610088610083366004610840565b61015d565b005b34801561009657600080fd5b507ffaa2f015f2ce5aee225904728de2def86eb8837491efd21f1a04fc20d8e923f660405190815260200160405180910390f35b3480156100d657600080fd5b506100886100e5366004610777565b6101e8565b6100886100f83660046109d8565b610242565b34801561010957600080fd5b506100886101183660046107b8565b6102d6565b34801561012957600080fd5b50610088610138366004610acb565b6103f1565b34801561014957600080fd5b50610088610158366004610900565b610473565b3461017b5760405163b5c74a2760e01b815260040160405180910390fd5b828260405161018b929190610c4d565b6040518091039020886001600160a01b03167f617332c1832058df6ee45fcbdf471251474c9945a8e5d229287a21a5f67ccf0a8989898934886040516101d696959493929190610dbd565b60405180910390a35050505050505050565b6001600160a01b038216610232576040516001600160a01b0384169082156108fc029083906000818181858888f1935050505015801561022c573d6000803e3d6000fd5b50505050565b61023d8284836104ef565b505050565b346102605760405163b5c74a2760e01b815260040160405180910390fd5b8585604051610270929190610c4d565b60405180910390208b6001600160a01b03167f999d431b58761213cf53af96262b67a069cbd963499fd8effd1e21556217b8418c8c8c8c8a8a8a348b6040516102c199989796959493929190610ccd565b60405180910390a35050505050505050505050565b60005b8181101561022c5760008383838181106102f5576102f5610e5c565b905060200201602081019061030a9190610753565b90506001600160a01b038116610355576040516001600160a01b038616904780156108fc02916000818181858888f1935050505015801561034f573d6000803e3d6000fd5b506103de565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b15801561039757600080fd5b505afa1580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190610c0b565b90506103dc8287836104ef565b505b50806103e981610e33565b9150506102d9565b6103fc833384610634565b868660405161040c929190610c4d565b60405180910390208c6001600160a01b03167f8875f9764f28fa82d3e7ff1b80bd5c8f665e1f42fcd8c2faebc7c400a4ba1bbd8d8d8d8d8b8b8b8b8b60405161045d99989796959493929190610d34565b60405180910390a3505050505050505050505050565b61047e833384610634565b848460405161048e929190610c4d565b60405180910390208a6001600160a01b03167f99206760f0be19dd093729bd35e5924daff5e217bcedc5223ed067b60008cf8a8b8b8b8b8989896040516104db9796959493929190610c79565b60405180910390a350505050505050505050565b6040516001600160a01b03838116602483015260448201839052600091829186169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516105899190610c5d565b6000604051808303816000865af19150503d80600081146105c6576040519150601f19603f3d011682016040523d82523d6000602084013e6105cb565b606091505b509150915060008280156105f75750815115806105f75750818060200190518101906105f79190610be9565b905080158061060e57506001600160a01b0386163b155b1561062c576040516312171d8360e31b815260040160405180910390fd5b505050505050565b6040516001600160a01b0383811660248301523060448301526064820183905260009182918616906323b872dd60e01b9060840161051e565b803561067881610e88565b919050565b60008083601f84011261068f57600080fd5b50813567ffffffffffffffff8111156106a757600080fd5b6020830191508360208285010111156106bf57600080fd5b9250929050565b600082601f8301126106d757600080fd5b813567ffffffffffffffff808211156106f2576106f2610e72565b604051601f8301601f19908116603f0116810190828211818310171561071a5761071a610e72565b8160405283815286602085880101111561073357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561076557600080fd5b813561077081610e88565b9392505050565b60008060006060848603121561078c57600080fd5b833561079781610e88565b925060208401356107a781610e88565b929592945050506040919091013590565b6000806000604084860312156107cd57600080fd5b83356107d881610e88565b9250602084013567ffffffffffffffff808211156107f557600080fd5b818601915086601f83011261080957600080fd5b81358181111561081857600080fd5b8760208260051b850101111561082d57600080fd5b6020830194508093505050509250925092565b60008060008060008060008060a0898b03121561085c57600080fd5b883561086781610e88565b9750602089013567ffffffffffffffff8082111561088457600080fd5b6108908c838d0161067d565b909950975060408b01359150808211156108a957600080fd5b6108b58c838d0161067d565b909750955060608b01359150808211156108ce57600080fd5b506108db8b828c0161067d565b90945092505060808901356108ef81610e88565b809150509295985092959890939650565b60008060008060008060008060008060e08b8d03121561091f57600080fd5b8a3561092a81610e88565b995060208b013567ffffffffffffffff8082111561094757600080fd5b6109538e838f0161067d565b909b50995060408d013591508082111561096c57600080fd5b6109788e838f0161067d565b909950975060608d013591508082111561099157600080fd5b5061099e8d828e0161067d565b90965094505060808b01356109b281610e88565b925060a08b013591506109c760c08c0161066d565b90509295989b9194979a5092959850565b600080600080600080600080600080600060e08c8e0312156109f957600080fd5b610a028c61066d565b9a5067ffffffffffffffff8060208e01351115610a1e57600080fd5b610a2e8e60208f01358f0161067d565b909b50995060408d0135811015610a4457600080fd5b610a548e60408f01358f0161067d565b909950975060608d0135811015610a6a57600080fd5b610a7a8e60608f01358f0161067d565b909750955060808d0135811015610a9057600080fd5b50610aa18d60808e01358e0161067d565b909450925060a08c01359150610ab960c08d0161066d565b90509295989b509295989b9093969950565b6000806000806000806000806000806000806101208d8f031215610aee57600080fd5b610af78d61066d565b9b5067ffffffffffffffff60208e01351115610b1257600080fd5b610b228e60208f01358f0161067d565b909b50995067ffffffffffffffff60408e01351115610b4057600080fd5b610b508e60408f01358f0161067d565b909950975067ffffffffffffffff60608e01351115610b6e57600080fd5b610b7e8e60608f01358f0161067d565b909750955067ffffffffffffffff60808e01351115610b9c57600080fd5b610bac8e60808f01358f016106c6565b945060a08d01359350610bc160c08e0161066d565b925060e08d01359150610bd76101008e0161066d565b90509295989b509295989b509295989b565b600060208284031215610bfb57600080fd5b8151801515811461077057600080fd5b600060208284031215610c1d57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8183823760009101908152919050565b60008251610c6f818460208701610e07565b9190910192915050565b60a081526000610c8d60a08301898b610c24565b8281036020840152610ca081888a610c24565b6001600160a01b039687166040850152606084019590955250509216608090920191909152949350505050565b60c081526000610ce160c083018b8d610c24565b8281036020840152610cf4818a8c610c24565b90508281036040840152610d0981888a610c24565b6060840196909652505060808101929092526001600160a01b031660a0909101529695505050505050565b60e081526000610d4860e083018b8d610c24565b8281036020840152610d5b818a8c610c24565b905082810360408401528751808252610d7b816020840160208c01610e07565b60608401979097526001600160a01b03958616608084015260a083019490945250921660c0909201919091526020601f909201601f1916010195945050505050565b608081526000610dd160808301888a610c24565b8281036020840152610de4818789610c24565b9150508360408301526001600160a01b0383166060830152979650505050505050565b60005b83811015610e22578181015183820152602001610e0a565b8381111561022c5750506000910152565b6000600019821415610e5557634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610e9d57600080fd5b5056fea264697066735822122052472bbd09fca63d7181eec0085aaa2b76b442b8065f1354b7c76ba5ac2fdba664736f6c63430008070033';

type DummyAxelarGasServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyAxelarGasServiceConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyAxelarGasService__factory extends ContractFactory {
  constructor(...args: DummyAxelarGasServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DummyAxelarGasService';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DummyAxelarGasService> {
    return super.deploy(overrides || {}) as Promise<DummyAxelarGasService>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyAxelarGasService {
    return super.attach(address) as DummyAxelarGasService;
  }
  connect(signer: Signer): DummyAxelarGasService__factory {
    return super.connect(signer) as DummyAxelarGasService__factory;
  }
  static readonly contractName: 'DummyAxelarGasService';
  public readonly contractName: 'DummyAxelarGasService';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyAxelarGasServiceInterface {
    return new utils.Interface(_abi) as DummyAxelarGasServiceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DummyAxelarGasService {
    return new Contract(address, _abi, signerOrProvider) as DummyAxelarGasService;
  }
}
