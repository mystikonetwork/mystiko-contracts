/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2AxelarMain, MystikoV2AxelarMainInterface } from '../MystikoV2AxelarMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeDividerTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'MinAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'MinBridgeFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'MinExecutorFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'PeerMinExecutorFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'PeerMinRollupFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFee',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collector',
        type: 'address',
      },
    ],
    name: 'ServiceFeeCollectorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeDividerChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFee',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCollector',
        type: 'address',
      },
    ],
    name: 'changeServiceFeeCollector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFeeDivider',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeCollector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeDivider',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    name: 'setAxelarGasReceiver',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb1790553480156200003857600080fd5b50604051620031d7380380620031d78339810160408190526200005b916200009c565b600b80546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556103e8600d55620f4240600e55620000ce565b600060208284031215620000af57600080fd5b81516001600160a01b0381168114620000c757600080fd5b9392505050565b6130f980620000de6000396000f3fe6080604052600436106102a05760003560e01c80635e10b2b71161016e578063d3e256bf116100cb578063ea0cde851161007f578063ed6ea33a11610064578063ed6ea33a14610747578063efbfb2ae1461075f578063f4ad17c61461077457600080fd5b8063ea0cde8514610707578063ec571c6a1461072757600080fd5b8063ddac5dc1116100b0578063ddac5dc1146106a9578063df420737146106c7578063e19abef8146106e757600080fd5b8063d3e256bf14610674578063dd757c341461069457600080fd5b8063a3bc64f211610122578063b1c3942211610107578063b1c39422146105ed578063cdfceeba1461061e578063cfc7e2da1461065f57600080fd5b8063a3bc64f2146105ad578063b1a0b358146105cd57600080fd5b8063825b5f8d11610153578063825b5f8d14610565578063897b06371461057a5780639a03636c1461059a57600080fd5b80635e10b2b7146105255780637d2c85201461054557600080fd5b806321e32d551161021c5780633fe3347a116101d05780634e3c10b7116101b55780634e3c10b7146104db578063521ff057146104f05780635898a0a81461051057600080fd5b80633fe3347a1461049f57806349160658146104bb57600080fd5b80632cd26d45116102015780632cd26d451461044157806330f49cac146104615780633fc8c4d61461048157600080fd5b806321e32d55146103d25780632421e155146103f257600080fd5b8063116191b611610273578063153dc45011610258578063153dc4501461037257806319e75d6e146103925780631a98b2e0146103b257600080fd5b8063116191b61461032057806311a1933c1461035d57600080fd5b806301dbf19f146102a557806306394c9b146102bc5780630a5ea9eb146102dc5780630f087d7614610300575b600080fd5b3480156102b157600080fd5b506102ba610789565b005b3480156102c857600080fd5b506102ba6102d7366004612882565b61080d565b3480156102e857600080fd5b50600e545b6040519081526020015b60405180910390f35b34801561030c57600080fd5b506102ba61031b366004612882565b6108b1565b34801561032c57600080fd5b50600f546103459061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016102f7565b34801561036957600080fd5b50600d546102ed565b34801561037e57600080fd5b506102ba61038d366004612b15565b610955565b34801561039e57600080fd5b506102ba6103ad366004612b15565b6109bc565b3480156103be57600080fd5b506102ba6103cd36600461297d565b610a1b565b3480156103de57600080fd5b50600454610345906001600160a01b031681565b3480156103fe57600080fd5b5060408051808201909152600681527f6178656c6172000000000000000000000000000000000000000000000000000060208201525b6040516102f79190612e7e565b34801561044d57600080fd5b50600554610345906001600160a01b031681565b34801561046d57600080fd5b506102ba61047c366004612882565b610ba2565b34801561048d57600080fd5b50600c546001600160a01b0316610345565b3480156104ab57600080fd5b5060016040516102f79190612e56565b3480156104c757600080fd5b506102ba6104d63660046128d9565b610c1b565b3480156104e757600080fd5b50610434610c9b565b3480156104fc57600080fd5b506102ba61050b366004612b15565b610d29565b34801561051c57600080fd5b506009546102ed565b34801561053157600080fd5b506102ba610540366004612b15565b610ddc565b34801561055157600080fd5b506102ba610560366004612b47565b610e3c565b34801561057157600080fd5b50600a546102ed565b34801561058657600080fd5b506102ba610595366004612b15565b610ed9565b6102ba6105a8366004612a57565b610f39565b3480156105b957600080fd5b506102ba6105c8366004612882565b611142565b3480156105d957600080fd5b506102ba6105e8366004612b15565b61118f565b3480156105f957600080fd5b5060005461060e90600160a01b900460ff1681565b60405190151581526020016102f7565b34801561062a57600080fd5b5060025461064690600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016102f7565b34801561066b57600080fd5b506006546102ed565b34801561068057600080fd5b506102ba61068f366004612b15565b611230565b3480156106a057600080fd5b506102ba6112b3565b3480156106b557600080fd5b506002546001600160a01b0316610345565b3480156106d357600080fd5b506102ba6106e2366004612882565b61132b565b3480156106f357600080fd5b506102ba610702366004612882565b611378565b34801561071357600080fd5b506102ba61072236600461289f565b6113c5565b34801561073357600080fd5b50600054610345906001600160a01b031681565b34801561075357600080fd5b50600f5460ff1661060e565b34801561076b57600080fd5b506007546102ed565b34801561078057600080fd5b506008546102ed565b600b546001600160a01b031633146107b4576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261080392900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610838576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b0382811691161415610867576040516336a1c33f60e01b815260040160405180910390fd5b600b80546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600b546001600160a01b031633146108dc576040516327e1f1e560e01b815260040160405180910390fd5b600c546001600160a01b038281169116141561090b576040516336a1c33f60e01b815260040160405180910390fd5b600c80546001600160a01b0319166001600160a01b0383169081179091556040517fe6bc4ba4d04102f8f1140ad88cba6b7bd753b0391069bca06f44a955507dbb9390600090a250565b600b546001600160a01b03163314610980576040516327e1f1e560e01b815260040160405180910390fd5b60098190556040518181527f14988234d3e50a12aeec2d6ee595b70c2fae163caff28baab5802b122bf2a753906020015b60405180910390a150565b600b546001600160a01b031633146109e7576040516327e1f1e560e01b815260040160405180910390fd5b60078190556040518181527e91f5f5db3092e39ecb701218d4af20b7571e0429595937c334f3acd14fe2fe906020016109b1565b60008585604051610a2d929190612cbd565b604051908190038120600f54631876eed960e01b835290925061010090046001600160a01b031690631876eed990610a79908e908e908e908e908e9089908d908d908d90600401612df7565b602060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acb91906128bc565b610ae857604051631403112d60e21b815260040160405180910390fd5b610b958a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525050604080516020601f8b018190048102820181019092528981528c93508b9250908a908a90819084018382808284376000920191909152508a9250611431915050565b5050505050505050505050565b600b546001600160a01b03163314610bcd576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016109b1565b610c9286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a0181900481028201810190925288815292508891508790819084018382808284376000920191909152508792508691506114399050565b50505050505050565b60038054610ca890613020565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd490613020565b8015610d215780601f10610cf657610100808354040283529160200191610d21565b820191906000526020600020905b815481529060010190602001808311610d0457829003601f168201915b505050505081565b600b546001600160a01b03163314610d54576040516327e1f1e560e01b815260040160405180910390fd5b80610da7576040516314e8955b60e21b815260206004820152601760248201527f70656572206d696e696d616c20726f6c6c75702066656500000000000000000060448201526064015b60405180910390fd5b600a8190556040518181527f878075a8e8aa1c7c15e6932752520f7812bf5744785e6df605373729da415545906020016109b1565b600b546001600160a01b03163314610e07576040516327e1f1e560e01b815260040160405180910390fd5b60088190556040518181527f88d210dfa198f7519579294721f90c771153a7b49101eefb95147037cc8ce481906020016109b1565b600b546001600160a01b03163314610e67576040516327e1f1e560e01b815260040160405180910390fd5b600280547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff8616021790558151610eb49060039060208501906126f1565b50600480546001600160a01b0319166001600160a01b03929092169190911790555050565b600b546001600160a01b03163314610f04576040516327e1f1e560e01b815260040160405180910390fd5b60068190556040518181527f1c853e705f5e96d9076d1f48114d62650faf218827df3fed720227b3dbf18c5a906020016109b1565b600f5460ff1615610f5d57604051630e2f42c960e31b815260040160405180910390fd5b60065481511015610f815760405163617ab12d60e11b815260040160405180910390fd5b6007548160a001511015610fa85760405163c4d8d00d60e01b815260040160405180910390fd5b6009548160c001511015610fcf576040516355a6d6a160e11b815260040160405180910390fd5b600a548160e001511015610ff65760405163784f02bd60e11b815260040160405180910390fd5b600061100f8260400151836000015184606001516114b1565b905080826020015114611035576040516301bfaa2560e51b815260040160405180910390fd5b61103e336115d7565b1561105c57604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e0830151606082015260808084015190820152600061109f82611674565b90506110af8460a00151826116e3565b600254600c54600e548651600d5461110e946001600160a01b039081169416926110e49290916110de91611810565b90611823565b60e088015160c089015189516110fa9190612f80565b6111049190612f80565b8860a0015161182f565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b600b546001600160a01b0316331461116d576040516327e1f1e560e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031633146111ba576040516327e1f1e560e01b815260040160405180910390fd5b80600e5414156111dd576040516336a1c33f60e01b815260040160405180910390fd5b806111fb576040516313a2a85760e21b815260040160405180910390fd5b600e8190556040518181527fc9993a13ab327e43d2c7222016ea042dc8e0889c91571ae6062990deacb4540c906020016109b1565b600b546001600160a01b0316331461125b576040516327e1f1e560e01b815260040160405180910390fd5b80600d54141561127e576040516336a1c33f60e01b815260040160405180910390fd5b600d8190556040518181527f1c068decb3b5138b265d62b22c4c2d8191a2e0bd3745e97b5b0ff66fa852eca5906020016109b1565b600b546001600160a01b031633146112de576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161080391600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314611356576040516327e1f1e560e01b815260040160405180910390fd5b601080546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031633146113a3576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b031633146113f0576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e09906020016109b1565b505050505050565b600061147a83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119de92505050565b6002546004549192506114aa91600160a01b90910467ffffffffffffffff16906001600160a01b03163284611aa6565b5050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018085106114f45760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff161061152657604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e89161157e91600401612dc6565b60206040518083038186803b15801561159657600080fd5b505afa1580156115aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ce9190612b2e565b95945050505050565b60008054600160a01b900460ff166115f157506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561163657600080fd5b505afa15801561164a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061166e91906128bc565b92915050565b6060806116848360000151611b93565b6116918460200151611b93565b61169e8560400151611b93565b6116ab8660600151611b93565b6116b88760800151611c2b565b6040516020016116cc959493929190612cfc565b60408051601f198184030181529190529392505050565b6004546000906116fd906001600160a01b03166014611c62565b9050821561177357601054604051630c93e3bb60e01b81526001600160a01b0390911690630c93e3bb908590611740903090600390879089903390600401612d67565b6000604051808303818588803b15801561175957600080fd5b505af115801561176d573d6000803e3d6000fd5b50505050505b7fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef6003826040516117a5929190612e91565b60405180910390a1600554604051631c92115f60e01b81526001600160a01b0390911690631c92115f906117e29060039085908790600401612eb6565b600060405180830381600087803b1580156117fc57600080fd5b505af1158015610c92573d6000803e3d6000fd5b600061181c8284612fba565b9392505050565b600061181c8284612f98565b8261183a8284612f80565b6118449190612f80565b34146118925760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e00000000000000000000000000006044820152606401610d9e565b6000856001600160a01b03168360405160006040518083038185875af1925050503d80600081146118df576040519150601f19603f3d011682016040523d82523d6000602084013e6118e4565b606091505b50509050806119355760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606401610d9e565b8315611431576000856001600160a01b03168560405160006040518083038185875af1925050503d8060008114611988576040519150601f19603f3d011682016040523d82523d6000602084013e61198d565b606091505b5050905080610c925760405162461bcd60e51b815260206004820152601b60248201527f7365727669636520666565207472616e73666572206661696c656400000000006044820152606401610d9e565b611a106040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b611a426040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000611a4e8482611e0b565b9083529050611a5d8482611e0b565b60208401919091529050611a718482611e0b565b60408401919091529050611a858482611e0b565b60608401919091529050611a998482611f3c565b5060808301525092915050565b6004546001600160a01b03848116911614611ad457604051631440e07960e11b815260040160405180910390fd5b60025467ffffffffffffffff858116600160a01b9092041614611b0a57604051633876304f60e21b815260040160405180910390fd5b8051611b295760405163820bf1e560e01b815260040160405180910390fd5b6002546040516378d60cd760e01b81526001600160a01b03909116906378d60cd790611b5b9084908690600401612ef9565b600060405180830381600087803b158015611b7557600080fd5b505af1158015611b89573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b03821115611bec5760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606401610d9e565b60405160208082526000601f5b82821015611c1b5785811a826020860101536001919091019060001901611bf9565b5050506040818101905292915050565b8051606090611c3981612049565b83604051602001611c4b929190612ccd565b604051602081830303815290604052915050919050565b60606000611c71836002612fba565b611c7c906002612f80565b67ffffffffffffffff811115611c9457611c94613087565b6040519080825280601f01601f191660200182016040528015611cbe576020820181803683370190505b509050600360fc1b81600081518110611cd957611cd9613071565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611d0857611d08613071565b60200101906001600160f81b031916908160001a9053506000611d2c846002612fba565b611d37906001612f80565b90505b6001811115611dbc577f303132333435363738396162636465660000000000000000000000000000000085600f1660108110611d7857611d78613071565b1a60f81b828281518110611d8e57611d8e613071565b60200101906001600160f81b031916908160001a90535060049490941c93611db581613009565b9050611d3a565b50831561181c5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d9e565b6000808351836020611e1d9190612f80565b11158015611e345750611e31836020612f80565b83105b611e8c5760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608401610d9e565b600060405160206000600182038760208a0101515b83831015611ec15780821a83860153600183019250600182039150611ea1565b50505081016040525190506001600160ff1b03811115611f235760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606401610d9e565b80611f2f856020612f80565b92509250505b9250929050565b6060600080611f4b8585612116565b8651909550909150611f5d8286612f80565b11158015611f735750611f708185612f80565b84105b611fcb5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608401610d9e565b606081158015611fe657604051915060208201604052612030565b6040519150601f8316801560200281840101848101888315602002848c0101015b8183101561201f578051835260209283019201612007565b5050848452601f01601f1916604052505b508061203c8387612f80565b9350935050509250929050565b606060fd8267ffffffffffffffff16101561207c57604080516001815260f884901b60208201526021810190915261166e565b61ffff8267ffffffffffffffff16116120cc5761209c60fd60f81b61231c565b6120a583612343565b6040516020016120b6929190612ccd565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116120f7576120ee607f60f91b61231c565b6120a583612386565b6121086001600160f81b031961231c565b6120a5836123c9565b919050565b6000806000612125858561240c565b94509050600060fd60f81b6001600160f81b0319831614156121be5761214b8686612494565b955061ffff16905060fd8110801590612166575061ffff8111155b6121b25760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606401610d9e565b9250839150611f359050565b607f60f91b6001600160f81b031983161415612249576121de868661254d565b955063ffffffff16905061ffff811180156121fd575063ffffffff8111155b6121b25760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610d9e565b6001600160f81b031980831614156122c657612265868661261f565b955067ffffffffffffffff16905063ffffffff81116121b25760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610d9e565b5060f881901c60fd81106121b25760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610d9e565b60408051600181526001600160f81b0319831660208201526021810190915260609061166e565b6040516002808252606091906000601f5b828210156123765785811a826020860101536001919091019060001901612354565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156123b95785811a826020860101536001919091019060001901612397565b5050506024810160405292915050565b6040516008808252606091906000601f5b828210156123fc5785811a8260208601015360019190910190600019016123da565b5050506028810160405292915050565b600080835183600161241e9190612f80565b111580156124355750612432836001612f80565b83105b6124815760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152606401610d9e565b8383016020015180611f2f856001612f80565b60008083518360026124a69190612f80565b111580156124bd57506124ba836002612f80565b83105b6125145760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610d9e565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e81035191505080846002611f2f9190612f80565b600080835183600461255f9190612f80565b111580156125765750612573836004612f80565b83105b6125cd5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610d9e565b600060405160046000600182038760208a0101515b838310156126025780821a838601536001830192506001820391506125e2565b505050818101604052602003900351905080611f2f856004612f80565b60008083518360086126319190612f80565b111580156126485750612645836008612f80565b83105b61269f5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610d9e565b600060405160086000600182038760208a0101515b838310156126d45780821a838601536001830192506001820391506126b4565b505050818101604052602003900351905080611f2f856008612f80565b8280546126fd90613020565b90600052602060002090601f01602090048101928261271f5760008555612765565b82601f1061273857805160ff1916838001178555612765565b82800160010185558215612765579182015b8281111561276557825182559160200191906001019061274a565b50612771929150612775565b5090565b5b808211156127715760008155600101612776565b600067ffffffffffffffff808411156127a5576127a5613087565b604051601f8501601f19908116603f011681019082821181831017156127cd576127cd613087565b816040528093508581528686860111156127e657600080fd5b858560208301376000602087830101525050509392505050565b60008083601f84011261281257600080fd5b50813567ffffffffffffffff81111561282a57600080fd5b602083019150836020828501011115611f3557600080fd5b600082601f83011261285357600080fd5b61181c8383356020850161278a565b80356fffffffffffffffffffffffffffffffff8116811461211157600080fd5b60006020828403121561289457600080fd5b813561181c8161309d565b6000602082840312156128b157600080fd5b813561181c816130b5565b6000602082840312156128ce57600080fd5b815161181c816130b5565b60008060008060008060006080888a0312156128f457600080fd5b87359650602088013567ffffffffffffffff8082111561291357600080fd5b61291f8b838c01612800565b909850965060408a013591508082111561293857600080fd5b6129448b838c01612800565b909650945060608a013591508082111561295d57600080fd5b5061296a8a828b01612800565b989b979a50959850939692959293505050565b60008060008060008060008060008060c08b8d03121561299c57600080fd5b8a35995060208b013567ffffffffffffffff808211156129bb57600080fd5b6129c78e838f01612800565b909b50995060408d01359150808211156129e057600080fd5b6129ec8e838f01612800565b909950975060608d0135915080821115612a0557600080fd5b612a118e838f01612800565b909750955060808d0135915080821115612a2a57600080fd5b50612a378d828e01612800565b9150809450508092505060a08b013590509295989b9194979a5092959850565b600060208284031215612a6957600080fd5b813567ffffffffffffffff80821115612a8157600080fd5b908301906101008286031215612a9657600080fd5b612a9e612f56565b823581526020830135602082015260408301356040820152612ac260608401612862565b6060820152608083013582811115612ad957600080fd5b612ae587828601612842565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b600060208284031215612b2757600080fd5b5035919050565b600060208284031215612b4057600080fd5b5051919050565b600080600060608486031215612b5c57600080fd5b833567ffffffffffffffff8082168214612b7557600080fd5b90935060208501359080821115612b8b57600080fd5b508401601f81018613612b9d57600080fd5b612bac8682356020840161278a565b9250506040840135612bbd8161309d565b809150509250925092565b60008151808452612be0816020860160208601612fd9565b601f01601f19169290920160200192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8054600090600181811c9080831680612c3757607f831692505b6020808410821415612c5957634e487b7160e01b600052602260045260246000fd5b83885260208801828015612c745760018114612c8557612cb0565b60ff19871682528282019750612cb0565b60008981526020902060005b87811015612caa57815484820152908601908401612c91565b83019850505b5050505050505092915050565b8183823760009101908152919050565b60008351612cdf818460208801612fd9565b835190830190612cf3818360208801612fd9565b01949350505050565b60008651612d0e818460208b01612fd9565b865190830190612d22818360208b01612fd9565b8651910190612d35818360208a01612fd9565b8551910190612d48818360208901612fd9565b8451910190612d5b818360208801612fd9565b01979650505050505050565b60006001600160a01b03808816835260a06020840152612d8a60a0840188612c1d565b8381036040850152612d9c8188612bc8565b90508381036060850152612db08187612bc8565b9250508084166080840152509695505050505050565b60608101818360005b6003811015612dee578151835260209283019290910190600101612dcf565b50505092915050565b89815260c060208201526000612e1160c083018a8c612bf4565b8281036040840152612e2481898b612bf4565b90508660608401528281036080840152612e3f818688612bf4565b9150508260a08301529a9950505050505050505050565b6020810160028310612e7857634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600061181c6020830184612bc8565b604081526000612ea46040830185612c1d565b82810360208401526115ce8185612bc8565b606081526000612ec96060830186612c1d565b8281036020840152612edb8186612bc8565b90508281036040840152612eef8185612bc8565b9695505050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152612f3d60e0840182612bc8565b9150506001600160a01b03831660208301529392505050565b604051610100810167ffffffffffffffff81118282101715612f7a57612f7a613087565b60405290565b60008219821115612f9357612f9361305b565b500190565b600082612fb557634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612fd457612fd461305b565b500290565b60005b83811015612ff4578181015183820152602001612fdc565b83811115613003576000848401525b50505050565b6000816130185761301861305b565b506000190190565b600181811c9082168061303457607f821691505b6020821081141561305557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146130b257600080fd5b50565b80151581146130b257600080fdfea2646970667358221220f093b8c9ad5db0b2c2905b6180b46627af7fcadbdbb2970760e1d15d4cbed50b64736f6c63430008070033';

type MystikoV2AxelarMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarMain__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2AxelarMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2AxelarMain {
    return super.attach(address) as MystikoV2AxelarMain;
  }
  connect(signer: Signer): MystikoV2AxelarMain__factory {
    return super.connect(signer) as MystikoV2AxelarMain__factory;
  }
  static readonly contractName: 'MystikoV2AxelarMain';
  public readonly contractName: 'MystikoV2AxelarMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarMainInterface {
    return new utils.Interface(_abi) as MystikoV2AxelarMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarMain;
  }
}
