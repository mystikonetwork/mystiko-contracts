/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x1Verifier, Transaction1x1VerifierInterface } from '../Transaction1x1Verifier';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611686806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611480565b610057565b604051901515815260200160405180910390f35b600081516008146100ae5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420696e707574206c656e677468000000000000000000000000604482015260640160405180910390fd5b6100b882846100bf565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100eb610316565b905080608001515185516001610101919061158c565b1461010b57600080fd5b835151821161011957600080fd5b835160200151821161012a57600080fd5b60208401515151821161013c57600080fd5b602084810151015151821161015057600080fd5b602084810151510151821161016457600080fd5b6020848101518101510151821161017a57600080fd5b604084015151821161018b57600080fd5b818460400151602001511061019f57600080fd5b83516101aa906109f3565b6101b357600080fd5b6101c08460200151610a6b565b6101c957600080fd5b6101d684604001516109f3565b6101df57600080fd5b604080518082019091526000808252602082018190525b865181101561028d578387828151811061021257610212611624565b60200260200101511061022457600080fd5b61027982610274856080015184600161023d919061158c565b8151811061024d5761024d611624565b60200260200101518a858151811061026757610267611624565b6020026020010151610b55565b610bb3565b915080610285816115bb565b9150506101f6565b506102b68183608001516000815181106102a9576102a9611624565b6020026020010151610bb3565b90506102c1816109f3565b6102ca57600080fd5b61030c856000015186602001516102e084610c0d565b85604001516102f28a60400151610c0d565b6060880151885161030290610c0d565b8960200151610cbb565b9695505050505050565b61031e61124a565b6040805180820182527f2383715c1409cc13ffbbc12d84bddc2b9929fdab59e9f2abe97e3ad963f4a5d281527f1b66f1efd0170894bff0b2b013c5d96314c79cff977f3470b52e908ebad235286020808301919091529083528151608080820184527f2a437ca961d8eb900d431eb5b3c657602a5f343269d2d82c5486d21f74b59a0f8285019081527f14a86380af6e7224fef8a8ee214a7ee657d848a39fe4548f018778b3127894ce606080850191909152908352845180860186527f100db3b8c529230c84233d8cd287f9097c7a9da9041d3a9d58c1e32c28983e3781527f21d6cdacdd1bdd2af8f3cc71014986e5546190029c1e573f198393964c16b0b9818601528385015285840192909252835180820185527f24c1437954450a778cdb575e5da7ddbe56f08d7c0fb878c228b785e866b29d488186019081527f01c72e1474ad9cddc0787d58f808e87dbd8361d895dc65f19c84ab7602066153828501528152845180860186527f1bef68fde7fac29bb7421f2f4d878d838c52bdefc00f5849cdca97fc62b5113c81527f08826bb1a5dcee0bbbd5685c44cc352322ea4601ec8572be41d90e9f15b78431818601528185015285850152835190810184527f28d570981d776fa49e02f0d30f41a5777a36cb429b3ed53cc09f650353a997b78185019081527f095fc1a8972518945ace94a7ee49534a16b91acd8d3e5e1cde3ef6f6813ebfda828401528152835180850185527f19b729804d92d62622de131da9bd66c5cf7f3f3e416ff1f2a88b8d9911f28ab481527f1373e96b54cdd8223a4603e7b6cc68455bf2a5538225ffd0a8ee8661e887326d818501528184015290840152815160098082526101408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161059a57505060808201908152604080518082019091527f2d213064e194957743913032e4e460402a006157b9485b68cb6507536e0f23b181527f0462932ae39874fdd1932a5135b1939069bb2835f581476b8ab9da5abe8cbc2960208201529051805160009061062d5761062d611624565b602002602001018190525060405180604001604052807f22fa1d7b5d9c6dddda8941f955e9bec0adc6abb453748976aa77532455ff961281526020017f2919a18e215e54bbeacfb3a4111432e208b9fd7f16beb31b3c3ff0c4f304109281525081608001516001815181106106a4576106a4611624565b602002602001018190525060405180604001604052807f205a80f0113beab83010818daa426a8a72741f204b566753c6809166bfb62a3a81526020017f13c437bbc284eaafdea48475bbc9e370e4fcc67d5deb8b3f9ce3bfdeec7102b8815250816080015160028151811061071b5761071b611624565b602002602001018190525060405180604001604052807f2a4b10c069ac7414a4744cdd09e346dd6a5f77e053048fceeaf980cc3554ed7481526020017f2c880215975fb375e3fd197efa7591f7389cda836220bb3016f8e40653b8d87d815250816080015160038151811061079257610792611624565b602002602001018190525060405180604001604052807f1dd8de0c4ca0d8540bc697ef40dc06ac6ca42eff1cd31f01abf197c67135f31e81526020017f1ba82916f6a03af54a29bf9fa15c613b7d7073455f7a8e3cda8945889d57e7bd815250816080015160048151811061080957610809611624565b602002602001018190525060405180604001604052807f1c65eed03179ff4308ecdef6669b4dc85e59e80aa317b1f65f2ba16b84a2b81281526020017f209ddd48b28834e230e2906af984ef87e54a4fcdd3a3c318be63bd531f8a90ff815250816080015160058151811061088057610880611624565b602002602001018190525060405180604001604052807f230272b394c0d94dbb5553e4f49f8d653cc6b384c14b404c7c498496b93e900f81526020017f0813ea90f7b3597fca0b35e4a7e911d9382f315c5e3c5fd395ae7eb6d150553381525081608001516006815181106108f7576108f7611624565b602002602001018190525060405180604001604052807f2caa740a8e710cc3998d4bd8f037669cffdcfac1aa6bda0d342b9b68ffcdc37381526020017f190714c6cc16c5f3c566c7bbbbeed5296d9ce5cc91213ab620029bca2a934090815250816080015160078151811061096e5761096e611624565b602002602001018190525060405180604001604052807f08f5126b744ccafbed43f8bea8123d7d56fbfb8f426260124bd6b4b92d15448481526020017f09b2d7b14d4c18efc6a3c8c93571f01ef7cf8eafd7ede4df950c555938c83cf481525081608001516008815181106109e5576109e5611624565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610a218160036115d6565b8180610a2f57610a2f61160e565b84518380610a3f57610a3f61160e565b86518009098280610a5257610a5261160e565b60208601518009610a6391906115a4565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2928592839283928392610adb92909190829060015b602002015161111c565b895180516020820151939750919550610b00929060005b60200201518b516001610ad1565b89519193509150610b1690839083906000610af2565b9092509050610b278484848461119d565b9094509250610b388484888861119d565b909450925083158015610b49575082155b98975050505050505050565b6040805180820190915260008082526020820152610b7161129b565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b575b5080610bab57600080fd5b505092915050565b6040805180820190915260008082526020820152610bcf6112b9565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b57610ba0565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610c78576040518060400160405280828560000151610c6791906115d6565b815260006020909101529392505050565b6040518060400160405280828560000151610c9391906115d6565b8152602001828560200151610ca891906115d6565b610cb290846115a4565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610cfc57610cfc611624565b6020026020010181815250508a6020015181600181518110610d2057610d20611624565b602090810291909101015289516001602002015181600281518110610d4757610d47611624565b6020908102919091010152895151815182906003908110610d6a57610d6a611624565b6020026020010181815250508960200151600160028110610d8d57610d8d611624565b602002015181600481518110610da557610da5611624565b6020026020010181815250508960200151600060028110610dc857610dc8611624565b602002015181600581518110610de057610de0611624565b602002602001018181525050886000015181600681518110610e0457610e04611624565b602002602001018181525050886020015181600781518110610e2857610e28611624565b602090810291909101015287516001602002015181600881518110610e4f57610e4f611624565b6020908102919091010152875151815182906009908110610e7257610e72611624565b6020026020010181815250508760200151600160028110610e9557610e95611624565b602002015181600a81518110610ead57610ead611624565b6020026020010181815250508760200151600060028110610ed057610ed0611624565b602002015181600b81518110610ee857610ee8611624565b602002602001018181525050866000015181600c81518110610f0c57610f0c611624565b602002602001018181525050866020015181600d81518110610f3057610f30611624565b602090810291909101015285516001602002015181600e81518110610f5757610f57611624565b602090810291909101015285515181518290600f908110610f7a57610f7a611624565b6020026020010181815250508560200151600160028110610f9d57610f9d611624565b602002015181601081518110610fb557610fb5611624565b6020026020010181815250508560200151600060028110610fd857610fd8611624565b602002015181601181518110610ff057610ff0611624565b60200260200101818152505084600001518160128151811061101457611014611624565b60200260200101818152505084602001518160138151811061103857611038611624565b60209081029190910101528351600160200201518160148151811061105f5761105f611624565b602090810291909101015283515181518290601590811061108257611082611624565b60200260200101818152505083602001516001600281106110a5576110a5611624565b6020020151816016815181106110bd576110bd611624565b60200260200101818152505083602001516000600281106110e0576110e0611624565b6020020151816017815181106110f8576110f8611624565b60200260200101818152505061110d816111e5565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761115e8186890982806111555761115561160e565b86890983611226565b818061116c5761116c61160e565b828061117a5761117a61160e565b878909838061118b5761118b61160e565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476111cc878683611226565b6111d7878684611226565b925092505094509492505050565b80516000906111f26112d7565b6000602082602085026020880160086107d05a03fa905080801561002b57508061121b57600080fd5b505115159392505050565b600081806112365761123661160e565b61124084846115a4565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016112746112f5565b81526020016112816112f5565b815260200161128e6112f5565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061130861131a565b815260200161131561131a565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261134957600080fd5b611351611540565b80838560408601111561136357600080fd5b60005b6002811015611385578135845260209384019390910190600101611366565b509095945050505050565b600082601f8301126113a157600080fd5b8135602067ffffffffffffffff808311156113be576113be61163a565b8260051b604051601f19603f830116810181811084821117156113e3576113e361163a565b6040528481528381019250868401828801850189101561140257600080fd5b600092505b85831015611425578035845292840192600192909201918401611407565b50979650505050505050565b60006040828403121561144357600080fd5b6040516040810181811067ffffffffffffffff821117156114665761146661163a565b604052823581526020928301359281019290925250919050565b60008082840361012081121561149557600080fd5b610100808212156114a557600080fd5b6114ad611569565b6114b78787611431565b81526080603f19840112156114cb57600080fd5b6114d3611540565b92506114e28760408801611338565b83526114f18760808801611338565b60208401528260208201526115098760c08801611431565b60408201529350840135905067ffffffffffffffff81111561152a57600080fd5b61153685828601611390565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156115635761156361163a565b60405290565b6040516060810167ffffffffffffffff811182821017156115635761156361163a565b6000821982111561159f5761159f6115f8565b500190565b6000828210156115b6576115b66115f8565b500390565b60006000198214156115cf576115cf6115f8565b5060010190565b6000826115f357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212203d80729d7fa1fdd920ea19bde9067360a43ba45a6222c0ec3e801a3ae072bb8764736f6c63430008070033';

type Transaction1x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x1Verifier {
    return super.attach(address) as Transaction1x1Verifier;
  }
  connect(signer: Signer): Transaction1x1Verifier__factory {
    return super.connect(signer) as Transaction1x1Verifier__factory;
  }
  static readonly contractName: 'Transaction1x1Verifier';
  public readonly contractName: 'Transaction1x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x1Verifier;
  }
}
