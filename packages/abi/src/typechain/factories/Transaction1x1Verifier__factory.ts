/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x1Verifier, Transaction1x1VerifierInterface } from '../Transaction1x1Verifier';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611686806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611480565b610057565b604051901515815260200160405180910390f35b600081516008146100ae5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420696e707574206c656e677468000000000000000000000000604482015260640160405180910390fd5b6100b882846100bf565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100eb610316565b905080608001515185516001610101919061158c565b1461010b57600080fd5b835151821161011957600080fd5b835160200151821161012a57600080fd5b60208401515151821161013c57600080fd5b602084810151015151821161015057600080fd5b602084810151510151821161016457600080fd5b6020848101518101510151821161017a57600080fd5b604084015151821161018b57600080fd5b818460400151602001511061019f57600080fd5b83516101aa906109f3565b6101b357600080fd5b6101c08460200151610a6b565b6101c957600080fd5b6101d684604001516109f3565b6101df57600080fd5b604080518082019091526000808252602082018190525b865181101561028d578387828151811061021257610212611624565b60200260200101511061022457600080fd5b61027982610274856080015184600161023d919061158c565b8151811061024d5761024d611624565b60200260200101518a858151811061026757610267611624565b6020026020010151610b55565b610bb3565b915080610285816115bb565b9150506101f6565b506102b68183608001516000815181106102a9576102a9611624565b6020026020010151610bb3565b90506102c1816109f3565b6102ca57600080fd5b61030c856000015186602001516102e084610c0d565b85604001516102f28a60400151610c0d565b6060880151885161030290610c0d565b8960200151610cbb565b9695505050505050565b61031e61124a565b6040805180820182527f240dbe0d917b669acf6d9707aa556c1caae7103510a0f3b51f0813c5953d8b0681527f1932a16097016a0994145cdc5829635a89692fac1683a1fbb6efc84d962053c36020808301919091529083528151608080820184527f21fd4c5ea51dd3cf9c0f30d76ff87ee3f768307c2d7f7b6b461a56a70a0b379d8285019081527f3038a8567dc4f49526833be5274f4ab75fadc9d54acfdf854fe5bc330eb1400b606080850191909152908352845180860186527f2d3cd48b586dbb250fe25db49722bccfb8031187e71085d58ad722d7afd0675281527f21621eae61598a2ea835dfe9ad42c7569e07b22b4c519930198786d35ebea4e4818601528385015285840192909252835180820185527f024e9331ebcbc29d00bb274cf7c6a36369e7d15b695c37e6e688f7aba4a479be8186019081527f149970b5fdb94f4078bdeafb60a8a24b7255c97870b85e9f6f8f1bf7b4208215828501528152845180860186527f2f3a0678d107deac9af7b48c031dd0f833673e6f5a109665f9c79a406728e8e181527f1b3988e62f1b5b40cb588dd4f9832261762da1805205f6319faa792dd2672093818601528185015285850152835190810184527f28e22bcf70457f35753e4ab2f3e26c291461834781309b540e951ce118dad0958185019081527f274f4b27d7c6c391ed6ff89cd0cb15efab222faaa063669eba2d7496cf0a4008828401528152835180850185527f0fa4d83b80e738df12b765a1707e8e9b10676fe6b8b3e069affefb9f2e3929bd81527f102646b828300be66610436f11e33961fcf31d364d4f3a40b0bf69e08083d6af818501528184015290840152815160098082526101408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161059a57505060808201908152604080518082019091527f1fe073af706f095f8ba455ae03ef7c7e85e0d703c82f6b33fffc93d1982f9dee81527f1f6e1b19f2f1644b85dbf82072d52e62076393fa9708c71496c3f2c68632c07a60208201529051805160009061062d5761062d611624565b602002602001018190525060405180604001604052807f0ef73c51ea044df5c3191c192a850a223f0f8b59af33283d7e4e71c06de5bb6781526020017f29a69b83434ea2a9c53e47638e05f249ca474b2ac6f5c54ad9c885a0c90f6cf281525081608001516001815181106106a4576106a4611624565b602002602001018190525060405180604001604052807f303c666d45cb48301e68b5cb0cca37c3a30ef6b744a174a939aff70432e9caa681526020017f1b1c46c862a8bb4e8037cc40e8579b5cc4cc1c54d9d276fe62b5d3e9d60a7eda815250816080015160028151811061071b5761071b611624565b602002602001018190525060405180604001604052807f2de2e66c4384906f90b48535a0982d540ebc6997ea44bb585b8d91bca9c38c6281526020017f22bf1de90ba81c4b76d9fc91603317abf3f1b0e7bfe5d4ad638afd9e35c70dfe815250816080015160038151811061079257610792611624565b602002602001018190525060405180604001604052807f201d8d3f636340c1df0981ddf6b1877ae205229f46019bb9e8b56ff223d9f66f81526020017f13115abe4ced5921b547098efb269ada9f26207571cb2d9608c5d2f4aede705f815250816080015160048151811061080957610809611624565b602002602001018190525060405180604001604052807f13dc74e0f8cf02c0be3b26904f8d349e7708158b890e54f9a98e3f73011aa62d81526020017f2d578548e8440b5ac790277f1a3e7294b3f0a9d797ef8e510e03bd65e3e151ac815250816080015160058151811061088057610880611624565b602002602001018190525060405180604001604052807f28614ff9bd9b8b93d3374bdc806c274a72a082699f95213a5bc03b04409bab5f81526020017f1eddab692da4e71f961ffcdf1729f3d5ce7fc2c1c3a6ac768aab2ef24577c40b81525081608001516006815181106108f7576108f7611624565b602002602001018190525060405180604001604052807f0e1cf3fe28265bb3ba42c452b510f7a9d533ca352cde7a79cc20464bf3e819b281526020017f2ce65c124f74d08ae00cd64e0020873f651f4fa980acdbeafb6bce4140585bee815250816080015160078151811061096e5761096e611624565b602002602001018190525060405180604001604052807f2372f39481d3a886820d44f5db3c7207276e8a3376cbc1d3e3ad72d87f0b133681526020017f0504b288821f3654d25f88851ca95225785e7b3069f52af37a461d562d02c22b81525081608001516008815181106109e5576109e5611624565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610a218160036115d6565b8180610a2f57610a2f61160e565b84518380610a3f57610a3f61160e565b86518009098280610a5257610a5261160e565b60208601518009610a6391906115a4565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2928592839283928392610adb92909190829060015b602002015161111c565b895180516020820151939750919550610b00929060005b60200201518b516001610ad1565b89519193509150610b1690839083906000610af2565b9092509050610b278484848461119d565b9094509250610b388484888861119d565b909450925083158015610b49575082155b98975050505050505050565b6040805180820190915260008082526020820152610b7161129b565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b575b5080610bab57600080fd5b505092915050565b6040805180820190915260008082526020820152610bcf6112b9565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b57610ba0565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610c78576040518060400160405280828560000151610c6791906115d6565b815260006020909101529392505050565b6040518060400160405280828560000151610c9391906115d6565b8152602001828560200151610ca891906115d6565b610cb290846115a4565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610cfc57610cfc611624565b6020026020010181815250508a6020015181600181518110610d2057610d20611624565b602090810291909101015289516001602002015181600281518110610d4757610d47611624565b6020908102919091010152895151815182906003908110610d6a57610d6a611624565b6020026020010181815250508960200151600160028110610d8d57610d8d611624565b602002015181600481518110610da557610da5611624565b6020026020010181815250508960200151600060028110610dc857610dc8611624565b602002015181600581518110610de057610de0611624565b602002602001018181525050886000015181600681518110610e0457610e04611624565b602002602001018181525050886020015181600781518110610e2857610e28611624565b602090810291909101015287516001602002015181600881518110610e4f57610e4f611624565b6020908102919091010152875151815182906009908110610e7257610e72611624565b6020026020010181815250508760200151600160028110610e9557610e95611624565b602002015181600a81518110610ead57610ead611624565b6020026020010181815250508760200151600060028110610ed057610ed0611624565b602002015181600b81518110610ee857610ee8611624565b602002602001018181525050866000015181600c81518110610f0c57610f0c611624565b602002602001018181525050866020015181600d81518110610f3057610f30611624565b602090810291909101015285516001602002015181600e81518110610f5757610f57611624565b602090810291909101015285515181518290600f908110610f7a57610f7a611624565b6020026020010181815250508560200151600160028110610f9d57610f9d611624565b602002015181601081518110610fb557610fb5611624565b6020026020010181815250508560200151600060028110610fd857610fd8611624565b602002015181601181518110610ff057610ff0611624565b60200260200101818152505084600001518160128151811061101457611014611624565b60200260200101818152505084602001518160138151811061103857611038611624565b60209081029190910101528351600160200201518160148151811061105f5761105f611624565b602090810291909101015283515181518290601590811061108257611082611624565b60200260200101818152505083602001516001600281106110a5576110a5611624565b6020020151816016815181106110bd576110bd611624565b60200260200101818152505083602001516000600281106110e0576110e0611624565b6020020151816017815181106110f8576110f8611624565b60200260200101818152505061110d816111e5565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761115e8186890982806111555761115561160e565b86890983611226565b818061116c5761116c61160e565b828061117a5761117a61160e565b878909838061118b5761118b61160e565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476111cc878683611226565b6111d7878684611226565b925092505094509492505050565b80516000906111f26112d7565b6000602082602085026020880160086107d05a03fa905080801561002b57508061121b57600080fd5b505115159392505050565b600081806112365761123661160e565b61124084846115a4565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016112746112f5565b81526020016112816112f5565b815260200161128e6112f5565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061130861131a565b815260200161131561131a565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261134957600080fd5b611351611540565b80838560408601111561136357600080fd5b60005b6002811015611385578135845260209384019390910190600101611366565b509095945050505050565b600082601f8301126113a157600080fd5b8135602067ffffffffffffffff808311156113be576113be61163a565b8260051b604051601f19603f830116810181811084821117156113e3576113e361163a565b6040528481528381019250868401828801850189101561140257600080fd5b600092505b85831015611425578035845292840192600192909201918401611407565b50979650505050505050565b60006040828403121561144357600080fd5b6040516040810181811067ffffffffffffffff821117156114665761146661163a565b604052823581526020928301359281019290925250919050565b60008082840361012081121561149557600080fd5b610100808212156114a557600080fd5b6114ad611569565b6114b78787611431565b81526080603f19840112156114cb57600080fd5b6114d3611540565b92506114e28760408801611338565b83526114f18760808801611338565b60208401528260208201526115098760c08801611431565b60408201529350840135905067ffffffffffffffff81111561152a57600080fd5b61153685828601611390565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156115635761156361163a565b60405290565b6040516060810167ffffffffffffffff811182821017156115635761156361163a565b6000821982111561159f5761159f6115f8565b500190565b6000828210156115b6576115b66115f8565b500390565b60006000198214156115cf576115cf6115f8565b5060010190565b6000826115f357634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122065f570efd081e56596d264a9ddd87fbb4b6f1fb60940444a171fb207f57cd4ad64736f6c63430008070033';

type Transaction1x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x1Verifier {
    return super.attach(address) as Transaction1x1Verifier;
  }
  connect(signer: Signer): Transaction1x1Verifier__factory {
    return super.connect(signer) as Transaction1x1Verifier__factory;
  }
  static readonly contractName: 'Transaction1x1Verifier';
  public readonly contractName: 'Transaction1x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x1Verifier;
  }
}
