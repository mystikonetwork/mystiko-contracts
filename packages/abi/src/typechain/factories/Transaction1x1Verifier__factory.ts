/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x1Verifier, Transaction1x1VerifierInterface } from '../Transaction1x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611797806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611591565b610057565b604051901515815260200160405180910390f35b6000815160081461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce919061169d565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90610adc565b610248576040516361586bdd60e01b815260040160405180910390fd5b6102558460200151610b54565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151610adc565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611735565b6020026020010151610c3e565b905060005b865181101561038c57838782815181106102fd576102fd611735565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c919061169d565b8151811061034c5761034c611735565b60200260200101518a858151811061036657610366611735565b6020026020010151610cbb565b610c3e565b915080610384816116cc565b9150506102e1565b5061039681610adc565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984610d0a565b85604001516103db8a60400151610d0a565b606088015188516103eb90610d0a565b8960200151610db8565b9695505050505050565b61040761135b565b6040805180820182527f2383715c1409cc13ffbbc12d84bddc2b9929fdab59e9f2abe97e3ad963f4a5d281527f1b66f1efd0170894bff0b2b013c5d96314c79cff977f3470b52e908ebad235286020808301919091529083528151608080820184527f2a437ca961d8eb900d431eb5b3c657602a5f343269d2d82c5486d21f74b59a0f8285019081527f14a86380af6e7224fef8a8ee214a7ee657d848a39fe4548f018778b3127894ce606080850191909152908352845180860186527f100db3b8c529230c84233d8cd287f9097c7a9da9041d3a9d58c1e32c28983e3781527f21d6cdacdd1bdd2af8f3cc71014986e5546190029c1e573f198393964c16b0b9818601528385015285840192909252835180820185527f24c1437954450a778cdb575e5da7ddbe56f08d7c0fb878c228b785e866b29d488186019081527f01c72e1474ad9cddc0787d58f808e87dbd8361d895dc65f19c84ab7602066153828501528152845180860186527f1bef68fde7fac29bb7421f2f4d878d838c52bdefc00f5849cdca97fc62b5113c81527f08826bb1a5dcee0bbbd5685c44cc352322ea4601ec8572be41d90e9f15b78431818601528185015285850152835190810184527f28d570981d776fa49e02f0d30f41a5777a36cb429b3ed53cc09f650353a997b78185019081527f095fc1a8972518945ace94a7ee49534a16b91acd8d3e5e1cde3ef6f6813ebfda828401528152835180850185527f19b729804d92d62622de131da9bd66c5cf7f3f3e416ff1f2a88b8d9911f28ab481527f1373e96b54cdd8223a4603e7b6cc68455bf2a5538225ffd0a8ee8661e887326d818501528184015290840152815160098082526101408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f2d213064e194957743913032e4e460402a006157b9485b68cb6507536e0f23b181527f0462932ae39874fdd1932a5135b1939069bb2835f581476b8ab9da5abe8cbc2960208201529051805160009061071657610716611735565b602002602001018190525060405180604001604052807f22fa1d7b5d9c6dddda8941f955e9bec0adc6abb453748976aa77532455ff961281526020017f2919a18e215e54bbeacfb3a4111432e208b9fd7f16beb31b3c3ff0c4f3041092815250816080015160018151811061078d5761078d611735565b602002602001018190525060405180604001604052807f205a80f0113beab83010818daa426a8a72741f204b566753c6809166bfb62a3a81526020017f13c437bbc284eaafdea48475bbc9e370e4fcc67d5deb8b3f9ce3bfdeec7102b8815250816080015160028151811061080457610804611735565b602002602001018190525060405180604001604052807f2a4b10c069ac7414a4744cdd09e346dd6a5f77e053048fceeaf980cc3554ed7481526020017f2c880215975fb375e3fd197efa7591f7389cda836220bb3016f8e40653b8d87d815250816080015160038151811061087b5761087b611735565b602002602001018190525060405180604001604052807f1dd8de0c4ca0d8540bc697ef40dc06ac6ca42eff1cd31f01abf197c67135f31e81526020017f1ba82916f6a03af54a29bf9fa15c613b7d7073455f7a8e3cda8945889d57e7bd81525081608001516004815181106108f2576108f2611735565b602002602001018190525060405180604001604052807f1c65eed03179ff4308ecdef6669b4dc85e59e80aa317b1f65f2ba16b84a2b81281526020017f209ddd48b28834e230e2906af984ef87e54a4fcdd3a3c318be63bd531f8a90ff815250816080015160058151811061096957610969611735565b602002602001018190525060405180604001604052807f230272b394c0d94dbb5553e4f49f8d653cc6b384c14b404c7c498496b93e900f81526020017f0813ea90f7b3597fca0b35e4a7e911d9382f315c5e3c5fd395ae7eb6d150553381525081608001516006815181106109e0576109e0611735565b602002602001018190525060405180604001604052807f2caa740a8e710cc3998d4bd8f037669cffdcfac1aa6bda0d342b9b68ffcdc37381526020017f190714c6cc16c5f3c566c7bbbbeed5296d9ce5cc91213ab620029bca2a9340908152508160800151600781518110610a5757610a57611735565b602002602001018190525060405180604001604052807f08f5126b744ccafbed43f8bea8123d7d56fbfb8f426260124bd6b4b92d15448481526020017f09b2d7b14d4c18efc6a3c8c93571f01ef7cf8eafd7ede4df950c555938c83cf48152508160800151600881518110610ace57610ace611735565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610b0a8160036116e7565b8180610b1857610b1861171f565b84518380610b2857610b2861171f565b86518009098280610b3b57610b3b61171f565b60208601518009610b4c91906116b5565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2928592839283928392610bc492909190829060015b6020020151611219565b895180516020820151939750919550610be9929060005b60200201518b516001610bba565b89519193509150610bff90839083906000610bdb565b9092509050610c108484848461129a565b9094509250610c218484888861129a565b909450925083158015610c32575082155b98975050505050505050565b6040805180820190915260008082526020820152610c5a6113ac565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b5080610cb357604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152610cd76113ca565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b57610c94565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610d75576040518060400160405280828560000151610d6491906116e7565b815260006020909101529392505050565b6040518060400160405280828560000151610d9091906116e7565b8152602001828560200151610da591906116e7565b610daf90846116b5565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610df957610df9611735565b6020026020010181815250508a6020015181600181518110610e1d57610e1d611735565b602090810291909101015289516001602002015181600281518110610e4457610e44611735565b6020908102919091010152895151815182906003908110610e6757610e67611735565b6020026020010181815250508960200151600160028110610e8a57610e8a611735565b602002015181600481518110610ea257610ea2611735565b6020026020010181815250508960200151600060028110610ec557610ec5611735565b602002015181600581518110610edd57610edd611735565b602002602001018181525050886000015181600681518110610f0157610f01611735565b602002602001018181525050886020015181600781518110610f2557610f25611735565b602090810291909101015287516001602002015181600881518110610f4c57610f4c611735565b6020908102919091010152875151815182906009908110610f6f57610f6f611735565b6020026020010181815250508760200151600160028110610f9257610f92611735565b602002015181600a81518110610faa57610faa611735565b6020026020010181815250508760200151600060028110610fcd57610fcd611735565b602002015181600b81518110610fe557610fe5611735565b602002602001018181525050866000015181600c8151811061100957611009611735565b602002602001018181525050866020015181600d8151811061102d5761102d611735565b602090810291909101015285516001602002015181600e8151811061105457611054611735565b602090810291909101015285515181518290600f90811061107757611077611735565b602002602001018181525050856020015160016002811061109a5761109a611735565b6020020151816010815181106110b2576110b2611735565b60200260200101818152505085602001516000600281106110d5576110d5611735565b6020020151816011815181106110ed576110ed611735565b60200260200101818152505084600001518160128151811061111157611111611735565b60200260200101818152505084602001518160138151811061113557611135611735565b60209081029190910101528351600160200201518160148151811061115c5761115c611735565b602090810291909101015283515181518290601590811061117f5761117f611735565b60200260200101818152505083602001516001600281106111a2576111a2611735565b6020020151816016815181106111ba576111ba611735565b60200260200101818152505083602001516000600281106111dd576111dd611735565b6020020151816017815181106111f5576111f5611735565b60200260200101818152505061120a816112e2565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761125b8186890982806112525761125261171f565b86890983611337565b81806112695761126961171f565b82806112775761127761171f565b87890983806112885761128861171f565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476112c9878683611337565b6112d4878684611337565b925092505094509492505050565b80516000906112ef6113e8565b6000602082602085026020880160086107d05a03fa905080801561002b57508061132c57604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b600081806113475761134761171f565b61135184846116b5565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611385611406565b8152602001611392611406565b815260200161139f611406565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061141961142b565b815260200161142661142b565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261145a57600080fd5b611462611651565b80838560408601111561147457600080fd5b60005b6002811015611496578135845260209384019390910190600101611477565b509095945050505050565b600082601f8301126114b257600080fd5b8135602067ffffffffffffffff808311156114cf576114cf61174b565b8260051b604051601f19603f830116810181811084821117156114f4576114f461174b565b6040528481528381019250868401828801850189101561151357600080fd5b600092505b85831015611536578035845292840192600192909201918401611518565b50979650505050505050565b60006040828403121561155457600080fd5b6040516040810181811067ffffffffffffffff821117156115775761157761174b565b604052823581526020928301359281019290925250919050565b6000808284036101208112156115a657600080fd5b610100808212156115b657600080fd5b6115be61167a565b6115c88787611542565b81526080603f19840112156115dc57600080fd5b6115e4611651565b92506115f38760408801611449565b83526116028760808801611449565b602084015282602082015261161a8760c08801611542565b60408201529350840135905067ffffffffffffffff81111561163b57600080fd5b611647858286016114a1565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156116745761167461174b565b60405290565b6040516060810167ffffffffffffffff811182821017156116745761167461174b565b600082198211156116b0576116b0611709565b500190565b6000828210156116c7576116c7611709565b500390565b60006000198214156116e0576116e0611709565b5060010190565b60008261170457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b21355151896cd3a1fc39f7b2a0e4af907f652649a5063d8628b678329a992e064736f6c63430008070033';

type Transaction1x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x1Verifier {
    return super.attach(address) as Transaction1x1Verifier;
  }
  connect(signer: Signer): Transaction1x1Verifier__factory {
    return super.connect(signer) as Transaction1x1Verifier__factory;
  }
  static readonly contractName: 'Transaction1x1Verifier';
  public readonly contractName: 'Transaction1x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x1Verifier;
  }
}
