/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x1Verifier, Transaction1x1VerifierInterface } from '../Transaction1x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611f7e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611d78565b610057565b604051901515815260200160405180910390f35b6000815160191461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce9190611e84565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906112c3565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161133b565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516112c3565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611f1c565b6020026020010151611425565b905060005b865181101561038c57838782815181106102fd576102fd611f1c565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c9190611e84565b8151811061034c5761034c611f1c565b60200260200101518a858151811061036657610366611f1c565b60200260200101516114a2565b611425565b91508061038481611eb3565b9150506102e1565b50610396816112c3565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c9846114f1565b85604001516103db8a604001516114f1565b606088015188516103eb906114f1565b896020015161159f565b9695505050505050565b610407611b42565b6040805180820182527f15c8a1e864f802af30ac1d7992dde9ef05e7dbc0b184d6efe6a2bc3353e7b5ae81527f2bb4d40142e98f0f46bde530c2d3b76a0d36d8de23aca1b551eb0111e0016e126020808301919091529083528151608080820184527f03c68f69213692e8f12466febb9d687e94c82f9b19f9a759a80ffdbd09c5290b8285019081527f24533a018ff97d638245338cf011cb5987bfe351be85fd119c666ba99527b25e606080850191909152908352845180860186527f25b5569e318c66438f13696010738675eb11c9122a090f04a7abecd9e39b77b681527f17333a6bbc75b90abf9e48c97eec6f8b9fd0a74c4768b74a5b54b12c930fefd3818601528385015285840192909252835180820185527f2f27c9193f403177dd21d014d86fe90c83f3a86434e2544031e96764b6f7191b8186019081527f290c5032d766d385683b079f4ce9f50afa05b5ac33bef89174db2a7082f980e6828501528152845180860186527f2bc2eb594940a16e6db1220dcc923382d786b3aedae3d9f7e74f81b055103cd581527f1c4f31e02748c8b64395cfd78a220b0d3776893e021c84e11a4a8304553b7468818601528185015285850152835190810184527f0c17c4e81f1018e301a134df7d3099b97fee2202a4edbdc0ae9e4614a49250728185019081527f16158eb7d69a40c80b51e2590c56fe37713fe186e7634471bcb1791c50db308b828401528152835180850185527f0dccd8a3047b35effa168dfe3ce612f4d99bc6619799cca10becbfca8bd3025581527f07d0f77f8b6848d9efb0ac2bbae4119343834e09d6ab70a52394b4e9bedba0408185015281840152908401528151601a8082526103608201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f1ce7fbef6fed1a3865e64aac4acc88664914d4f8781e8253c6a85d392059b53e81527f210ef3504d265ee21e9484f491c97926f280a95749b46768a0c40922526434dd60208201529051805160009061071657610716611f1c565b602002602001018190525060405180604001604052807f0ecbb254d904bf04af7f63cbb7bb1b91101c3c778b939a36db996f6145e6be1481526020017f117ac79f093efddb6c17c8ddd7b161efbcc2f428df1337ff173f7d51e67d5b1f815250816080015160018151811061078d5761078d611f1c565b602002602001018190525060405180604001604052807f035610601fbaec23a7395840fe920ea9232b8bed28a16b7cdc2169a5cb65680181526020017f190d7179118636096b46254824ef73312f55f193ca5c5e7021246f82f3fdf83a815250816080015160028151811061080457610804611f1c565b602002602001018190525060405180604001604052807f02318c6cb420594a7efcbfac37f1181349a75087622dfe0a6b29b7e5282c61bb81526020017f06aa83e8d9dc9319324a83a18bff9ed69ad28e1b0289c72aaa337927697b6031815250816080015160038151811061087b5761087b611f1c565b602002602001018190525060405180604001604052807f2c49e685ef0ba8b3cbe3edf8842b281890995bfc8a2d672eb3d87d6dd4f9364b81526020017f10c62db4330f6409ee262df95a57c4e40be0885539dfabb764a6da994edfafea81525081608001516004815181106108f2576108f2611f1c565b602002602001018190525060405180604001604052807f0ad01d7d9ff6ee71773e1b5198c1065c283c90acae038bfb4d078ba6642a9bbc81526020017f08a53850d5aeb4499ed1990d3e22d974f16a90ffbe0f0ad5bafcfce5b2298180815250816080015160058151811061096957610969611f1c565b602002602001018190525060405180604001604052807f1323c6e8b29f382811af67737b3ed10745859e7ec1b4e10ffaada840f85cc21581526020017f111b93d3e338de43162bae8647183aa7c2fd55068792462fcbe344e7a894b7f781525081608001516006815181106109e0576109e0611f1c565b602002602001018190525060405180604001604052807f13288b681fe9f3f6e0a5fff35843ae1d711ded8545758f4b1ca7e311dcb5f0c681526020017f0bc024f53fa684f0cb2d815aa8dd6f5aca4905e7c284f0bc1cbc9078fc55c4c68152508160800151600781518110610a5757610a57611f1c565b602002602001018190525060405180604001604052807f020aa91c1d9fa4af9f162e003ca69830a353663fb6e7eac52907337e93da247681526020017f0a12288790ac69c96f2ce87b4eb5c6ff73bf4fa5cf3b0a46d25a5bfa19a1aecc8152508160800151600881518110610ace57610ace611f1c565b602002602001018190525060405180604001604052807f0b828a4078563bf000e2f8f4514f0bd129187d9dab2ae351c27404ed001557b981526020017f0bee07ae94977f78a68ca4c3d54824b77f66157fd5f25c3dec144d6bfee6c37c8152508160800151600981518110610b4557610b45611f1c565b602002602001018190525060405180604001604052807f2ad7fb2b2c29ec025a88ef9468819936228b8dd7015f923dfa5edc3a0cbce18681526020017f03c0ed1196b3fde4cd7d6c384f7d6dd0f08617190f3db839ac78cb1a423e7b048152508160800151600a81518110610bbc57610bbc611f1c565b602002602001018190525060405180604001604052807f0c72263c41efec7e892f278ac536d85957c4ea5aa2f1047024ade0f87526b7c781526020017f2e470f81a165ec2bce53698a1b2cd20b2340e7701513a30cc9f25fa25c603ac58152508160800151600b81518110610c3357610c33611f1c565b602002602001018190525060405180604001604052807f15ac63f4d86ac0fe9682555ad32fb7bf0e3ba09bcb095ea2ab9b2d7ec43fb22d81526020017f092f3d861dc3aab5b028cc37215ca8a8acf14c6818e0b8d9c39012fbaaf66c498152508160800151600c81518110610caa57610caa611f1c565b602002602001018190525060405180604001604052807f23f70ddc618d4140abdddbc7dc01fcf3466f76775c73a3e91d54e1927d2b0e8381526020017f29b5592eda31e4b2230657772a8557c7dadb63b8f67eb803098b139c1e1a6ec48152508160800151600d81518110610d2157610d21611f1c565b602002602001018190525060405180604001604052807f1593a8225148ebb05bc4f20f35b135514e8f0f348350c6028c0be985d03a535981526020017f01d92d47f616338692085f68541b0ea4b1bf3369eb10dad48c7378c7ea4036c78152508160800151600e81518110610d9857610d98611f1c565b602002602001018190525060405180604001604052807f14c6ca64b0403497b8535b6cc7054360d8d40852a2572880ba462a0ead85c76a81526020017f138b01981d0cf7663bf5fd0033a91d21d3f3aa9705343001f53a1cd135710c038152508160800151600f81518110610e0f57610e0f611f1c565b602002602001018190525060405180604001604052807f2c3b45f3d3d8445b0b586298d107567825cb7a166b30f3702c858adc5517b71181526020017f20ba28636c2adeff850b93af4e9c0f3370584e080741868e121f7551deb6a71f8152508160800151601081518110610e8657610e86611f1c565b602002602001018190525060405180604001604052807f27334236512de0c17c70272b801fc0e008ada134c8656df831e2d73fbdb88aee81526020017f27c3c7b0b6b71ac916b3266c094654213963939b62bda299005b999206441dc38152508160800151601181518110610efd57610efd611f1c565b602002602001018190525060405180604001604052807f0ea3e65162677961efd17eb5550d6217d9a44375b71343170bb7fa031d63dc9781526020017f0a8d5daba05b5f5bb30b049662a8894405aa04fc617a377ea2fa983f209a70758152508160800151601281518110610f7457610f74611f1c565b602002602001018190525060405180604001604052807f15274a9515252d8a6a28ad49cd5d92f04baa1d7495fe2c9bb3ea2f612aa70b6581526020017f2ba12dad69ed90bd9e84e0a4d826254f1a0c27b9b0f6bf9d28a2bf12345731028152508160800151601381518110610feb57610feb611f1c565b602002602001018190525060405180604001604052807f2e10c3caaae003b779ca38df086eef5dc58fed3ed4712540c1766e56fe2b9a8381526020017f11fafb0a10cc7fe5141e28817a2a0210c374f9185e71277d3d899c794f277b5e815250816080015160148151811061106257611062611f1c565b602002602001018190525060405180604001604052807f1711a5ab7213666dec0b2eee2068731a121e5a284581ffcf30d68696cd0c730781526020017f05be3f8d6ccab0260cb654651edf5ee2d440b495b7c16761600101dd7aaae5b281525081608001516015815181106110d9576110d9611f1c565b602002602001018190525060405180604001604052807f0aac3a329575cb8850954f758c7a9c9bd168c8415fc80fc53480c00c9778983f81526020017f2c919a51bc048a6101b9038121522bde5f93d86c134abc6dc61a20c9534c5746815250816080015160168151811061115057611150611f1c565b602002602001018190525060405180604001604052807f24b925c3640e44ddfa10e3f88227eb90cf3ab15c84403599250cb12f24eb69b181526020017f1d289bf6a9b097df1e33d8dd01efbef44d645aa695394b505bf94644b750414081525081608001516017815181106111c7576111c7611f1c565b602002602001018190525060405180604001604052807f0198bc08be323b82ec8d1c3d2a434987efbe0b111b5486dba31fedf93edf3c8981526020017f1fa1f8072b7cc2a8eeee36fbb4388a134347425990e7a10ccab8729740cfb8fc815250816080015160188151811061123e5761123e611f1c565b602002602001018190525060405180604001604052807f085b4d3fe282b9fa15285d2e166c49174ce490b7020ec25a640c2e18261840d681526020017f251f95c1ba20dbee894999a39898b556484ad821cb555d6b6ec9fc726ffb18ea81525081608001516019815181106112b5576112b5611f1c565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476112f1816003611ece565b81806112ff576112ff611f06565b8451838061130f5761130f611f06565b8651800909828061132257611322611f06565b602086015180096113339190611e9c565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926113ab92909190829060015b6020020151611a00565b8951805160208201519397509195506113d0929060005b60200201518b5160016113a1565b895191935091506113e6908390839060006113c2565b90925090506113f784848484611a81565b909450925061140884848888611a81565b909450925083158015611419575082155b98975050505050505050565b6040805180820190915260008082526020820152611441611b93565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b508061149a57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526114be611bb1565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b5761147b565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061155c57604051806040016040528082856000015161154b9190611ece565b815260006020909101529392505050565b60405180604001604052808285600001516115779190611ece565b815260200182856020015161158c9190611ece565b6115969084611e9c565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106115e0576115e0611f1c565b6020026020010181815250508a602001518160018151811061160457611604611f1c565b60209081029190910101528951600160200201518160028151811061162b5761162b611f1c565b602090810291909101015289515181518290600390811061164e5761164e611f1c565b602002602001018181525050896020015160016002811061167157611671611f1c565b60200201518160048151811061168957611689611f1c565b60200260200101818152505089602001516000600281106116ac576116ac611f1c565b6020020151816005815181106116c4576116c4611f1c565b6020026020010181815250508860000151816006815181106116e8576116e8611f1c565b60200260200101818152505088602001518160078151811061170c5761170c611f1c565b60209081029190910101528751600160200201518160088151811061173357611733611f1c565b602090810291909101015287515181518290600990811061175657611756611f1c565b602002602001018181525050876020015160016002811061177957611779611f1c565b602002015181600a8151811061179157611791611f1c565b60200260200101818152505087602001516000600281106117b4576117b4611f1c565b602002015181600b815181106117cc576117cc611f1c565b602002602001018181525050866000015181600c815181106117f0576117f0611f1c565b602002602001018181525050866020015181600d8151811061181457611814611f1c565b602090810291909101015285516001602002015181600e8151811061183b5761183b611f1c565b602090810291909101015285515181518290600f90811061185e5761185e611f1c565b602002602001018181525050856020015160016002811061188157611881611f1c565b60200201518160108151811061189957611899611f1c565b60200260200101818152505085602001516000600281106118bc576118bc611f1c565b6020020151816011815181106118d4576118d4611f1c565b6020026020010181815250508460000151816012815181106118f8576118f8611f1c565b60200260200101818152505084602001518160138151811061191c5761191c611f1c565b60209081029190910101528351600160200201518160148151811061194357611943611f1c565b602090810291909101015283515181518290601590811061196657611966611f1c565b602002602001018181525050836020015160016002811061198957611989611f1c565b6020020151816016815181106119a1576119a1611f1c565b60200260200101818152505083602001516000600281106119c4576119c4611f1c565b6020020151816017815181106119dc576119dc611f1c565b6020026020010181815250506119f181611ac9565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611a42818689098280611a3957611a39611f06565b86890983611b1e565b8180611a5057611a50611f06565b8280611a5e57611a5e611f06565b8789098380611a6f57611a6f611f06565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611ab0878683611b1e565b611abb878684611b1e565b925092505094509492505050565b8051600090611ad6611bcf565b6000602082602085026020880160086107d05a03fa905080801561002b575080611b1357604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611b2e57611b2e611f06565b611b388484611e9c565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611b6c611bed565b8152602001611b79611bed565b8152602001611b86611bed565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611c00611c12565b8152602001611c0d611c12565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611c4157600080fd5b611c49611e38565b808385604086011115611c5b57600080fd5b60005b6002811015611c7d578135845260209384019390910190600101611c5e565b509095945050505050565b600082601f830112611c9957600080fd5b8135602067ffffffffffffffff80831115611cb657611cb6611f32565b8260051b604051601f19603f83011681018181108482111715611cdb57611cdb611f32565b60405284815283810192508684018288018501891015611cfa57600080fd5b600092505b85831015611d1d578035845292840192600192909201918401611cff565b50979650505050505050565b600060408284031215611d3b57600080fd5b6040516040810181811067ffffffffffffffff82111715611d5e57611d5e611f32565b604052823581526020928301359281019290925250919050565b600080828403610120811215611d8d57600080fd5b61010080821215611d9d57600080fd5b611da5611e61565b611daf8787611d29565b81526080603f1984011215611dc357600080fd5b611dcb611e38565b9250611dda8760408801611c30565b8352611de98760808801611c30565b6020840152826020820152611e018760c08801611d29565b60408201529350840135905067ffffffffffffffff811115611e2257600080fd5b611e2e85828601611c88565b9150509250929050565b6040805190810167ffffffffffffffff81118282101715611e5b57611e5b611f32565b60405290565b6040516060810167ffffffffffffffff81118282101715611e5b57611e5b611f32565b60008219821115611e9757611e97611ef0565b500190565b600082821015611eae57611eae611ef0565b500390565b6000600019821415611ec757611ec7611ef0565b5060010190565b600082611eeb57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220891889186849028dbec1c2146b511bc7cdb88a1e3c51a3b2fc2e9f873df8265864736f6c63430008070033';

type Transaction1x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x1Verifier {
    return super.attach(address) as Transaction1x1Verifier;
  }
  connect(signer: Signer): Transaction1x1Verifier__factory {
    return super.connect(signer) as Transaction1x1Verifier__factory;
  }
  static readonly contractName: 'Transaction1x1Verifier';
  public readonly contractName: 'Transaction1x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x1Verifier;
  }
}
