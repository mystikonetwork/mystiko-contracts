/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x1Verifier, Transaction2x1VerifierInterface } from '../Transaction2x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506122bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046120b7565b610057565b604051901515815260200160405180910390f35b6000815160201461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906121c3565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611602565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161167a565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611602565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61225b565b6020026020010151611764565b905060005b865181101561038c57838782815181106102fd576102fd61225b565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906121c3565b8151811061034c5761034c61225b565b60200260200101518a85815181106103665761036661225b565b60200260200101516117e1565b611764565b915080610384816121f2565b9150506102e1565b5061039681611602565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611830565b85604001516103db8a60400151611830565b606088015188516103eb90611830565b89602001516118de565b9695505050505050565b610407611e81565b6040805180820182527f1b272a8f69b1b454ffce360719a3563225fc27480158f1af5db02d3948185df681527f20ef092ad737a4ec0c6fbc2062c82bc53882335eb4ce1c86e2ce126a9266b28d6020808301919091529083528151608080820184527f08ec13c177811ab8278475cfd089b7e81fb26004c8f9201e5ac4892d671f66c28285019081527f11f06d205f6b52ba4697a033732b0b8571fe784c7187db7fd67d217d9a89cbd8606080850191909152908352845180860186527f22041cc85b082998e48ee3c861aa12285f5e7188b60110597f2b38ce4cb9b87a81527f09954431b1222115935a16bc534a37121915dd64e7c3ebe96452f1fa87d3032c818601528385015285840192909252835180820185527f02088c2becd8ff224df47ac2fe655d8cc6bb753c6c16915bad5742b5cf8b9d0a8186019081527f09e437a08ced1983da29e4fccac261fb260269fe6d63e2b96623303a4dee73f8828501528152845180860186527f134bbc66c0c0e3da80f2eb5e7394f3b5608db981188eef215c20f02405ca3ada81527f2375243c73f22c583515d0b82c7768a36725ac905bb14c0b0e246619c7191cd6818601528185015285850152835190810184527f023e0b02408c99df4acf94b4381f92593b3ad4e6c686de8f5fff74bc057de8ec8185019081527f0e93ef65866b30a7c023067fd55f8e8aa968834d1c84d44d42e9d237ea7a8606828401528152835180850185527f047f1fd2ef7111cefbe93133b72807b60279ddba9d3a93d9e49b4629d51329dc81527f03f15199a1861ba587ecda48e5386b4ece9a6eec3e26cfae975f193295124029818501528184015290840152815160218082526104408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f04a616156499fbfb029ffb4dbe3d9c950a8656f828763cf86e2026cec756d55a81527f0d9c34021ea03998df8e9a426b2cb10379a05f69f23a83fa25bb9077d6052e796020820152905180516000906107165761071661225b565b602002602001018190525060405180604001604052807f2eea0fe933276a2006a21da70b2ee6cc3abfbdfe599d2c8a4df0bce665c9637281526020017f03073541567daf5742c4324b6a416e551cd1d5124ae0f6c783d9c62d2e3cc0de815250816080015160018151811061078d5761078d61225b565b602002602001018190525060405180604001604052807f0d025091806d5369f2d9bc6e589fc6d2f04efccfc01c87dc92ce2e1982883eb081526020017f11142390f1343ac1fb8f45a2d8f8501ba19803459392ee1c7d92a5868589f89281525081608001516002815181106108045761080461225b565b602002602001018190525060405180604001604052807f1dbc837a0b2f8263259de3894eb2be9010d2961c0f897df677870f81f1fd0c2d81526020017f27585eeee99fe70f502c136f32980d01b4bceebe264f1d8053a46b5ebaabd2a6815250816080015160038151811061087b5761087b61225b565b602002602001018190525060405180604001604052807f2391986a9cb9d1d3ce82f1420aa0dce908edfbe1bf31e6ce0c99c413b4b0cfc881526020017f19d33eb0df37b97b43b0cf5ff835f43617475550bc4f5f1ddcfd19696aa16ace81525081608001516004815181106108f2576108f261225b565b602002602001018190525060405180604001604052807f268d35d4aa19acff9575e6a7def31b4dd7bc2738671d5557a6b0f449b8650a4581526020017f0e6372f8e94445ad2f8ad67a0c57c538aa74fcf7e5193b5048da227c738fbd1a81525081608001516005815181106109695761096961225b565b602002602001018190525060405180604001604052807f033f6cbc31031439c8e8b9b6672cb786ece8cb6a6d1d10ac0037ba370463420381526020017f011a9c4146091d7ce2316520005144ce9b43f216b9e704556818184711c42ec781525081608001516006815181106109e0576109e061225b565b602002602001018190525060405180604001604052807f2d06fb0f4ef7492f62ea44b6a7776f42f60e530cdb734e9a1921715ce7571ecb81526020017f0bde93979bb05516d5d737a43e5442f6f5d152132ae34938e2842247062944c38152508160800151600781518110610a5757610a5761225b565b602002602001018190525060405180604001604052807f04c783f1b8b7184db4eb00f17941358d191a2b7a34f4737818d562122feadbaf81526020017f0fb770072341da977cd1da0fb30edf2a40cf0dcafcc1da024b648ff7c96d8c4d8152508160800151600881518110610ace57610ace61225b565b602002602001018190525060405180604001604052807f0fad48104f927884d97006ef2a7dc2cf81413ffdd5e1e8a03d414beef027be6f81526020017f194582de950b6c60a0c4bc85edf8fa3f95e7f86f66b27f9d0c0aa313abff50618152508160800151600981518110610b4557610b4561225b565b602002602001018190525060405180604001604052807f2d83403f062afb1779ca40e7e68c0100ad31f34fa4c09ab0611a007dccde633081526020017f1e2e8d2b524d21b8ac1fa4662a0645b4485971662561eac82fd6b8dd77bee61c8152508160800151600a81518110610bbc57610bbc61225b565b602002602001018190525060405180604001604052807f22a26041682e67334da1e0f4cd3f0c46c568dddff61ce1369e219ac20537b96081526020017f275e5b6eef7933bf400f93b7545939d55aa8698305f118f04ab889fdd70a6aeb8152508160800151600b81518110610c3357610c3361225b565b602002602001018190525060405180604001604052807f1c5d54260b2f017c093fada1ff77d96ebb64f2703fce2f792def4bdf75c52a2181526020017f09392a47fb4a17031592f5b952efcc41b9f92cc65dbe226813bbf9a7ea27f3798152508160800151600c81518110610caa57610caa61225b565b602002602001018190525060405180604001604052807f14d12dbdbabce9d3b42b243718c7d3e74aa8f4b7149d3efa6f999dc4649596bf81526020017f01a21e7615d9b8297c81e11b0cc2400096d707de48d487974b3732d05941cc0f8152508160800151600d81518110610d2157610d2161225b565b602002602001018190525060405180604001604052807f1cf72d7713d268667de059c957a6c69f959d6c12b11f69d5bbfbc69d2e7e4fe081526020017f0241fd9ca3f5df5be922f0f2ba1e2a0330317d224c3d43d6dc644a903e85d6088152508160800151600e81518110610d9857610d9861225b565b602002602001018190525060405180604001604052807f170b1d6838a91261b7bc9c2a142d8050dd2d2da438bf90272660c1ad2898406381526020017f2171732afee20a1afdc23eea74d8c47c32e3a6f4ba82fd93f7322de89980f80b8152508160800151600f81518110610e0f57610e0f61225b565b602002602001018190525060405180604001604052807f040713881c0b55850ffd37666fb270e9d5797d5a371d9dd07d75ea44a3c730f481526020017f0bc7adb49a6c21071e2703e5925be6d153dce553ea71d2c910f4ae14e26ae9eb8152508160800151601081518110610e8657610e8661225b565b602002602001018190525060405180604001604052807f24983bcbdba33ea0970b28e44d85e1c832345532fc458d1539d38b893af4155b81526020017f17b0fc5c6b5616e87781b8e4ffafa84b44f45c89e45809168007b1ba34fd72768152508160800151601181518110610efd57610efd61225b565b602002602001018190525060405180604001604052807f0fa7544a23074847f93590cf0c4c0334a03a2af263f0a563287b4ba4d46b2c4c81526020017f26712c0481ede431cb7008abc58c80939ea7e671602fae7a16893b3d3e3e51748152508160800151601281518110610f7457610f7461225b565b602002602001018190525060405180604001604052807f2d58f50ec98383b3063fc0d6ded21b1b1522a962d78a873a0a265c7e7751ffe781526020017f0865cd9f7fd7062ab61bd451af761bcdd081aa4aec786044399f136b7ff2b3198152508160800151601381518110610feb57610feb61225b565b602002602001018190525060405180604001604052807f02c689acc1fe8207e9cf421125b1651bf7f9d80ab27c7d72cc2e2ad6c9c4f24c81526020017f252ce4e6fe55e18329551ff308322c67bb8325e3202eeaebc47e2b98586faf6381525081608001516014815181106110625761106261225b565b602002602001018190525060405180604001604052807f0d3a7cc9b83f839837563ca3ebe524f6dbc7258ae9d8dfdcaebc8e30a18969be81526020017eb15a1f710ddcbe50305acc9408ffdec0d36d07e66ecde333dfe4e11f35670181525081608001516015815181106110d8576110d861225b565b602002602001018190525060405180604001604052807f15fc78a5da07cdfc1173247503390ce911c6aad3320812be63479a3a4b2dfd7481526020017f1b5b200e7455242b6997f453aa805a34e061437314887bac1e4cef6c662716ce815250816080015160168151811061114f5761114f61225b565b602002602001018190525060405180604001604052807f2735617f672176ffb75146d9e0d799234b611d426fa1100284a07c787ca59a5b81526020017f09729d5201a2aef5473a1104b220739584e7186cec279480e85657cadef37d5081525081608001516017815181106111c6576111c661225b565b602002602001018190525060405180604001604052807f19580d8451ed4d78775cd582fa4f7ee04f210a1f8f99a0bf6ea10eb4ac40e5bb81526020017f28bd645125c7fb57db861bf91da3b78cd7aeed313ae55f104be44fd9f3af97d7815250816080015160188151811061123d5761123d61225b565b602002602001018190525060405180604001604052807f0a845d1b57d2871a3b33c35921b73df68017ba4951d04f2a94a9ee8118171c4d81526020017f2b76d9c49a0b43977297be2f37fca1d91845d6c1fca2177707c6d84de4fd3dd081525081608001516019815181106112b4576112b461225b565b602002602001018190525060405180604001604052807f1355abf74017b364dcd5b7bf7b1c5d69d6d03acb65c684c5eb3f3cafc8896ef181526020017f2afabf459ac061ecaaf804b97f58408ab6053a720586256e97b3b26ad0af4a528152508160800151601a8151811061132b5761132b61225b565b602002602001018190525060405180604001604052807f03664afb6c9884b91e367cba3cc0a16363a9152e8ac6aad13cd9c4637d2cd11081526020017f16172bd556ba9cf8e1c074dae8a954ca50f4ff46e543fd65e1688ec2228604768152508160800151601b815181106113a2576113a261225b565b602002602001018190525060405180604001604052807f2f942b6ee32196437804110cacad7799dcdd2bc95e74eca7e38931e80192194081526020017f0c398c28014663662ae68da413fc5e5322e73efc47dcb362c561dbbf33067a198152508160800151601c815181106114195761141961225b565b602002602001018190525060405180604001604052807f147c0dce6bfe8994f104037f0fc9d676ccce98a73fc587904b61cec5fbe6fca781526020017f1407c0c957af3638554428dab16378d8945a1c5a58f03e273918acfbddcee21d8152508160800151601d815181106114905761149061225b565b602002602001018190525060405180604001604052807f19da1b5981657f184fee9d87ae53922b794ce930215360e8a76b9ead17820c8e81526020017f283eaf6453c1562ade8813061048b596b119117f266eeafdc33e7700d85a0da38152508160800151601e815181106115075761150761225b565b602002602001018190525060405180604001604052807f20606283ce9fc886566a3a3bbfe7f06dd722ea7969f0365c47906f784b15d70f81526020017f0c7fbdca29abeea19a50c3472af04bb22327862b310ddb7d24569487b59029dd8152508160800151601f8151811061157e5761157e61225b565b602002602001018190525060405180604001604052807f0e557a9b780a9ae42341a077e9ff2a3c89d49f23d440598ffc3f7cabc7d2add981526020017ede95fd8bec90e6545227b0f69b95398d8d1895cfe3a9cf9a53120599ba0c6581525081608001516020815181106115f4576115f461225b565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761163081600361220d565b818061163e5761163e612245565b8451838061164e5761164e612245565b8651800909828061166157611661612245565b6020860151800961167291906121db565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926116ea92909190829060015b6020020151611d3f565b89518051602082015193975091955061170f929060005b60200201518b5160016116e0565b8951919350915061172590839083906000611701565b909250905061173684848484611dc0565b909450925061174784848888611dc0565b909450925083158015611758575082155b98975050505050505050565b6040805180820190915260008082526020820152611780611ed2565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806117d957604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526117fd611ef0565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576117ba565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061189b57604051806040016040528082856000015161188a919061220d565b815260006020909101529392505050565b60405180604001604052808285600001516118b6919061220d565b81526020018285602001516118cb919061220d565b6118d590846121db565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a600001518160008151811061191f5761191f61225b565b6020026020010181815250508a60200151816001815181106119435761194361225b565b60209081029190910101528951600160200201518160028151811061196a5761196a61225b565b602090810291909101015289515181518290600390811061198d5761198d61225b565b60200260200101818152505089602001516001600281106119b0576119b061225b565b6020020151816004815181106119c8576119c861225b565b60200260200101818152505089602001516000600281106119eb576119eb61225b565b602002015181600581518110611a0357611a0361225b565b602002602001018181525050886000015181600681518110611a2757611a2761225b565b602002602001018181525050886020015181600781518110611a4b57611a4b61225b565b602090810291909101015287516001602002015181600881518110611a7257611a7261225b565b6020908102919091010152875151815182906009908110611a9557611a9561225b565b6020026020010181815250508760200151600160028110611ab857611ab861225b565b602002015181600a81518110611ad057611ad061225b565b6020026020010181815250508760200151600060028110611af357611af361225b565b602002015181600b81518110611b0b57611b0b61225b565b602002602001018181525050866000015181600c81518110611b2f57611b2f61225b565b602002602001018181525050866020015181600d81518110611b5357611b5361225b565b602090810291909101015285516001602002015181600e81518110611b7a57611b7a61225b565b602090810291909101015285515181518290600f908110611b9d57611b9d61225b565b6020026020010181815250508560200151600160028110611bc057611bc061225b565b602002015181601081518110611bd857611bd861225b565b6020026020010181815250508560200151600060028110611bfb57611bfb61225b565b602002015181601181518110611c1357611c1361225b565b602002602001018181525050846000015181601281518110611c3757611c3761225b565b602002602001018181525050846020015181601381518110611c5b57611c5b61225b565b602090810291909101015283516001602002015181601481518110611c8257611c8261225b565b6020908102919091010152835151815182906015908110611ca557611ca561225b565b6020026020010181815250508360200151600160028110611cc857611cc861225b565b602002015181601681518110611ce057611ce061225b565b6020026020010181815250508360200151600060028110611d0357611d0361225b565b602002015181601781518110611d1b57611d1b61225b565b602002602001018181525050611d3081611e08565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d81818689098280611d7857611d78612245565b86890983611e5d565b8180611d8f57611d8f612245565b8280611d9d57611d9d612245565b8789098380611dae57611dae612245565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611def878683611e5d565b611dfa878684611e5d565b925092505094509492505050565b8051600090611e15611f0e565b6000602082602085026020880160086107d05a03fa905080801561002b575080611e5257604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611e6d57611e6d612245565b611e7784846121db565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611eab611f2c565b8152602001611eb8611f2c565b8152602001611ec5611f2c565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611f3f611f51565b8152602001611f4c611f51565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611f8057600080fd5b611f88612177565b808385604086011115611f9a57600080fd5b60005b6002811015611fbc578135845260209384019390910190600101611f9d565b509095945050505050565b600082601f830112611fd857600080fd5b8135602067ffffffffffffffff80831115611ff557611ff5612271565b8260051b604051601f19603f8301168101818110848211171561201a5761201a612271565b6040528481528381019250868401828801850189101561203957600080fd5b600092505b8583101561205c57803584529284019260019290920191840161203e565b50979650505050505050565b60006040828403121561207a57600080fd5b6040516040810181811067ffffffffffffffff8211171561209d5761209d612271565b604052823581526020928301359281019290925250919050565b6000808284036101208112156120cc57600080fd5b610100808212156120dc57600080fd5b6120e46121a0565b6120ee8787612068565b81526080603f198401121561210257600080fd5b61210a612177565b92506121198760408801611f6f565b83526121288760808801611f6f565b60208401528260208201526121408760c08801612068565b60408201529350840135905067ffffffffffffffff81111561216157600080fd5b61216d85828601611fc7565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561219a5761219a612271565b60405290565b6040516060810167ffffffffffffffff8111828210171561219a5761219a612271565b600082198211156121d6576121d661222f565b500190565b6000828210156121ed576121ed61222f565b500390565b60006000198214156122065761220661222f565b5060010190565b60008261222a57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201752cc928fb8836b129962707f4b5e950059469f06213f0bbbd49007d53c1deb64736f6c63430008070033';

type Transaction2x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x1Verifier {
    return super.attach(address) as Transaction2x1Verifier;
  }
  connect(signer: Signer): Transaction2x1Verifier__factory {
    return super.connect(signer) as Transaction2x1Verifier__factory;
  }
  static readonly contractName: 'Transaction2x1Verifier';
  public readonly contractName: 'Transaction2x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x1Verifier;
  }
}
