/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x1Verifier, Transaction2x1VerifierInterface } from '../Transaction2x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506122be806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046120b8565b610057565b604051901515815260200160405180910390f35b6000815160201461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906121c4565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611603565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161167b565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611603565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61225c565b6020026020010151611765565b905060005b865181101561038c57838782815181106102fd576102fd61225c565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906121c4565b8151811061034c5761034c61225c565b60200260200101518a85815181106103665761036661225c565b60200260200101516117e2565b611765565b915080610384816121f3565b9150506102e1565b5061039681611603565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611831565b85604001516103db8a60400151611831565b606088015188516103eb90611831565b89602001516118df565b9695505050505050565b610407611e82565b6040805180820182527f23f700493ee8561b86dbd3d0be30d162574660500eafad21bb828b0d49a4e47981527f283e9d695bc458f32072348c9176ee24284903548429e885c7ef5977b46abb0d6020808301919091529083528151608080820184527f21c85db57e19cd6234a138888ca387fe80f9e50d2c941c5d015133fa452f14328285019081527f27bbb36d70c5dafd1a025ace718a4d978521f1aa08f26424b59b682e78580e68606080850191909152908352845180860186527f160d3506a06078e085cc1830d860f103d8507a5da957aa5b4ec8f2a4e5e2970d81527f15f03672ecae6a655ee818243b3af468d6d9aaad2c75f3b09fc8cc21a6365f79818601528385015285840192909252835180820185527f0adbf8cf7b15e1f3af6065603bb7886ab7919f322f2dce7cc3710fb193d295b88186019081527f05f8c91a955a3aba16ba36c7ca13211640d8b5814072f59dc53482aa3d401816828501528152845180860186527f1085cf07b98683551388c9984bf4cbcd3ee63287d06deab8d2c70558ae99365581527f0ea592d06e59337fc74f34b11d3561815c122c64a0a508afe542b5abe3b70f2b818601528185015285850152835190810184527f037a9212b8dd521e1177af269f5d7d2575f83b06a3e7d123891afe5e9865939f8185019081527f03cbef3e06bea9ffd6a39b939cbcd0b8cbdca11c3f03b3b4d237afe1a6f27309828401528152835180850185527f042382fe0b7b48acff0310cffa7473ce6992f30915275ad044826d43950e97a581527f03ddd9440ca6b0478cc0107d40d29996dd7ccad971fb22cf6cd526926029fdc0818501528184015290840152815160218082526104408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f0cc14697522d4eb3edbbd9f36c63adffe868deacab5fcfff8b6ba5c1c438f8a481527f13dc037783272e840a467c13963fcb220f9d602c40ddac5d8c1883723c7641526020820152905180516000906107165761071661225c565b602002602001018190525060405180604001604052807f19b9d7f192ed5d3d7f183789629ce3e71f302f381907a270a628152090179cf881526020017f2259332635adad8a8eb465799fe59ad7e8cf332a46f142cc6e909f4e48376f49815250816080015160018151811061078d5761078d61225c565b602002602001018190525060405180604001604052807f29ff42b6c90fe076b7bdd98f660b0fdebfeb067aeb25423220d4aacdcbd1460881526020017f221210e49d7ba71883c3100029429e0c0bb2322d56420442fba53bf7fb8138fd81525081608001516002815181106108045761080461225c565b602002602001018190525060405180604001604052807f302563a5ed2a5755531e04ac26d4c119f9e67fe3ceec06618c54734e88807dd481526020017f256de1e10db2a0b3194974fc56bc03504e60e3bd85445d8092617ee043e714dc815250816080015160038151811061087b5761087b61225c565b602002602001018190525060405180604001604052807f209759633ef93541dc02fc2045f2c65629bcd39b2a4ef3a9a6a813eeb1aa11ff81526020017f080a73e9a89cea22ef16c7b4643f314e871cdace3672e71081dbdfcce821b9d981525081608001516004815181106108f2576108f261225c565b602002602001018190525060405180604001604052807f29c5a4e10aa2c5e0f74d240628340682601d66c3529d62857206998610d1b64481526020017f257d19f9eca5eaba307ec2d2615061d3f26f7226a0417cada15853d6a1cfc06781525081608001516005815181106109695761096961225c565b602002602001018190525060405180604001604052807f13dbdf4f541720443286c5e476dd33c52feb3d7e7184c8263def693b6f44230681526020017f0d532c39d15f804f48aceb8f48704bbd43e237ad2b8cf7d7cfbffc65caec424281525081608001516006815181106109e0576109e061225c565b602002602001018190525060405180604001604052807f0cb9067e7832ef7a395d90d965c889e7f87aedc73506b9e972a0b88d4bf02e9881526020017f154e8d54af8f13bc47b9e0d3ab1ab08c6d66dd34b9d485dcfdc5fbd141868a0d8152508160800151600781518110610a5757610a5761225c565b602002602001018190525060405180604001604052807f2ce15f926148ae83058947785f5e14e04f6847af97028b5ebc57d529fc48a97781526020017f0512e763b99bdf3dd31ddde14136baa02d0d1abaccc29cee59765e9784964c288152508160800151600881518110610ace57610ace61225c565b602002602001018190525060405180604001604052807f05c9696ee9f040a65e9738dfa9a01865434eb3bb0a9cab25ca6a7745c1e10c3e81526020017f156a76b1f5b09f303b34a9ae30b652bc8d844270725922fb1515f751bebbc47b8152508160800151600981518110610b4557610b4561225c565b602002602001018190525060405180604001604052807f183bfc81302960595ddd4ce7fc91cf817cea3efb1b174c7463d3f5c187893d7781526020017f2270aa93efe6d09a382a482a6897bc009c245764ffe90f0b961187c793fc9ec18152508160800151600a81518110610bbc57610bbc61225c565b602002602001018190525060405180604001604052807f0ead07cadfe3cba19f4cf278cb14db207d8667f7a3941460f257789799808cb481526020017f234ed0740b995960fb2292f78c0bf06a6a0c1bf9acbccc8065661c11264230348152508160800151600b81518110610c3357610c3361225c565b602002602001018190525060405180604001604052807f288713e868a7bea09a7038b38b308d7acc30e6d9db9acd4982f1a92ed1152d9381526020017f1571077c6be87f2065d4d97da60f9ffddf8471c913fb7c8d8a372c5820f71aee8152508160800151600c81518110610caa57610caa61225c565b602002602001018190525060405180604001604052807f28b50513b1ec55b4e6c432b447e2319afa65895c7d807f0443d0579d60a2ab5181526020017f258fc5d7f7a83985d0b2c40522215f211320b7ac91fc24407fafea48540d28db8152508160800151600d81518110610d2157610d2161225c565b602002602001018190525060405180604001604052807f21a04951dc3bb0cdb0b658311dc50299971b01097a5cfb49952e59c11e6d809681526020017f0d20d693f86dc0b8e4f6ad22fbf4c5cdf36ffbf39899bbd49a504fe129e1de048152508160800151600e81518110610d9857610d9861225c565b602002602001018190525060405180604001604052807f0d87e23505712e7fdec976d13cf90a3b8b51e655a361f8fd6cf75cd7b634d1aa81526020017f2e9e1cdee09c42a5a22d726777978803c1f47d781a47c3a5ce2eac2a2adaee098152508160800151600f81518110610e0f57610e0f61225c565b602002602001018190525060405180604001604052807f09f17175f958ab45c0c66d14fffd4e6bd72a4fe5d13fb32b9042e8188ff1e4c181526020017f2089f8ad234c3f309675d92742ee5aec6964ed46979307ef529fab341ef7074d8152508160800151601081518110610e8657610e8661225c565b602002602001018190525060405180604001604052807f233236da3eecf8caa812a3d8965269f0e7d1bf1a35325241dc5199abb0c98ccf81526020017f0a04a6aed268ec6fa812d3306aab69a6139a9f8751a78a3e44864fb08107aa4a8152508160800151601181518110610efd57610efd61225c565b602002602001018190525060405180604001604052807f273b1ef9f40f38b885f3c42d525d89c476f66d3c09d35361ec7ba802fa1eaf7e81526020017f12d861a598d804d2dbe46dd646b97cd48862fc10fe49af9c889ba4e4511c930a8152508160800151601281518110610f7457610f7461225c565b602002602001018190525060405180604001604052807f0d047c5d2a00df5ecc615e227ac9a94524af4e4abdc2c9a7ff465b802652f12881526020017f1d4300d4f3d74bf21e5bd1816c704deb08c2d5de7de6f96393493e319c1777468152508160800151601381518110610feb57610feb61225c565b602002602001018190525060405180604001604052807f028d1c6d470644034cdef3b9cbfdae05a3d1240628a2fbadd9dc16793f07cd7681526020017f18db60823b07ed0df1dd0f840d914449a29ab4f6a80ab94d61986797809d9af481525081608001516014815181106110625761106261225c565b602002602001018190525060405180604001604052807f05b78b33128f8c476c94bb1d8f550308b7c1d168365e54c4b6f10f0d6f15085781526020017f24eeae9198a6eab94bb56840b76b16eeff6437447c233552fe5ea8dff5e09cb281525081608001516015815181106110d9576110d961225c565b602002602001018190525060405180604001604052807f0d321bedf84e80b0d289ed788b183dcc5f6934fe1ca234e023990ad23c3b459681526020017f141893c91f622dfa06816ee5780f09de167eede32c0aa2962dabab00a8c2893481525081608001516016815181106111505761115061225c565b602002602001018190525060405180604001604052807f2090899c54225fd842e7887d24557515a0f9b8dcf8550c3a8192c1d72770b96281526020017f110c4e56ca81c22ff86a953230e8275b7d49a33652956c90177667e3b876fb3f81525081608001516017815181106111c7576111c761225c565b602002602001018190525060405180604001604052807f282ee8ec1c99dc5e63328352754ec664095131d57113d142ce0f938db523420581526020017f09dd81bf94ee630f0d79edfde86647f3353f273604fdeea26e17b288a18ba62e815250816080015160188151811061123e5761123e61225c565b602002602001018190525060405180604001604052807f226be5bb89d463d4ff7defafc5185a407f2babc10c0b7b34fa4257c53282dbb681526020017f047abb989ad2248eca911f25c2ab4638264ff0fee42fc0a3e7f11d7b39543d6981525081608001516019815181106112b5576112b561225c565b602002602001018190525060405180604001604052807f0e1ff26dbea184448eeaaaffcccd9a3282ba30c39bedee056946c091b816630b81526020017f11d78353d460a886c9f505877315ffe70f084e142f2b214406accf316a787a468152508160800151601a8151811061132c5761132c61225c565b602002602001018190525060405180604001604052807f1f59a9f2096eb23c3ad78d3a9b799272691a555baa3c125e1119710ef81003a181526020017f044d20fc00ffe2605933abd8a4fd9baa1f24c7fccd1ccbbf6aaa6e41f6fcd1a98152508160800151601b815181106113a3576113a361225c565b602002602001018190525060405180604001604052807f0985fca03c949bf6a35f7fe38b408241e9ecd9c7fa1aefa8bd40416f9c2c580881526020017f297cc2d1bc44dcb4f326ac58e28eef5e0cf9ecc541a579505b30aeb6080f648a8152508160800151601c8151811061141a5761141a61225c565b602002602001018190525060405180604001604052807f147b39e56b0597b0c3822b483bd2a63b77a6674d5edfac049381ecf8f3cbd0ec81526020017f2976960aefdd784640dbc891e061aa7c9e8bdd85a294f487cf3b6316b4d18b2c8152508160800151601d815181106114915761149161225c565b602002602001018190525060405180604001604052807f22bed305d1ae92411c34d1c0d0e1653713fd8b5c4dbd5158d82b5b9d5161d79981526020017e3d36c5d4e910b562bd4dde072108a51b20b073293eb5c1400708b13f83e93e8152508160800151601e815181106115075761150761225c565b602002602001018190525060405180604001604052807f2223fdac5d82f2d647807ea990362194c77075201054729672118497a32924dd81526020017f2f445267c13f454c1512f683d70998cda4b96c43f26b438dffae773cdd28ae7b8152508160800151601f8151811061157e5761157e61225c565b602002602001018190525060405180604001604052807f1e8ab5ebae619d939170debf0779235ed879c9a00db5efdea5e0fc4477b3b5f881526020017f2a519b00e73a513d7b4a41e2d9adbf1ef714c78e76d34ae0e3f744e11a884c4d81525081608001516020815181106115f5576115f561225c565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761163181600361220e565b818061163f5761163f612246565b8451838061164f5761164f612246565b8651800909828061166257611662612246565b6020860151800961167391906121dc565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926116eb92909190829060015b6020020151611d40565b895180516020820151939750919550611710929060005b60200201518b5160016116e1565b8951919350915061172690839083906000611702565b909250905061173784848484611dc1565b909450925061174884848888611dc1565b909450925083158015611759575082155b98975050505050505050565b6040805180820190915260008082526020820152611781611ed3565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806117da57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526117fe611ef1565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576117bb565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061189c57604051806040016040528082856000015161188b919061220e565b815260006020909101529392505050565b60405180604001604052808285600001516118b7919061220e565b81526020018285602001516118cc919061220e565b6118d690846121dc565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106119205761192061225c565b6020026020010181815250508a60200151816001815181106119445761194461225c565b60209081029190910101528951600160200201518160028151811061196b5761196b61225c565b602090810291909101015289515181518290600390811061198e5761198e61225c565b60200260200101818152505089602001516001600281106119b1576119b161225c565b6020020151816004815181106119c9576119c961225c565b60200260200101818152505089602001516000600281106119ec576119ec61225c565b602002015181600581518110611a0457611a0461225c565b602002602001018181525050886000015181600681518110611a2857611a2861225c565b602002602001018181525050886020015181600781518110611a4c57611a4c61225c565b602090810291909101015287516001602002015181600881518110611a7357611a7361225c565b6020908102919091010152875151815182906009908110611a9657611a9661225c565b6020026020010181815250508760200151600160028110611ab957611ab961225c565b602002015181600a81518110611ad157611ad161225c565b6020026020010181815250508760200151600060028110611af457611af461225c565b602002015181600b81518110611b0c57611b0c61225c565b602002602001018181525050866000015181600c81518110611b3057611b3061225c565b602002602001018181525050866020015181600d81518110611b5457611b5461225c565b602090810291909101015285516001602002015181600e81518110611b7b57611b7b61225c565b602090810291909101015285515181518290600f908110611b9e57611b9e61225c565b6020026020010181815250508560200151600160028110611bc157611bc161225c565b602002015181601081518110611bd957611bd961225c565b6020026020010181815250508560200151600060028110611bfc57611bfc61225c565b602002015181601181518110611c1457611c1461225c565b602002602001018181525050846000015181601281518110611c3857611c3861225c565b602002602001018181525050846020015181601381518110611c5c57611c5c61225c565b602090810291909101015283516001602002015181601481518110611c8357611c8361225c565b6020908102919091010152835151815182906015908110611ca657611ca661225c565b6020026020010181815250508360200151600160028110611cc957611cc961225c565b602002015181601681518110611ce157611ce161225c565b6020026020010181815250508360200151600060028110611d0457611d0461225c565b602002015181601781518110611d1c57611d1c61225c565b602002602001018181525050611d3181611e09565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d82818689098280611d7957611d79612246565b86890983611e5e565b8180611d9057611d90612246565b8280611d9e57611d9e612246565b8789098380611daf57611daf612246565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611df0878683611e5e565b611dfb878684611e5e565b925092505094509492505050565b8051600090611e16611f0f565b6000602082602085026020880160086107d05a03fa905080801561002b575080611e5357604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611e6e57611e6e612246565b611e7884846121dc565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611eac611f2d565b8152602001611eb9611f2d565b8152602001611ec6611f2d565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611f40611f52565b8152602001611f4d611f52565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611f8157600080fd5b611f89612178565b808385604086011115611f9b57600080fd5b60005b6002811015611fbd578135845260209384019390910190600101611f9e565b509095945050505050565b600082601f830112611fd957600080fd5b8135602067ffffffffffffffff80831115611ff657611ff6612272565b8260051b604051601f19603f8301168101818110848211171561201b5761201b612272565b6040528481528381019250868401828801850189101561203a57600080fd5b600092505b8583101561205d57803584529284019260019290920191840161203f565b50979650505050505050565b60006040828403121561207b57600080fd5b6040516040810181811067ffffffffffffffff8211171561209e5761209e612272565b604052823581526020928301359281019290925250919050565b6000808284036101208112156120cd57600080fd5b610100808212156120dd57600080fd5b6120e56121a1565b6120ef8787612069565b81526080603f198401121561210357600080fd5b61210b612178565b925061211a8760408801611f70565b83526121298760808801611f70565b60208401528260208201526121418760c08801612069565b60408201529350840135905067ffffffffffffffff81111561216257600080fd5b61216e85828601611fc8565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561219b5761219b612272565b60405290565b6040516060810167ffffffffffffffff8111828210171561219b5761219b612272565b600082198211156121d7576121d7612230565b500190565b6000828210156121ee576121ee612230565b500390565b600060001982141561220757612207612230565b5060010190565b60008261222b57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212209cb4db40ec483941ab4575eeec1911a3996ca2503102982041864d24ab9a8b2564736f6c63430008070033';

type Transaction2x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x1Verifier {
    return super.attach(address) as Transaction2x1Verifier;
  }
  connect(signer: Signer): Transaction2x1Verifier__factory {
    return super.connect(signer) as Transaction2x1Verifier__factory;
  }
  static readonly contractName: 'Transaction2x1Verifier';
  public readonly contractName: 'Transaction2x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x1Verifier;
  }
}
