/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopMain, MystikoV2LoopMainInterface } from '../MystikoV2LoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeDividerTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'MinAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFee',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collector',
        type: 'address',
      },
    ],
    name: 'ServiceFeeCollectorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeDividerChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFee',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCollector',
        type: 'address',
      },
    ],
    name: 'changeServiceFeeCollector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFeeDivider',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeCollector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeDivider',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801561003757600080fd5b5060405161131738038061131783398101604081905261005691610096565b600480546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556103e8600655620f42406007556100c6565b6000602082840312156100a857600080fd5b81516001600160a01b03811681146100bf57600080fd5b9392505050565b611242806100d56000396000f3fe60806040526004361061016a5760003560e01c8063b1a0b358116100cb578063ddac5dc11161007f578063ec571c6a11610059578063ec571c6a146103b9578063ed6ea33a146103d9578063f6afe88f146103f157600080fd5b8063ddac5dc11461035b578063e19abef814610379578063ea0cde851461039957600080fd5b8063cfc7e2da116100b0578063cfc7e2da14610311578063d3e256bf14610326578063dd757c341461034657600080fd5b8063b1a0b358146102c0578063b1c39422146102e057600080fd5b80632421e155116101225780633fc8c4d6116101075780633fc8c4d6146102525780633fe3347a14610284578063897b0637146102a057600080fd5b80632421e155146101ff57806330f49cac1461023257600080fd5b80630a5ea9eb116101535780630a5ea9eb146101a65780630f087d76146101ca57806311a1933c146101ea57600080fd5b806301dbf19f1461016f57806306394c9b14610186575b600080fd5b34801561017b57600080fd5b50610184610404565b005b34801561019257600080fd5b506101846101a1366004610ed9565b610488565b3480156101b257600080fd5b506007545b6040519081526020015b60405180910390f35b3480156101d657600080fd5b506101846101e5366004610ed9565b61052c565b3480156101f657600080fd5b506006546101b7565b34801561020b57600080fd5b50604080518082018252600481526306c6f6f760e41b602082015290516101c191906110c8565b34801561023e57600080fd5b5061018461024d366004610ed9565b6105d0565b34801561025e57600080fd5b506005546001600160a01b03165b6040516001600160a01b0390911681526020016101c1565b34801561029057600080fd5b5060016040516101c191906110a0565b3480156102ac57600080fd5b506101846102bb366004610ff0565b610650565b3480156102cc57600080fd5b506101846102db366004610ff0565b6106b0565b3480156102ec57600080fd5b5060005461030190600160a01b900460ff1681565b60405190151581526020016101c1565b34801561031d57600080fd5b506003546101b7565b34801561033257600080fd5b50610184610341366004610ff0565b610751565b34801561035257600080fd5b506101846107d4565b34801561036757600080fd5b506002546001600160a01b031661026c565b34801561038557600080fd5b50610184610394366004610ed9565b61084c565b3480156103a557600080fd5b506101846103b4366004610ef6565b610899565b3480156103c557600080fd5b5060005461026c906001600160a01b031681565b3480156103e557600080fd5b5060085460ff16610301565b6101846103ff366004610f30565b610905565b6004546001600160a01b0316331461042f576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261047e92900460ff161515815260200190565b60405180910390a1565b6004546001600160a01b031633146104b3576040516327e1f1e560e01b815260040160405180910390fd5b6004546001600160a01b03828116911614156104e2576040516336a1c33f60e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b6004546001600160a01b03163314610557576040516327e1f1e560e01b815260040160405180910390fd5b6005546001600160a01b0382811691161415610586576040516336a1c33f60e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517fe6bc4ba4d04102f8f1140ad88cba6b7bd753b0391069bca06f44a955507dbb9390600090a250565b6004546001600160a01b031633146105fb576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b6004546001600160a01b0316331461067b576040516327e1f1e560e01b815260040160405180910390fd5b60038190556040518181527f1c853e705f5e96d9076d1f48114d62650faf218827df3fed720227b3dbf18c5a90602001610645565b6004546001600160a01b031633146106db576040516327e1f1e560e01b815260040160405180910390fd5b8060075414156106fe576040516336a1c33f60e01b815260040160405180910390fd5b8061071c576040516313a2a85760e21b815260040160405180910390fd5b60078190556040518181527fc9993a13ab327e43d2c7222016ea042dc8e0889c91571ae6062990deacb4540c90602001610645565b6004546001600160a01b0316331461077c576040516327e1f1e560e01b815260040160405180910390fd5b80600654141561079f576040516336a1c33f60e01b815260040160405180910390fd5b60068190556040518181527f1c068decb3b5138b265d62b22c4c2d8191a2e0bd3745e97b5b0ff66fa852eca590602001610645565b6004546001600160a01b031633146107ff576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161047e91600160a01b90910460ff161515815260200190565b6004546001600160a01b03163314610877576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031633146108c4576040516327e1f1e560e01b815260040160405180910390fd5b6008805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e0990602001610645565b60085460ff161561092957604051630e2f42c960e31b815260040160405180910390fd5b6003548151101561094d5760405163617ab12d60e11b815260040160405180910390fd5b60006109668260400151836000015184606001516109d3565b90508082602001511461098c576040516301bfaa2560e51b815260040160405180910390fd5b61099533610af9565b156109b357604051632e70c0b160e01b815260040160405180910390fd5b6109cf826000015183602001518460a001518560800151610b96565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610a165760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610a4857604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610aa09160040161106f565b60206040518083038186803b158015610ab857600080fd5b505afa158015610acc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af09190611009565b95945050505050565b60008054600160a01b900460ff16610b1357506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610b5857600080fd5b505afa158015610b6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190610f13565b92915050565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610bf0918591906004016110db565b600060405180830381600087803b158015610c0a57600080fd5b505af1158015610c1e573d6000803e3d6000fd5b5050600254600554600754600654610c6895506001600160a01b0393841694509190921691610c5791610c51908b610c6f565b90610c82565b610c61878a611161565b6000610c8e565b5050505050565b6000610c7b828461119b565b9392505050565b6000610c7b8284611179565b82610c998284611161565b610ca39190611161565b3414610cf65760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064015b60405180910390fd5b6000856001600160a01b03168360405160006040518083038185875af1925050503d8060008114610d43576040519150601f19603f3d011682016040523d82523d6000602084013e610d48565b606091505b5050905080610d995760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606401610ced565b8315610e44576000856001600160a01b03168560405160006040518083038185875af1925050503d8060008114610dec576040519150601f19603f3d011682016040523d82523d6000602084013e610df1565b606091505b5050905080610e425760405162461bcd60e51b815260206004820152601b60248201527f7365727669636520666565207472616e73666572206661696c656400000000006044820152606401610ced565b505b505050505050565b600082601f830112610e5d57600080fd5b813567ffffffffffffffff80821115610e7857610e786111d0565b604051601f8301601f19908116603f01168101908282118183101715610ea057610ea06111d0565b81604052838152866020858801011115610eb957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610eeb57600080fd5b8135610c7b816111e6565b600060208284031215610f0857600080fd5b8135610c7b816111fe565b600060208284031215610f2557600080fd5b8151610c7b816111fe565b600060208284031215610f4257600080fd5b813567ffffffffffffffff80821115610f5a57600080fd5b9083019060c08286031215610f6e57600080fd5b610f76611138565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff81168114610fb157600080fd5b6060820152608083013582811115610fc857600080fd5b610fd487828601610e4c565b60808301525060a083013560a082015280935050505092915050565b60006020828403121561100257600080fd5b5035919050565b60006020828403121561101b57600080fd5b5051919050565b6000815180845260005b818110156110485760208185018101518683018201520161102c565b8181111561105a576000602083870101525b50601f01601f19169290920160200192915050565b60608101818360005b6003811015611097578151835260209283019290910190600101611078565b50505092915050565b60208101600283106110c257634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610c7b6020830184611022565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261111f60e0840182611022565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff8111828210171561115b5761115b6111d0565b60405290565b60008219821115611174576111746111ba565b500190565b60008261119657634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156111b5576111b56111ba565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146111fb57600080fd5b50565b80151581146111fb57600080fdfea2646970667358221220450327c3abaefe580015e1e1dc38c02c5694e313231039ff5b2354c549c31f2e64736f6c63430008070033';

type MystikoV2LoopMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2LoopMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2LoopMain {
    return super.attach(address) as MystikoV2LoopMain;
  }
  connect(signer: Signer): MystikoV2LoopMain__factory {
    return super.connect(signer) as MystikoV2LoopMain__factory;
  }
  static readonly contractName: 'MystikoV2LoopMain';
  public readonly contractName: 'MystikoV2LoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2LoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopMain;
  }
}
