/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopMain, MystikoV2LoopMainInterface } from '../MystikoV2LoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxAmountLessThanMinAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeDividerTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
    ],
    name: 'MaxAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'MinAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFee',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collector',
        type: 'address',
      },
    ],
    name: 'ServiceFeeCollectorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeDividerChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFee',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCollector',
        type: 'address',
      },
    ],
    name: 'changeServiceFeeCollector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFeeDivider',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeCollector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeDivider',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
    ],
    name: 'setMaxAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801561003757600080fd5b5060405161142c38038061142c83398101604081905261005691610096565b600580546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556103e8600755620f42406008556100c6565b6000602082840312156100a857600080fd5b81516001600160a01b03811681146100bf57600080fd5b9392505050565b611357806100d56000396000f3fe6080604052600436106101805760003560e01c8063897b0637116100d6578063ddac5dc11161007f578063ec571c6a11610059578063ec571c6a14610404578063ed6ea33a14610424578063f6afe88f1461043c57600080fd5b8063ddac5dc1146103a6578063e19abef8146103c4578063ea0cde85146103e457600080fd5b8063cfc7e2da116100b0578063cfc7e2da1461035c578063d3e256bf14610371578063dd757c341461039157600080fd5b8063897b0637146102eb578063b1a0b3581461030b578063b1c394221461032b57600080fd5b806311a1933c116101385780633fc8c4d6116101125780633fc8c4d61461027d5780633fe3347a146102af5780634fe47f70146102cb57600080fd5b806311a1933c146102155780632421e1551461022a57806330f49cac1461025d57600080fd5b80630a5ea9eb116101695780630a5ea9eb146101bc5780630ba95909146101e05780630f087d76146101f557600080fd5b806301dbf19f1461018557806306394c9b1461019c575b600080fd5b34801561019157600080fd5b5061019a61044f565b005b3480156101a857600080fd5b5061019a6101b7366004610fee565b6104d3565b3480156101c857600080fd5b506008545b6040519081526020015b60405180910390f35b3480156101ec57600080fd5b506004546101cd565b34801561020157600080fd5b5061019a610210366004610fee565b610577565b34801561022157600080fd5b506007546101cd565b34801561023657600080fd5b50604080518082018252600481526306c6f6f760e41b602082015290516101d791906111dd565b34801561026957600080fd5b5061019a610278366004610fee565b61061b565b34801561028957600080fd5b506006546001600160a01b03165b6040516001600160a01b0390911681526020016101d7565b3480156102bb57600080fd5b5060016040516101d791906111b5565b3480156102d757600080fd5b5061019a6102e6366004611105565b61069b565b3480156102f757600080fd5b5061019a610306366004611105565b61071e565b34801561031757600080fd5b5061019a610326366004611105565b6107a1565b34801561033757600080fd5b5060005461034c90600160a01b900460ff1681565b60405190151581526020016101d7565b34801561036857600080fd5b506003546101cd565b34801561037d57600080fd5b5061019a61038c366004611105565b610842565b34801561039d57600080fd5b5061019a6108c5565b3480156103b257600080fd5b506002546001600160a01b0316610297565b3480156103d057600080fd5b5061019a6103df366004610fee565b61093d565b3480156103f057600080fd5b5061019a6103ff36600461100b565b61098a565b34801561041057600080fd5b50600054610297906001600160a01b031681565b34801561043057600080fd5b5060095460ff1661034c565b61019a61044a366004611045565b6109f6565b6005546001600160a01b0316331461047a576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926104c992900460ff161515815260200190565b60405180910390a1565b6005546001600160a01b031633146104fe576040516327e1f1e560e01b815260040160405180910390fd5b6005546001600160a01b038281169116141561052d576040516336a1c33f60e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b6005546001600160a01b031633146105a2576040516327e1f1e560e01b815260040160405180910390fd5b6006546001600160a01b03828116911614156105d1576040516336a1c33f60e01b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517fe6bc4ba4d04102f8f1140ad88cba6b7bd753b0391069bca06f44a955507dbb9390600090a250565b6005546001600160a01b03163314610646576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b6005546001600160a01b031633146106c6576040516327e1f1e560e01b815260040160405180910390fd5b6003548110156106e95760405163c91c531760e01b815260040160405180910390fd5b60048190556040518181527f09cd51dbb3863eb5590065f7de41ae4950c3ede201a9f214669deadb855d395590602001610690565b6005546001600160a01b03163314610749576040516327e1f1e560e01b815260040160405180910390fd5b60045481111561076c57604051636003e82160e11b815260040160405180910390fd5b60038190556040518181527f1c853e705f5e96d9076d1f48114d62650faf218827df3fed720227b3dbf18c5a90602001610690565b6005546001600160a01b031633146107cc576040516327e1f1e560e01b815260040160405180910390fd5b8060085414156107ef576040516336a1c33f60e01b815260040160405180910390fd5b8061080d576040516313a2a85760e21b815260040160405180910390fd5b60088190556040518181527fc9993a13ab327e43d2c7222016ea042dc8e0889c91571ae6062990deacb4540c90602001610690565b6005546001600160a01b0316331461086d576040516327e1f1e560e01b815260040160405180910390fd5b806007541415610890576040516336a1c33f60e01b815260040160405180910390fd5b60078190556040518181527f1c068decb3b5138b265d62b22c4c2d8191a2e0bd3745e97b5b0ff66fa852eca590602001610690565b6005546001600160a01b031633146108f0576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916104c991600160a01b90910460ff161515815260200190565b6005546001600160a01b03163314610968576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146109b5576040516327e1f1e560e01b815260040160405180910390fd5b6009805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e0990602001610690565b60095460ff1615610a1a57604051630e2f42c960e31b815260040160405180910390fd5b60035481511015610a3e5760405163617ab12d60e11b815260040160405180910390fd5b60045481511115610a6257604051630625040160e01b815260040160405180910390fd5b6000610a7b826040015183600001518460600151610ae8565b905080826020015114610aa1576040516301bfaa2560e51b815260040160405180910390fd5b610aaa33610c0e565b15610ac857604051632e70c0b160e01b815260040160405180910390fd5b610ae4826000015183602001518460a001518560800151610cab565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610b2b5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610b5d57604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610bb591600401611184565b60206040518083038186803b158015610bcd57600080fd5b505afa158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c05919061111e565b95945050505050565b60008054600160a01b900460ff16610c2857506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610c6d57600080fd5b505afa158015610c81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca59190611028565b92915050565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610d05918591906004016111f0565b600060405180830381600087803b158015610d1f57600080fd5b505af1158015610d33573d6000803e3d6000fd5b5050600254600654600854600754610d7d95506001600160a01b0393841694509190921691610d6c91610d66908b610d84565b90610d97565b610d76878a611276565b6000610da3565b5050505050565b6000610d9082846112b0565b9392505050565b6000610d90828461128e565b82610dae8284611276565b610db89190611276565b3414610e0b5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064015b60405180910390fd5b6000856001600160a01b03168360405160006040518083038185875af1925050503d8060008114610e58576040519150601f19603f3d011682016040523d82523d6000602084013e610e5d565b606091505b5050905080610eae5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606401610e02565b8315610f59576000856001600160a01b03168560405160006040518083038185875af1925050503d8060008114610f01576040519150601f19603f3d011682016040523d82523d6000602084013e610f06565b606091505b5050905080610f575760405162461bcd60e51b815260206004820152601b60248201527f7365727669636520666565207472616e73666572206661696c656400000000006044820152606401610e02565b505b505050505050565b600082601f830112610f7257600080fd5b813567ffffffffffffffff80821115610f8d57610f8d6112e5565b604051601f8301601f19908116603f01168101908282118183101715610fb557610fb56112e5565b81604052838152866020858801011115610fce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60006020828403121561100057600080fd5b8135610d90816112fb565b60006020828403121561101d57600080fd5b8135610d9081611313565b60006020828403121561103a57600080fd5b8151610d9081611313565b60006020828403121561105757600080fd5b813567ffffffffffffffff8082111561106f57600080fd5b9083019060c0828603121561108357600080fd5b61108b61124d565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff811681146110c657600080fd5b60608201526080830135828111156110dd57600080fd5b6110e987828601610f61565b60808301525060a083013560a082015280935050505092915050565b60006020828403121561111757600080fd5b5035919050565b60006020828403121561113057600080fd5b5051919050565b6000815180845260005b8181101561115d57602081850181015186830182015201611141565b8181111561116f576000602083870101525b50601f01601f19169290920160200192915050565b60608101818360005b60038110156111ac57815183526020928301929091019060010161118d565b50505092915050565b60208101600283106111d757634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610d906020830184611137565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261123460e0840182611137565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff81118282101715611270576112706112e5565b60405290565b60008219821115611289576112896112cf565b500190565b6000826112ab57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156112ca576112ca6112cf565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461131057600080fd5b50565b801515811461131057600080fdfea26469706673582212204e6d6c77a9b39e78d966e56ef6a89570bf3feeea55a3a5ced14e6d854a8eb35f64736f6c63430008070033';

type MystikoV2LoopMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2LoopMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2LoopMain {
    return super.attach(address) as MystikoV2LoopMain;
  }
  connect(signer: Signer): MystikoV2LoopMain__factory {
    return super.connect(signer) as MystikoV2LoopMain__factory;
  }
  static readonly contractName: 'MystikoV2LoopMain';
  public readonly contractName: 'MystikoV2LoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2LoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopMain;
  }
}
