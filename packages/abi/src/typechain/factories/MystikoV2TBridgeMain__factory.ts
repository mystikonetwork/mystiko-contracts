/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2TBridgeMain, MystikoV2TBridgeMainInterface } from '../MystikoV2TBridgeMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905534801561003657600080fd5b506040516200222d3803806200222d8339810160408190526100579161008a565b600b80546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556100ba565b60006020828403121561009c57600080fd5b81516001600160a01b03811681146100b357600080fd5b9392505050565b61216380620000ca6000396000f3fe6080604052600436106101965760003560e01c806382d21cd8116100e1578063ddac5dc11161008a578063ec571c6a11610064578063ec571c6a1461046d578063ed6ea33a1461048d578063efbfb2ae146104ac578063f4ad17c6146104c157600080fd5b8063ddac5dc1146103fb578063e19abef81461042d578063ea0cde851461044d57600080fd5b80639a03636c116100bb5780639a03636c146103b3578063a3bc64f2146103c6578063cfc7e2da146103e657600080fd5b806382d21cd814610342578063830d9ebe14610372578063897b06371461039357600080fd5b80633fe3347a116101435780635e10b2b71161011d5780635e10b2b7146102ed5780637d2c85201461030d578063825b5f8d1461032d57600080fd5b80633fe3347a14610292578063521ff057146102ae5780635898a0a8146102ce57600080fd5b806319e75d6e1161017457806319e75d6e146101fd5780632421e1551461021d57806330f49cac1461027257600080fd5b806306394c9b1461019b57806306b2ad59146101bd578063153dc450146101dd575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004611c08565b6104d6565b005b3480156101c957600080fd5b506101bb6101d8366004611c25565b610523565b3480156101e957600080fd5b506101bb6101f8366004611d1d565b6105a6565b34801561020957600080fd5b506101bb610218366004611d1d565b6105d6565b34801561022957600080fd5b50604080518082018252600781527f7462726964676500000000000000000000000000000000000000000000000000602082015290516102699190611fca565b60405180910390f35b34801561027e57600080fd5b506101bb61028d366004611c08565b610606565b34801561029e57600080fd5b5060016040516102699190611fa2565b3480156102ba57600080fd5b506101bb6102c9366004611d1d565b61067f565b3480156102da57600080fd5b506009545b604051908152602001610269565b3480156102f957600080fd5b506101bb610308366004611d1d565b610705565b34801561031957600080fd5b506101bb610328366004611dfa565b610735565b34801561033957600080fd5b50600a546102df565b34801561034e57600080fd5b5061036261035d366004611d4f565b6107d2565b6040519015158152602001610269565b34801561037e57600080fd5b5060005461036290600160a01b900460ff1681565b34801561039f57600080fd5b506101bb6103ae366004611d1d565b61085c565b6101bb6103c1366004611c5f565b61088c565b3480156103d257600080fd5b506101bb6103e1366004611c08565b610a78565b3480156103f257600080fd5b506006546102df565b34801561040757600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610269565b34801561043957600080fd5b506101bb610448366004611c08565b610ac5565b34801561045957600080fd5b506101bb610468366004611c25565b610b12565b34801561047957600080fd5b50600054610415906001600160a01b031681565b34801561049957600080fd5b50600b54600160a01b900460ff16610362565b3480156104b857600080fd5b506007546102df565b3480156104cd57600080fd5b506008546102df565b600b546001600160a01b03163314610501576040516327e1f1e560e01b815260040160405180910390fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b0316331461054e576040516327e1f1e560e01b815260040160405180910390fd5b60008054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061059b90831515815260200190565b60405180910390a150565b600b546001600160a01b031633146105d1576040516327e1f1e560e01b815260040160405180910390fd5b600955565b600b546001600160a01b03163314610601576040516327e1f1e560e01b815260040160405180910390fd5b600755565b600b546001600160a01b03163314610631576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200161059b565b600b546001600160a01b031633146106aa576040516327e1f1e560e01b815260040160405180910390fd5b60008111610700576040516314e8955b60e21b815260206004820152601760248201527f70656572206d696e696d616c20726f6c6c75702066656500000000000000000060448201526064015b60405180910390fd5b600a55565b600b546001600160a01b03163314610730576040516327e1f1e560e01b815260040160405180910390fd5b600855565b600b546001600160a01b03163314610760576040516327e1f1e560e01b815260040160405180910390fd5b600280547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff86160217905581516107ad906003906020850190611a9a565b50600480546001600160a01b0319166001600160a01b03929092169190911790555050565b6005546000906001600160a01b0316331461080057604051633dca01cf60e11b815260040160405180910390fd5b600061084185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b5b92505050565b905061084f87878584610c23565b5060019695505050505050565b600b546001600160a01b03163314610887576040516327e1f1e560e01b815260040160405180910390fd5b600655565b600b54600160a01b900460ff16156108b757604051630e2f42c960e31b815260040160405180910390fd5b600654815110156108db5760405163617ab12d60e11b815260040160405180910390fd5b6007548160a0015110156109025760405163c4d8d00d60e01b815260040160405180910390fd5b6009548160c001511015610929576040516355a6d6a160e11b815260040160405180910390fd5b600a548160e0015110156109505760405163784f02bd60e11b815260040160405180910390fd5b6000610969826040015183600001518460600151610d10565b90508082602001511461098f576040516301bfaa2560e51b815260040160405180910390fd5b61099833610e54565b156109b657604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e083015160608201526080808401519082015260006109f982610ef2565b9050610a098460a0015182610f61565b60025460e085015160c08601518651610a44936001600160a01b03169291610a3091612064565b610a3a9190612064565b8660a00151610fe4565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b600b546001600160a01b03163314610aa3576040516327e1f1e560e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610af0576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610b3d576040516327e1f1e560e01b815260040160405180910390fd5b600b8054911515600160a01b0260ff60a01b19909216919091179055565b610b8d6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b610bbf6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000610bcb84826110e5565b9083529050610bda84826110e5565b60208401919091529050610bee84826110e5565b60408401919091529050610c0284826110e5565b60608401919091529050610c168482611216565b5060808301525092915050565b6004546001600160a01b03848116911614610c5157604051631440e07960e11b815260040160405180910390fd5b60025467ffffffffffffffff858116600160a01b9092041614610c8757604051633876304f60e21b815260040160405180910390fd5b8051610ca65760405163820bf1e560e01b815260040160405180910390fd5b6002546040516378d60cd760e01b81526001600160a01b03909116906378d60cd790610cd89084908690600401611fdd565b600060405180830381600087803b158015610cf257600080fd5b505af1158015610d06573d6000803e3d6000fd5b5050505050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410610d525760405163805f2a4960e01b815260040160405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826fffffffffffffffffffffffffffffffff1610610da457604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610dfc91600401611f71565b60206040518083038186803b158015610e1457600080fd5b505afa158015610e28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4c9190611d36565b949350505050565b60008054600160a01b900460ff1615610e6f57506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610eb457600080fd5b505afa158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec9190611c42565b92915050565b606080610f028360000151611323565b610f0f8460200151611323565b610f1c8560400151611323565b610f298660600151611323565b610f3687608001516113bb565b604051602001610f4a959493929190611ecb565b60408051601f198184030181529190529392505050565b6005546004805460025460405163c81739cd60e01b81526001600160a01b039485169463c81739cd948894610fae94921692600160a01b90920467ffffffffffffffff1691889101611f36565b6000604051808303818588803b158015610fc757600080fd5b505af1158015610fdb573d6000803e3d6000fd5b50505050505050565b610fee8183612064565b341461103c5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016106f7565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611089576040519150601f19603f3d011682016040523d82523d6000602084013e61108e565b606091505b50509050806110df5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c65640000000000000000000060448201526064016106f7565b50505050565b60008083518360206110f79190612064565b1115801561110e575061110b836020612064565b83105b6111665760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016106f7565b600060405160206000600182038760208a0101515b8383101561119b5780821a8386015360018301925060018203915061117b565b50505081016040525190506001600160ff1b038111156111fd5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016106f7565b80611209856020612064565b92509250505b9250929050565b606060008061122585856113f2565b86519095509091506112378286612064565b1115801561124d575061124a8185612064565b84105b6112a55760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016106f7565b6060811580156112c05760405191506020820160405261130a565b6040519150601f8316801560200281840101848101888315602002848c0101015b818310156112f95780518352602092830192016112e1565b5050848452601f01601f1916604052505b50806113168387612064565b9350935050509250929050565b60606001600160ff1b0382111561137c5760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016106f7565b60405160208082526000601f5b828210156113ab5785811a826020860101536001919091019060001901611389565b5050506040818101905292915050565b80516060906113c9816115f8565b836040516020016113db929190611e9c565b604051602081830303815290604052915050919050565b600080600061140185856116c5565b94509050600060fd60f81b6001600160f81b03198316141561149a57611427868661174d565b955061ffff16905060fd8110801590611442575061ffff8111155b61148e5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016106f7565b925083915061120f9050565b607f60f91b6001600160f81b031983161415611525576114ba8686611806565b955063ffffffff16905061ffff811180156114d9575063ffffffff8111155b61148e5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106f7565b6001600160f81b031980831614156115a25761154186866118d8565b955067ffffffffffffffff16905063ffffffff811161148e5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106f7565b5060f881901c60fd811061148e5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106f7565b606060fd8267ffffffffffffffff16101561162b57604080516001815260f884901b602082015260218101909152610eec565b61ffff8267ffffffffffffffff161161167b5761164b60fd60f81b6119aa565b611654836119d1565b604051602001611665929190611e9c565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116116a65761169d607f60f91b6119aa565b61165483611a14565b6116b76001600160f81b03196119aa565b61165483611a57565b919050565b60008083518360016116d79190612064565b111580156116ee57506116eb836001612064565b83105b61173a5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016106f7565b8383016020015180611209856001612064565b600080835183600261175f9190612064565b111580156117765750611773836002612064565b83105b6117cd5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106f7565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e810351915050808460026112099190612064565b60008083518360046118189190612064565b1115801561182f575061182c836004612064565b83105b6118865760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106f7565b600060405160046000600182038760208a0101515b838310156118bb5780821a8386015360018301925060018203915061189b565b505050818101604052602003900351905080611209856004612064565b60008083518360086118ea9190612064565b1115801561190157506118fe836008612064565b83105b6119585760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106f7565b600060405160086000600182038760208a0101515b8383101561198d5780821a8386015360018301925060018203915061196d565b505050818101604052602003900351905080611209856008612064565b60408051600181526001600160f81b03198316602082015260218101909152606090610eec565b6040516002808252606091906000601f5b82821015611a045785811a8260208601015360019190910190600019016119e2565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611a475785811a826020860101536001919091019060001901611a25565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611a8a5785811a826020860101536001919091019060001901611a68565b5050506028810160405292915050565b828054611aa6906120b6565b90600052602060002090601f016020900481019282611ac85760008555611b0e565b82601f10611ae157805160ff1916838001178555611b0e565b82800160010185558215611b0e579182015b82811115611b0e578251825591602001919060010190611af3565b50611b1a929150611b1e565b5090565b5b80821115611b1a5760008155600101611b1f565b600067ffffffffffffffff80841115611b4e57611b4e6120f1565b604051601f8501601f19908116603f01168101908282118183101715611b7657611b766120f1565b81604052809350858152868686011115611b8f57600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611bba57600080fd5b611bc983833560208501611b33565b9392505050565b80356fffffffffffffffffffffffffffffffff811681146116c057600080fd5b803567ffffffffffffffff811681146116c057600080fd5b600060208284031215611c1a57600080fd5b8135611bc981612107565b600060208284031215611c3757600080fd5b8135611bc98161211f565b600060208284031215611c5457600080fd5b8151611bc98161211f565b600060208284031215611c7157600080fd5b813567ffffffffffffffff80821115611c8957600080fd5b908301906101008286031215611c9e57600080fd5b611ca661203a565b823581526020830135602082015260408301356040820152611cca60608401611bd0565b6060820152608083013582811115611ce157600080fd5b611ced87828601611ba9565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b600060208284031215611d2f57600080fd5b5035919050565b600060208284031215611d4857600080fd5b5051919050565b600080600080600060808688031215611d6757600080fd5b611d7086611bf0565b94506020860135611d8081612107565b9350604086013567ffffffffffffffff80821115611d9d57600080fd5b818801915088601f830112611db157600080fd5b813581811115611dc057600080fd5b896020828501011115611dd257600080fd5b6020830195508094505050506060860135611dec81612107565b809150509295509295909350565b600080600060608486031215611e0f57600080fd5b611e1884611bf0565b9250602084013567ffffffffffffffff811115611e3457600080fd5b8401601f81018613611e4557600080fd5b611e5486823560208401611b33565b9250506040840135611e6581612107565b809150509250925092565b60008151808452611e8881602086016020860161208a565b601f01601f19169290920160200192915050565b60008351611eae81846020880161208a565b835190830190611ec281836020880161208a565b01949350505050565b60008651611edd818460208b0161208a565b865190830190611ef1818360208b0161208a565b8651910190611f04818360208a0161208a565b8551910190611f1781836020890161208a565b8451910190611f2a81836020880161208a565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201526000611f686060830184611e70565b95945050505050565b60608101818360005b6003811015611f99578151835260209283019290910190600101611f7a565b50505092915050565b6020810160028310611fc457634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000611bc96020830184611e70565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261202160e0840182611e70565b9150506001600160a01b03831660208301529392505050565b604051610100810167ffffffffffffffff8111828210171561205e5761205e6120f1565b60405290565b6000821982111561208557634e487b7160e01b600052601160045260246000fd5b500190565b60005b838110156120a557818101518382015260200161208d565b838111156110df5750506000910152565b600181811c908216806120ca57607f821691505b602082108114156120eb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461211c57600080fd5b50565b801515811461211c57600080fdfea264697066735822122013313c1d2de914e39cc52d7301efd52d95cb3e74cba834523d2954294c8d30a164736f6c63430008070033';

type MystikoV2TBridgeMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2TBridgeMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2TBridgeMain__factory extends ContractFactory {
  constructor(...args: MystikoV2TBridgeMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2TBridgeMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2TBridgeMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2TBridgeMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2TBridgeMain {
    return super.attach(address) as MystikoV2TBridgeMain;
  }
  connect(signer: Signer): MystikoV2TBridgeMain__factory {
    return super.connect(signer) as MystikoV2TBridgeMain__factory;
  }
  static readonly contractName: 'MystikoV2TBridgeMain';
  public readonly contractName: 'MystikoV2TBridgeMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2TBridgeMainInterface {
    return new utils.Interface(_abi) as MystikoV2TBridgeMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2TBridgeMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2TBridgeMain;
  }
}
