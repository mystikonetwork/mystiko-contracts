/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x2Verifier, Transaction2x2VerifierInterface } from '../Transaction2x2Verifier';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611860806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e36600461165a565b610057565b604051901515815260200160405180910390f35b60008151600c146100ae5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420696e707574206c656e677468000000000000000000000000604482015260640160405180910390fd5b6100b882846100bf565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100eb610316565b9050806080015151855160016101019190611766565b1461010b57600080fd5b835151821161011957600080fd5b835160200151821161012a57600080fd5b60208401515151821161013c57600080fd5b602084810151015151821161015057600080fd5b602084810151510151821161016457600080fd5b6020848101518101510151821161017a57600080fd5b604084015151821161018b57600080fd5b818460400151602001511061019f57600080fd5b83516101aa90610bcd565b6101b357600080fd5b6101c08460200151610c45565b6101c957600080fd5b6101d68460400151610bcd565b6101df57600080fd5b604080518082019091526000808252602082018190525b865181101561028d5783878281518110610212576102126117fe565b60200260200101511061022457600080fd5b61027982610274856080015184600161023d9190611766565b8151811061024d5761024d6117fe565b60200260200101518a8581518110610267576102676117fe565b6020026020010151610d2f565b610d8d565b91508061028581611795565b9150506101f6565b506102b68183608001516000815181106102a9576102a96117fe565b6020026020010151610d8d565b90506102c181610bcd565b6102ca57600080fd5b61030c856000015186602001516102e084610de7565b85604001516102f28a60400151610de7565b6060880151885161030290610de7565b8960200151610e95565b9695505050505050565b61031e611424565b6040805180820182527f139f81d4be96daa6a72fb302e737ed667178701b1e242693b186cdc65c4689aa81527f0f5a05bf7d3cfb0870a296005b98ca9c59089c9c8e5a87da1141a0993dddf7ea6020808301919091529083528151608080820184527f1f9b1a72006721d3a229be18a46995c5be8582529e762453d88cafb6c53b8cba8285019081527f163bdc8bba3bccaf15bbcc603adc08b37b6d234877e83de5ab5c92b8054885d4606080850191909152908352845180860186527e219a2e93b0f9d6a9f65a4a94d5c593f3b579a964d9e4660a9c0412a258898981527f160877f13dabac279b0a6616b9489f92ca72e56cbe7ba7f08c47a6a5f3bb762c818601528385015285840192909252835180820185527f1689a5e0e68428af0328a161ae2550d3487ada0bdee8cc6976236deac9ac66908186019081527f1744300104c4d22a143586f36ea27a1ecdbb9fbd2067824c660eeac7cc15e433828501528152845180860186527f1de3675bcd5b04efc6ba5baf1142571f96752147a4e26170141c6396482daeb981527f2e36b88fc855b445ea945d9037a1ad21ab436f49299b03ffd2a7990ac93930e9818601528185015285850152835190810184527f286b53e141fee118cd7077116da717f9dec18f5004a5520a4696cb15ab29feb38185019081527e8ac66ede7fdfc053f3adef717bfc0fcef7228d37686456bd2035922f992d51828401528152835180850185527f2ff6e1e1cf1b043388c5b9b6dcdea9fd5849e0211fe7e429436a89d6708f58bd81527f0c1e484d2cf267575c2c28c0e5ab4d546d909274c4a64ed7d99b4970d6a38d758185015281840152908401528151600d8082526101c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161059857505060808201908152604080518082019091527f102c7f3fa321d9fef47b7f4e7250d3c4483ef5637bf7f3c1b49bcbb242fae2a581527f11223f9506589df27292673f889bf90bcea0ea0854f793d0d1e9b6521625388860208201529051805160009061062b5761062b6117fe565b602002602001018190525060405180604001604052807f18bfa3d6ae7b850a36f7b8b8535ae7cc2ea4d15964831dc752915e1a88eaa1d081526020017f0c183b00e5ce6b64305dd868d00e6e8dce6a0592778154b99b9df8223681d57d81525081608001516001815181106106a2576106a26117fe565b602002602001018190525060405180604001604052807f143cf5b3211f0e50dba763ad8d9ebcdd8f13ae8479b88daa97851c3f9f6046c881526020017f1f850ef125e9d7353277fb30fd792f6ca5d2976170d4ab903831af637cf1f4728152508160800151600281518110610719576107196117fe565b602002602001018190525060405180604001604052807f0ec686da43f90d52423b4dc31a79491705b2a2299d3958628e38dd4f713e5b1281526020017f2d59bbedecf120d9a6649cf16bb5ccc15b7f136b55d1a811bb71a5d64406edd78152508160800151600381518110610790576107906117fe565b602002602001018190525060405180604001604052807f0431637e5dc41d217ef3a3022bdb68f99ec82c051d1bbf431a67c2e3fcebb5c981526020017f10866db230554c591bd00d1a101050f4a86e629b59aa891f497953f8d46f97fa8152508160800151600481518110610807576108076117fe565b602002602001018190525060405180604001604052807f15625679365a48cdc44cb699dccfc32cb756ac3a22cd5f81b53fd60040fe4ff081526020017f0eeaa90ed575ccb00c9e48a12c21766cf65a11f637ceae80f9271d573e5ef094815250816080015160058151811061087e5761087e6117fe565b602002602001018190525060405180604001604052807f1021c30347c64dfd5ab72af915943fd4f80d589ab6584990bb5f90f45f6012ff81526020017f04325e5a0dd2d49dda738573174f6d413a37ad62d9f4ea95adc207767ae330eb81525081608001516006815181106108f5576108f56117fe565b602002602001018190525060405180604001604052807f014da6121450352820cefdb3379aae88ea61867bfafad99874f60875ae6bca8381526020017f1dddb2f99694d7dff2136012f3d633f3b191be4a4e1de28458d6eb0526b1b720815250816080015160078151811061096c5761096c6117fe565b602002602001018190525060405180604001604052807f0ecfe24a340034b9f80096357c0c59572e573c610a561ca417bc297783c0320581526020017f04dceee94e3f8d1d8a621076c72ca81b5901fb4472dc7afd7fc7edc5c192793e81525081608001516008815181106109e3576109e36117fe565b602002602001018190525060405180604001604052807f2396dce873de1e34580ff308f38a665b2f4f4773527abc8380a1be7ba645578481526020017f111bfb2d696099cf8a59a841b02a458a816dbe133c540e25c3bfe5eae826d7078152508160800151600981518110610a5a57610a5a6117fe565b602002602001018190525060405180604001604052807f1680240d849261223e4f7c4b4cada4dc897a05fa88263068289df8066715885c81526020017f11ec33b16bd90b3f509e0e8ad5e0796bc93bfca3ecdde25e5149a6013bd15bee8152508160800151600a81518110610ad157610ad16117fe565b602002602001018190525060405180604001604052807f0d73707cd045c8940e5872921e079d50052118ddfe25b4d4ca07295f0fa2c65e81526020017f179c2edb8c6775c3a288513ebc881d3edc2735975efbc5a97e502d6c481c76758152508160800151600b81518110610b4857610b486117fe565b602002602001018190525060405180604001604052807f10316ff241df31d1a4cbab446de82498f309a6ea439b58a9fb1300dcd8fa98f981526020017f01893da93ef65d49576a4fc9a98d846bc53f1bbd1b8f9b7ed57c6599760057438152508160800151600c81518110610bbf57610bbf6117fe565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610bfb8160036117b0565b8180610c0957610c096117e8565b84518380610c1957610c196117e8565b86518009098280610c2c57610c2c6117e8565b60208601518009610c3d919061177e565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2928592839283928392610cb592909190829060015b60200201516112f6565b895180516020820151939750919550610cda929060005b60200201518b516001610cab565b89519193509150610cf090839083906000610ccc565b9092509050610d0184848484611377565b9094509250610d1284848888611377565b909450925083158015610d23575082155b98975050505050505050565b6040805180820190915260008082526020820152610d4b611475565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b575b5080610d8557600080fd5b505092915050565b6040805180820190915260008082526020820152610da9611493565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b57610d7a565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610e52576040518060400160405280828560000151610e4191906117b0565b815260006020909101529392505050565b6040518060400160405280828560000151610e6d91906117b0565b8152602001828560200151610e8291906117b0565b610e8c908461177e565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610ed657610ed66117fe565b6020026020010181815250508a6020015181600181518110610efa57610efa6117fe565b602090810291909101015289516001602002015181600281518110610f2157610f216117fe565b6020908102919091010152895151815182906003908110610f4457610f446117fe565b6020026020010181815250508960200151600160028110610f6757610f676117fe565b602002015181600481518110610f7f57610f7f6117fe565b6020026020010181815250508960200151600060028110610fa257610fa26117fe565b602002015181600581518110610fba57610fba6117fe565b602002602001018181525050886000015181600681518110610fde57610fde6117fe565b602002602001018181525050886020015181600781518110611002576110026117fe565b602090810291909101015287516001602002015181600881518110611029576110296117fe565b602090810291909101015287515181518290600990811061104c5761104c6117fe565b602002602001018181525050876020015160016002811061106f5761106f6117fe565b602002015181600a81518110611087576110876117fe565b60200260200101818152505087602001516000600281106110aa576110aa6117fe565b602002015181600b815181106110c2576110c26117fe565b602002602001018181525050866000015181600c815181106110e6576110e66117fe565b602002602001018181525050866020015181600d8151811061110a5761110a6117fe565b602090810291909101015285516001602002015181600e81518110611131576111316117fe565b602090810291909101015285515181518290600f908110611154576111546117fe565b6020026020010181815250508560200151600160028110611177576111776117fe565b60200201518160108151811061118f5761118f6117fe565b60200260200101818152505085602001516000600281106111b2576111b26117fe565b6020020151816011815181106111ca576111ca6117fe565b6020026020010181815250508460000151816012815181106111ee576111ee6117fe565b602002602001018181525050846020015181601381518110611212576112126117fe565b602090810291909101015283516001602002015181601481518110611239576112396117fe565b602090810291909101015283515181518290601590811061125c5761125c6117fe565b602002602001018181525050836020015160016002811061127f5761127f6117fe565b602002015181601681518110611297576112976117fe565b60200260200101818152505083602001516000600281106112ba576112ba6117fe565b6020020151816017815181106112d2576112d26117fe565b6020026020010181815250506112e7816113bf565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761133881868909828061132f5761132f6117e8565b86890983611400565b8180611346576113466117e8565b8280611354576113546117e8565b8789098380611365576113656117e8565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476113a6878683611400565b6113b1878684611400565b925092505094509492505050565b80516000906113cc6114b1565b6000602082602085026020880160086107d05a03fa905080801561002b5750806113f557600080fd5b505115159392505050565b60008180611410576114106117e8565b61141a848461177e565b8508949350505050565b6040805160e08101909152600060a0820181815260c083019190915281526020810161144e6114cf565b815260200161145b6114cf565b81526020016114686114cf565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806114e26114f4565b81526020016114ef6114f4565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261152357600080fd5b61152b61171a565b80838560408601111561153d57600080fd5b60005b600281101561155f578135845260209384019390910190600101611540565b509095945050505050565b600082601f83011261157b57600080fd5b8135602067ffffffffffffffff8083111561159857611598611814565b8260051b604051601f19603f830116810181811084821117156115bd576115bd611814565b604052848152838101925086840182880185018910156115dc57600080fd5b600092505b858310156115ff5780358452928401926001929092019184016115e1565b50979650505050505050565b60006040828403121561161d57600080fd5b6040516040810181811067ffffffffffffffff8211171561164057611640611814565b604052823581526020928301359281019290925250919050565b60008082840361012081121561166f57600080fd5b6101008082121561167f57600080fd5b611687611743565b611691878761160b565b81526080603f19840112156116a557600080fd5b6116ad61171a565b92506116bc8760408801611512565b83526116cb8760808801611512565b60208401528260208201526116e38760c0880161160b565b60408201529350840135905067ffffffffffffffff81111561170457600080fd5b6117108582860161156a565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561173d5761173d611814565b60405290565b6040516060810167ffffffffffffffff8111828210171561173d5761173d611814565b60008219821115611779576117796117d2565b500190565b600082821015611790576117906117d2565b500390565b60006000198214156117a9576117a96117d2565b5060010190565b6000826117cd57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122005e454bfba2192a3cb5f3621bb4d3c87664727daa393527f758b76217cc0604e64736f6c63430008070033';

type Transaction2x2VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x2VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x2Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x2VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x2Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x2Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x2Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x2Verifier {
    return super.attach(address) as Transaction2x2Verifier;
  }
  connect(signer: Signer): Transaction2x2Verifier__factory {
    return super.connect(signer) as Transaction2x2Verifier__factory;
  }
  static readonly contractName: 'Transaction2x2Verifier';
  public readonly contractName: 'Transaction2x2Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x2VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x2VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x2Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x2Verifier;
  }
}
