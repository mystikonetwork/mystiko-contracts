/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x2Verifier, Transaction2x2VerifierInterface } from '../Transaction2x2Verifier';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611862806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e36600461165c565b610057565b604051901515815260200160405180910390f35b60008151600c146100ae5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420696e707574206c656e677468000000000000000000000000604482015260640160405180910390fd5b6100b882846100bf565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100eb610316565b9050806080015151855160016101019190611768565b1461010b57600080fd5b835151821161011957600080fd5b835160200151821161012a57600080fd5b60208401515151821161013c57600080fd5b602084810151015151821161015057600080fd5b602084810151510151821161016457600080fd5b6020848101518101510151821161017a57600080fd5b604084015151821161018b57600080fd5b818460400151602001511061019f57600080fd5b83516101aa90610bcf565b6101b357600080fd5b6101c08460200151610c47565b6101c957600080fd5b6101d68460400151610bcf565b6101df57600080fd5b604080518082019091526000808252602082018190525b865181101561028d578387828151811061021257610212611800565b60200260200101511061022457600080fd5b61027982610274856080015184600161023d9190611768565b8151811061024d5761024d611800565b60200260200101518a858151811061026757610267611800565b6020026020010151610d31565b610d8f565b91508061028581611797565b9150506101f6565b506102b68183608001516000815181106102a9576102a9611800565b6020026020010151610d8f565b90506102c181610bcf565b6102ca57600080fd5b61030c856000015186602001516102e084610de9565b85604001516102f28a60400151610de9565b6060880151885161030290610de9565b8960200151610e97565b9695505050505050565b61031e611426565b6040805180820182527f065d5bb66d1e5d5404d87a83b556bd2029ff0eabe82b77630701183d5163954481527f08dd321aab63b4a8c23bd09d585505008009a88ba7c3fba9638c3c0ddcbea9fa6020808301919091529083528151608080820184527f17175121abb6c818acbae333687834b781bd65ac86ead079d6665c57e92e8c3e8285019081527f20498321b07a3f2e7ed423f1a8deac0356f222a63d70700fe30bbce6c4b3dce9606080850191909152908352845180860186527f1b23a650a27e7e4037e6802c26583033e38140b4650b712f9383a256fd4dc79b81527f2e1b73811dd9f433ce81ccf90dc01697eb3045acd39caa8d7f79006f9e2c64bb818601528385015285840192909252835180820185527f285bfb022b14af3dcb15dd0b9236ec4331caf95d9c62b0f9228997ddb6ee00d58186019081527f0c446cadb9f62fa0d7d4fc5acd60cd434584883bcce09fc09ad0116d0546baeb828501528152845180860186527f09066cc0d305d39f17d541cf0bb7b46033e90756ad3d55c8e4fd465a931d3f9681527f12238a87848f2f6fbdda2eb2464fedd705e7f6d61510ac1a94922af0e25a6bf5818601528185015285850152835190810184527f26b884ce2d792dffb4f0726b2b162b5ba2839d67248de37b7eeed92f50f556c98185019081527f2e142687c06e33bbdc8543f4420d988ab6c71e4782bc405968b91a0bb4435467828401528152835180850185527f048a0a5edcd421010b1afe70530440dde5af1a1ae0857b2e00aa19b037ac317c81527f291db466d4457af5512a449a306daebfa93b83bea4b5d009591af80ba276e2e38185015281840152908401528151600d8082526101c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161059a57505060808201908152604080518082019091527f14de4c8a80c809fd6e2b6c8cba481abf2e42ef961d7425138f30976be08891ca81527f17cd58993a4976d717177f65dd37c476e94c5b90e0099f6077051b4c41ed8a0b60208201529051805160009061062d5761062d611800565b602002602001018190525060405180604001604052807f1fc679e2d31bb98b18f2e56e9d97853815761d296b856e77d2c2be2aa0c1be2681526020017f0417588679766a60b4fb1d9315cbba0556d5baa68dbe3e37b0ef004bfc2f334281525081608001516001815181106106a4576106a4611800565b602002602001018190525060405180604001604052807f2b21633684bd6157e6053f882d363d7a644e2c3ea0988dc51866c9d7c4ee2b4181526020017f1217536a983d50ade3970714fc647666fa7b5250ee089ab0deb597d17f39d25d815250816080015160028151811061071b5761071b611800565b602002602001018190525060405180604001604052807f137c92ffcd4ee8da0b20c6578def3b8fd4e87f06ad884036cd0a336f3db1e95481526020017f153b74478c7708ba11473492c989b2e32a6d6fcebc130a18db581b2ab04f5aa1815250816080015160038151811061079257610792611800565b602002602001018190525060405180604001604052807f11c299a3f272e142ef97661a486ae2083c6c700c498ee3a2cdb584ea9e55201e81526020017f2e9d87519fb6bdd1fda29270d3f53644221bd842e05fadc0ba88b8627b15a0bc815250816080015160048151811061080957610809611800565b602002602001018190525060405180604001604052807f263a1166ce2ad3b9c3d4310ffb7d768b7d09b444a4b5f9bcdc964836c4891a1a81526020017f15933c4eefe48714be292abcf264025de9948248d6d563da42e67d3fbf42feda815250816080015160058151811061088057610880611800565b602002602001018190525060405180604001604052807f114d3067d1fe4e08a7c03a9f3eabefb439809463f88867618d13d5c37e7df49e81526020017f243161e6b3590b9f05cc05681ee45e23dffbda7b6a22147c43a9f3944cac0fd881525081608001516006815181106108f7576108f7611800565b602002602001018190525060405180604001604052807f0a3a423e141ec936aa3bae3b7781eb785eb3ac126bb603c90b8dd58a32246e6e81526020017f0f9eb08f041ff1b8fd266798458e82e63b39bbe65e23bf0a53fe16273bdee114815250816080015160078151811061096e5761096e611800565b602002602001018190525060405180604001604052807f1e742e7acb744dcff64b901123da42b7db70602e26ac80a0166622edf18215c081526020017f18d6c97501e2f1a23697e3dc35f29fd892ab9dd8eb57fb091caa42d09256d9a381525081608001516008815181106109e5576109e5611800565b602002602001018190525060405180604001604052807f29e6d126854d425bd4081a60b39c0a3184eefdb7d23c41cc192c7ffb4ec606f581526020017f178440ef5d9add32370fe98e0b05a4ddcb1cba9f7ab5858cdcecc3c9b7e3ca0f8152508160800151600981518110610a5c57610a5c611800565b602002602001018190525060405180604001604052807f0226b2abbe854d25d050f9f96ac77b72d137246b97280f08568f59deaf4c03b381526020017f17732912427b5f244ba6ed5dd672fba7d6221c1f824ad1cc487acf3112f1798f8152508160800151600a81518110610ad357610ad3611800565b602002602001018190525060405180604001604052807f23e860d94ddb6c98db77f096ff7fedfc21d93e03d06ad88b1a7af1e2b47f34bc81526020017f238ecee727f142c8bd84047f5da4bd4ff21426bb848f6d127dac2ab8fedb77218152508160800151600b81518110610b4a57610b4a611800565b602002602001018190525060405180604001604052807f297515785b32be6514f96a8359a94e6e48eb8e387066205098fac78ee431405181526020017f145057f2c0e4c04eca0e85d121f36e1c37b526afa513d73b08379dfa5c23b9468152508160800151600c81518110610bc157610bc1611800565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47610bfd8160036117b2565b8180610c0b57610c0b6117ea565b84518380610c1b57610c1b6117ea565b86518009098280610c2e57610c2e6117ea565b60208601518009610c3f9190611780565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d2928592839283928392610cb792909190829060015b60200201516112f8565b895180516020820151939750919550610cdc929060005b60200201518b516001610cad565b89519193509150610cf290839083906000610cce565b9092509050610d0384848484611379565b9094509250610d1484848888611379565b909450925083158015610d25575082155b98975050505050505050565b6040805180820190915260008082526020820152610d4d611477565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b575b5080610d8757600080fd5b505092915050565b6040805180820190915260008082526020820152610dab611495565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b57610d7c565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610e54576040518060400160405280828560000151610e4391906117b2565b815260006020909101529392505050565b6040518060400160405280828560000151610e6f91906117b2565b8152602001828560200151610e8491906117b2565b610e8e9084611780565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610ed857610ed8611800565b6020026020010181815250508a6020015181600181518110610efc57610efc611800565b602090810291909101015289516001602002015181600281518110610f2357610f23611800565b6020908102919091010152895151815182906003908110610f4657610f46611800565b6020026020010181815250508960200151600160028110610f6957610f69611800565b602002015181600481518110610f8157610f81611800565b6020026020010181815250508960200151600060028110610fa457610fa4611800565b602002015181600581518110610fbc57610fbc611800565b602002602001018181525050886000015181600681518110610fe057610fe0611800565b60200260200101818152505088602001518160078151811061100457611004611800565b60209081029190910101528751600160200201518160088151811061102b5761102b611800565b602090810291909101015287515181518290600990811061104e5761104e611800565b602002602001018181525050876020015160016002811061107157611071611800565b602002015181600a8151811061108957611089611800565b60200260200101818152505087602001516000600281106110ac576110ac611800565b602002015181600b815181106110c4576110c4611800565b602002602001018181525050866000015181600c815181106110e8576110e8611800565b602002602001018181525050866020015181600d8151811061110c5761110c611800565b602090810291909101015285516001602002015181600e8151811061113357611133611800565b602090810291909101015285515181518290600f90811061115657611156611800565b602002602001018181525050856020015160016002811061117957611179611800565b60200201518160108151811061119157611191611800565b60200260200101818152505085602001516000600281106111b4576111b4611800565b6020020151816011815181106111cc576111cc611800565b6020026020010181815250508460000151816012815181106111f0576111f0611800565b60200260200101818152505084602001518160138151811061121457611214611800565b60209081029190910101528351600160200201518160148151811061123b5761123b611800565b602090810291909101015283515181518290601590811061125e5761125e611800565b602002602001018181525050836020015160016002811061128157611281611800565b60200201518160168151811061129957611299611800565b60200260200101818152505083602001516000600281106112bc576112bc611800565b6020020151816017815181106112d4576112d4611800565b6020026020010181815250506112e9816113c1565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761133a818689098280611331576113316117ea565b86890983611402565b8180611348576113486117ea565b8280611356576113566117ea565b8789098380611367576113676117ea565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476113a8878683611402565b6113b3878684611402565b925092505094509492505050565b80516000906113ce6114b3565b6000602082602085026020880160086107d05a03fa905080801561002b5750806113f757600080fd5b505115159392505050565b60008180611412576114126117ea565b61141c8484611780565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016114506114d1565b815260200161145d6114d1565b815260200161146a6114d1565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806114e46114f6565b81526020016114f16114f6565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261152557600080fd5b61152d61171c565b80838560408601111561153f57600080fd5b60005b6002811015611561578135845260209384019390910190600101611542565b509095945050505050565b600082601f83011261157d57600080fd5b8135602067ffffffffffffffff8083111561159a5761159a611816565b8260051b604051601f19603f830116810181811084821117156115bf576115bf611816565b604052848152838101925086840182880185018910156115de57600080fd5b600092505b858310156116015780358452928401926001929092019184016115e3565b50979650505050505050565b60006040828403121561161f57600080fd5b6040516040810181811067ffffffffffffffff8211171561164257611642611816565b604052823581526020928301359281019290925250919050565b60008082840361012081121561167157600080fd5b6101008082121561168157600080fd5b611689611745565b611693878761160d565b81526080603f19840112156116a757600080fd5b6116af61171c565b92506116be8760408801611514565b83526116cd8760808801611514565b60208401528260208201526116e58760c0880161160d565b60408201529350840135905067ffffffffffffffff81111561170657600080fd5b6117128582860161156c565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561173f5761173f611816565b60405290565b6040516060810167ffffffffffffffff8111828210171561173f5761173f611816565b6000821982111561177b5761177b6117d4565b500190565b600082821015611792576117926117d4565b500390565b60006000198214156117ab576117ab6117d4565b5060010190565b6000826117cf57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220224bd2c01ee33c4a6f8f6ccede25b32c570414f5d4fd1f418e16480593ab121964736f6c63430008070033';

type Transaction2x2VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x2VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x2Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x2VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x2Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x2Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x2Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x2Verifier {
    return super.attach(address) as Transaction2x2Verifier;
  }
  connect(signer: Signer): Transaction2x2Verifier__factory {
    return super.connect(signer) as Transaction2x2Verifier__factory;
  }
  static readonly contractName: 'Transaction2x2Verifier';
  public readonly contractName: 'Transaction2x2Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x2VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x2VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x2Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x2Verifier;
  }
}
