/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x0Verifier, Transaction2x0VerifierInterface } from '../Transaction2x0Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506121d0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611fca565b610057565b604051901515815260200160405180910390f35b60008151601e1461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906120d6565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611515565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161158d565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611515565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61216e565b6020026020010151611677565b905060005b865181101561038c57838782815181106102fd576102fd61216e565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906120d6565b8151811061034c5761034c61216e565b60200260200101518a85815181106103665761036661216e565b60200260200101516116f4565b611677565b91508061038481612105565b9150506102e1565b5061039681611515565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611743565b85604001516103db8a60400151611743565b606088015188516103eb90611743565b89602001516117f1565b9695505050505050565b610407611d94565b6040805180820182527f0359ed6df706877825d15f558e82008a6e4e82d1ee71d1764e1da92581e3f0c681527f2b6b41048d64e876c2257c8ec53f9dc77ce4dcdf089f0054674616bbd4a374026020808301919091529083528151608080820184527f07a8107933bfb07564e766b450917a57146a3e37908df9e20d789387065cf6b68285019081527f1c622ae66189263cb7121e7e241596ef905785db595a1a1c08a619cca50536f5606080850191909152908352845180860186527f178f55292a64fcd45c063ecc47b09dd89a791adde268ff3d4e54db1a4f76a32e81527f264afeaba1bfa6f4122b8740a7d3a1a5fb28f91c773d4286e9be3554ae268b89818601528385015285840192909252835180820185527f1a4fa46b3d2380d60b7394b7af661c32589308319c54e69d617394a7734c31858186019081527f0700f97f4bef97ee8be8b75ea688d1c4da38fb8921abac4c7ea18cca36a60f37828501528152845180860186527f1dea6631bbf9a18a156143ae258ce27e5ef7b8451043967cd13cb814f269018281527f12d988ac5286e23c83819963789a0154e9c229c7b87d3dbea6434ad29c7e9781818601528185015285850152835190810184527f07e188c8e04440871a03611df93ba62955095ff541b9570dd925252e6e472e198185019081527f2731dd7012d781ac2dd4368aac76b93b56fe7b27c3670bdc8b02a2a8ae6ec02e828401528152835180850185527f2d2201e92f264cecfd1b5f5c9b270118efe16b6ceffb102c0b5f31f9bd7b0dd781527f1f5157c9b24ee830fabdbed0fdb7b2e10e4eb3bbc85c2b570cdd6f42697468ef8185015281840152908401528151601f8082526104008201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f050c5389eb812855d7baa9565f24e3ef75ce4d299f73bc26a97ad4bf93de2f0b81527f2c1ace38a35a7b58d9982cbeb015086f1d35d8fc0c61467197ebff6709264de86020820152905180516000906107165761071661216e565b602002602001018190525060405180604001604052807f1c445b2284022d60c5dcf38a6b65465bd586e388c4e6c33efa3dd20873e51de981526020017f251a493eac1d513ef4aa1cd53eba741eeeb56377d5782262df73a7cf40052b4d815250816080015160018151811061078d5761078d61216e565b602002602001018190525060405180604001604052807f0c49098507a911ab8d533731a45c1a100f9f7a40ec6af2e5fdb5786c0ffc9f6b81526020017f276c7170a112647530e76abc4ef1671a62d3e4ea58efb9ab7c645e7a713a30f881525081608001516002815181106108045761080461216e565b602002602001018190525060405180604001604052807f28a6d14b0a10129c6817446e5f6300b7ab764cc00cfab8fe219e6b747974530b81526020017f2fbd8e0ec28e010ca1a73680945e690b30368c76295fbe86f8093cc1c8550326815250816080015160038151811061087b5761087b61216e565b602002602001018190525060405180604001604052807f0b9abaee0ea5f0523d49aeae829eec10a6ffd9f905b144ddf2715e468404c6a381526020017f2d7938d469c97ba0c971ec42f155a25a44e3d9394e3df0094233b62d96fb055b81525081608001516004815181106108f2576108f261216e565b602002602001018190525060405180604001604052807f0e94f689958de261f64ff48a66ab07850a3cf02389dec927481916ae9aa587b781526020017f294652cc5f758074251ffe5539b81ff1dcf4c07bb57e6f19abca83c8b335d67b81525081608001516005815181106109695761096961216e565b602002602001018190525060405180604001604052807e1ba56fdf44f881acb4cad763ca840d6db08f805b3ec5444c5fe3d65133e7a881526020017f1306c03f7f06f5ffcbf72e342796c524583707ae5f0b3fe193c24ddc8275446981525081608001516006815181106109df576109df61216e565b602002602001018190525060405180604001604052807f0bff12e782330453c21e8504dfcbaccd47592a136b8255790cc069d3144036bd81526020017f04f3871f523416473fba8a5a1c523d2b4627fb0ef44f2cf4c68d28d94ea24c5a8152508160800151600781518110610a5657610a5661216e565b602002602001018190525060405180604001604052807f17a6abc1c9e570c22ec353dbdcd6bd91c58ef853549994bf6ba660617d6d579481526020017f139d344e7f0ef6ab5360008e5ea41e64ab5094bf482deecf872ea827440298b58152508160800151600881518110610acd57610acd61216e565b602002602001018190525060405180604001604052807f0cbf9a2f9d2b4a0b38be8155327fcfc4f6e8bc47fe939a03a05bf69f5fbaa59081526020017f1714f5c05a068901b88cef9615089fe38f59ed02090093a0f8ae636e855697fc8152508160800151600981518110610b4457610b4461216e565b602002602001018190525060405180604001604052807f1772d3d62ab9b88292c19d39c2c9a99c682f68e2b814da243a6235693d4e517b81526020017f22608e351254762fbf55200022f8fed8cf4aa601636cf4e63b9e9a12f8fda35b8152508160800151600a81518110610bbb57610bbb61216e565b602002602001018190525060405180604001604052807f0da1008a645fcbd568c3b4a182a23e5bbbab0d466504d2f5c663454a0683d44781526020017f0df26ed5ecb9df9117bf0b460dd718ab7ec66ab44090929e176a5b82450629c98152508160800151600b81518110610c3257610c3261216e565b602002602001018190525060405180604001604052807f11179f47805d71b315df7a2fa2d1ad270f51b6bbd441220cbe219f96ee07e2ed81526020017f2b935d0fc5aec6810d626dee10927ecdb6d247e6ba4fb35108c4e35abc77c7ef8152508160800151600c81518110610ca957610ca961216e565b602002602001018190525060405180604001604052807f257134f57cae7afc84431f8ca2577a4b79bee0c6debfa9604234536f708687dd81526020017f0e2fce66373dcb2645784e873f87072843dc26ec5e54a6b276e23e83f39e333f8152508160800151600d81518110610d2057610d2061216e565b602002602001018190525060405180604001604052807f144100e1b97b6caa9f79ac15fe3de53af1475d46b54a694d019ce778b83c89e481526020017f1d8acdfcbb5079859f9afc98691eaa35fc0e91b1f106261aadfe916d8085c2678152508160800151600e81518110610d9757610d9761216e565b602002602001018190525060405180604001604052807f29ba9ffa129bd290c7bfea54442a81f57a21fb6d4aab8521b5c7e7b4ac0de9d481526020017f1a183f11f8ba97bac6cb904d2c5a809953673f986f974cf3c843ad65530e365f8152508160800151600f81518110610e0e57610e0e61216e565b602002602001018190525060405180604001604052807f058e84527fb542ee732db7aac8f093cec66a6fb54e7eb85c17cf43d67179595481526020017f1bfd4ab2921be2016df422a9727148f354783ef7b22d5b723d143e4a3360f1be8152508160800151601081518110610e8557610e8561216e565b602002602001018190525060405180604001604052807f0f9f9840c018168157ea54fbeda65ba20a8a09557d4430fdc346ca1b9faf167381526020017f26845bcd154cabe09ec23e11ad3eadbac6c5110c86a007960cc4fb8f1bfc91df8152508160800151601181518110610efc57610efc61216e565b602002602001018190525060405180604001604052807f1ee9f099b2b6bdd8ffcf0a17a8bb029824909d4432b7b51ba7b8aa118b5fdcad81526020017f25f9d44f3a83feabc746062903e41d043ec19c91ea89229e7c15f573dfebdc488152508160800151601281518110610f7357610f7361216e565b602002602001018190525060405180604001604052807f0a73159bba11aeed966acae638bcced3f0a321f5bb17535badc4302645dd511f81526020017f24f73fe159f257dc3bab6673e956e259964bdc74b978ab5ff3d769ec8e0e169a8152508160800151601381518110610fea57610fea61216e565b602002602001018190525060405180604001604052807f039cfdf18d7a89b9b0bfb090ca5ac147afcf4c33f103b02d82d0318fd084a27a81526020017f166eb2ce74152439ac877f98bdbe5d43122e04397f24dd82a29c4f4078afcaf481525081608001516014815181106110615761106161216e565b602002602001018190525060405180604001604052807f12e67a99038c16d849d7252393e06478ad64e5428321d80700f53ba35fcb72c781526020017f1f761956aa9b765c2a31cdb7a022049c144ce41beeef43c4f7e91830b0ab4c5a81525081608001516015815181106110d8576110d861216e565b602002602001018190525060405180604001604052807f10105cb3c8100b3a5f72f0e5812cd364cc873f74cc0fa29503cdc477637d41f681526020017f0c3d6c24bef844f229298a58838f3a29480b088b468477770b0b4ae7a4606ceb815250816080015160168151811061114f5761114f61216e565b602002602001018190525060405180604001604052807f0bcd46b03ab66364aa5548d25d7b7deab1eb8b9f14406e6c7c620fb1678473c981526020017f15173a9479da7a8812869c3c6ff2576677465abff6f5f904d7ee122d64cdadd881525081608001516017815181106111c6576111c661216e565b602002602001018190525060405180604001604052807f1f8897ed133c0119a14277de1839b70006b4f10416b1a3b4fbbc16be5ff499b281526020017f212d34f959d7c77398b58bf7a6d69d6bdebf4fcb9c91300cbea235be8b2ea889815250816080015160188151811061123d5761123d61216e565b602002602001018190525060405180604001604052807f2361da63126e31972f6af8035534f39dfc78adfdab1f73b0e5f670013c23716c81526020017f2932d875e0df6a8c7f9d4238689cadc0efd6a54a25b40a42061d776e1db0322e81525081608001516019815181106112b4576112b461216e565b602002602001018190525060405180604001604052807f2a056c9da33c2e73c5bd95db4a9b8fdd73eef26db8ae65af7f772f7b854bf5da81526020017f0564069785b2e072c827a732c4e4f0b55d4a7d82dc0e0f4a6f48ba8a9838aa008152508160800151601a8151811061132b5761132b61216e565b602002602001018190525060405180604001604052807f2c06625a65f0ec8735c6adf8e9d11d1f98bbda129e986bcd580f08c7ad7b9fcb81526020017f18a51424c6325cbddc59e83c4a33e890be2597b1e27bfc3eada5b3f709ce7d508152508160800151601b815181106113a2576113a261216e565b602002602001018190525060405180604001604052807f1509d032701fc89c3bce8ca6b90a1559f5fa1b3fa3f6a675fa6ae2f0c3cd830081526020017f0781aa0565f72cdc6df26c98cdc70ae9a77a919678f6bcbe98c93c601bbfcac48152508160800151601c815181106114195761141961216e565b602002602001018190525060405180604001604052807f27e46890dd88ddf4c0fe0db43b8cee632a11805d8c3c7dcdeadf40ca5b38fc9981526020017f094f2a565db56b027d689b9a2e372e9273b164ddbc8c234c332c61024372883e8152508160800151601d815181106114905761149061216e565b602002602001018190525060405180604001604052807f2da352157af2d9750ce01a5c6b68e2408201cfe793f1811c4655d328e4f3395c81526020017f063c3652aa9a4aa7438ca9a59fac5e3df34b4e0bede4db4a8d213ec030a726808152508160800151601e815181106115075761150761216e565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611543816003612120565b818061155157611551612158565b8451838061156157611561612158565b8651800909828061157457611574612158565b6020860151800961158591906120ee565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926115fd92909190829060015b6020020151611c52565b895180516020820151939750919550611622929060005b60200201518b5160016115f3565b8951919350915061163890839083906000611614565b909250905061164984848484611cd3565b909450925061165a84848888611cd3565b90945092508315801561166b575082155b98975050505050505050565b6040805180820190915260008082526020820152611693611de5565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806116ec57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152611710611e03565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576116cd565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47906117ae57604051806040016040528082856000015161179d9190612120565b815260006020909101529392505050565b60405180604001604052808285600001516117c99190612120565b81526020018285602001516117de9190612120565b6117e890846120ee565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106118325761183261216e565b6020026020010181815250508a60200151816001815181106118565761185661216e565b60209081029190910101528951600160200201518160028151811061187d5761187d61216e565b60209081029190910101528951518151829060039081106118a0576118a061216e565b60200260200101818152505089602001516001600281106118c3576118c361216e565b6020020151816004815181106118db576118db61216e565b60200260200101818152505089602001516000600281106118fe576118fe61216e565b6020020151816005815181106119165761191661216e565b60200260200101818152505088600001518160068151811061193a5761193a61216e565b60200260200101818152505088602001518160078151811061195e5761195e61216e565b6020908102919091010152875160016020020151816008815181106119855761198561216e565b60209081029190910101528751518151829060099081106119a8576119a861216e565b60200260200101818152505087602001516001600281106119cb576119cb61216e565b602002015181600a815181106119e3576119e361216e565b6020026020010181815250508760200151600060028110611a0657611a0661216e565b602002015181600b81518110611a1e57611a1e61216e565b602002602001018181525050866000015181600c81518110611a4257611a4261216e565b602002602001018181525050866020015181600d81518110611a6657611a6661216e565b602090810291909101015285516001602002015181600e81518110611a8d57611a8d61216e565b602090810291909101015285515181518290600f908110611ab057611ab061216e565b6020026020010181815250508560200151600160028110611ad357611ad361216e565b602002015181601081518110611aeb57611aeb61216e565b6020026020010181815250508560200151600060028110611b0e57611b0e61216e565b602002015181601181518110611b2657611b2661216e565b602002602001018181525050846000015181601281518110611b4a57611b4a61216e565b602002602001018181525050846020015181601381518110611b6e57611b6e61216e565b602090810291909101015283516001602002015181601481518110611b9557611b9561216e565b6020908102919091010152835151815182906015908110611bb857611bb861216e565b6020026020010181815250508360200151600160028110611bdb57611bdb61216e565b602002015181601681518110611bf357611bf361216e565b6020026020010181815250508360200151600060028110611c1657611c1661216e565b602002015181601781518110611c2e57611c2e61216e565b602002602001018181525050611c4381611d1b565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611c94818689098280611c8b57611c8b612158565b86890983611d70565b8180611ca257611ca2612158565b8280611cb057611cb0612158565b8789098380611cc157611cc1612158565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d02878683611d70565b611d0d878684611d70565b925092505094509492505050565b8051600090611d28611e21565b6000602082602085026020880160086107d05a03fa905080801561002b575080611d6557604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611d8057611d80612158565b611d8a84846120ee565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611dbe611e3f565b8152602001611dcb611e3f565b8152602001611dd8611e3f565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611e52611e64565b8152602001611e5f611e64565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611e9357600080fd5b611e9b61208a565b808385604086011115611ead57600080fd5b60005b6002811015611ecf578135845260209384019390910190600101611eb0565b509095945050505050565b600082601f830112611eeb57600080fd5b8135602067ffffffffffffffff80831115611f0857611f08612184565b8260051b604051601f19603f83011681018181108482111715611f2d57611f2d612184565b60405284815283810192508684018288018501891015611f4c57600080fd5b600092505b85831015611f6f578035845292840192600192909201918401611f51565b50979650505050505050565b600060408284031215611f8d57600080fd5b6040516040810181811067ffffffffffffffff82111715611fb057611fb0612184565b604052823581526020928301359281019290925250919050565b600080828403610120811215611fdf57600080fd5b61010080821215611fef57600080fd5b611ff76120b3565b6120018787611f7b565b81526080603f198401121561201557600080fd5b61201d61208a565b925061202c8760408801611e82565b835261203b8760808801611e82565b60208401528260208201526120538760c08801611f7b565b60408201529350840135905067ffffffffffffffff81111561207457600080fd5b61208085828601611eda565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156120ad576120ad612184565b60405290565b6040516060810167ffffffffffffffff811182821017156120ad576120ad612184565b600082198211156120e9576120e9612142565b500190565b60008282101561210057612100612142565b500390565b600060001982141561211957612119612142565b5060010190565b60008261213d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fc34d0ad871955b822399289ca3bb0e3c3c169324f63e6e0b406a09a64e2cffc64736f6c63430008070033';

type Transaction2x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x0Verifier {
    return super.attach(address) as Transaction2x0Verifier;
  }
  connect(signer: Signer): Transaction2x0Verifier__factory {
    return super.connect(signer) as Transaction2x0Verifier__factory;
  }
  static readonly contractName: 'Transaction2x0Verifier';
  public readonly contractName: 'Transaction2x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x0Verifier;
  }
}
