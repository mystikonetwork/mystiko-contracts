/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x0Verifier, Transaction1x0VerifierInterface } from '../Transaction1x0Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611e8e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611c88565b610057565b604051901515815260200160405180910390f35b6000815160171461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce9190611d94565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906111d3565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161124b565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516111d3565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611e2c565b6020026020010151611335565b905060005b865181101561038c57838782815181106102fd576102fd611e2c565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c9190611d94565b8151811061034c5761034c611e2c565b60200260200101518a858151811061036657610366611e2c565b60200260200101516113b2565b611335565b91508061038481611dc3565b9150506102e1565b50610396816111d3565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611401565b85604001516103db8a60400151611401565b606088015188516103eb90611401565b89602001516114af565b9695505050505050565b610407611a52565b6040805180820182527f27507e01e82baf4df6e3551d4c1aa35bdc254ab2c5f086d14778871b67601f6681527f1ded5feea42eb34cd021105557c0f8dbcbd788bdffa6222e5495fd51285013136020808301919091529083528151608080820184527f14695762378d6c162b795ca21228ba8bf35be3313c87557bcfbf985c10b4e9518285019081527f0d1c1e6c7929cf103b25d8dd027d05e3dd94e0b889a5ac6d86eaf12922e18c67606080850191909152908352845180860186527f0dcbec50e33b0b190ef461ac625b6b8f6562fb141d11bdc36e7b5cb140260dec81527f2538f19ee748a594302ab03d450d9df402cfb92517155589887940c981385ce5818601528385015285840192909252835180820185527f023775d5413c9d35110ae262ae40141b1ae6e84e0051004287be03de5b5f669d8186019081527f1ad70b05208fa77365e3071221b561f829ce3f97f4941db3721942d9dacdb382828501528152845180860186527f25bf55f22544da9834479eddb2f85229f34c04f6fd30631e4ed9abc9d83bbfb781527f0ea305d2dd96ab77517b268962e4ad702f83ff9e849f52b64ce0ff7976a277c4818601528185015285850152835190810184527f0ef3303ca940810257d29ae146fae8dd65925dc945df204672900799277160cf8185019081527f2f4c6ca17e30928b521db54899b48d0562ada97f279d021e1e07dad9b8e0e8ff828401528152835180850185527f2ad1e1b17e3547927ab1f5aa1b30a85b847fc33062bbec54f0f3ef3ee3e322c081527f23a921a204e9c991dc87c1031ce833952a8adbd4d1be3850ce3c011978362508818501528184015290840152815160188082526103208201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f062b8a5d324ffb061b09845a69e57e048ffbd2f21f0256d8d8b859b7e632034181527f154faf58e0e65c79fa18c804b54c37473bf039c8098643701baf460dba04faa660208201529051805160009061071657610716611e2c565b602002602001018190525060405180604001604052807f28559d68c80f200a5cd7164107889a9199b24767faedec1572a2877abfc86efc81526020017f0f35393a71fb58d7c43004eb42226b4306fa1d28ae592f7ad70f2030114352ec815250816080015160018151811061078d5761078d611e2c565b602002602001018190525060405180604001604052807f053641eb0c8111619fa0c2416a6aa0b9d31ae7e9fa0c602c52e9a735a578726d81526020017f17ae58fa16095e64285df10f2846ffa6e2e86c4c027c86874bd08e2468166e2f815250816080015160028151811061080457610804611e2c565b602002602001018190525060405180604001604052807f0261cb86df47ecf73e43224ba290a28c5ed2e2ccb4ddfe62e2b349451fba3ab981526020017f27caca2880b0605a46ab16ace52bb430d2b846810c8f7f50223c945bfadc902f815250816080015160038151811061087b5761087b611e2c565b602002602001018190525060405180604001604052807f134ba1947cac97ff5797657986eaf8ee4893137adbd027480892b6ee28bcc90781526020017f1fa73dbf612124dda3990a642a3050b5f9765614e2baeeb3dcf73721f6ab997881525081608001516004815181106108f2576108f2611e2c565b602002602001018190525060405180604001604052807f03b2cdbcaad84212f2daf957bceca1f24847e301429cfe3dae86ebe55737a89081526020017f2f3299d8c21adb64049e7bda48855a2fb0d219714c3785746c5ff43dd6491d19815250816080015160058151811061096957610969611e2c565b602002602001018190525060405180604001604052807f05998ba84b0f1b9223ad3c991bbba548bb46c9ada7fab197aebb16123a3f85c481526020017f2e2edde09a212df4c6c696a56b9a9ebea94e6b1107710e9fafcb5c44ca883c5f81525081608001516006815181106109e0576109e0611e2c565b602002602001018190525060405180604001604052807f02167035fe42cba47d07294d75c8e26a159a71098137869765b9dcfc82b368b981526020017f0c056fea8efae26574d9ef77de4414a7d4fd419b36144acf2607c744dd9799338152508160800151600781518110610a5757610a57611e2c565b602002602001018190525060405180604001604052807f2648456d7be3f06d6dfb1bf26f44dd4c994c8d1c76f40bd325abce63a68e664281526020017f1daeb0d46b7c21a91e85fd702051f92e06a55d50896c5ec019bbfc1f9f59493c8152508160800151600881518110610ace57610ace611e2c565b602002602001018190525060405180604001604052807f083c17dcdc7d979c2dc3fb4e67fdc40eeb13ef678964d0e266873d0012d1d4bf81526020017f1446c3be02e1ebff6bdd79775c3cedfbf8383917d01db6e4ac88e21936496d698152508160800151600981518110610b4557610b45611e2c565b602002602001018190525060405180604001604052807f2cf57b26365a02ea0dfe14b5beecc4b248f27c6841a71c3109fea6f9535a83f581526020017f2ef66d7d3518247b770009d3bbdb321d5a5beedaf459413508339d40872fa6848152508160800151600a81518110610bbc57610bbc611e2c565b602002602001018190525060405180604001604052807f16098e3c8f6e388b52ecdb8eaa950eb43f8a2166ff3a5ebf62f00946ef8c598881526020017f24bc30cf742c32e6dc1b857abd77bd1b3d12a713ac58b9b8c830a9438d1079668152508160800151600b81518110610c3357610c33611e2c565b602002602001018190525060405180604001604052807f052dcd01aea392f2e8d0dbbd2203740a382f3d75a1b3ae921d0cf27e8dd1fa2d81526020017f07bf07b1dee6311d5c73d3f18f81e04a3604b26e835b7bc1910a9e3b199f48ac8152508160800151600c81518110610caa57610caa611e2c565b602002602001018190525060405180604001604052807f16ff23c0c7b530f36242414fe50c04f19a7f9338887b1abfdd282cd45b3cc8dd81526020017f017a1eab2a88a140fff23f963729eee32545a8e17b90206b494b8702227c2a0d8152508160800151600d81518110610d2157610d21611e2c565b602002602001018190525060405180604001604052807f133010134da067a56951755852874f7f2d02287eb2518e0d49903498c0cd92bf81526020017f1882666c505703afe3fe63d746df8963ae2ce5a61fe877140450010a341da0498152508160800151600e81518110610d9857610d98611e2c565b602002602001018190525060405180604001604052807f21906fa97b2afaad7fe953b40df0788676c61dd9f59759810fa379e22fb1b31681526020017f041d672564177785c1c1c6160210755d220818e2d9b155be16db979c1294bb628152508160800151600f81518110610e0f57610e0f611e2c565b602002602001018190525060405180604001604052807f0d046c26cbd71e288925a09de3bf47ca84e4d9af60eb77dba59695cb07da55c781526020017f11ec66a2010af6eb2286f6361ea4f5aed451a9d7129f790d012189b9cac2860e8152508160800151601081518110610e8657610e86611e2c565b602002602001018190525060405180604001604052807f2fb428a696f155a466fdae99c5db18003cd86684fb52e968fdbcab3cb675814d81526020017f110004c1c2b3c616b4191d1daf815315b687f7bfff7fb9996dccfc5cf2ced11d8152508160800151601181518110610efd57610efd611e2c565b602002602001018190525060405180604001604052807e5632e7e14fdbcaa63e991f4279f1bc3423962c023ff0e88e47c98223d99f5e81526020017f0f7d2b67684f31a132e6c3b608fb2be0481e4e8ea2f10edce378196a3aac2b7f8152508160800151601281518110610f7357610f73611e2c565b602002602001018190525060405180604001604052807f0ed85426e0858bf7373858686cbc3e35833eada674a956b8f5189f5b1deb098c81526020017f0483dc1cc2856c6f9f9a009a41e651aacf28008099c6596f351524ed71f464558152508160800151601381518110610fea57610fea611e2c565b602002602001018190525060405180604001604052807f2146d6c88b0bea4625231a6f5269f4b5393b2196e84f94720fa268971906cb0381526020017e9cd2809e6d658c78ec05d7ab215a3fc01948b872c9033b0cf36d1c44590136815250816080015160148151811061106057611060611e2c565b602002602001018190525060405180604001604052807f2f065e865f43c40a80161126e16b8a5722e1338c14dfb5ed73eb733a60ec186381526020017f1ba29cc15cc3fd60f2fbd9d37d8aa6f9e17db5c19b919e15f36570ba8eac5c9e81525081608001516015815181106110d7576110d7611e2c565b602002602001018190525060405180604001604052807f15c20a44b32bacbdb46bafde6e6402d7d917a05cf730c1727f36438e74c6c4e881526020017f068794d23912c08a779e8b7c42f66fb937a168eb29911c4aa7102907dea5adb8815250816080015160168151811061114e5761114e611e2c565b602002602001018190525060405180604001604052807f1817a4d3b3048a86940a0bec00622518713ec79a92c0a9f3185757d410b6721381526020017f07e657322707261988729208a9c8600438f16518f44d15766204867334ce33c481525081608001516017815181106111c5576111c5611e2c565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611201816003611dde565b818061120f5761120f611e16565b8451838061121f5761121f611e16565b8651800909828061123257611232611e16565b602086015180096112439190611dac565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926112bb92909190829060015b6020020151611910565b8951805160208201519397509195506112e0929060005b60200201518b5160016112b1565b895191935091506112f6908390839060006112d2565b909250905061130784848484611991565b909450925061131884848888611991565b909450925083158015611329575082155b98975050505050505050565b6040805180820190915260008082526020820152611351611aa3565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806113aa57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526113ce611ac1565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b5761138b565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061146c57604051806040016040528082856000015161145b9190611dde565b815260006020909101529392505050565b60405180604001604052808285600001516114879190611dde565b815260200182856020015161149c9190611dde565b6114a69084611dac565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106114f0576114f0611e2c565b6020026020010181815250508a602001518160018151811061151457611514611e2c565b60209081029190910101528951600160200201518160028151811061153b5761153b611e2c565b602090810291909101015289515181518290600390811061155e5761155e611e2c565b602002602001018181525050896020015160016002811061158157611581611e2c565b60200201518160048151811061159957611599611e2c565b60200260200101818152505089602001516000600281106115bc576115bc611e2c565b6020020151816005815181106115d4576115d4611e2c565b6020026020010181815250508860000151816006815181106115f8576115f8611e2c565b60200260200101818152505088602001518160078151811061161c5761161c611e2c565b60209081029190910101528751600160200201518160088151811061164357611643611e2c565b602090810291909101015287515181518290600990811061166657611666611e2c565b602002602001018181525050876020015160016002811061168957611689611e2c565b602002015181600a815181106116a1576116a1611e2c565b60200260200101818152505087602001516000600281106116c4576116c4611e2c565b602002015181600b815181106116dc576116dc611e2c565b602002602001018181525050866000015181600c8151811061170057611700611e2c565b602002602001018181525050866020015181600d8151811061172457611724611e2c565b602090810291909101015285516001602002015181600e8151811061174b5761174b611e2c565b602090810291909101015285515181518290600f90811061176e5761176e611e2c565b602002602001018181525050856020015160016002811061179157611791611e2c565b6020020151816010815181106117a9576117a9611e2c565b60200260200101818152505085602001516000600281106117cc576117cc611e2c565b6020020151816011815181106117e4576117e4611e2c565b60200260200101818152505084600001518160128151811061180857611808611e2c565b60200260200101818152505084602001518160138151811061182c5761182c611e2c565b60209081029190910101528351600160200201518160148151811061185357611853611e2c565b602090810291909101015283515181518290601590811061187657611876611e2c565b602002602001018181525050836020015160016002811061189957611899611e2c565b6020020151816016815181106118b1576118b1611e2c565b60200260200101818152505083602001516000600281106118d4576118d4611e2c565b6020020151816017815181106118ec576118ec611e2c565b602002602001018181525050611901816119d9565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761195281868909828061194957611949611e16565b86890983611a2e565b818061196057611960611e16565b828061196e5761196e611e16565b878909838061197f5761197f611e16565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476119c0878683611a2e565b6119cb878684611a2e565b925092505094509492505050565b80516000906119e6611adf565b6000602082602085026020880160086107d05a03fa905080801561002b575080611a2357604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611a3e57611a3e611e16565b611a488484611dac565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611a7c611afd565b8152602001611a89611afd565b8152602001611a96611afd565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611b10611b22565b8152602001611b1d611b22565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611b5157600080fd5b611b59611d48565b808385604086011115611b6b57600080fd5b60005b6002811015611b8d578135845260209384019390910190600101611b6e565b509095945050505050565b600082601f830112611ba957600080fd5b8135602067ffffffffffffffff80831115611bc657611bc6611e42565b8260051b604051601f19603f83011681018181108482111715611beb57611beb611e42565b60405284815283810192508684018288018501891015611c0a57600080fd5b600092505b85831015611c2d578035845292840192600192909201918401611c0f565b50979650505050505050565b600060408284031215611c4b57600080fd5b6040516040810181811067ffffffffffffffff82111715611c6e57611c6e611e42565b604052823581526020928301359281019290925250919050565b600080828403610120811215611c9d57600080fd5b61010080821215611cad57600080fd5b611cb5611d71565b611cbf8787611c39565b81526080603f1984011215611cd357600080fd5b611cdb611d48565b9250611cea8760408801611b40565b8352611cf98760808801611b40565b6020840152826020820152611d118760c08801611c39565b60408201529350840135905067ffffffffffffffff811115611d3257600080fd5b611d3e85828601611b98565b9150509250929050565b6040805190810167ffffffffffffffff81118282101715611d6b57611d6b611e42565b60405290565b6040516060810167ffffffffffffffff81118282101715611d6b57611d6b611e42565b60008219821115611da757611da7611e00565b500190565b600082821015611dbe57611dbe611e00565b500390565b6000600019821415611dd757611dd7611e00565b5060010190565b600082611dfb57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201d31796cc2f16dece5a12700a2ea5464e4ad93461480395ba2e55bf2d77774d264736f6c63430008070033';

type Transaction1x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x0Verifier {
    return super.attach(address) as Transaction1x0Verifier;
  }
  connect(signer: Signer): Transaction1x0Verifier__factory {
    return super.connect(signer) as Transaction1x0Verifier__factory;
  }
  static readonly contractName: 'Transaction1x0Verifier';
  public readonly contractName: 'Transaction1x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x0Verifier;
  }
}
