/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x0Verifier, Transaction1x0VerifierInterface } from '../Transaction1x0Verifier';

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611597806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611391565b610057565b604051901515815260200160405180910390f35b600081516006146100ae5760405162461bcd60e51b815260206004820152601460248201527f696e76616c696420696e707574206c656e677468000000000000000000000000604482015260640160405180910390fd5b6100b882846100bf565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100eb610316565b905080608001515185516001610101919061149d565b1461010b57600080fd5b835151821161011957600080fd5b835160200151821161012a57600080fd5b60208401515151821161013c57600080fd5b602084810151015151821161015057600080fd5b602084810151510151821161016457600080fd5b6020848101518101510151821161017a57600080fd5b604084015151821161018b57600080fd5b818460400151602001511061019f57600080fd5b83516101aa90610904565b6101b357600080fd5b6101c0846020015161097c565b6101c957600080fd5b6101d68460400151610904565b6101df57600080fd5b604080518082019091526000808252602082018190525b865181101561028d578387828151811061021257610212611535565b60200260200101511061022457600080fd5b61027982610274856080015184600161023d919061149d565b8151811061024d5761024d611535565b60200260200101518a858151811061026757610267611535565b6020026020010151610a66565b610ac4565b915080610285816114cc565b9150506101f6565b506102b68183608001516000815181106102a9576102a9611535565b6020026020010151610ac4565b90506102c181610904565b6102ca57600080fd5b61030c856000015186602001516102e084610b1e565b85604001516102f28a60400151610b1e565b6060880151885161030290610b1e565b8960200151610bcc565b9695505050505050565b61031e61115b565b6040805180820182527f2b8d66f3ed3683a4d81eb9ae7a63d3e26f5c02cfa4ac99f849c8b6ccfe6d640881527f302a0e735f209f980e3029609d68fa4796d2af3cefab3c9ede7036681f0ea5a26020808301919091529083528151608080820184527f15d243f7b20a46947d52feddc27551570af452179562a9a9ad2d40f28a4c9f398285019081527f1381c183bfce16a9b9fc8a0e00d424e98e381053dabbe907c864ce0f1d965fca606080850191909152908352845180860186527f19ab7b19090096fdb4ff0f082c50c25f38a85a57c606450eba6bc745b718b0b281527f03fa717034cda32cdef38a97d61f764cdb097b89fa12b823379d29339d65f4f4818601528385015285840192909252835180820185527f27aa27554d5afc55467b7f7b9ef8f21b515045b9db1ff9a9414ebbf4363cf1468186019081527f0d763c0c197a37ae791feaeda947a6670822d798eef6aada3a376682f9bf6191828501528152845180860186527f1dd1dff54796364f60716a8f13faa52576c39d1eb58a9b19d5cf876f6ab7d33d81527f2b0d7a3cedc0c8a6f733cc47f3055f323b6c82a45313ff162cf86c3569e28c95818601528185015285850152835190810184527f0329a029ea55d0a78fabd3f56b057a0802e2e3d31b1019cb7e1715d0bcbef8bc8185019081527f1c3c2d15b2d23ab409546e3261f64c969d0b8ddda7f3fb1c6f6ecc267da82db6828401528152835180850185527f2d84fb386fa7b62460707181f0115611fca290f8a5a3bf2d26813824f0d7180081527f062e9deac01069aab59c07db808550466625f89389c42756c14245e43f08361e818501528184015290840152815160078082526101008201909352919082015b604080518082019091526000808252602082015281526020019060019003908161059a57505060808201908152604080518082019091527f2fe1fa2dc8f4f71eb4f6a7e42822e82f9be0069bfdbd40d7a4f1fe3fed98419a81527f1a6791e58b4a2ef03632413497e39f07a1d9f881c33201b80d8f19a6228744a760208201529051805160009061062d5761062d611535565b602002602001018190525060405180604001604052807f21ddc3600c6d6de7e4ddcde454d065d437c8f011b61ebd22555377650d1cc5f181526020017f04906ae984827b7b016c23f75b50ddc2e75a4e4d8932e6fd941403f8d6dae47981525081608001516001815181106106a4576106a4611535565b602002602001018190525060405180604001604052807f1887a84f56f8fb8707b9869334d24f6e315ab05a4c9dd3f18ed99107d31e2cd881526020017f06b6bdbc2674f934ed4f83eddb57656af7a7e7fe02b03af37b06b0d40208db3b815250816080015160028151811061071b5761071b611535565b602002602001018190525060405180604001604052807f26556fa26ebee22acea82ca2f483e9c55c87f3f3ad9bb619b68b2d56849feb7281526020017f29c11971b5b70eb4b38ca6577c804cd8cfa43fcf5d7a304879ed7093bc539c00815250816080015160038151811061079257610792611535565b602002602001018190525060405180604001604052807f08d84d6ca5490a688d52d7334731602658f1a34f2056031be0b579c78973a90381526020017f24acb2fed526f191d44363da410e6e5d6553b57921b2c6cb9d8f8f1b10d30f93815250816080015160048151811061080957610809611535565b602002602001018190525060405180604001604052807f1cf585afc2f7a7d0f1ba259cbd1c8ae776af179aac13f0743fec6d2ca4d58ce381526020017e1c431150dd66e9d3fc4188b8ead2f8aea41e1809f00d5cfb98b610d082b124815250816080015160058151811061087f5761087f611535565b602002602001018190525060405180604001604052807f1dca364a14db6ddb369d101e080c31b4aaaf6e04a22aee08ec14207c64dd209481526020017f1b86a00e265ca1e82b5eb8ae23fede583be1c32d275d4b1bb803d172cd56c38981525081608001516006815181106108f6576108f6611535565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476109328160036114e7565b81806109405761094061151f565b845183806109505761095061151f565b865180090982806109635761096361151f565b6020860151800961097491906114b5565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926109ec92909190829060015b602002015161102d565b895180516020820151939750919550610a11929060005b60200201518b5160016109e2565b89519193509150610a2790839083906000610a03565b9092509050610a38848484846110ae565b9094509250610a49848488886110ae565b909450925083158015610a5a575082155b98975050505050505050565b6040805180820190915260008082526020820152610a826111ac565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b575b5080610abc57600080fd5b505092915050565b6040805180820190915260008082526020820152610ae06111ca565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b57610ab1565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610b89576040518060400160405280828560000151610b7891906114e7565b815260006020909101529392505050565b6040518060400160405280828560000151610ba491906114e7565b8152602001828560200151610bb991906114e7565b610bc390846114b5565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610c0d57610c0d611535565b6020026020010181815250508a6020015181600181518110610c3157610c31611535565b602090810291909101015289516001602002015181600281518110610c5857610c58611535565b6020908102919091010152895151815182906003908110610c7b57610c7b611535565b6020026020010181815250508960200151600160028110610c9e57610c9e611535565b602002015181600481518110610cb657610cb6611535565b6020026020010181815250508960200151600060028110610cd957610cd9611535565b602002015181600581518110610cf157610cf1611535565b602002602001018181525050886000015181600681518110610d1557610d15611535565b602002602001018181525050886020015181600781518110610d3957610d39611535565b602090810291909101015287516001602002015181600881518110610d6057610d60611535565b6020908102919091010152875151815182906009908110610d8357610d83611535565b6020026020010181815250508760200151600160028110610da657610da6611535565b602002015181600a81518110610dbe57610dbe611535565b6020026020010181815250508760200151600060028110610de157610de1611535565b602002015181600b81518110610df957610df9611535565b602002602001018181525050866000015181600c81518110610e1d57610e1d611535565b602002602001018181525050866020015181600d81518110610e4157610e41611535565b602090810291909101015285516001602002015181600e81518110610e6857610e68611535565b602090810291909101015285515181518290600f908110610e8b57610e8b611535565b6020026020010181815250508560200151600160028110610eae57610eae611535565b602002015181601081518110610ec657610ec6611535565b6020026020010181815250508560200151600060028110610ee957610ee9611535565b602002015181601181518110610f0157610f01611535565b602002602001018181525050846000015181601281518110610f2557610f25611535565b602002602001018181525050846020015181601381518110610f4957610f49611535565b602090810291909101015283516001602002015181601481518110610f7057610f70611535565b6020908102919091010152835151815182906015908110610f9357610f93611535565b6020026020010181815250508360200151600160028110610fb657610fb6611535565b602002015181601681518110610fce57610fce611535565b6020026020010181815250508360200151600060028110610ff157610ff1611535565b60200201518160178151811061100957611009611535565b60200260200101818152505061101e816110f6565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761106f8186890982806110665761106661151f565b86890983611137565b818061107d5761107d61151f565b828061108b5761108b61151f565b878909838061109c5761109c61151f565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476110dd878683611137565b6110e8878684611137565b925092505094509492505050565b80516000906111036111e8565b6000602082602085026020880160086107d05a03fa905080801561002b57508061112c57600080fd5b505115159392505050565b600081806111475761114761151f565b61115184846114b5565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611185611206565b8152602001611192611206565b815260200161119f611206565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061121961122b565b815260200161122661122b565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261125a57600080fd5b611262611451565b80838560408601111561127457600080fd5b60005b6002811015611296578135845260209384019390910190600101611277565b509095945050505050565b600082601f8301126112b257600080fd5b8135602067ffffffffffffffff808311156112cf576112cf61154b565b8260051b604051601f19603f830116810181811084821117156112f4576112f461154b565b6040528481528381019250868401828801850189101561131357600080fd5b600092505b85831015611336578035845292840192600192909201918401611318565b50979650505050505050565b60006040828403121561135457600080fd5b6040516040810181811067ffffffffffffffff821117156113775761137761154b565b604052823581526020928301359281019290925250919050565b6000808284036101208112156113a657600080fd5b610100808212156113b657600080fd5b6113be61147a565b6113c88787611342565b81526080603f19840112156113dc57600080fd5b6113e4611451565b92506113f38760408801611249565b83526114028760808801611249565b602084015282602082015261141a8760c08801611342565b60408201529350840135905067ffffffffffffffff81111561143b57600080fd5b611447858286016112a1565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156114745761147461154b565b60405290565b6040516060810167ffffffffffffffff811182821017156114745761147461154b565b600082198211156114b0576114b0611509565b500190565b6000828210156114c7576114c7611509565b500390565b60006000198214156114e0576114e0611509565b5060010190565b60008261150457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122022dae90c2936b1680bd8887b1b61a8a2307a9eec81ab34bf03669f67ccad1c1064736f6c63430008070033';

type Transaction1x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x0Verifier {
    return super.attach(address) as Transaction1x0Verifier;
  }
  connect(signer: Signer): Transaction1x0Verifier__factory {
    return super.connect(signer) as Transaction1x0Verifier__factory;
  }
  static readonly contractName: 'Transaction1x0Verifier';
  public readonly contractName: 'Transaction1x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x0Verifier;
  }
}
