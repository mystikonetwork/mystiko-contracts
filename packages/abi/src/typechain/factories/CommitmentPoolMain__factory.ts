/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b5060405162003d7438038062003d748339810160408190526200006491620007a3565b60016000558060ff81166200008c57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b381620000da565b600a8190556000908152600960205260409020805460ff1916600117905550620007cf9050565b600060ff82166200010c57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017457507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a857507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001db57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200020f57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024357507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027757507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ab57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002df57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031357507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034757507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037b57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003af57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e357507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041757507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044b57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047e57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b257507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e657507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051a57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054e57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058257507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b657507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005ea57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061e57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065257507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068657507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006ba57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ee57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072257507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075657507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078a57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b657600080fd5b815160ff81168114620007c857600080fd5b9392505050565b60805161357b620007f96000396000818161032401528181610f580152611a98015261357b6000f3fe6080604052600436106101c65760003560e01c80637fa4b09c116100f7578063b3b7563111610095578063ec571c6a11610064578063ec571c6a14610535578063f2da1d411461056d578063f8f053881461058d578063ffa89b88146105ad57600080fd5b8063b3b75631146104c0578063c259e2e6146104e0578063deeff7cd14610500578063e500f5041461052057600080fd5b80639cc6b354116100d15780639cc6b3541461043b578063a6232a931461045b578063a9b1d2961461048b578063b08892d0146104ab57600080fd5b80637fa4b09c146103da578063830d9ebe146103fa5780639b0a6fea1461041b57600080fd5b80633fae882e116101645780634eb069f71161013e5780634eb069f714610352578063570600161461036a57806378d60cd71461039a5780637cbf0ff6146103ba57600080fd5b80633fae882e146102d95780633fe3347a146102f9578063484eb6521461031557600080fd5b806306b2ad59116101a057806306b2ad591461023457806314a7737d1461025457806330f49cac146102745780633bb8d1b41461029457600080fd5b806302d498f1146101d257806303db9874146101f457806306394c9b1461021457600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004612d72565b6105ca565b005b34801561020057600080fd5b506101f261020f366004612d72565b610619565b34801561022057600080fd5b506101f261022f366004612d72565b610665565b34801561024057600080fd5b506101f261024f366004612d96565b6106bf565b34801561026057600080fd5b506101f261026f366004612e77565b610742565b34801561028057600080fd5b506101f261028f366004612d72565b610cc5565b3480156102a057600080fd5b506102c46102af36600461307a565b60009081526005602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156102e557600080fd5b506101f26102f4366004612eeb565b610d4b565b34801561030557600080fd5b5060016040516102d091906131d8565b34801561032157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102d0565b34801561035e57600080fd5b50600f5460ff166102c4565b34801561037657600080fd5b506102c461038536600461307a565b60009081526004602052604090205460ff1690565b3480156103a657600080fd5b506101f26103b5366004612dd0565b611a3f565b3480156103c657600080fd5b506101f26103d536600461307a565b611b6e565b3480156103e657600080fd5b506101f26103f5366004613132565b611bec565b34801561040657600080fd5b506001546102c490600160a01b900460ff1681565b34801561042757600080fd5b506101f26104363660046130b6565b611ccf565b34801561044757600080fd5b506101f2610456366004612d72565b611dc7565b34801561046757600080fd5b506102c461047636600461307a565b60009081526009602052604090205460ff1690565b34801561049757600080fd5b506101f26104a6366004612d72565b611e13565b3480156104b757600080fd5b50600c54610344565b3480156104cc57600080fd5b506101f26104db366004612d96565b611e62565b3480156104ec57600080fd5b506101f26104fb366004613108565b611ece565b34801561050c57600080fd5b506101f261051b3660046130d1565b611f72565b34801561052c57600080fd5b50600854610344565b34801561054157600080fd5b50600154610555906001600160a01b031681565b6040516001600160a01b0390911681526020016102d0565b34801561057957600080fd5b50610344610588366004613093565b6120b2565b34801561059957600080fd5b506101f26105a8366004612d96565b61213b565b3480156105b957600080fd5b50600f54610100900460ff166102c4565b600b546001600160a01b031633146105f5576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610644576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610690576040516327e1f1e560e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146106ea576040516327e1f1e560e01b815260040160405180910390fd5b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061073790831515815260200190565b60405180910390a150565b600f54610100900460ff1615801561076a5750336000908152600d602052604090205460ff16155b15610788576040516321ce01f360e01b815260040160405180910390fd5b6000805160206135268339815191528160400151106107ba57604051630daa246560e31b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156107ed5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff161180610829575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610869576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516108819063ffffffff1682613488565b156108bc576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610860565b60006108cc8284602001516120b2565b90506000836020015163ffffffff1667ffffffffffffffff8111156108f3576108f36134ec565b60405190808252806020026020018201604052801561091c578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610a1a57600061094182876133c5565b60008181526006602090815260409182902082518084019093528054808452600190910154918301919091529192509061098e5760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106109a5576109a56134d6565b6020026020010181815250508060200151846109c191906133c5565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610a129061346d565b915050610923565b50846020015163ffffffff1660076000828254610a379190613431565b92505081905550600060008051602061352683398151915283604051602001610a6091906131a2565b6040516020818303038152906040528051906020012060001c610a839190613488565b905080866060015114610ad9576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610860565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610b1257610b126134d6565b602002602001018181525050866040015181600181518110610b3657610b366134d6565b6020026020010181815250508181600281518110610b5657610b566134d6565b6020026020010181815250508481600381518110610b7657610b766134d6565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610bce91908690600401613200565b602060405180830381600087803b158015610be857600080fd5b505af1158015610bfc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c209190612db3565b905080610c70576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610860565b876020015163ffffffff1660086000828254610c8c91906133c5565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610cbb846121af565b5050505050505050565b600b546001600160a01b03163314610cf0576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b190602001610737565b60026000541415610d9e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610860565b60026000908155604083015151610db490612247565b90506000610dc68460e0015151612247565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610e43576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610860565b8163ffffffff1684606001515114610e9e576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610860565b8063ffffffff168461010001515114610efa576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610860565b8063ffffffff168461016001515114610f56576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610860565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610f8e91906133c5565b610f9891906133c5565b1115610fb757604051633b5ccb4360e21b815260040160405180910390fd5b610fc58461012001516122c7565b15610fe357604051632e70c0b160e01b815260040160405180910390fd5b6000610fee85612367565b90506000610ffc8286612512565b60808701519091506001600160a01b0382161461105c576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610860565b6000611069856002613405565b63ffffffff169050600061107e866002613405565b6110899060046133dd565b63ffffffff169050600061109e866002613405565b6110ae9063ffffffff16836133c5565b67ffffffffffffffff8111156110c6576110c66134ec565b6040519080825280602002602001820160405280156110ef578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff16611141576040516314e8955b60e21b8152600401610860906020808252600490820152631c9bdbdd60e21b604082015260600190565b886020015181600081518110611159576111596134d6565b602090810291909101015260006111718860016133dd565b63ffffffff16905060005b8863ffffffff1681101561133f5760008b6040015182815181106111a2576111a26134d6565b6020908102919091018101516000818152600590925260409091205490915060ff16156111fb576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805160206135268339815191528110611242576040516314e8955b60e21b8152600401610860906020808252600490820152636e6f746560e01b604082015260600190565b6000805160206135268339815191528c606001518381518110611267576112676134d6565b6020026020010151106112bd576040516314e8955b60e21b815260206004820152600760248201527f73696748617368000000000000000000000000000000000000000000000000006044820152606401610860565b80846112ca8460016133c5565b815181106112da576112da6134d6565b6020026020010181815250508b6060015182815181106112fc576112fc6134d6565b602002602001015184848461131191906133c5565b81518110611321576113216134d6565b602090810291909101015250806113378161346d565b91505061117c565b5060808a0151600080516020613526833981519152116113a2576040516314e8955b60e21b815260206004820152600560248201527f736967506b0000000000000000000000000000000000000000000000000000006044820152606401610860565b6000805160206135268339815191528a60a0015110611404576040516314e8955b60e21b815260206004820152600660248201527f616d6f756e7400000000000000000000000000000000000000000000000000006044820152606401610860565b6000805160206135268339815191528a60c0015110611466576040516314e8955b60e21b815260206004820152601260248201527f72656c617965722066656520616d6f756e7400000000000000000000000000006044820152606401610860565b60808a0151826114778660016133c5565b81518110611487576114876134d6565b602090810291909101015260a08a0151826114a38660026133c5565b815181106114b3576114b36134d6565b602090810291909101015260c08a0151826114cf8660036133c5565b815181106114df576114df6134d6565b602090810291909101015260006114fc63ffffffff8916856133c5565b905060005b8863ffffffff1681101561176d57600460008d60e001518381518110611529576115296134d6565b60209081029190910181015182528101919091526040016000205460ff16156115955760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610860565b6000805160206135268339815191528c60e0015182815181106115ba576115ba6134d6565b602002602001015110611610576040516314e8955b60e21b815260206004820152600e60248201527f6f757420636f6d6d69746d656e740000000000000000000000000000000000006044820152606401610860565b600c548c6101000151828151811061162a5761162a6134d6565b602002602001015110156116515760405163784f02bd60e11b815260040160405180910390fd5b6000805160206135268339815191528c61010001518281518110611677576116776134d6565b6020026020010151106116cd576040516314e8955b60e21b815260206004820152600e60248201527f6f757420726f6c6c7570206665650000000000000000000000000000000000006044820152606401610860565b8b60e0015181815181106116e3576116e36134d6565b60200260200101518486836116f891906133c5565b81518110611708576117086134d6565b6020026020010181815250508b6101000151818151811061172b5761172b6134d6565b602002602001015184838361174091906133c5565b81518110611750576117506134d6565b6020908102919091010152806117658161346d565b915050611501565b5063ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c9417647916117c3918890600401613200565b602060405180830381600087803b1580156117dd57600080fd5b505af11580156117f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118159190612db3565b905080611865576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610860565b60005b8a63ffffffff16811015611920576001600560008f604001518481518110611892576118926134d6565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c6040015181815181106118d5576118d56134d6565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806119188161346d565b915050611868565b5060005b8963ffffffff168110156119f1576001600460008f60e00151848151811061194e5761194e6134d6565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119df8d60e001518281518110611994576119946134d6565b60200260200101518e610100015183815181106119b3576119b36134d6565b60200260200101518f610160015184815181106119d2576119d26134d6565b6020026020010151612536565b806119e98161346d565b915050611924565b5060a08c015115611a0f57611a0f8c61012001518d60a001516125d5565b60c08c015115611a2c57611a2c8c61014001518d60c001516125d5565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff16611a6f5760405163f75e9fc760e01b815260040160405180910390fd5b600c5482606001511015611a965760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611ac791906133c5565b10611ae557604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611b1b5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611b52929190612536565b604082015115611b6a57611b6a81836040015161267d565b5050565b600b546001600160a01b03163314611b99576040516327e1f1e560e01b815260040160405180910390fd5b80611be7576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610860565b600c55565b600b546001600160a01b03163314611c17576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c3b576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611c5f57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611cfa576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611d1e576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611d3857506104008163ffffffff16115b15611d73576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610860565b611d7e600182613448565b811663ffffffff16600014611da6576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611df2576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611e3e576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611e8d576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610737565b600b546001600160a01b03163314611ef9576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611f1d576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611f4157604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314611f9d576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611fc1576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611fdb57506104008263ffffffff16115b15612016576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610860565b612021600183613448565b821663ffffffff16600014612049576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106120d85760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106120fb5760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061211e5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061213457600183901c92505b5090919050565b600b546001600160a01b03163314612166576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b4799061073790831515815260200190565b604051600090339083908381818185875af1925050503d80600081146121f1576040519150601f19603f3d011682016040523d82523d6000602084013e6121f6565b606091505b5050905080611b6a5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610860565b600063ffffffff8211156122c35760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610860565b5090565b600154600090600160a01b900460ff16156122e457506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561232957600080fd5b505afa15801561233d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123619190612db3565b92915050565b610160810151516000906003811061239257604051633fb1945d60e11b815260040160405180910390fd5b6101208301516101408401516060806000856123b05750602861242e565b85600114156123e45760f990508761016001516000815181106123d5576123d56134d6565b6020026020010151925061242e565b6101ca9050876101600151600081518110612401576124016134d6565b60200260200101519250876101600151600181518110612423576124236134d6565b602002602001015191505b60006040518660601b60008201528560601b60148201526000881315612477576028810160d18101602087015b8183101561247357805183526020928301920161245b565b5050505b60018813156124a95760f9810160d18101602086015b818310156124a557805183526020928301920161248d565b5050505b8290209050612505816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b60008060006125218585612720565b9150915061252e81612790565b509392505050565b600060085460075461254891906133c5565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061258c9084906133c5565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516125c79392919061329c565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612622576040519150601f19603f3d011682016040523d82523d6000602084013e612627565b606091505b50509050806126785760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610860565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146126ca576040519150601f19603f3d011682016040523d82523d6000602084013e6126cf565b606091505b50509050806126785760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610860565b6000808251604114156127575760208301516040840151606085015160001a61274b8782858561294e565b94509450505050612789565b8251604014156127815760208301516040840151612776868383612a3b565b935093505050612789565b506000905060025b9250929050565b60008160048111156127a4576127a46134c0565b14156127ad5750565b60018160048111156127c1576127c16134c0565b141561280f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610860565b6002816004811115612823576128236134c0565b14156128715760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610860565b6003816004811115612885576128856134c0565b14156128de5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610860565b60048160048111156128f2576128f26134c0565b141561294b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610860565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156129855750600090506003612a32565b8460ff16601b1415801561299d57508460ff16601c14155b156129ae5750600090506004612a32565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612a02573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612a2b57600060019250925050612a32565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612a7160ff86901c601b6133c5565b9050612a7f8782888561294e565b935093505050935093915050565b8035612a9881613502565b919050565b600082601f830112612aae57600080fd5b81356020612ac3612abe836133a1565b613370565b80838252828201915082860187848660051b8901011115612ae357600080fd5b6000805b86811015612b2657823567ffffffffffffffff811115612b05578283fd5b612b138b88838d0101612bf9565b8652509385019391850191600101612ae7565b509198975050505050505050565b600082601f830112612b4557600080fd5b612b4d613300565b808385604086011115612b5f57600080fd5b60005b6002811015612b81578135845260209384019390910190600101612b62565b509095945050505050565b600082601f830112612b9d57600080fd5b81356020612bad612abe836133a1565b80838252828201915082860187848660051b8901011115612bcd57600080fd5b60005b85811015612bec57813584529284019290840190600101612bd0565b5090979650505050505050565b600082601f830112612c0a57600080fd5b813567ffffffffffffffff811115612c2457612c246134ec565b612c37601f8201601f1916602001613370565b818152846020838601011115612c4c57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612c7b57600080fd5b6040516040810181811067ffffffffffffffff82111715612c9e57612c9e6134ec565b604052823581526020928301359281019290925250919050565b6000818303610100811215612ccc57600080fd5b6040516060810181811067ffffffffffffffff82111715612cef57612cef6134ec565b604052915081612cff8585612c69565b81526080603f1983011215612d1357600080fd5b612d1b613300565b9150612d2a8560408601612b34565b8252612d398560808601612b34565b6020830152816020820152612d518560c08601612c69565b6040820152505092915050565b803563ffffffff81168114612a9857600080fd5b600060208284031215612d8457600080fd5b8135612d8f81613502565b9392505050565b600060208284031215612da857600080fd5b8135612d8f81613517565b600060208284031215612dc557600080fd5b8151612d8f81613517565b60008060408385031215612de357600080fd5b823567ffffffffffffffff80821115612dfb57600080fd5b9084019060a08287031215612e0f57600080fd5b612e17613329565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612e4b57600080fd5b612e5788828601612bf9565b6080830152509350612e6e91505060208401612a8d565b90509250929050565b60006101608284031215612e8a57600080fd5b6040516080810181811067ffffffffffffffff82111715612ead57612ead6134ec565b604052612eba8484612cb8565b8152612ec96101008401612d5e565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612efe57600080fd5b823567ffffffffffffffff80821115612f1657600080fd5b908401906102608287031215612f2b57600080fd5b612f3361334c565b612f3d8784612cb8565b81526101008084013560208301526101208085013584811115612f5f57600080fd5b612f6b8a828801612b8c565b6040850152506101408086013585811115612f8557600080fd5b612f918b828901612b8c565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612fcc57600080fd5b612fd88c828a01612b8c565b60e0870152506101e087013586811115612ff157600080fd5b612ffd8c828a01612b8c565b858701525061300f6102008801612a8d565b838601526130206102208801612a8d565b8286015261024087013593508584111561303957600080fd5b6130458b858901612a9d565b90850152509195505050602085013591508082111561306357600080fd5b5061307085828601612bf9565b9150509250929050565b60006020828403121561308c57600080fd5b5035919050565b600080604083850312156130a657600080fd5b82359150612e6e60208401612d5e565b6000602082840312156130c857600080fd5b612d8f82612d5e565b600080604083850312156130e457600080fd5b6130ed83612d5e565b915060208301356130fd81613502565b809150509250929050565b6000806040838503121561311b57600080fd5b61312483612d5e565b9150612e6e60208401612d5e565b60008060006060848603121561314757600080fd5b61315084612d5e565b925061315e60208501612d5e565b9150604084013561316e81613502565b809150509250925092565b8060005b600281101561319c57815184526020938401939091019060010161317d565b50505050565b815160009082906020808601845b838110156131cc578151855293820193908201906001016131b0565b50929695505050505050565b60208101600283106131fa57634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161321d84875180518252602090810151910152565b602080870151613231604087018251613179565b8101516132416080870182613179565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561328f57835185529382019392820192600101613273565b5092979650505050505050565b83815260006020848184015260606040840152835180606085015260005b818110156132d6578581018301518582016080015282016132ba565b818111156132e8576000608083870101525b50601f01601f19169290920160800195945050505050565b6040805190810167ffffffffffffffff81118282101715613323576133236134ec565b60405290565b60405160a0810167ffffffffffffffff81118282101715613323576133236134ec565b604051610180810167ffffffffffffffff81118282101715613323576133236134ec565b604051601f8201601f1916810167ffffffffffffffff81118282101715613399576133996134ec565b604052919050565b600067ffffffffffffffff8211156133bb576133bb6134ec565b5060051b60200190565b600082198211156133d8576133d86134aa565b500190565b600063ffffffff8083168185168083038211156133fc576133fc6134aa565b01949350505050565b600063ffffffff80831681851681830481118215151615613428576134286134aa565b02949350505050565b600082821015613443576134436134aa565b500390565b600063ffffffff83811690831681811015613465576134656134aa565b039392505050565b6000600019821415613481576134816134aa565b5060010190565b6000826134a557634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461294b57600080fd5b801515811461294b57600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a264697066735822122029c914a7e636dbd05293626b85f2d9d1cb38bbca3b1be64e6cec809b7822707564736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
