/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
    ],
    name: 'AuditorKeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorKeys',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_key',
        type: 'bytes32',
      },
    ],
    name: 'updateAuditorKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162003eb138038062003eb18339810160408190526200006591620007a4565b60016000558060ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b481620000db565b600a8190556000908152600960205260409020805460ff1916600117905550620007d09050565b600060ff82166200010d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200021057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ac57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002e057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003b057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005eb57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006bb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ef57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078b57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b757600080fd5b815160ff81168114620007c957600080fd5b9392505050565b6080516136b7620007fa600039600081816103d9015281816110f40152611a8b01526136b76000f3fe60806040526004361061021d5760003560e01c80637cbf0ff61161011d578063b3b75631116100b0578063e500f5041161007f578063f2da1d4111610064578063f2da1d411461064d578063f8f053881461066d578063ffa89b881461068d57600080fd5b8063e500f50414610600578063ec571c6a1461061557600080fd5b8063b3b756311461058b578063c259e2e6146105ab578063dd757c34146105cb578063deeff7cd146105e057600080fd5b8063a6232a93116100ec578063a6232a9314610505578063a9b1d29614610535578063b08892d014610555578063b1c394221461056a57600080fd5b80637cbf0ff6146104855780637fa4b09c146104a55780639b0a6fea146104c55780639cc6b354146104e557600080fd5b80633bb8d1b4116101b0578063484eb6521161017f578063570600161161016457806357060016146104155780636c75d6641461044557806378d60cd71461046557600080fd5b8063484eb652146103ca5780634eb069f7146103fd57600080fd5b80633bb8d1b41461032e5780633fae882e1461036e5780633fe3347a1461038e57806342c00ac3146103aa57600080fd5b806309c95ed8116101ec57806309c95ed8146102a0578063115f574c146102cb57806314a7737d146102ee57806330f49cac1461030e57600080fd5b806301dbf19f1461022957806302d498f11461024057806303db98741461026057806306394c9b1461028057600080fd5b3661022457005b600080fd5b34801561023557600080fd5b5061023e6106aa565b005b34801561024c57600080fd5b5061023e61025b366004612dbd565b61072e565b34801561026c57600080fd5b5061023e61027b366004612dbd565b61077d565b34801561028c57600080fd5b5061023e61029b366004612dbd565b6107c9565b3480156102ac57600080fd5b506102b561087a565b6040516102c291906132e7565b60405180910390f35b3480156102d757600080fd5b506102e0600581565b6040519081526020016102c2565b3480156102fa57600080fd5b5061023e610309366004612ec2565b6108f7565b34801561031a57600080fd5b5061023e610329366004612dbd565b610e5a565b34801561033a57600080fd5b5061035e6103493660046130c5565b60009081526005602052604090205460ff1690565b60405190151581526020016102c2565b34801561037a57600080fd5b5061023e610389366004612f36565b610ee7565b34801561039a57600080fd5b5060016040516102c2919061332b565b3480156103b657600080fd5b506102e06103c53660046130c5565b61191f565b3480156103d657600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102e0565b34801561040957600080fd5b50600f5460ff1661035e565b34801561042157600080fd5b5061035e6104303660046130c5565b60009081526004602052604090205460ff1690565b34801561045157600080fd5b5061023e6104603660046130de565b611957565b34801561047157600080fd5b5061023e610480366004612e1b565b611a32565b34801561049157600080fd5b5061023e6104a03660046130c5565b611b61565b3480156104b157600080fd5b5061023e6104c036600461319f565b611bdf565b3480156104d157600080fd5b5061023e6104e0366004613123565b611cc2565b3480156104f157600080fd5b5061023e610500366004612dbd565b611dba565b34801561051157600080fd5b5061035e6105203660046130c5565b60009081526009602052604090205460ff1690565b34801561054157600080fd5b5061023e610550366004612dbd565b611e06565b34801561056157600080fd5b50600c546102e0565b34801561057657600080fd5b5060015461035e90600160a01b900460ff1681565b34801561059757600080fd5b5061023e6105a6366004612de1565b611e55565b3480156105b757600080fd5b5061023e6105c6366004613175565b611ec1565b3480156105d757600080fd5b5061023e611f65565b3480156105ec57600080fd5b5061023e6105fb36600461313e565b611fdd565b34801561060c57600080fd5b506008546102e0565b34801561062157600080fd5b50600154610635906001600160a01b031681565b6040516001600160a01b0390911681526020016102c2565b34801561065957600080fd5b506102e0610668366004613100565b61211d565b34801561067957600080fd5b5061023e610688366004612de1565b6121a6565b34801561069957600080fd5b50600f54610100900460ff1661035e565b600b546001600160a01b031633146106d5576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261072492900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610759576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146107a8576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146107f4576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b0382811691161415610823576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b60058110156108f157601081600581106108c0576108c0613632565b01548282815181106108d4576108d4613632565b6020908102919091010152806108e9816135c9565b9150506108a4565b50919050565b600f54610100900460ff1615801561091f5750336000908152600d602052604090205460ff16155b1561093d576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156109705760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806109ac575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b156109ec576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b6008546020820151610a049063ffffffff16826135e4565b15610a3f576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016109e3565b6000610a4f82846020015161211d565b90506000836020015163ffffffff1667ffffffffffffffff811115610a7657610a76613648565b604051908082528060200260200182016040528015610a9f578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610b9d576000610ac482876134f5565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610b115760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610b2857610b28613632565b602002602001018181525050806020015184610b4491906134f5565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610b95906135c9565b915050610aa6565b50846020015163ffffffff1660076000828254610bba9190613561565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610bf591906132b1565b6040516020818303038152906040528051906020012060001c610c1891906135e4565b905080866060015114610c6e576040516314e8955b60e21b815260206004820152600860248201527f6c6561664861736800000000000000000000000000000000000000000000000060448201526064016109e3565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610ca757610ca7613632565b602002602001018181525050866040015181600181518110610ccb57610ccb613632565b6020026020010181815250508181600281518110610ceb57610ceb613632565b6020026020010181815250508481600381518110610d0b57610d0b613632565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610d6391908690600401613353565b602060405180830381600087803b158015610d7d57600080fd5b505af1158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db59190612dfe565b905080610e05576040516314e8955b60e21b815260206004820152600560248201527f70726f6f6600000000000000000000000000000000000000000000000000000060448201526064016109e3565b876020015163ffffffff1660086000828254610e2191906134f5565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610e508461221a565b5050505050505050565b600b546001600160a01b03163314610e85576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610f3a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109e3565b60026000908155604083015151610f50906122b2565b90506000610f628460e00151516122b2565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610fdf576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e6774680000000000000000000000000000000000000000000060448201526064016109e3565b8163ffffffff168460600151511461103a576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e6774680000000000000000000000000000000060448201526064016109e3565b8063ffffffff168461010001515114611096576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e67746800000000000000000000000060448201526064016109e3565b8063ffffffff1684610160015151146110f2576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e677468000000000000000060448201526064016109e3565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660075460085461112a91906134f5565b61113491906134f5565b111561115357604051633b5ccb4360e21b815260040160405180910390fd5b61115c32612332565b1561117a57604051632e70c0b160e01b815260040160405180910390fd5b611188846101200151612332565b156111a657604051632e70c0b160e01b815260040160405180910390fd5b60006111b1856123d1565b90506111bd818561255d565b6001600160a01b031660001b85608001511461121c576040516314e8955b60e21b815260206004820152600960248201527f7369676e6174757265000000000000000000000000000000000000000000000060448201526064016109e3565b6000611229846002613535565b63ffffffff169050600061123e856002613535565b61124990600461350d565b63ffffffff169050600061125e856002613535565b61126e9063ffffffff16836134f5565b67ffffffffffffffff81111561128657611286613648565b6040519080825280602002602001820160405280156112af578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff16611301576040516314e8955b60e21b81526004016109e3906020808252600490820152631c9bdbdd60e21b604082015260600190565b87602001518160008151811061131957611319613632565b6020908102919091010152600061133187600161350d565b63ffffffff16905060005b8763ffffffff1681101561143d5760008a60400151828151811061136257611362613632565b6020908102919091018101516000818152600590925260409091205490915060ff16156113bb576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846113c88460016134f5565b815181106113d8576113d8613632565b6020026020010181815250508a6060015182815181106113fa576113fa613632565b602002602001015184848461140f91906134f5565b8151811061141f5761141f613632565b60209081029190910101525080611435816135c9565b91505061133c565b5060808901518261144f8660016134f5565b8151811061145f5761145f613632565b602090810291909101015260a08901518261147b8660026134f5565b8151811061148b5761148b613632565b602090810291909101015260c0890151826114a78660036134f5565b815181106114b7576114b7613632565b602090810291909101015260006114d463ffffffff8816856134f5565b905060005b8763ffffffff1681101561164e57600460008c60e00151838151811061150157611501613632565b60209081029190910181015182528101919091526040016000205460ff161561156d5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e740000000000000000000000000000000000000000000060448201526064016109e3565b600c548b6101000151828151811061158757611587613632565b602002602001015110156115ae5760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106115c4576115c4613632565b60200260200101518486836115d991906134f5565b815181106115e9576115e9613632565b6020026020010181815250508a6101000151818151811061160c5761160c613632565b602002602001015184838361162191906134f5565b8151811061163157611631613632565b602090810291909101015280611646816135c9565b9150506114d9565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916116a4918890600401613353565b602060405180830381600087803b1580156116be57600080fd5b505af11580156116d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f69190612dfe565b905080611746576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f6600000000000000000000000000000000000060448201526064016109e3565b60005b8963ffffffff16811015611801576001600560008e60400151848151811061177357611773613632565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106117b6576117b6613632565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806117f9816135c9565b915050611749565b5060005b8863ffffffff168110156118d2576001600460008e60e00151848151811061182f5761182f613632565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506118c08c60e00151828151811061187557611875613632565b60200260200101518d6101000151838151811061189457611894613632565b60200260200101518e610160015184815181106118b3576118b3613632565b6020026020010151612581565b806118ca816135c9565b915050611805565b5060a08b0151156118f0576118f08b61012001518c60a00151612620565b60c08b01511561190d5761190d8b61014001518c60c00151612620565b50506001600055505050505050505050565b6000600561192e8360016134f5565b111561193c57506000919050565b6010826005811061194f5761194f613632565b015492915050565b600b546001600160a01b03163314611982576040516327e1f1e560e01b815260040160405180910390fd5b600561198f8360016134f5565b11156119ae5760405163318c434560e21b815260040160405180910390fd5b80601083600581106119c2576119c2613632565b015414156119e35760405163e984c61760e01b815260040160405180910390fd5b80601083600581106119f7576119f7613632565b015560405181815282907f8d463a7e10f676dd3b90506a17258d1f1a9f4f66adbdb6a22b2f8bbd3b484e239060200160405180910390a25050565b336000908152600e602052604090205460ff16611a625760405163f75e9fc760e01b815260040160405180910390fd5b600c5482606001511015611a895760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611aba91906134f5565b10611ad857604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611b0e5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611b45929190612581565b604082015115611b5d57611b5d8183604001516126c8565b5050565b600b546001600160a01b03163314611b8c576040516327e1f1e560e01b815260040160405180910390fd5b80611bda576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c75704665650000000000000000000000000000000000000060448201526064016109e3565b600c55565b600b546001600160a01b03163314611c0a576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c2e576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611c5257604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611ced576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611d11576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611d2b57506104008163ffffffff16115b15611d66576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016109e3565b611d71600182613578565b811663ffffffff16600014611d99576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611de5576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611e31576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611e80576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610edc565b600b546001600160a01b03163314611eec576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611f10576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611f3457604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314611f90576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161072491600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314612008576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff161561202c576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216158061204657506104008263ffffffff16115b15612081576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016109e3565b61208c600183613578565b821663ffffffff166000146120b4576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106121435760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106121665760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106121895760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061219f57600183901c92505b5090919050565b600b546001600160a01b031633146121d1576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610edc90831515815260200190565b604051600090339083908381818185875af1925050503d806000811461225c576040519150601f19603f3d011682016040523d82523d6000602084013e612261565b606091505b5050905080611b5d5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c656400000000000060448201526064016109e3565b600063ffffffff82111561232e5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016109e3565b5090565b600154600090600160a01b900460ff1661234e57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561239357600080fd5b505afa1580156123a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123cb9190612dfe565b92915050565b61016081015151600090600381106123fc57604051633fb1945d60e11b815260040160405180910390fd5b606081612450576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612508565b81600114156124975783610120015184610140015185610160015160008151811061247d5761247d613632565b602002602001015160405160200161243a9392919061320f565b8361012001518461014001518561016001516000815181106124bb576124bb613632565b60200260200101518661016001516001815181106124db576124db613632565b60200260200101516040516020016124f69493929190613255565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b600080600061256c858561276b565b91509150612579816127db565b509392505050565b600060085460075461259391906134f5565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906125d79084906134f5565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612612939291906133ef565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461266d576040519150601f19603f3d011682016040523d82523d6000602084013e612672565b606091505b50509050806126c35760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c6564000000000000000000000000000000000060448201526064016109e3565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612715576040519150601f19603f3d011682016040523d82523d6000602084013e61271a565b606091505b50509050806126c35760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c65640000000060448201526064016109e3565b6000808251604114156127a25760208301516040840151606085015160001a61279687828585612999565b945094505050506127d4565b8251604014156127cc57602083015160408401516127c1868383612a86565b9350935050506127d4565b506000905060025b9250929050565b60008160048111156127ef576127ef61361c565b14156127f85750565b600181600481111561280c5761280c61361c565b141561285a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016109e3565b600281600481111561286e5761286e61361c565b14156128bc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016109e3565b60038160048111156128d0576128d061361c565b14156129295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016109e3565b600481600481111561293d5761293d61361c565b14156129965760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016109e3565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156129d05750600090506003612a7d565b8460ff16601b141580156129e857508460ff16601c14155b156129f95750600090506004612a7d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612a4d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612a7657600060019250925050612a7d565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612abc60ff86901c601b6134f5565b9050612aca87828885612999565b935093505050935093915050565b8035612ae38161365e565b919050565b600082601f830112612af957600080fd5b81356020612b0e612b09836134d1565b6134a0565b80838252828201915082860187848660051b8901011115612b2e57600080fd5b6000805b86811015612b7157823567ffffffffffffffff811115612b50578283fd5b612b5e8b88838d0101612c44565b8652509385019391850191600101612b32565b509198975050505050505050565b600082601f830112612b9057600080fd5b612b98613430565b808385604086011115612baa57600080fd5b60005b6002811015612bcc578135845260209384019390910190600101612bad565b509095945050505050565b600082601f830112612be857600080fd5b81356020612bf8612b09836134d1565b80838252828201915082860187848660051b8901011115612c1857600080fd5b60005b85811015612c3757813584529284019290840190600101612c1b565b5090979650505050505050565b600082601f830112612c5557600080fd5b813567ffffffffffffffff811115612c6f57612c6f613648565b612c82601f8201601f19166020016134a0565b818152846020838601011115612c9757600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612cc657600080fd5b6040516040810181811067ffffffffffffffff82111715612ce957612ce9613648565b604052823581526020928301359281019290925250919050565b6000818303610100811215612d1757600080fd5b6040516060810181811067ffffffffffffffff82111715612d3a57612d3a613648565b604052915081612d4a8585612cb4565b81526080603f1983011215612d5e57600080fd5b612d66613430565b9150612d758560408601612b7f565b8252612d848560808601612b7f565b6020830152816020820152612d9c8560c08601612cb4565b6040820152505092915050565b803563ffffffff81168114612ae357600080fd5b600060208284031215612dcf57600080fd5b8135612dda8161365e565b9392505050565b600060208284031215612df357600080fd5b8135612dda81613673565b600060208284031215612e1057600080fd5b8151612dda81613673565b60008060408385031215612e2e57600080fd5b823567ffffffffffffffff80821115612e4657600080fd5b9084019060a08287031215612e5a57600080fd5b612e62613459565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612e9657600080fd5b612ea288828601612c44565b6080830152509350612eb991505060208401612ad8565b90509250929050565b60006101608284031215612ed557600080fd5b6040516080810181811067ffffffffffffffff82111715612ef857612ef8613648565b604052612f058484612d03565b8152612f146101008401612da9565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612f4957600080fd5b823567ffffffffffffffff80821115612f6157600080fd5b908401906102608287031215612f7657600080fd5b612f7e61347c565b612f888784612d03565b81526101008084013560208301526101208085013584811115612faa57600080fd5b612fb68a828801612bd7565b6040850152506101408086013585811115612fd057600080fd5b612fdc8b828901612bd7565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561301757600080fd5b6130238c828a01612bd7565b60e0870152506101e08701358681111561303c57600080fd5b6130488c828a01612bd7565b858701525061305a6102008801612ad8565b8386015261306b6102208801612ad8565b8286015261024087013593508584111561308457600080fd5b6130908b858901612ae8565b9085015250919550505060208501359150808211156130ae57600080fd5b506130bb85828601612c44565b9150509250929050565b6000602082840312156130d757600080fd5b5035919050565b600080604083850312156130f157600080fd5b50508035926020909101359150565b6000806040838503121561311357600080fd5b82359150612eb960208401612da9565b60006020828403121561313557600080fd5b612dda82612da9565b6000806040838503121561315157600080fd5b61315a83612da9565b9150602083013561316a8161365e565b809150509250929050565b6000806040838503121561318857600080fd5b61319183612da9565b9150612eb960208401612da9565b6000806000606084860312156131b457600080fd5b6131bd84612da9565b92506131cb60208501612da9565b915060408401356131db8161365e565b809150509250925092565b8060005b60028110156132095781518452602093840193909101906001016131ea565b50505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161324681602885016020870161359d565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250835161328c81602885016020880161359d565b8351908301906132a381602884016020880161359d565b016028019695505050505050565b815160009082906020808601845b838110156132db578151855293820193908201906001016132bf565b50929695505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561331f57835183529284019291840191600101613303565b50909695505050505050565b602081016002831061334d57634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161337084875180518252602090810151910152565b6020808701516133846040870182516131e6565b81015161339460808701826131e6565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156133e2578351855293820193928201926001016133c6565b5092979650505050505050565b838152826020820152606060408201526000825180606084015261341a81608085016020870161359d565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff8111828210171561345357613453613648565b60405290565b60405160a0810167ffffffffffffffff8111828210171561345357613453613648565b604051610180810167ffffffffffffffff8111828210171561345357613453613648565b604051601f8201601f1916810167ffffffffffffffff811182821017156134c9576134c9613648565b604052919050565b600067ffffffffffffffff8211156134eb576134eb613648565b5060051b60200190565b6000821982111561350857613508613606565b500190565b600063ffffffff80831681851680830382111561352c5761352c613606565b01949350505050565b600063ffffffff8083168185168183048111821515161561355857613558613606565b02949350505050565b60008282101561357357613573613606565b500390565b600063ffffffff8381169083168181101561359557613595613606565b039392505050565b60005b838110156135b85781810151838201526020016135a0565b838111156132095750506000910152565b60006000198214156135dd576135dd613606565b5060010190565b60008261360157634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461299657600080fd5b801515811461299657600080fdfea2646970667358221220fa412278f2ca7d605d2dba25a8994e346ae27e91d55cbf215927294bfffdb84464736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
