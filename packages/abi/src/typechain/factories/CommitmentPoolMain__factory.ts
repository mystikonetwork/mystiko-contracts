/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b5060405162003add38038062003add8339810160408190526200006491620007a3565b60016000558060ff81166200008c57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b381620000da565b600a8190556000908152600960205260409020805460ff1916600117905550620007cf9050565b600060ff82166200010c57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017457507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a857507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001db57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200020f57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024357507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027757507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ab57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002df57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031357507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034757507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037b57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003af57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e357507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041757507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044b57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047e57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b257507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e657507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051a57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054e57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058257507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b657507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005ea57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061e57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065257507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068657507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006ba57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ee57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072257507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075657507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078a57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b657600080fd5b815160ff81168114620007c857600080fd5b9392505050565b6080516132e4620007f96000396000818161032401528181610f38015261179501526132e46000f3fe6080604052600436106101c65760003560e01c80637fa4b09c116100f7578063b3b7563111610095578063ec571c6a11610064578063ec571c6a14610535578063f2da1d411461056d578063f8f053881461058d578063ffa89b88146105ad57600080fd5b8063b3b75631146104c0578063c259e2e6146104e0578063deeff7cd14610500578063e500f5041461052057600080fd5b80639cc6b354116100d15780639cc6b3541461043b578063a6232a931461045b578063a9b1d2961461048b578063b08892d0146104ab57600080fd5b80637fa4b09c146103da578063830d9ebe146103fa5780639b0a6fea1461041b57600080fd5b80633fae882e116101645780634eb069f71161013e5780634eb069f714610352578063570600161461036a57806378d60cd71461039a5780637cbf0ff6146103ba57600080fd5b80633fae882e146102d95780633fe3347a146102f9578063484eb6521461031557600080fd5b806306b2ad59116101a057806306b2ad591461023457806314a7737d1461025457806330f49cac146102745780633bb8d1b41461029457600080fd5b806302d498f1146101d257806303db9874146101f457806306394c9b1461021457600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004612a50565b6105ca565b005b34801561020057600080fd5b506101f261020f366004612a50565b610619565b34801561022057600080fd5b506101f261022f366004612a50565b610665565b34801561024057600080fd5b506101f261024f366004612a74565b6106bf565b34801561026057600080fd5b506101f261026f366004612b55565b610742565b34801561028057600080fd5b506101f261028f366004612a50565b610ca5565b3480156102a057600080fd5b506102c46102af366004612d58565b60009081526005602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156102e557600080fd5b506101f26102f4366004612bc9565b610d2b565b34801561030557600080fd5b5060016040516102d09190612f58565b34801561032157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102d0565b34801561035e57600080fd5b50600f5460ff166102c4565b34801561037657600080fd5b506102c4610385366004612d58565b60009081526004602052604090205460ff1690565b3480156103a657600080fd5b506101f26103b5366004612aae565b61173c565b3480156103c657600080fd5b506101f26103d5366004612d58565b61186b565b3480156103e657600080fd5b506101f26103f5366004612e10565b6118e9565b34801561040657600080fd5b506001546102c490600160a01b900460ff1681565b34801561042757600080fd5b506101f2610436366004612d94565b6119cc565b34801561044757600080fd5b506101f2610456366004612a50565b611ac4565b34801561046757600080fd5b506102c4610476366004612d58565b60009081526009602052604090205460ff1690565b34801561049757600080fd5b506101f26104a6366004612a50565b611b10565b3480156104b757600080fd5b50600c54610344565b3480156104cc57600080fd5b506101f26104db366004612a74565b611b5f565b3480156104ec57600080fd5b506101f26104fb366004612de6565b611bcb565b34801561050c57600080fd5b506101f261051b366004612daf565b611c6f565b34801561052c57600080fd5b50600854610344565b34801561054157600080fd5b50600154610555906001600160a01b031681565b6040516001600160a01b0390911681526020016102d0565b34801561057957600080fd5b50610344610588366004612d71565b611daf565b34801561059957600080fd5b506101f26105a8366004612a74565b611e38565b3480156105b957600080fd5b50600f54610100900460ff166102c4565b600b546001600160a01b031633146105f5576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610644576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610690576040516327e1f1e560e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146106ea576040516327e1f1e560e01b815260040160405180910390fd5b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061073790831515815260200190565b60405180910390a150565b600f54610100900460ff1615801561076a5750336000908152600d602052604090205460ff16155b15610788576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156107bb5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806107f7575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610837576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b600854602082015161084f9063ffffffff1682613211565b1561088a576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161082e565b600061089a828460200151611daf565b90506000836020015163ffffffff1667ffffffffffffffff8111156108c1576108c1613275565b6040519080825280602002602001820160405280156108ea578160200160208202803683370190505b5090506000805b856020015163ffffffff168110156109e857600061090f8287613122565b60008181526006602090815260409182902082518084019093528054808452600190910154918301919091529192509061095c5760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106109735761097361325f565b60200260200101818152505080602001518461098f9190613122565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a2505080806109e0906131f6565b9150506108f1565b50846020015163ffffffff1660076000828254610a05919061318e565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610a409190612f22565b6040516020818303038152906040528051906020012060001c610a639190613211565b905080866060015114610ab9576040516314e8955b60e21b815260206004820152600860248201527f6c65616648617368000000000000000000000000000000000000000000000000604482015260640161082e565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610af257610af261325f565b602002602001018181525050866040015181600181518110610b1657610b1661325f565b6020026020010181815250508181600281518110610b3657610b3661325f565b6020026020010181815250508481600381518110610b5657610b5661325f565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610bae91908690600401612f80565b602060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c009190612a91565b905080610c50576040516314e8955b60e21b815260206004820152600560248201527f70726f6f66000000000000000000000000000000000000000000000000000000604482015260640161082e565b876020015163ffffffff1660086000828254610c6c9190613122565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610c9b84611eac565b5050505050505050565b600b546001600160a01b03163314610cd0576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b190602001610737565b60026000541415610d7e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161082e565b60026000908155604083015151610d9490611f44565b90506000610da68460e0015151611f44565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610e23576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e67746800000000000000000000000000000000000000000000604482015260640161082e565b8163ffffffff1684606001515114610e7e576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e67746800000000000000000000000000000000604482015260640161082e565b8063ffffffff168461010001515114610eda576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e677468000000000000000000000000604482015260640161082e565b8063ffffffff168461016001515114610f36576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e6774680000000000000000604482015260640161082e565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610f6e9190613122565b610f789190613122565b1115610f9757604051633b5ccb4360e21b815260040160405180910390fd5b610fa5846101200151611fc4565b15610fc357604051632e70c0b160e01b815260040160405180910390fd5b6000610fce85612064565b9050610fda81856121f0565b6001600160a01b031660001b856080015114611039576040516314e8955b60e21b815260206004820152600960248201527f7369676e61747572650000000000000000000000000000000000000000000000604482015260640161082e565b6000611046846002613162565b63ffffffff169050600061105b856002613162565b61106690600461313a565b63ffffffff169050600061107b856002613162565b61108b9063ffffffff1683613122565b67ffffffffffffffff8111156110a3576110a3613275565b6040519080825280602002602001820160405280156110cc578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff1661111e576040516314e8955b60e21b815260040161082e906020808252600490820152631c9bdbdd60e21b604082015260600190565b8760200151816000815181106111365761113661325f565b6020908102919091010152600061114e87600161313a565b63ffffffff16905060005b8763ffffffff1681101561125a5760008a60400151828151811061117f5761117f61325f565b6020908102919091018101516000818152600590925260409091205490915060ff16156111d8576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846111e5846001613122565b815181106111f5576111f561325f565b6020026020010181815250508a6060015182815181106112175761121761325f565b602002602001015184848461122c9190613122565b8151811061123c5761123c61325f565b60209081029190910101525080611252816131f6565b915050611159565b5060808901518261126c866001613122565b8151811061127c5761127c61325f565b602090810291909101015260a089015182611298866002613122565b815181106112a8576112a861325f565b602090810291909101015260c0890151826112c4866003613122565b815181106112d4576112d461325f565b602090810291909101015260006112f163ffffffff881685613122565b905060005b8763ffffffff1681101561146b57600460008c60e00151838151811061131e5761131e61325f565b60209081029190910181015182528101919091526040016000205460ff161561138a5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e7400000000000000000000000000000000000000000000604482015260640161082e565b600c548b610100015182815181106113a4576113a461325f565b602002602001015110156113cb5760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106113e1576113e161325f565b60200260200101518486836113f69190613122565b815181106114065761140661325f565b6020026020010181815250508a610100015181815181106114295761142961325f565b602002602001015184838361143e9190613122565b8151811061144e5761144e61325f565b602090810291909101015280611463816131f6565b9150506112f6565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916114c1918890600401612f80565b602060405180830381600087803b1580156114db57600080fd5b505af11580156114ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115139190612a91565b905080611563576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f66000000000000000000000000000000000000604482015260640161082e565b60005b8963ffffffff1681101561161e576001600560008e6040015184815181106115905761159061325f565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106115d3576115d361325f565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611616816131f6565b915050611566565b5060005b8863ffffffff168110156116ef576001600460008e60e00151848151811061164c5761164c61325f565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506116dd8c60e0015182815181106116925761169261325f565b60200260200101518d610100015183815181106116b1576116b161325f565b60200260200101518e610160015184815181106116d0576116d061325f565b6020026020010151612214565b806116e7816131f6565b915050611622565b5060a08b01511561170d5761170d8b61012001518c60a001516122b3565b60c08b01511561172a5761172a8b61014001518c60c001516122b3565b50506001600055505050505050505050565b336000908152600e602052604090205460ff1661176c5760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156117935760405163784f02bd60e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006007546008546117c49190613122565b106117e257604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff16156118185760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff19166001179055516060830151608084015161184f929190612214565b6040820151156118675761186781836040015161235b565b5050565b600b546001600160a01b03163314611896576040516327e1f1e560e01b815260040160405180910390fd5b806118e4576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c757046656500000000000000000000000000000000000000604482015260640161082e565b600c55565b600b546001600160a01b03163314611914576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611938576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff831661195c57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b031633146119f7576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611a1b576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611a3557506104008163ffffffff16115b15611a70576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161082e565b611a7b6001826131a5565b811663ffffffff16600014611aa3576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611aef576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611b3b576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611b8a576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610737565b600b546001600160a01b03163314611bf6576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c1a576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611c3e57604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314611c9a576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611cbe576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611cd857506104008263ffffffff16115b15611d13576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161082e565b611d1e6001836131a5565b821663ffffffff16600014611d46576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff1610611dd55760088263ffffffff16901c9150600883901c92505b60108263ffffffff1610611df85760048263ffffffff16901c9150600483901c92505b60048263ffffffff1610611e1b5760028263ffffffff16901c9150600283901c92505b60028263ffffffff1610611e3157600183901c92505b5090919050565b600b546001600160a01b03163314611e63576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b4799061073790831515815260200190565b604051600090339083908381818185875af1925050503d8060008114611eee576040519150601f19603f3d011682016040523d82523d6000602084013e611ef3565b606091505b50509050806118675760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c6564000000000000604482015260640161082e565b600063ffffffff821115611fc05760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161082e565b5090565b600154600090600160a01b900460ff1615611fe157506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561202657600080fd5b505afa15801561203a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061205e9190612a91565b92915050565b610160810151516000906003811061208f57604051633fb1945d60e11b815260040160405180910390fd5b6060816120e3576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061219b565b816001141561212a578361012001518461014001518561016001516000815181106121105761211061325f565b60200260200101516040516020016120cd93929190612e80565b83610120015184610140015185610160015160008151811061214e5761214e61325f565b602002602001015186610160015160018151811061216e5761216e61325f565b60200260200101516040516020016121899493929190612ec6565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006121ff85856123fe565b9150915061220c8161246e565b509392505050565b60006008546007546122269190613122565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061226a908490613122565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516122a59392919061301c565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612300576040519150601f19603f3d011682016040523d82523d6000602084013e612305565b606091505b50509050806123565760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c65640000000000000000000000000000000000604482015260640161082e565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146123a8576040519150601f19603f3d011682016040523d82523d6000602084013e6123ad565b606091505b50509050806123565760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c656400000000604482015260640161082e565b6000808251604114156124355760208301516040840151606085015160001a6124298782858561262c565b94509450505050612467565b82516040141561245f5760208301516040840151612454868383612719565b935093505050612467565b506000905060025b9250929050565b600081600481111561248257612482613249565b141561248b5750565b600181600481111561249f5761249f613249565b14156124ed5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161082e565b600281600481111561250157612501613249565b141561254f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161082e565b600381600481111561256357612563613249565b14156125bc5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161082e565b60048160048111156125d0576125d0613249565b14156126295760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161082e565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156126635750600090506003612710565b8460ff16601b1415801561267b57508460ff16601c14155b1561268c5750600090506004612710565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156126e0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661270957600060019250925050612710565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161274f60ff86901c601b613122565b905061275d8782888561262c565b935093505050935093915050565b80356127768161328b565b919050565b600082601f83011261278c57600080fd5b813560206127a161279c836130fe565b6130cd565b80838252828201915082860187848660051b89010111156127c157600080fd5b6000805b8681101561280457823567ffffffffffffffff8111156127e3578283fd5b6127f18b88838d01016128d7565b86525093850193918501916001016127c5565b509198975050505050505050565b600082601f83011261282357600080fd5b61282b61305d565b80838560408601111561283d57600080fd5b60005b600281101561285f578135845260209384019390910190600101612840565b509095945050505050565b600082601f83011261287b57600080fd5b8135602061288b61279c836130fe565b80838252828201915082860187848660051b89010111156128ab57600080fd5b60005b858110156128ca578135845292840192908401906001016128ae565b5090979650505050505050565b600082601f8301126128e857600080fd5b813567ffffffffffffffff81111561290257612902613275565b612915601f8201601f19166020016130cd565b81815284602083860101111561292a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561295957600080fd5b6040516040810181811067ffffffffffffffff8211171561297c5761297c613275565b604052823581526020928301359281019290925250919050565b60008183036101008112156129aa57600080fd5b6040516060810181811067ffffffffffffffff821117156129cd576129cd613275565b6040529150816129dd8585612947565b81526080603f19830112156129f157600080fd5b6129f961305d565b9150612a088560408601612812565b8252612a178560808601612812565b6020830152816020820152612a2f8560c08601612947565b6040820152505092915050565b803563ffffffff8116811461277657600080fd5b600060208284031215612a6257600080fd5b8135612a6d8161328b565b9392505050565b600060208284031215612a8657600080fd5b8135612a6d816132a0565b600060208284031215612aa357600080fd5b8151612a6d816132a0565b60008060408385031215612ac157600080fd5b823567ffffffffffffffff80821115612ad957600080fd5b9084019060a08287031215612aed57600080fd5b612af5613086565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612b2957600080fd5b612b35888286016128d7565b6080830152509350612b4c9150506020840161276b565b90509250929050565b60006101608284031215612b6857600080fd5b6040516080810181811067ffffffffffffffff82111715612b8b57612b8b613275565b604052612b988484612996565b8152612ba76101008401612a3c565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612bdc57600080fd5b823567ffffffffffffffff80821115612bf457600080fd5b908401906102608287031215612c0957600080fd5b612c116130a9565b612c1b8784612996565b81526101008084013560208301526101208085013584811115612c3d57600080fd5b612c498a82880161286a565b6040850152506101408086013585811115612c6357600080fd5b612c6f8b82890161286a565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612caa57600080fd5b612cb68c828a0161286a565b60e0870152506101e087013586811115612ccf57600080fd5b612cdb8c828a0161286a565b8587015250612ced610200880161276b565b83860152612cfe610220880161276b565b82860152610240870135935085841115612d1757600080fd5b612d238b85890161277b565b908501525091955050506020850135915080821115612d4157600080fd5b50612d4e858286016128d7565b9150509250929050565b600060208284031215612d6a57600080fd5b5035919050565b60008060408385031215612d8457600080fd5b82359150612b4c60208401612a3c565b600060208284031215612da657600080fd5b612a6d82612a3c565b60008060408385031215612dc257600080fd5b612dcb83612a3c565b91506020830135612ddb8161328b565b809150509250929050565b60008060408385031215612df957600080fd5b612e0283612a3c565b9150612b4c60208401612a3c565b600080600060608486031215612e2557600080fd5b612e2e84612a3c565b9250612e3c60208501612a3c565b91506040840135612e4c8161328b565b809150509250925092565b8060005b6002811015612e7a578151845260209384019390910190600101612e5b565b50505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b166014840152508251612eb78160288501602087016131ca565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351612efd8160288501602088016131ca565b835190830190612f148160288401602088016131ca565b016028019695505050505050565b815160009082906020808601845b83811015612f4c57815185529382019390820190600101612f30565b50929695505050505050565b6020810160028310612f7a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000610120808301612f9d84875180518252602090810151910152565b602080870151612fb1604087018251612e57565b810151612fc16080870182612e57565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561300f57835185529382019392820192600101612ff3565b5092979650505050505050565b83815282602082015260606040820152600082518060608401526130478160808501602087016131ca565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff8111828210171561308057613080613275565b60405290565b60405160a0810167ffffffffffffffff8111828210171561308057613080613275565b604051610180810167ffffffffffffffff8111828210171561308057613080613275565b604051601f8201601f1916810167ffffffffffffffff811182821017156130f6576130f6613275565b604052919050565b600067ffffffffffffffff82111561311857613118613275565b5060051b60200190565b6000821982111561313557613135613233565b500190565b600063ffffffff80831681851680830382111561315957613159613233565b01949350505050565b600063ffffffff8083168185168183048111821515161561318557613185613233565b02949350505050565b6000828210156131a0576131a0613233565b500390565b600063ffffffff838116908316818110156131c2576131c2613233565b039392505050565b60005b838110156131e55781810151838201526020016131cd565b83811115612e7a5750506000910152565b600060001982141561320a5761320a613233565b5060010190565b60008261322e57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461262957600080fd5b801515811461262957600080fdfea264697066735822122004cd3e070d18a5261e3331fbfc6736a844fb45426eb9960bcd4b4cc55e244f2e64736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
