/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Failed',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'RollupFeeToLow',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Unauthorized',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'message',
        type: 'string',
      },
    ],
    name: 'Unexpected',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b506040516200442a3803806200442a833981016040819052620000649162000814565b60016000558060ff8116620000cd5760405163c83ad1cd60e01b8152602060048201526024808201527f5f747265654865696768742073686f756c6420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000f4816200011b565b600a8190556000908152600960205260409020805460ff1916600117905550620008409050565b600060ff82166200014d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200018157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001b557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001e957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200021c57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200025057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200028457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002b857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ec57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200032057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200035457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200038857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003bc57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003f057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200042457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200045857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200048c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004bf57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004f357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200052757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200055b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200058f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005c357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005f757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200062b57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200065f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200069357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006c757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006fb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200072f57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200076357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200079757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007cb57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b60405162461bcd60e51b815260206004820152601960248201527f7472656520686569676874206f7574206f6620626f756e6473000000000000006044820152606401620000c4565b6000602082840312156200082757600080fd5b815160ff811681146200083957600080fd5b9392505050565b608051613bc06200086a600039600081816103240152818161111d0152611d810152613bc06000f3fe6080604052600436106101c65760003560e01c80637fa4b09c116100f7578063b3b7563111610095578063ec571c6a11610064578063ec571c6a14610535578063f2da1d411461056d578063f8f053881461058d578063ffa89b88146105ad57600080fd5b8063b3b75631146104c0578063c259e2e6146104e0578063deeff7cd14610500578063e500f5041461052057600080fd5b80639cc6b354116100d15780639cc6b3541461043b578063a6232a931461045b578063a9b1d2961461048b578063b08892d0146104ab57600080fd5b80637fa4b09c146103da578063830d9ebe146103fa5780639b0a6fea1461041b57600080fd5b80633fae882e116101645780634eb069f71161013e5780634eb069f714610352578063570600161461036a57806378d60cd71461039a5780637cbf0ff6146103ba57600080fd5b80633fae882e146102d95780633fe3347a146102f9578063484eb6521461031557600080fd5b806306b2ad59116101a057806306b2ad591461023457806314a7737d1461025457806330f49cac146102745780633bb8d1b41461029457600080fd5b806302d498f1146101d257806303db9874146101f457806306394c9b1461021457600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed3660046133b7565b6105ca565b005b34801561020057600080fd5b506101f261020f3660046133b7565b61063f565b34801561022057600080fd5b506101f261022f3660046133b7565b6106ac565b34801561024057600080fd5b506101f261024f3660046133db565b610727565b34801561026057600080fd5b506101f261026f3660046134bc565b6107cb565b34801561028057600080fd5b506101f261028f3660046133b7565b610e69565b3480156102a057600080fd5b506102c46102af3660046136bf565b60009081526005602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156102e557600080fd5b506101f26102f4366004613530565b610f10565b34801561030557600080fd5b5060016040516102d0919061381d565b34801561032157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102d0565b34801561035e57600080fd5b50600f5460ff166102c4565b34801561037657600080fd5b506102c46103853660046136bf565b60009081526004602052604090205460ff1690565b3480156103a657600080fd5b506101f26103b5366004613415565b611cc8565b3480156103c657600080fd5b506101f26103d53660046136bf565b611eb0565b3480156103e657600080fd5b506101f26103f5366004613777565b611f52565b34801561040657600080fd5b506001546102c490600160a01b900460ff1681565b34801561042757600080fd5b506101f26104363660046136fb565b6120c5565b34801561044757600080fd5b506101f26104563660046133b7565b612253565b34801561046757600080fd5b506102c46104763660046136bf565b60009081526009602052604090205460ff1690565b34801561049757600080fd5b506101f26104a63660046133b7565b6122c0565b3480156104b757600080fd5b50600c54610344565b3480156104cc57600080fd5b506101f26104db3660046133db565b612330565b3480156104ec57600080fd5b506101f26104fb36600461374d565b6123bd565b34801561050c57600080fd5b506101f261051b366004613716565b6124f1565b34801561052c57600080fd5b50600854610344565b34801561054157600080fd5b50600154610555906001600160a01b031681565b6040516001600160a01b0390911681526020016102d0565b34801561057957600080fd5b506103446105883660046136d8565b6126c7565b34801561059957600080fd5b506101f26105a83660046133db565b61272c565b3480156105b957600080fd5b50600f54610100900460ff166102c4565b600b546001600160a01b0316331461061b5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b0316331461068b5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146106f85760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b031633146107735760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a443906107c090831515815260200190565b60405180910390a150565b600f54610100900460ff161580156107f35750336000908152600d602052604090205460ff16155b156108415760405163c83ad1cd60e01b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610612565b600080516020613b6b8339815191528160400151106108c95760405163c83ad1cd60e01b815260206004820152602660248201527f6e6577526f6f742073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a4500000000000000000000000000000000000000000000000000006064820152608401610612565b60408082015160009081526009602052205460ff161561092c5760405163bee3611160e01b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610612565b602081015163ffffffff16158061094e5750600754816020015163ffffffff16115b8061097b575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b156109be576040516314e8955b60e21b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610612565b60085460208201516109d69063ffffffff1682613acd565b15610a30576040516314e8955b60e21b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610612565b6000610a408284602001516126c7565b90506000836020015163ffffffff1667ffffffffffffffff811115610a6757610a67613b31565b604051908082528060200260200182016040528015610a90578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610bbe576000610ab58287613a0a565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610b325760405163c83ad1cd60e01b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610612565b8060000151858481518110610b4957610b49613b1b565b602002602001018181525050806020015184610b659190613a0a565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610bb690613ab2565b915050610a97565b50846020015163ffffffff1660076000828254610bdb9190613a76565b925050819055506000600080516020613b6b83398151915283604051602001610c0491906137e7565b6040516020818303038152906040528051906020012060001c610c279190613acd565b905080866060015114610c7d576040516314e8955b60e21b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610612565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610cb657610cb6613b1b565b602002602001018181525050866040015181600181518110610cda57610cda613b1b565b6020026020010181815250508181600281518110610cfa57610cfa613b1b565b6020026020010181815250508481600381518110610d1a57610d1a613b1b565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610d7291908690600401613845565b602060405180830381600087803b158015610d8c57600080fd5b505af1158015610da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc491906133f8565b905080610e14576040516314e8955b60e21b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610612565b876020015163ffffffff1660086000828254610e309190613a0a565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610e5f846127c1565b5050505050505050565b600b546001600160a01b03163314610eb55760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016107c0565b60026000541415610f635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610612565b60026000908155604083015151610f799061285a565b90506000610f8b8460e001515161285a565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16611008576040516314e8955b60e21b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610612565b8163ffffffff1684606001515114611063576040516314e8955b60e21b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610612565b8063ffffffff1684610100015151146110bf576040516314e8955b60e21b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610612565b8063ffffffff16846101600151511461111b576040516314e8955b60e21b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610612565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546111539190613a0a565b61115d9190613a0a565b111561119b5760405163c83ad1cd60e01b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610612565b6111a98461012001516128da565b156111f75760405163c83ad1cd60e01b815260206004820152601260248201527f73616e6374696f6e6564206164647265737300000000000000000000000000006044820152606401610612565b60006112028561297a565b905060006112108286612b55565b60808701519091506001600160a01b03821614611270576040516314e8955b60e21b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610612565b600061127d856002613a4a565b63ffffffff1690506000611292866002613a4a565b61129d906004613a22565b63ffffffff16905060006112b2866002613a4a565b6112c29063ffffffff1683613a0a565b67ffffffffffffffff8111156112da576112da613b31565b604051908082528060200260200182016040528015611303578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff1661136c576040516314e8955b60e21b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610612565b88602001518160008151811061138457611384613b1b565b6020908102919091010152600061139c886001613a22565b63ffffffff16905060005b8863ffffffff168110156115985760008b6040015182815181106113cd576113cd613b1b565b6020908102919091018101516000818152600590925260409091205490915060ff161561143d5760405163c83ad1cd60e01b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610612565b600080516020613b6b833981519152811061149b576040516314e8955b60e21b815260206004820152601060248201527f746865206e6f746520696e76616c6964000000000000000000000000000000006044820152606401610612565b600080516020613b6b8339815191528c6060015183815181106114c0576114c0613b1b565b602002602001015110611516576040516314e8955b60e21b815260206004820152601060248201527f736967206861736820696e76616c6964000000000000000000000000000000006044820152606401610612565b8084611523846001613a0a565b8151811061153357611533613b1b565b6020026020010181815250508b60600151828151811061155557611555613b1b565b602002602001015184848461156a9190613a0a565b8151811061157a5761157a613b1b565b6020908102919091010152508061159081613ab2565b9150506113a7565b5060808a0151600080516020613b6b833981519152116115fb576040516314e8955b60e21b815260206004820152600e60248201527f696e76616c69642073696720706b0000000000000000000000000000000000006044820152606401610612565b600080516020613b6b8339815191528a60a001511061165d576040516314e8955b60e21b815260206004820152600e60248201527f696e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610612565b600080516020613b6b8339815191528a60c00151106116bf576040516314e8955b60e21b815260206004820152601a60248201527f696e76616c69642072656c617965722066656520616d6f756e740000000000006044820152606401610612565b60808a0151826116d0866001613a0a565b815181106116e0576116e0613b1b565b602090810291909101015260a08a0151826116fc866002613a0a565b8151811061170c5761170c613b1b565b602090810291909101015260c08a015182611728866003613a0a565b8151811061173857611738613b1b565b6020908102919091010152600061175563ffffffff891685613a0a565b905060005b8863ffffffff168110156119f657600460008d60e00151838151811061178257611782613b1b565b60209081029190910181015182528101919091526040016000205460ff16156117ee5760405163bee3611160e01b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610612565b600080516020613b6b8339815191528c60e00151828151811061181357611813613b1b565b602002602001015110611869576040516314e8955b60e21b815260206004820152601660248201527f696e76616c6964206f757420636f6d6d69746d656e74000000000000000000006044820152606401610612565b600c548c6101000151828151811061188357611883613b1b565b602002602001015110156118da57604051631f13bc5760e21b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610612565b600080516020613b6b8339815191528c6101000151828151811061190057611900613b1b565b602002602001015110611956576040516314e8955b60e21b815260206004820152601660248201527f696e76616c6964206f757420726f6c6c757020666565000000000000000000006044820152606401610612565b8b60e00151818151811061196c5761196c613b1b565b60200260200101518486836119819190613a0a565b8151811061199157611991613b1b565b6020026020010181815250508b610100015181815181106119b4576119b4613b1b565b60200260200101518483836119c99190613a0a565b815181106119d9576119d9613b1b565b6020908102919091010152806119ee81613ab2565b91505061175a565b5063ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c941764791611a4c918890600401613845565b602060405180830381600087803b158015611a6657600080fd5b505af1158015611a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e91906133f8565b905080611aee576040516314e8955b60e21b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610612565b60005b8a63ffffffff16811015611ba9576001600560008f604001518481518110611b1b57611b1b613b1b565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c604001518181518110611b5e57611b5e613b1b565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611ba181613ab2565b915050611af1565b5060005b8963ffffffff16811015611c7a576001600460008f60e001518481518110611bd757611bd7613b1b565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611c688d60e001518281518110611c1d57611c1d613b1b565b60200260200101518e61010001518381518110611c3c57611c3c613b1b565b60200260200101518f61016001518481518110611c5b57611c5b613b1b565b6020026020010151612b79565b80611c7281613ab2565b915050611bad565b5060a08c015115611c9857611c988c61012001518d60a00151612c18565b60c08c015115611cb557611cb58c61014001518d60c00151612c18565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff16611d285760405163c83ad1cd60e01b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e00000000000000006044820152606401610612565b600c5482606001511015611d7f57604051631f13bc5760e21b815260206004820152601260248201527f726f6c6c75702066656520746f6f2066657700000000000000000000000000006044820152606401610612565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611db09190613a0a565b10611ded5760405163c83ad1cd60e01b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610612565b60208083015160009081526004909152604090205460ff1615611e5d5760405163c83ad1cd60e01b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610612565b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611e94929190612b79565b604082015115611eac57611eac818360400151612cc1565b5050565b600b546001600160a01b03163314611efc5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b60008111611f4d576040516314e8955b60e21b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610612565b600c55565b600b546001600160a01b03163314611f9e5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600f5460ff1615611ffe5760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610612565b60008363ffffffff16116120555760405163c83ad1cd60e01b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610612565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b031633146121115760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600f5460ff16156121715760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610612565b63ffffffff8116158061218c57506101008163ffffffff1610155b156121cf576040516314e8955b60e21b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610612565b6121da600182613a8d565b811663ffffffff166000146122325760405163c83ad1cd60e01b815260206004820152601a60248201527f726f6c6c75702073697a65206e6f7420706f776572206f6620320000000000006044820152606401610612565b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b0316331461229f5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b0316331461230c5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b0316331461237c5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e4906020016107c0565b600b546001600160a01b031633146124095760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600f5460ff16156124695760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610612565b60008263ffffffff16116124c05760405163c83ad1cd60e01b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610612565b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b0316331461253d5760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600f5460ff161561259d5760405163c83ad1cd60e01b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610612565b63ffffffff821615806125b857506101008263ffffffff1610155b156125fb576040516314e8955b60e21b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610612565b612606600183613a8d565b821663ffffffff1660001461265e5760405163c83ad1cd60e01b815260206004820152601a60248201527f726f6c6c75702073697a65206e6f7420706f776572206f6620320000000000006044820152606401610612565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b600060108263ffffffff16106126ec5760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061270f5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061272557600183901c92505b5090919050565b600b546001600160a01b031633146127785760405163973d02cb60e01b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610612565b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b479906107c090831515815260200190565b604051600090339083908381818185875af1925050503d8060008114612803576040519150601f19603f3d011682016040523d82523d6000602084013e612808565b606091505b5050905080611eac576040516318cb089d60e31b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610612565b600063ffffffff8211156128d65760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610612565b5090565b600154600090600160a01b900460ff16156128f757506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561293c57600080fd5b505afa158015612950573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297491906133f8565b92915050565b61016081015151600090600381106129d55760405163c83ad1cd60e01b815260206004820152601860248201527f6f7574707574206e6f746573206c657373207468616e203300000000000000006044820152606401610612565b6101208301516101408401516060806000856129f357506028612a71565b8560011415612a275760f99050876101600151600081518110612a1857612a18613b1b565b60200260200101519250612a71565b6101ca9050876101600151600081518110612a4457612a44613b1b565b60200260200101519250876101600151600181518110612a6657612a66613b1b565b602002602001015191505b60006040518660601b60008201528560601b60148201526000881315612aba576028810160d18101602087015b81831015612ab6578051835260209283019201612a9e565b5050505b6001881315612aec5760f9810160d18101602086015b81831015612ae8578051835260209283019201612ad0565b5050505b8290209050612b48816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b6000806000612b648585612d65565b91509150612b7181612dd5565b509392505050565b6000600854600754612b8b9190613a0a565b604080518082018252868152602080820187815260008581526006909252928120915182559151600191820155600780549394509092909190612bcf908490613a0a565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612c0a939291906138e1565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612c65576040519150601f19603f3d011682016040523d82523d6000602084013e612c6a565b606091505b5050905080612cbc576040516318cb089d60e31b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610612565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d0e576040519150601f19603f3d011682016040523d82523d6000602084013e612d13565b606091505b5050905080612cbc576040516318cb089d60e31b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610612565b600080825160411415612d9c5760208301516040840151606085015160001a612d9087828585612f93565b94509450505050612dce565b825160401415612dc65760208301516040840151612dbb868383613080565b935093505050612dce565b506000905060025b9250929050565b6000816004811115612de957612de9613b05565b1415612df25750565b6001816004811115612e0657612e06613b05565b1415612e545760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610612565b6002816004811115612e6857612e68613b05565b1415612eb65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610612565b6003816004811115612eca57612eca613b05565b1415612f235760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610612565b6004816004811115612f3757612f37613b05565b1415612f905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610612565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612fca5750600090506003613077565b8460ff16601b14158015612fe257508460ff16601c14155b15612ff35750600090506004613077565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613047573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661307057600060019250925050613077565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816130b660ff86901c601b613a0a565b90506130c487828885612f93565b935093505050935093915050565b80356130dd81613b47565b919050565b600082601f8301126130f357600080fd5b81356020613108613103836139e6565b6139b5565b80838252828201915082860187848660051b890101111561312857600080fd5b6000805b8681101561316b57823567ffffffffffffffff81111561314a578283fd5b6131588b88838d010161323e565b865250938501939185019160010161312c565b509198975050505050505050565b600082601f83011261318a57600080fd5b613192613945565b8083856040860111156131a457600080fd5b60005b60028110156131c65781358452602093840193909101906001016131a7565b509095945050505050565b600082601f8301126131e257600080fd5b813560206131f2613103836139e6565b80838252828201915082860187848660051b890101111561321257600080fd5b60005b8581101561323157813584529284019290840190600101613215565b5090979650505050505050565b600082601f83011261324f57600080fd5b813567ffffffffffffffff81111561326957613269613b31565b61327c601f8201601f19166020016139b5565b81815284602083860101111561329157600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156132c057600080fd5b6040516040810181811067ffffffffffffffff821117156132e3576132e3613b31565b604052823581526020928301359281019290925250919050565b600081830361010081121561331157600080fd5b6040516060810181811067ffffffffffffffff8211171561333457613334613b31565b60405291508161334485856132ae565b81526080603f198301121561335857600080fd5b613360613945565b915061336f8560408601613179565b825261337e8560808601613179565b60208301528160208201526133968560c086016132ae565b6040820152505092915050565b803563ffffffff811681146130dd57600080fd5b6000602082840312156133c957600080fd5b81356133d481613b47565b9392505050565b6000602082840312156133ed57600080fd5b81356133d481613b5c565b60006020828403121561340a57600080fd5b81516133d481613b5c565b6000806040838503121561342857600080fd5b823567ffffffffffffffff8082111561344057600080fd5b9084019060a0828703121561345457600080fd5b61345c61396e565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561349057600080fd5b61349c8882860161323e565b60808301525093506134b3915050602084016130d2565b90509250929050565b600061016082840312156134cf57600080fd5b6040516080810181811067ffffffffffffffff821117156134f2576134f2613b31565b6040526134ff84846132fd565b815261350e61010084016133a3565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561354357600080fd5b823567ffffffffffffffff8082111561355b57600080fd5b90840190610260828703121561357057600080fd5b613578613991565b61358287846132fd565b815261010080840135602083015261012080850135848111156135a457600080fd5b6135b08a8288016131d1565b60408501525061014080860135858111156135ca57600080fd5b6135d68b8289016131d1565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561361157600080fd5b61361d8c828a016131d1565b60e0870152506101e08701358681111561363657600080fd5b6136428c828a016131d1565b858701525061365461020088016130d2565b8386015261366561022088016130d2565b8286015261024087013593508584111561367e57600080fd5b61368a8b8589016130e2565b9085015250919550505060208501359150808211156136a857600080fd5b506136b58582860161323e565b9150509250929050565b6000602082840312156136d157600080fd5b5035919050565b600080604083850312156136eb57600080fd5b823591506134b3602084016133a3565b60006020828403121561370d57600080fd5b6133d4826133a3565b6000806040838503121561372957600080fd5b613732836133a3565b9150602083013561374281613b47565b809150509250929050565b6000806040838503121561376057600080fd5b613769836133a3565b91506134b3602084016133a3565b60008060006060848603121561378c57600080fd5b613795846133a3565b92506137a3602085016133a3565b915060408401356137b381613b47565b809150509250925092565b8060005b60028110156137e15781518452602093840193909101906001016137c2565b50505050565b815160009082906020808601845b83811015613811578151855293820193908201906001016137f5565b50929695505050505050565b602081016002831061383f57634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161386284875180518252602090810151910152565b6020808701516138766040870182516137be565b81015161388660808701826137be565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156138d4578351855293820193928201926001016138b8565b5092979650505050505050565b83815260006020848184015260606040840152835180606085015260005b8181101561391b578581018301518582016080015282016138ff565b8181111561392d576000608083870101525b50601f01601f19169290920160800195945050505050565b6040805190810167ffffffffffffffff8111828210171561396857613968613b31565b60405290565b60405160a0810167ffffffffffffffff8111828210171561396857613968613b31565b604051610180810167ffffffffffffffff8111828210171561396857613968613b31565b604051601f8201601f1916810167ffffffffffffffff811182821017156139de576139de613b31565b604052919050565b600067ffffffffffffffff821115613a0057613a00613b31565b5060051b60200190565b60008219821115613a1d57613a1d613aef565b500190565b600063ffffffff808316818516808303821115613a4157613a41613aef565b01949350505050565b600063ffffffff80831681851681830481118215151615613a6d57613a6d613aef565b02949350505050565b600082821015613a8857613a88613aef565b500390565b600063ffffffff83811690831681811015613aaa57613aaa613aef565b039392505050565b6000600019821415613ac657613ac6613aef565b5060010190565b600082613aea57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612f9057600080fd5b8015158114612f9057600080fdfe30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001a2646970667358221220631ed5755a073be80cf8d4da5dc2747e62b1aaf85a8419518113eac57da057a664736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
