/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorPublicKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'publicKey',
        type: 'bytes32',
      },
    ],
    name: 'AuditorPublicKeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'auditorPublicKey',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'bytes32[]',
        name: '',
        type: 'bytes32[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'bytes32',
            name: 'randomAuditingPublicKey',
            type: 'bytes32',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_publicKey',
        type: 'bytes32',
      },
    ],
    name: 'updateAuditorPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162004472380380620044728339810160408190526200006591620007a4565b60016000558060ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b481620000db565b600a8190556000908152600960205260409020805460ff1916600117905550620007d09050565b600060ff82166200010d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200021057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ac57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002e057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003b057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005eb57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006bb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ef57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078b57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b757600080fd5b815160ff81168114620007c957600080fd5b9392505050565b608051613c78620007fa600039600081816103730152818161107301526119f50152613c786000f3fe60806040526004361061021d5760003560e01c806387780df91161011d578063c259e2e6116100b0578063e500f5041161007f578063f2da1d4111610064578063f2da1d4114610649578063f8f0538814610669578063ffa89b881461068957600080fd5b8063e500f504146105fc578063ec571c6a1461061157600080fd5b8063c259e2e614610587578063c307fd1b146105a7578063dd757c34146105c7578063deeff7cd146105dc57600080fd5b8063a9b1d296116100ec578063a9b1d29614610511578063b08892d014610531578063b1c3942214610546578063b3b756311461056757600080fd5b806387780df9146104815780639b0a6fea146104a15780639cc6b354146104c1578063a6232a93146104e157600080fd5b80633fe3347a116101b0578063618e1dde1161017f57806378d60cd71161016457806378d60cd7146104215780637cbf0ff6146104415780637fa4b09c1461046157600080fd5b8063618e1dde146103df57806363bc7d32146103ff57600080fd5b80633fe3347a14610348578063484eb652146103645780634eb069f71461039757806357060016146103af57600080fd5b8063115f574c116101ec578063115f574c146102a057806314a7737d146102c857806330f49cac146102e85780633bb8d1b41461030857600080fd5b806301dbf19f1461022957806302d498f11461024057806303db98741461026057806306394c9b1461028057600080fd5b3661022457005b600080fd5b34801561023557600080fd5b5061023e6106a6565b005b34801561024c57600080fd5b5061023e61025b3660046132a1565b61072a565b34801561026c57600080fd5b5061023e61027b3660046132a1565b610779565b34801561028c57600080fd5b5061023e61029b3660046132a1565b6107c5565b3480156102ac57600080fd5b506102b5600581565b6040519081526020015b60405180910390f35b3480156102d457600080fd5b5061023e6102e33660046133a6565b610876565b3480156102f457600080fd5b5061023e6103033660046132a1565b610dd9565b34801561031457600080fd5b506103386103233660046135dc565b60009081526005602052604090205460ff1690565b60405190151581526020016102bf565b34801561035457600080fd5b5060016040516102bf9190613842565b34801561037057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102b5565b3480156103a357600080fd5b50600f5460ff16610338565b3480156103bb57600080fd5b506103386103ca3660046135dc565b60009081526004602052604090205460ff1690565b3480156103eb57600080fd5b5061023e6103fa36600461341a565b610e66565b34801561040b57600080fd5b5061041461191f565b6040516102bf91906137fe565b34801561042d57600080fd5b5061023e61043c3660046132ff565b61199c565b34801561044d57600080fd5b5061023e61045c3660046135dc565b611acb565b34801561046d57600080fd5b5061023e61047c3660046136b6565b611b49565b34801561048d57600080fd5b506102b561049c3660046135dc565b611c2c565b3480156104ad57600080fd5b5061023e6104bc36600461363a565b611c64565b3480156104cd57600080fd5b5061023e6104dc3660046132a1565b611d5c565b3480156104ed57600080fd5b506103386104fc3660046135dc565b60009081526009602052604090205460ff1690565b34801561051d57600080fd5b5061023e61052c3660046132a1565b611da8565b34801561053d57600080fd5b50600c546102b5565b34801561055257600080fd5b5060015461033890600160a01b900460ff1681565b34801561057357600080fd5b5061023e6105823660046132c5565b611df7565b34801561059357600080fd5b5061023e6105a236600461368c565b611e63565b3480156105b357600080fd5b5061023e6105c23660046135f5565b611f07565b3480156105d357600080fd5b5061023e611fe1565b3480156105e857600080fd5b5061023e6105f7366004613655565b612059565b34801561060857600080fd5b506008546102b5565b34801561061d57600080fd5b50600154610631906001600160a01b031681565b6040516001600160a01b0390911681526020016102bf565b34801561065557600080fd5b506102b5610664366004613617565b612199565b34801561067557600080fd5b5061023e6106843660046132c5565b612222565b34801561069557600080fd5b50600f54610100900460ff16610338565b600b546001600160a01b031633146106d1576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261072092900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610755576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146107a4576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146107f0576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b038281169116141561081f576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600f54610100900460ff1615801561089e5750336000908152600d602052604090205460ff16155b156108bc576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156108ef5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff16118061092b575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561096b576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516109839063ffffffff1682613ba5565b156109be576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610962565b60006109ce828460200151612199565b90506000836020015163ffffffff1667ffffffffffffffff8111156109f5576109f5613c09565b604051908082528060200260200182016040528015610a1e578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610b1c576000610a438287613a0c565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a905760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610aa757610aa7613bf3565b602002602001018181525050806020015184610ac39190613a0c565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610b1490613b46565b915050610a25565b50846020015163ffffffff1660076000828254610b399190613a97565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b7491906137c8565b6040516020818303038152906040528051906020012060001c610b979190613ba5565b905080866060015114610bed576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610962565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610c2657610c26613bf3565b602002602001018181525050866040015181600181518110610c4a57610c4a613bf3565b6020026020010181815250508181600281518110610c6a57610c6a613bf3565b6020026020010181815250508481600381518110610c8a57610c8a613bf3565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610ce29190869060040161386a565b602060405180830381600087803b158015610cfc57600080fd5b505af1158015610d10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3491906132e2565b905080610d84576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610962565b876020015163ffffffff1660086000828254610da09190613a0c565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610dcf84612296565b5050505050505050565b600b546001600160a01b03163314610e04576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610eb95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610962565b60026000908155604083015151610ecf9061232e565b90506000610ee18460e001515161232e565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610f5e576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610962565b8163ffffffff1684606001515114610fb9576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610962565b8063ffffffff168461010001515114611015576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610962565b8063ffffffff168461016001515114611071576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610962565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546110a99190613a0c565b6110b39190613a0c565b11156110d257604051633b5ccb4360e21b815260040160405180910390fd5b6110db326123ae565b156110f957604051632e70c0b160e01b815260040160405180910390fd5b6111078461012001516123ae565b1561112557604051632e70c0b160e01b815260040160405180910390fd5b611136600563ffffffff8416613a4c565b846101a00151511461115b57604051633acf48bb60e21b815260040160405180910390fd5b60006111668561244d565b905061117281856125d9565b6001600160a01b031660001b8560800151146111d1576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610962565b60006111de846002613a6b565b63ffffffff16905060006111f3856002613a6b565b6111fe906004613a24565b63ffffffff1690506000611213856002613a6b565b6112239063ffffffff1683613a0c565b905060006005611234886002613a24565b63ffffffff166112449190613a4c565b61124f836002613a0c565b6112599190613a0c565b67ffffffffffffffff81111561127157611271613c09565b60405190808252806020026020018201604052801561129a578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff166112ec576040516314e8955b60e21b8152600401610962906020808252600490820152631c9bdbdd60e21b604082015260600190565b88602001518160008151811061130457611304613bf3565b6020908102919091010152600061131c886001613a24565b63ffffffff16905060005b8863ffffffff168110156114285760008b60400151828151811061134d5761134d613bf3565b6020908102919091018101516000818152600590925260409091205490915060ff16156113a6576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846113b3846001613a0c565b815181106113c3576113c3613bf3565b6020026020010181815250508b6060015182815181106113e5576113e5613bf3565b60200260200101518484846113fa9190613a0c565b8151811061140a5761140a613bf3565b6020908102919091010152508061142081613b46565b915050611327565b5060808a01518261143a876001613a0c565b8151811061144a5761144a613bf3565b602090810291909101015260a08a015182611466876002613a0c565b8151811061147657611476613bf3565b602090810291909101015260c08a015182611492876003613a0c565b815181106114a2576114a2613bf3565b602090810291909101015260006114bf63ffffffff891686613a0c565b905060005b8863ffffffff1681101561163957600460008d60e0015183815181106114ec576114ec613bf3565b60209081029190910181015182528101919091526040016000205460ff16156115585760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610962565b600c548c6101000151828151811061157257611572613bf3565b602002602001015110156115995760405163784f02bd60e11b815260040160405180910390fd5b8b60e0015181815181106115af576115af613bf3565b60200260200101518487836115c49190613a0c565b815181106115d4576115d4613bf3565b6020026020010181815250508b610100015181815181106115f7576115f7613bf3565b602002602001015184838361160c9190613a0c565b8151811061161c5761161c613bf3565b60209081029190910101528061163181613b46565b9150506114c4565b506116458b84866125fd565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c94176479161169a91889060040161386a565b602060405180830381600087803b1580156116b457600080fd5b505af11580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec91906132e2565b90508061173c576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610962565b60005b8a63ffffffff168110156117f7576001600560008f60400151848151811061176957611769613bf3565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c6040015181815181106117ac576117ac613bf3565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806117ef81613b46565b91505061173f565b5060005b8963ffffffff168110156118c8576001600460008f60e00151848151811061182557611825613bf3565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506118b68d60e00151828151811061186b5761186b613bf3565b60200260200101518e6101000151838151811061188a5761188a613bf3565b60200260200101518f610160015184815181106118a9576118a9613bf3565b60200260200101516127b0565b806118c081613b46565b9150506117fb565b5060a08c0151156118e6576118e68c61012001518d60a0015161284f565b60c08c015115611903576119038c61014001518d60c0015161284f565b61190c8c6128f7565b5050600160005550505050505050505050565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b6005811015611996576010816005811061196557611965613bf3565b015482828151811061197957611979613bf3565b60209081029190910101528061198e81613b46565b915050611949565b50919050565b336000908152600e602052604090205460ff166119cc5760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156119f35760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a249190613a0c565b10611a4257604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611a785760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611aaf9291906127b0565b604082015115611ac757611ac7818360400151612a04565b5050565b600b546001600160a01b03163314611af6576040516327e1f1e560e01b815260040160405180910390fd5b80611b44576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610962565b600c55565b600b546001600160a01b03163314611b74576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611b98576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611bbc57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b60006005611c3b836001613a0c565b1115611c4957506000919050565b60108260058110611c5c57611c5c613bf3565b015492915050565b600b546001600160a01b03163314611c8f576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611cb3576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611ccd57506104008163ffffffff16115b15611d08576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610962565b611d13600182613aae565b811663ffffffff16600014611d3b576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611d87576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611dd3576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611e22576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610e5b565b600b546001600160a01b03163314611e8e576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611eb2576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611ed657604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314611f32576040516327e1f1e560e01b815260040160405180910390fd5b6005611f3f836001613a0c565b1115611f5e5760405163318c434560e21b815260040160405180910390fd5b8060108360058110611f7257611f72613bf3565b01541415611f9257604051624a706760e31b815260040160405180910390fd5b8060108360058110611fa657611fa6613bf3565b015560405181815282907f30df8141f8e200e52a42580a8cc71ca94e8df53b3260557c582b8636354e133c9060200160405180910390a25050565b600b546001600160a01b0316331461200c576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161072091600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314612084576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156120a8576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821615806120c257506104008263ffffffff16115b156120fd576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610962565b612108600183613aae565b821663ffffffff16600014612130576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106121bf5760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106121e25760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106122055760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061221b57600183901c92505b5090919050565b600b546001600160a01b0316331461224d576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610e5b90831515815260200190565b604051600090339083908381818185875af1925050503d80600081146122d8576040519150601f19603f3d011682016040523d82523d6000602084013e6122dd565b606091505b5050905080611ac75760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610962565b600063ffffffff8211156123aa5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610962565b5090565b600154600090600160a01b900460ff166123ca57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561240f57600080fd5b505afa158015612423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244791906132e2565b92915050565b610160810151516000906003811061247857604051633fb1945d60e11b815260040160405180910390fd5b6060816124cc576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612584565b8160011415612513578361012001518461014001518561016001516000815181106124f9576124f9613bf3565b60200260200101516040516020016124b693929190613726565b83610120015184610140015185610160015160008151811061253757612537613bf3565b602002602001015186610160015160018151811061255757612557613bf3565b6020026020010151604051602001612572949392919061376c565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006125e88585612aa7565b915091506125f581612b17565b509392505050565b600061260d846101800151612cd5565b9050806000015183838151811061262657612626613bf3565b6020026020010181815250508060200151838360016126459190613a0c565b8151811061265557612655613bf3565b60200260200101818152505060005b600581101561271c57600061268c6010836005811061268557612685613bf3565b0154612cd5565b8051909150858361269e876002613a0c565b6126a89190613a0c565b815181106126b8576126b8613bf3565b6020026020010181815250508060200151858360058760026126da9190613a0c565b6126e49190613a0c565b6126ee9190613a0c565b815181106126fe576126fe613bf3565b6020908102919091010152508061271481613b46565b915050612664565b5060005b846101a00151518110156127a957846101a00151818151811061274557612745613bf3565b602002602001015184826005600261275d9190613a4c565b612768876002613a0c565b6127729190613a0c565b61277c9190613a0c565b8151811061278c5761278c613bf3565b6020908102919091010152806127a181613b46565b915050612720565b5050505050565b60006008546007546127c29190613a0c565b604080518082018252868152602080820187815260008581526006909252928120915182559151600191820155600780549394509092909190612806908490613a0c565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161284193929190613906565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461289c576040519150601f19603f3d011682016040523d82523d6000602084013e6128a1565b606091505b50509050806128f25760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610962565b505050565b60005b8160400151518163ffffffff161015611ac75760005b60058163ffffffff1610156129f15763ffffffff8116602083901b67ffffffff00000000168117907f057a877117d95589f0bad1b7e07364f289e1d32a0e988e0778a4584f683d23099082906010906005811061296f5761296f613bf3565b0154866101a001518563ffffffff1660058863ffffffff166129919190613a4c565b61299b9190613a0c565b815181106129ab576129ab613bf3565b6020908102919091018101516040805167ffffffffffffffff90951685529184019290925282015260600160405180910390a150806129e981613b61565b915050612910565b50806129fc81613b61565b9150506128fa565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612a51576040519150601f19603f3d011682016040523d82523d6000602084013e612a56565b606091505b50509050806128f25760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610962565b600080825160411415612ade5760208301516040840151606085015160001a612ad287828585612e7d565b94509450505050612b10565b825160401415612b085760208301516040840151612afd868383612f6a565b935093505050612b10565b506000905060025b9250929050565b6000816004811115612b2b57612b2b613bdd565b1415612b345750565b6001816004811115612b4857612b48613bdd565b1415612b965760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610962565b6002816004811115612baa57612baa613bdd565b1415612bf85760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610962565b6003816004811115612c0c57612c0c613bdd565b1415612c655760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610962565b6004816004811115612c7957612c79613bdd565b1415612cd25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610962565b50565b6040805180820190915260008082526020820152600082604051602001612cfe91815260200190565b60408051808303601f190181526020808452838301909252925060009190602082018180368337019050509050612d48604051806040016040528060008152602001600081525090565b600783601f81518110612d5d57612d5d613bf3565b0160200151608060f89190911c16901c60ff16815282518390601f908110612d8757612d87613bf3565b01602001518251607f60f81b909116908390600090612da857612da8613bf3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060015b60208160ff161015612e665783612df282601f613ad3565b60ff1681518110612e0557612e05613bf3565b602001015160f81c60f81b838260ff1681518110612e2557612e25613bf3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080612e5e81613b85565b915050612dda565b50612e7082613af6565b6020820152949350505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612eb45750600090506003612f61565b8460ff16601b14158015612ecc57508460ff16601c14155b15612edd5750600090506004612f61565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f31573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f5a57600060019250925050612f61565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612fa060ff86901c601b613a0c565b9050612fae87828885612e7d565b935093505050935093915050565b8035612fc781613c1f565b919050565b600082601f830112612fdd57600080fd5b81356020612ff2612fed836139e8565b6139b7565b80838252828201915082860187848660051b890101111561301257600080fd5b6000805b8681101561305557823567ffffffffffffffff811115613034578283fd5b6130428b88838d0101613128565b8652509385019391850191600101613016565b509198975050505050505050565b600082601f83011261307457600080fd5b61307c613947565b80838560408601111561308e57600080fd5b60005b60028110156130b0578135845260209384019390910190600101613091565b509095945050505050565b600082601f8301126130cc57600080fd5b813560206130dc612fed836139e8565b80838252828201915082860187848660051b89010111156130fc57600080fd5b60005b8581101561311b578135845292840192908401906001016130ff565b5090979650505050505050565b600082601f83011261313957600080fd5b813567ffffffffffffffff81111561315357613153613c09565b613166601f8201601f19166020016139b7565b81815284602083860101111561317b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156131aa57600080fd5b6040516040810181811067ffffffffffffffff821117156131cd576131cd613c09565b604052823581526020928301359281019290925250919050565b60008183036101008112156131fb57600080fd5b6040516060810181811067ffffffffffffffff8211171561321e5761321e613c09565b60405291508161322e8585613198565b81526080603f198301121561324257600080fd5b61324a613947565b91506132598560408601613063565b82526132688560808601613063565b60208301528160208201526132808560c08601613198565b6040820152505092915050565b803563ffffffff81168114612fc757600080fd5b6000602082840312156132b357600080fd5b81356132be81613c1f565b9392505050565b6000602082840312156132d757600080fd5b81356132be81613c34565b6000602082840312156132f457600080fd5b81516132be81613c34565b6000806040838503121561331257600080fd5b823567ffffffffffffffff8082111561332a57600080fd5b9084019060a0828703121561333e57600080fd5b613346613970565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561337a57600080fd5b61338688828601613128565b608083015250935061339d91505060208401612fbc565b90509250929050565b600061016082840312156133b957600080fd5b6040516080810181811067ffffffffffffffff821117156133dc576133dc613c09565b6040526133e984846131e7565b81526133f8610100840161328d565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561342d57600080fd5b823567ffffffffffffffff8082111561344557600080fd5b908401906102a0828703121561345a57600080fd5b613462613993565b61346c87846131e7565b8152610100808401356020830152610120808501358481111561348e57600080fd5b61349a8a8288016130bb565b60408501525061014080860135858111156134b457600080fd5b6134c08b8289016130bb565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c0890135888111156134fd57600080fd5b6135098e828c016130bb565b60e0890152506101e08901358881111561352257600080fd5b61352e8e828c016130bb565b87890152506135406102008a01612fbc565b858801526135516102208a01612fbc565b8488015261024089013595508786111561356a57600080fd5b6135768d878b01612fcc565b838801526102608901358288015261028089013595508786111561359957600080fd5b6135a58d878b016130bb565b90870152509397505050506020860135925050808211156135c557600080fd5b506135d285828601613128565b9150509250929050565b6000602082840312156135ee57600080fd5b5035919050565b6000806040838503121561360857600080fd5b50508035926020909101359150565b6000806040838503121561362a57600080fd5b8235915061339d6020840161328d565b60006020828403121561364c57600080fd5b6132be8261328d565b6000806040838503121561366857600080fd5b6136718361328d565b9150602083013561368181613c1f565b809150509250929050565b6000806040838503121561369f57600080fd5b6136a88361328d565b915061339d6020840161328d565b6000806000606084860312156136cb57600080fd5b6136d48461328d565b92506136e26020850161328d565b915060408401356136f281613c1f565b809150509250925092565b8060005b6002811015613720578151845260209384019390910190600101613701565b50505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161375d816028850160208701613b1a565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083516137a3816028850160208801613b1a565b8351908301906137ba816028840160208801613b1a565b016028019695505050505050565b815160009082906020808601845b838110156137f2578151855293820193908201906001016137d6565b50929695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156138365783518352928401929184019160010161381a565b50909695505050505050565b602081016002831061386457634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161388784875180518252602090810151910152565b60208087015161389b6040870182516136fd565b8101516138ab60808701826136fd565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156138f9578351855293820193928201926001016138dd565b5092979650505050505050565b8381528260208201526060604082015260008251806060840152613931816080850160208701613b1a565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff8111828210171561396a5761396a613c09565b60405290565b60405160a0810167ffffffffffffffff8111828210171561396a5761396a613c09565b6040516101c0810167ffffffffffffffff8111828210171561396a5761396a613c09565b604051601f8201601f1916810167ffffffffffffffff811182821017156139e0576139e0613c09565b604052919050565b600067ffffffffffffffff821115613a0257613a02613c09565b5060051b60200190565b60008219821115613a1f57613a1f613bc7565b500190565b600063ffffffff808316818516808303821115613a4357613a43613bc7565b01949350505050565b6000816000190483118215151615613a6657613a66613bc7565b500290565b600063ffffffff80831681851681830481118215151615613a8e57613a8e613bc7565b02949350505050565b600082821015613aa957613aa9613bc7565b500390565b600063ffffffff83811690831681811015613acb57613acb613bc7565b039392505050565b600060ff821660ff841680821015613aed57613aed613bc7565b90039392505050565b805160208083015191908110156119965760001960209190910360031b1b16919050565b60005b83811015613b35578181015183820152602001613b1d565b838111156137205750506000910152565b6000600019821415613b5a57613b5a613bc7565b5060010190565b600063ffffffff80831681811415613b7b57613b7b613bc7565b6001019392505050565b600060ff821660ff811415613b9c57613b9c613bc7565b60010192915050565b600082613bc257634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612cd257600080fd5b8015158114612cd257600080fdfea2646970667358221220beb21b10df1381275bab46c198b383b47bfb1c36cad6a8816d91db7c00988bbc64736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
