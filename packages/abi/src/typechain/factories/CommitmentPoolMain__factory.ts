/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'ChainalysisSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'MystikoSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainalysisSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mystikoSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateChainalysisSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateMystikoSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a01b0319167340c57923924b5c5c5455c48d93317139addac8fb1790556002805460ff60a01b1916600160a01b179055600060088190556009553480156200005457600080fd5b5060405162003d7238038062003d728339810160408190526200007791620007b6565b60016000558060ff81166200009f57604051632c4f29b160e21b815260040160405180910390fd5b600c80546001600160a01b03191633179055600160ff82161b608052620000c681620000ed565b600b8190556000908152600a60205260409020805460ff1916600117905550620007e29050565b600060ff82166200011f57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200015357507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200018757507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001bb57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001ee57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200022257507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200025657507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200028a57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002be57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002f257507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200032657507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200035a57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200038e57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003c257507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003f657507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200042a57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200045e57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200049157507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004c557507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004f957507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200052d57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200056157507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200059557507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005c957507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005fd57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200063157507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200066557507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200069957507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006cd57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200070157507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200073557507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200076957507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200079d57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007c957600080fd5b815160ff81168114620007db57600080fd5b9392505050565b6080516135666200080c6000396000818161033a01528181611004015261188801526135666000f3fe6080604052600436106101e75760003560e01c80638c07681211610102578063b3b7563111610095578063e500f50411610064578063e500f504146105c3578063f2da1d41146105d8578063f8f05388146105f8578063ffa89b881461061857600080fd5b8063b3b756311461054e578063c259e2e61461056e578063dd757c341461058e578063deeff7cd146105a357600080fd5b8063a7542e37116100d1578063a7542e37146104d8578063a9b1d296146104f8578063b08892d014610518578063b1c394221461052d57600080fd5b80638c076812146104485780639b0a6fea146104685780639cc6b35414610488578063a6232a93146104a857600080fd5b80633fe3347a1161017a578063570600161161014957806357060016146103b857806378d60cd7146103e85780637cbf0ff6146104085780637fa4b09c1461042857600080fd5b80633fe3347a1461030f578063484eb6521461032b5780634973203d146103685780634eb069f7146103a057600080fd5b806314a7737d116101b657806314a7737d1461026a57806331b2d3321461028a5780633bb8d1b4146102aa5780633fae882e146102ef57600080fd5b806301dbf19f146101f357806302d498f11461020a57806303db98741461022a57806306394c9b1461024a57600080fd5b366101ee57005b600080fd5b3480156101ff57600080fd5b50610208610635565b005b34801561021657600080fd5b50610208610225366004612cd2565b6106b9565b34801561023657600080fd5b50610208610245366004612cd2565b610708565b34801561025657600080fd5b50610208610265366004612cd2565b610754565b34801561027657600080fd5b50610208610285366004612dd7565b610805565b34801561029657600080fd5b506102086102a5366004612cd2565b610d6a565b3480156102b657600080fd5b506102da6102c5366004612fda565b60009081526006602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156102fb57600080fd5b5061020861030a366004612e4b565b610df7565b34801561031b57600080fd5b5060016040516102e691906131da565b34801561033757600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102e6565b34801561037457600080fd5b50600154610388906001600160a01b031681565b6040516001600160a01b0390911681526020016102e6565b3480156103ac57600080fd5b5060105460ff166102da565b3480156103c457600080fd5b506102da6103d3366004612fda565b60009081526005602052604090205460ff1690565b3480156103f457600080fd5b50610208610403366004612d30565b61182f565b34801561041457600080fd5b50610208610423366004612fda565b61195e565b34801561043457600080fd5b50610208610443366004613092565b6119dc565b34801561045457600080fd5b50600254610388906001600160a01b031681565b34801561047457600080fd5b50610208610483366004613016565b611abf565b34801561049457600080fd5b506102086104a3366004612cd2565b611bb7565b3480156104b457600080fd5b506102da6104c3366004612fda565b6000908152600a602052604090205460ff1690565b3480156104e457600080fd5b506102086104f3366004612cd2565b611c03565b34801561050457600080fd5b50610208610513366004612cd2565b611c89565b34801561052457600080fd5b50600d5461035a565b34801561053957600080fd5b506002546102da90600160a01b900460ff1681565b34801561055a57600080fd5b50610208610569366004612cf6565b611cd8565b34801561057a57600080fd5b50610208610589366004613068565b611d44565b34801561059a57600080fd5b50610208611de8565b3480156105af57600080fd5b506102086105be366004613031565b611e60565b3480156105cf57600080fd5b5060095461035a565b3480156105e457600080fd5b5061035a6105f3366004612ff3565b611fa0565b34801561060457600080fd5b50610208610613366004612cf6565b612029565b34801561062457600080fd5b50601054610100900460ff166102da565b600c546001600160a01b03163314610660576040516327e1f1e560e01b815260040160405180910390fd5b6002805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926106af92900460ff161515815260200190565b60405180910390a1565b600c546001600160a01b031633146106e4576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600c546001600160a01b03163314610733576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b600c546001600160a01b0316331461077f576040516327e1f1e560e01b815260040160405180910390fd5b600c546001600160a01b03828116911614156107ae576040516336a1c33f60e01b815260040160405180910390fd5b600c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b601054610100900460ff1615801561082d5750336000908152600e602052604090205460ff16155b1561084b576040516321ce01f360e01b815260040160405180910390fd5b6040808201516000908152600a602052205460ff161561087e5760405163e2e1210360e01b815260040160405180910390fd5b600854816020015163ffffffff1611806108ba575060208181015163ffffffff16600090815260049091526040902054600160a01b900460ff16155b156108fa576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60095460208201516109129063ffffffff1682613493565b1561094d576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016108f1565b600061095d828460200151611fa0565b90506000836020015163ffffffff1667ffffffffffffffff811115610984576109846134f7565b6040519080825280602002602001820160405280156109ad578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610aab5760006109d282876133a4565b600081815260076020908152604091829020825180840190935280548084526001909101549183019190915291925090610a1f5760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610a3657610a366134e1565b602002602001018181525050806020015184610a5291906133a4565b60008381526007602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610aa390613478565b9150506109b4565b50846020015163ffffffff1660086000828254610ac89190613410565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b0391906131a4565b6040516020818303038152906040528051906020012060001c610b269190613493565b905080866060015114610b7c576040516314e8955b60e21b815260206004820152600860248201527f6c6561664861736800000000000000000000000000000000000000000000000060448201526064016108f1565b60408051600480825260a0820190925260009160208201608080368337019050509050600b5481600081518110610bb557610bb56134e1565b602002602001018181525050866040015181600181518110610bd957610bd96134e1565b6020026020010181815250508181600281518110610bf957610bf96134e1565b6020026020010181815250508481600381518110610c1957610c196134e1565b6020908102919091018101919091528781015163ffffffff1660009081526004918290526040808220548a51915163c941764760e01b815292936001600160a01b039091169263c941764792610c73929091879101613202565b602060405180830381600087803b158015610c8d57600080fd5b505af1158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc59190612d13565b905080610d15576040516314e8955b60e21b815260206004820152600560248201527f70726f6f6600000000000000000000000000000000000000000000000000000060448201526064016108f1565b876020015163ffffffff1660096000828254610d3191906133a4565b9091555050604080890151600b8190556000908152600a60205220805460ff19166001179055610d608461209d565b5050505050505050565b600c546001600160a01b03163314610d95576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f017e1ccd0899030de557a9d08af3a798fc32e1f31fb548ebf6dfe71e082ec529906020015b60405180910390a150565b60026000541415610e4a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108f1565b60026000908155604083015151610e6090612135565b90506000610e728460e0015151612135565b63ffffffff838116600090815260036020908152604080832093851683529290522054909150600160a01b900460ff16610eef576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e6774680000000000000000000000000000000000000000000060448201526064016108f1565b8163ffffffff1684606001515114610f4a576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e6774680000000000000000000000000000000060448201526064016108f1565b8063ffffffff168461010001515114610fa6576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e67746800000000000000000000000060448201526064016108f1565b8063ffffffff168461016001515114611002576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e677468000000000000000060448201526064016108f1565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660085460095461103a91906133a4565b61104491906133a4565b111561106357604051633b5ccb4360e21b815260040160405180910390fd5b61106c326121b5565b1561108a57604051632e70c0b160e01b815260040160405180910390fd5b6110988461012001516121b5565b156110b657604051632e70c0b160e01b815260040160405180910390fd5b60006110c1856122eb565b90506110cd8185612477565b6001600160a01b031660001b85608001511461112c576040516314e8955b60e21b815260206004820152600960248201527f7369676e6174757265000000000000000000000000000000000000000000000060448201526064016108f1565b60006111398460026133e4565b63ffffffff169050600061114e8560026133e4565b6111599060046133bc565b63ffffffff169050600061116e8560026133e4565b61117e9063ffffffff16836133a4565b67ffffffffffffffff811115611196576111966134f7565b6040519080825280602002602001820160405280156111bf578160200160208202803683370190505b506020808a01516000908152600a909152604090205490915060ff16611211576040516314e8955b60e21b81526004016108f1906020808252600490820152631c9bdbdd60e21b604082015260600190565b876020015181600081518110611229576112296134e1565b602090810291909101015260006112418760016133bc565b63ffffffff16905060005b8763ffffffff1681101561134d5760008a604001518281518110611272576112726134e1565b6020908102919091018101516000818152600690925260409091205490915060ff16156112cb576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846112d88460016133a4565b815181106112e8576112e86134e1565b6020026020010181815250508a60600151828151811061130a5761130a6134e1565b602002602001015184848461131f91906133a4565b8151811061132f5761132f6134e1565b6020908102919091010152508061134581613478565b91505061124c565b5060808901518261135f8660016133a4565b8151811061136f5761136f6134e1565b602090810291909101015260a08901518261138b8660026133a4565b8151811061139b5761139b6134e1565b602090810291909101015260c0890151826113b78660036133a4565b815181106113c7576113c76134e1565b602090810291909101015260006113e463ffffffff8816856133a4565b905060005b8763ffffffff1681101561155e57600560008c60e001518381518110611411576114116134e1565b60209081029190910181015182528101919091526040016000205460ff161561147d5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e740000000000000000000000000000000000000000000060448201526064016108f1565b600d548b61010001518281518110611497576114976134e1565b602002602001015110156114be5760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106114d4576114d46134e1565b60200260200101518486836114e991906133a4565b815181106114f9576114f96134e1565b6020026020010181815250508a6101000151818151811061151c5761151c6134e1565b602002602001015184838361153191906133a4565b81518110611541576115416134e1565b60209081029190910101528061155681613478565b9150506113e9565b5063ffffffff8089166000908152600360209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916115b4918890600401613202565b602060405180830381600087803b1580156115ce57600080fd5b505af11580156115e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116069190612d13565b905080611656576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f6600000000000000000000000000000000000060448201526064016108f1565b60005b8963ffffffff16811015611711576001600660008e604001518481518110611683576116836134e1565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106116c6576116c66134e1565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061170981613478565b915050611659565b5060005b8863ffffffff168110156117e2576001600560008e60e00151848151811061173f5761173f6134e1565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506117d08c60e001518281518110611785576117856134e1565b60200260200101518d610100015183815181106117a4576117a46134e1565b60200260200101518e610160015184815181106117c3576117c36134e1565b602002602001015161249b565b806117da81613478565b915050611715565b5060a08b015115611800576118008b61012001518c60a0015161253a565b60c08b01511561181d5761181d8b61014001518c60c0015161253a565b50506001600055505050505050505050565b336000908152600f602052604090205460ff1661185f5760405163f75e9fc760e01b815260040160405180910390fd5b600d54826060015110156118865760405163784f02bd60e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006008546009546118b791906133a4565b106118d557604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526005909152604090205460ff161561190b5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260059092526040909120805460ff19166001179055516060830151608084015161194292919061249b565b60408201511561195a5761195a8183604001516125e2565b5050565b600c546001600160a01b03163314611989576040516327e1f1e560e01b815260040160405180910390fd5b806119d7576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c75704665650000000000000000000000000000000000000060448201526064016108f1565b600d55565b600c546001600160a01b03163314611a07576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611a2b576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611a4f57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600382528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600c546001600160a01b03163314611aea576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611b0e576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611b2857506104008163ffffffff16115b15611b63576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016108f1565b611b6e600182613427565b811663ffffffff16600014611b96576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600460205260409020805460ff60a01b19169055565b600c546001600160a01b03163314611be2576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600c546001600160a01b03163314611c2e576040516327e1f1e560e01b815260040160405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f93c42ce86c3480aa42cb7e04c0270c66bcee4eaf35410ed3f00ea08bb3b32a8490602001610dec565b600c546001600160a01b03163314611cb4576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b600c546001600160a01b03163314611d03576040516327e1f1e560e01b815260040160405180910390fd5b6010805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610dec565b600c546001600160a01b03163314611d6f576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611d93576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611db757604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526003602090815260408083209390941682529190915220805460ff60a01b19169055565b600c546001600160a01b03163314611e13576040516327e1f1e560e01b815260040160405180910390fd5b6002805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916106af91600160a01b90910460ff161515815260200190565b600c546001600160a01b03163314611e8b576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611eaf576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611ec957506104008263ffffffff16115b15611f04576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064016108f1565b611f0f600183613427565b821663ffffffff16600014611f37576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526004909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff1610611fc65760088263ffffffff16901c9150600883901c92505b60108263ffffffff1610611fe95760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061200c5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061202257600183901c92505b5090919050565b600c546001600160a01b03163314612054576040516327e1f1e560e01b815260040160405180910390fd5b601080548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610dec90831515815260200190565b604051600090339083908381818185875af1925050503d80600081146120df576040519150601f19603f3d011682016040523d82523d6000602084013e6120e4565b606091505b505090508061195a5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c656400000000000060448201526064016108f1565b600063ffffffff8211156121b15760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f322062697473000000000000000000000000000000000000000000000000000060648201526084016108f1565b5090565b600254600090600160a01b900460ff166121d157506000919050565b60025460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561221657600080fd5b505afa15801561222a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061224e9190612d13565b806122d1575060015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561229957600080fd5b505afa1580156122ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d19190612d13565b156122de57506001919050565b506000919050565b919050565b610160810151516000906003811061231657604051633fb1945d60e11b815260040160405180910390fd5b60608161236a576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612422565b81600114156123b157836101200151846101400151856101600151600081518110612397576123976134e1565b602002602001015160405160200161235493929190613102565b8361012001518461014001518561016001516000815181106123d5576123d56134e1565b60200260200101518661016001516001815181106123f5576123f56134e1565b60200260200101516040516020016124109493929190613148565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006124868585612685565b91509150612493816126f5565b509392505050565b60006009546008546124ad91906133a4565b6040805180820182528681526020808201878152600085815260079092529281209151825591516001918201556008805493945090929091906124f19084906133a4565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161252c9392919061329e565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612587576040519150601f19603f3d011682016040523d82523d6000602084013e61258c565b606091505b50509050806125dd5760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c6564000000000000000000000000000000000060448201526064016108f1565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461262f576040519150601f19603f3d011682016040523d82523d6000602084013e612634565b606091505b50509050806125dd5760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c65640000000060448201526064016108f1565b6000808251604114156126bc5760208301516040840151606085015160001a6126b0878285856128b3565b945094505050506126ee565b8251604014156126e657602083015160408401516126db8683836129a0565b9350935050506126ee565b506000905060025b9250929050565b6000816004811115612709576127096134cb565b14156127125750565b6001816004811115612726576127266134cb565b14156127745760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016108f1565b6002816004811115612788576127886134cb565b14156127d65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016108f1565b60038160048111156127ea576127ea6134cb565b14156128435760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016108f1565b6004816004811115612857576128576134cb565b14156128b05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016108f1565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156128ea5750600090506003612997565b8460ff16601b1415801561290257508460ff16601c14155b156129135750600090506004612997565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612967573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661299057600060019250925050612997565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816129d660ff86901c601b6133a4565b90506129e4878288856128b3565b935093505050935093915050565b80356122e68161350d565b600082601f830112612a0e57600080fd5b81356020612a23612a1e83613380565b61334f565b80838252828201915082860187848660051b8901011115612a4357600080fd5b6000805b86811015612a8657823567ffffffffffffffff811115612a65578283fd5b612a738b88838d0101612b59565b8652509385019391850191600101612a47565b509198975050505050505050565b600082601f830112612aa557600080fd5b612aad6132df565b808385604086011115612abf57600080fd5b60005b6002811015612ae1578135845260209384019390910190600101612ac2565b509095945050505050565b600082601f830112612afd57600080fd5b81356020612b0d612a1e83613380565b80838252828201915082860187848660051b8901011115612b2d57600080fd5b60005b85811015612b4c57813584529284019290840190600101612b30565b5090979650505050505050565b600082601f830112612b6a57600080fd5b813567ffffffffffffffff811115612b8457612b846134f7565b612b97601f8201601f191660200161334f565b818152846020838601011115612bac57600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612bdb57600080fd5b6040516040810181811067ffffffffffffffff82111715612bfe57612bfe6134f7565b604052823581526020928301359281019290925250919050565b6000818303610100811215612c2c57600080fd5b6040516060810181811067ffffffffffffffff82111715612c4f57612c4f6134f7565b604052915081612c5f8585612bc9565b81526080603f1983011215612c7357600080fd5b612c7b6132df565b9150612c8a8560408601612a94565b8252612c998560808601612a94565b6020830152816020820152612cb18560c08601612bc9565b6040820152505092915050565b803563ffffffff811681146122e657600080fd5b600060208284031215612ce457600080fd5b8135612cef8161350d565b9392505050565b600060208284031215612d0857600080fd5b8135612cef81613522565b600060208284031215612d2557600080fd5b8151612cef81613522565b60008060408385031215612d4357600080fd5b823567ffffffffffffffff80821115612d5b57600080fd5b9084019060a08287031215612d6f57600080fd5b612d77613308565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612dab57600080fd5b612db788828601612b59565b6080830152509350612dce915050602084016129f2565b90509250929050565b60006101608284031215612dea57600080fd5b6040516080810181811067ffffffffffffffff82111715612e0d57612e0d6134f7565b604052612e1a8484612c18565b8152612e296101008401612cbe565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612e5e57600080fd5b823567ffffffffffffffff80821115612e7657600080fd5b908401906102608287031215612e8b57600080fd5b612e9361332b565b612e9d8784612c18565b81526101008084013560208301526101208085013584811115612ebf57600080fd5b612ecb8a828801612aec565b6040850152506101408086013585811115612ee557600080fd5b612ef18b828901612aec565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612f2c57600080fd5b612f388c828a01612aec565b60e0870152506101e087013586811115612f5157600080fd5b612f5d8c828a01612aec565b8587015250612f6f61020088016129f2565b83860152612f8061022088016129f2565b82860152610240870135935085841115612f9957600080fd5b612fa58b8589016129fd565b908501525091955050506020850135915080821115612fc357600080fd5b50612fd085828601612b59565b9150509250929050565b600060208284031215612fec57600080fd5b5035919050565b6000806040838503121561300657600080fd5b82359150612dce60208401612cbe565b60006020828403121561302857600080fd5b612cef82612cbe565b6000806040838503121561304457600080fd5b61304d83612cbe565b9150602083013561305d8161350d565b809150509250929050565b6000806040838503121561307b57600080fd5b61308483612cbe565b9150612dce60208401612cbe565b6000806000606084860312156130a757600080fd5b6130b084612cbe565b92506130be60208501612cbe565b915060408401356130ce8161350d565b809150509250925092565b8060005b60028110156130fc5781518452602093840193909101906001016130dd565b50505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161313981602885016020870161344c565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b16601484015250835161317f81602885016020880161344c565b83519083019061319681602884016020880161344c565b016028019695505050505050565b815160009082906020808601845b838110156131ce578151855293820193908201906001016131b2565b50929695505050505050565b60208101600283106131fc57634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161321f84875180518252602090810151910152565b6020808701516132336040870182516130d9565b81015161324360808701826130d9565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b8181101561329157835185529382019392820192600101613275565b5092979650505050505050565b83815282602082015260606040820152600082518060608401526132c981608085016020870161344c565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff81118282101715613302576133026134f7565b60405290565b60405160a0810167ffffffffffffffff81118282101715613302576133026134f7565b604051610180810167ffffffffffffffff81118282101715613302576133026134f7565b604051601f8201601f1916810167ffffffffffffffff81118282101715613378576133786134f7565b604052919050565b600067ffffffffffffffff82111561339a5761339a6134f7565b5060051b60200190565b600082198211156133b7576133b76134b5565b500190565b600063ffffffff8083168185168083038211156133db576133db6134b5565b01949350505050565b600063ffffffff80831681851681830481118215151615613407576134076134b5565b02949350505050565b600082821015613422576134226134b5565b500390565b600063ffffffff83811690831681811015613444576134446134b5565b039392505050565b60005b8381101561346757818101518382015260200161344f565b838111156130fc5750506000910152565b600060001982141561348c5761348c6134b5565b5060010190565b6000826134b057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146128b057600080fd5b80151581146128b057600080fdfea2646970667358221220c57531c2d2e2b32503f46c8f3d20da7b7dbca16480a0c1398082b97a0d4892d564736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
