/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162003bc938038062003bc98339810160408190526200006591620007a4565b60016000558060ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b481620000db565b600a8190556000908152600960205260409020805460ff1916600117905550620007d09050565b600060ff82166200010d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200021057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ac57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002e057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003b057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005eb57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006bb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ef57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078b57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b757600080fd5b815160ff81168114620007c957600080fd5b9392505050565b6080516133cf620007fa6000396000818161032401528181610fac015261180901526133cf6000f3fe6080604052600436106101d15760003560e01c80639b0a6fea116100f7578063c259e2e611610095578063ec571c6a11610064578063ec571c6a1461054a578063f2da1d4114610582578063f8f05388146105a2578063ffa89b88146105c257600080fd5b8063c259e2e6146104e0578063dd757c3414610500578063deeff7cd14610515578063e500f5041461053557600080fd5b8063a9b1d296116100d1578063a9b1d2961461046a578063b08892d01461048a578063b1c394221461049f578063b3b75631146104c057600080fd5b80639b0a6fea146103fa5780639cc6b3541461041a578063a6232a931461043a57600080fd5b80633fae882e1161016f578063570600161161013e578063570600161461036a57806378d60cd71461039a5780637cbf0ff6146103ba5780637fa4b09c146103da57600080fd5b80633fae882e146102d95780633fe3347a146102f9578063484eb652146103155780634eb069f71461035257600080fd5b806306394c9b116101ab57806306394c9b1461023457806314a7737d1461025457806330f49cac146102745780633bb8d1b41461029457600080fd5b806301dbf19f146101dd57806302d498f1146101f457806303db98741461021457600080fd5b366101d857005b600080fd5b3480156101e957600080fd5b506101f26105df565b005b34801561020057600080fd5b506101f261020f366004612b3b565b610663565b34801561022057600080fd5b506101f261022f366004612b3b565b6106b2565b34801561024057600080fd5b506101f261024f366004612b3b565b6106fe565b34801561026057600080fd5b506101f261026f366004612c40565b6107af565b34801561028057600080fd5b506101f261028f366004612b3b565b610d12565b3480156102a057600080fd5b506102c46102af366004612e43565b60009081526005602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156102e557600080fd5b506101f26102f4366004612cb4565b610d9f565b34801561030557600080fd5b5060016040516102d09190613043565b34801561032157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102d0565b34801561035e57600080fd5b50600f5460ff166102c4565b34801561037657600080fd5b506102c4610385366004612e43565b60009081526004602052604090205460ff1690565b3480156103a657600080fd5b506101f26103b5366004612b99565b6117b0565b3480156103c657600080fd5b506101f26103d5366004612e43565b6118df565b3480156103e657600080fd5b506101f26103f5366004612efb565b61195d565b34801561040657600080fd5b506101f2610415366004612e7f565b611a40565b34801561042657600080fd5b506101f2610435366004612b3b565b611b38565b34801561044657600080fd5b506102c4610455366004612e43565b60009081526009602052604090205460ff1690565b34801561047657600080fd5b506101f2610485366004612b3b565b611b84565b34801561049657600080fd5b50600c54610344565b3480156104ab57600080fd5b506001546102c490600160a01b900460ff1681565b3480156104cc57600080fd5b506101f26104db366004612b5f565b611bd3565b3480156104ec57600080fd5b506101f26104fb366004612ed1565b611c3f565b34801561050c57600080fd5b506101f2611ce3565b34801561052157600080fd5b506101f2610530366004612e9a565b611d5b565b34801561054157600080fd5b50600854610344565b34801561055657600080fd5b5060015461056a906001600160a01b031681565b6040516001600160a01b0390911681526020016102d0565b34801561058e57600080fd5b5061034461059d366004612e5c565b611e9b565b3480156105ae57600080fd5b506101f26105bd366004612b5f565b611f24565b3480156105ce57600080fd5b50600f54610100900460ff166102c4565b600b546001600160a01b0316331461060a576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261065992900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b0316331461068e576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146106dd576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b03163314610729576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b0382811691161415610758576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600f54610100900460ff161580156107d75750336000908152600d602052604090205460ff16155b156107f5576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156108285760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff161180610864575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b156108a4576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516108bc9063ffffffff16826132fc565b156108f7576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161089b565b6000610907828460200151611e9b565b90506000836020015163ffffffff1667ffffffffffffffff81111561092e5761092e613360565b604051908082528060200260200182016040528015610957578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610a5557600061097c828761320d565b6000818152600660209081526040918290208251808401909352805480845260019091015491830191909152919250906109c95760405163d3482f7b60e01b815260040160405180910390fd5b80600001518584815181106109e0576109e061334a565b6020026020010181815250508060200151846109fc919061320d565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610a4d906132e1565b91505061095e565b50846020015163ffffffff1660076000828254610a729190613279565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610aad919061300d565b6040516020818303038152906040528051906020012060001c610ad091906132fc565b905080866060015114610b26576040516314e8955b60e21b815260206004820152600860248201527f6c65616648617368000000000000000000000000000000000000000000000000604482015260640161089b565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610b5f57610b5f61334a565b602002602001018181525050866040015181600181518110610b8357610b8361334a565b6020026020010181815250508181600281518110610ba357610ba361334a565b6020026020010181815250508481600381518110610bc357610bc361334a565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c1b9190869060040161306b565b602060405180830381600087803b158015610c3557600080fd5b505af1158015610c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6d9190612b7c565b905080610cbd576040516314e8955b60e21b815260206004820152600560248201527f70726f6f66000000000000000000000000000000000000000000000000000000604482015260640161089b565b876020015163ffffffff1660086000828254610cd9919061320d565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d0884611f98565b5050505050505050565b600b546001600160a01b03163314610d3d576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610df25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161089b565b60026000908155604083015151610e0890612030565b90506000610e1a8460e0015151612030565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610e97576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e67746800000000000000000000000000000000000000000000604482015260640161089b565b8163ffffffff1684606001515114610ef2576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e67746800000000000000000000000000000000604482015260640161089b565b8063ffffffff168461010001515114610f4e576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e677468000000000000000000000000604482015260640161089b565b8063ffffffff168461016001515114610faa576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e6774680000000000000000604482015260640161089b565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff16600754600854610fe2919061320d565b610fec919061320d565b111561100b57604051633b5ccb4360e21b815260040160405180910390fd5b6110198461012001516120b0565b1561103757604051632e70c0b160e01b815260040160405180910390fd5b60006110428561214f565b905061104e81856122db565b6001600160a01b031660001b8560800151146110ad576040516314e8955b60e21b815260206004820152600960248201527f7369676e61747572650000000000000000000000000000000000000000000000604482015260640161089b565b60006110ba84600261324d565b63ffffffff16905060006110cf85600261324d565b6110da906004613225565b63ffffffff16905060006110ef85600261324d565b6110ff9063ffffffff168361320d565b67ffffffffffffffff81111561111757611117613360565b604051908082528060200260200182016040528015611140578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff16611192576040516314e8955b60e21b815260040161089b906020808252600490820152631c9bdbdd60e21b604082015260600190565b8760200151816000815181106111aa576111aa61334a565b602090810291909101015260006111c2876001613225565b63ffffffff16905060005b8763ffffffff168110156112ce5760008a6040015182815181106111f3576111f361334a565b6020908102919091018101516000818152600590925260409091205490915060ff161561124c576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461125984600161320d565b815181106112695761126961334a565b6020026020010181815250508a60600151828151811061128b5761128b61334a565b60200260200101518484846112a0919061320d565b815181106112b0576112b061334a565b602090810291909101015250806112c6816132e1565b9150506111cd565b506080890151826112e086600161320d565b815181106112f0576112f061334a565b602090810291909101015260a08901518261130c86600261320d565b8151811061131c5761131c61334a565b602090810291909101015260c08901518261133886600361320d565b815181106113485761134861334a565b6020908102919091010152600061136563ffffffff88168561320d565b905060005b8763ffffffff168110156114df57600460008c60e0015183815181106113925761139261334a565b60209081029190910181015182528101919091526040016000205460ff16156113fe5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e7400000000000000000000000000000000000000000000604482015260640161089b565b600c548b610100015182815181106114185761141861334a565b6020026020010151101561143f5760405163784f02bd60e11b815260040160405180910390fd5b8a60e0015181815181106114555761145561334a565b602002602001015184868361146a919061320d565b8151811061147a5761147a61334a565b6020026020010181815250508a6101000151818151811061149d5761149d61334a565b60200260200101518483836114b2919061320d565b815181106114c2576114c261334a565b6020908102919091010152806114d7816132e1565b91505061136a565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c94176479161153591889060040161306b565b602060405180830381600087803b15801561154f57600080fd5b505af1158015611563573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115879190612b7c565b9050806115d7576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f66000000000000000000000000000000000000604482015260640161089b565b60005b8963ffffffff16811015611692576001600560008e6040015184815181106116045761160461334a565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106116475761164761334a565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061168a816132e1565b9150506115da565b5060005b8863ffffffff16811015611763576001600460008e60e0015184815181106116c0576116c061334a565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506117518c60e0015182815181106117065761170661334a565b60200260200101518d610100015183815181106117255761172561334a565b60200260200101518e610160015184815181106117445761174461334a565b60200260200101516122ff565b8061175b816132e1565b915050611696565b5060a08b015115611781576117818b61012001518c60a0015161239e565b60c08b01511561179e5761179e8b61014001518c60c0015161239e565b50506001600055505050505050505050565b336000908152600e602052604090205460ff166117e05760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156118075760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611838919061320d565b1061185657604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff161561188c5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff1916600117905551606083015160808401516118c39291906122ff565b6040820151156118db576118db818360400151612446565b5050565b600b546001600160a01b0316331461190a576040516327e1f1e560e01b815260040160405180910390fd5b80611958576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c757046656500000000000000000000000000000000000000604482015260640161089b565b600c55565b600b546001600160a01b03163314611988576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156119ac576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff83166119d057604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611a6b576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611a8f576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611aa957506104008163ffffffff16115b15611ae4576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161089b565b611aef600182613290565b811663ffffffff16600014611b17576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611b63576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611baf576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611bfe576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610d94565b600b546001600160a01b03163314611c6a576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c8e576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611cb257604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314611d0e576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161065991600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314611d86576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611daa576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611dc457506104008263ffffffff16115b15611dff576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161089b565b611e0a600183613290565b821663ffffffff16600014611e32576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff1610611ec15760088263ffffffff16901c9150600883901c92505b60108263ffffffff1610611ee45760048263ffffffff16901c9150600483901c92505b60048263ffffffff1610611f075760028263ffffffff16901c9150600283901c92505b60028263ffffffff1610611f1d57600183901c92505b5090919050565b600b546001600160a01b03163314611f4f576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610d9490831515815260200190565b604051600090339083908381818185875af1925050503d8060008114611fda576040519150601f19603f3d011682016040523d82523d6000602084013e611fdf565b606091505b50509050806118db5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c6564000000000000604482015260640161089b565b600063ffffffff8211156120ac5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161089b565b5090565b600154600090600160a01b900460ff166120cc57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561211157600080fd5b505afa158015612125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121499190612b7c565b92915050565b610160810151516000906003811061217a57604051633fb1945d60e11b815260040160405180910390fd5b6060816121ce576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612286565b8160011415612215578361012001518461014001518561016001516000815181106121fb576121fb61334a565b60200260200101516040516020016121b893929190612f6b565b8361012001518461014001518561016001516000815181106122395761223961334a565b60200260200101518661016001516001815181106122595761225961334a565b60200260200101516040516020016122749493929190612fb1565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006122ea85856124e9565b915091506122f781612559565b509392505050565b6000600854600754612311919061320d565b60408051808201825286815260208082018781526000858152600690925292812091518255915160019182015560078054939450909290919061235590849061320d565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161239093929190613107565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146123eb576040519150601f19603f3d011682016040523d82523d6000602084013e6123f0565b606091505b50509050806124415760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c65640000000000000000000000000000000000604482015260640161089b565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612493576040519150601f19603f3d011682016040523d82523d6000602084013e612498565b606091505b50509050806124415760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c656400000000604482015260640161089b565b6000808251604114156125205760208301516040840151606085015160001a61251487828585612717565b94509450505050612552565b82516040141561254a576020830151604084015161253f868383612804565b935093505050612552565b506000905060025b9250929050565b600081600481111561256d5761256d613334565b14156125765750565b600181600481111561258a5761258a613334565b14156125d85760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161089b565b60028160048111156125ec576125ec613334565b141561263a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161089b565b600381600481111561264e5761264e613334565b14156126a75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161089b565b60048160048111156126bb576126bb613334565b14156127145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161089b565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561274e57506000905060036127fb565b8460ff16601b1415801561276657508460ff16601c14155b1561277757506000905060046127fb565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156127cb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166127f4576000600192509250506127fb565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83168161283a60ff86901c601b61320d565b905061284887828885612717565b935093505050935093915050565b803561286181613376565b919050565b600082601f83011261287757600080fd5b8135602061288c612887836131e9565b6131b8565b80838252828201915082860187848660051b89010111156128ac57600080fd5b6000805b868110156128ef57823567ffffffffffffffff8111156128ce578283fd5b6128dc8b88838d01016129c2565b86525093850193918501916001016128b0565b509198975050505050505050565b600082601f83011261290e57600080fd5b612916613148565b80838560408601111561292857600080fd5b60005b600281101561294a57813584526020938401939091019060010161292b565b509095945050505050565b600082601f83011261296657600080fd5b81356020612976612887836131e9565b80838252828201915082860187848660051b890101111561299657600080fd5b60005b858110156129b557813584529284019290840190600101612999565b5090979650505050505050565b600082601f8301126129d357600080fd5b813567ffffffffffffffff8111156129ed576129ed613360565b612a00601f8201601f19166020016131b8565b818152846020838601011115612a1557600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612a4457600080fd5b6040516040810181811067ffffffffffffffff82111715612a6757612a67613360565b604052823581526020928301359281019290925250919050565b6000818303610100811215612a9557600080fd5b6040516060810181811067ffffffffffffffff82111715612ab857612ab8613360565b604052915081612ac88585612a32565b81526080603f1983011215612adc57600080fd5b612ae4613148565b9150612af385604086016128fd565b8252612b0285608086016128fd565b6020830152816020820152612b1a8560c08601612a32565b6040820152505092915050565b803563ffffffff8116811461286157600080fd5b600060208284031215612b4d57600080fd5b8135612b5881613376565b9392505050565b600060208284031215612b7157600080fd5b8135612b588161338b565b600060208284031215612b8e57600080fd5b8151612b588161338b565b60008060408385031215612bac57600080fd5b823567ffffffffffffffff80821115612bc457600080fd5b9084019060a08287031215612bd857600080fd5b612be0613171565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612c1457600080fd5b612c20888286016129c2565b6080830152509350612c3791505060208401612856565b90509250929050565b60006101608284031215612c5357600080fd5b6040516080810181811067ffffffffffffffff82111715612c7657612c76613360565b604052612c838484612a81565b8152612c926101008401612b27565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612cc757600080fd5b823567ffffffffffffffff80821115612cdf57600080fd5b908401906102608287031215612cf457600080fd5b612cfc613194565b612d068784612a81565b81526101008084013560208301526101208085013584811115612d2857600080fd5b612d348a828801612955565b6040850152506101408086013585811115612d4e57600080fd5b612d5a8b828901612955565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612d9557600080fd5b612da18c828a01612955565b60e0870152506101e087013586811115612dba57600080fd5b612dc68c828a01612955565b8587015250612dd86102008801612856565b83860152612de96102208801612856565b82860152610240870135935085841115612e0257600080fd5b612e0e8b858901612866565b908501525091955050506020850135915080821115612e2c57600080fd5b50612e39858286016129c2565b9150509250929050565b600060208284031215612e5557600080fd5b5035919050565b60008060408385031215612e6f57600080fd5b82359150612c3760208401612b27565b600060208284031215612e9157600080fd5b612b5882612b27565b60008060408385031215612ead57600080fd5b612eb683612b27565b91506020830135612ec681613376565b809150509250929050565b60008060408385031215612ee457600080fd5b612eed83612b27565b9150612c3760208401612b27565b600080600060608486031215612f1057600080fd5b612f1984612b27565b9250612f2760208501612b27565b91506040840135612f3781613376565b809150509250925092565b8060005b6002811015612f65578151845260209384019390910190600101612f46565b50505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b166014840152508251612fa28160288501602087016132b5565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351612fe88160288501602088016132b5565b835190830190612fff8160288401602088016132b5565b016028019695505050505050565b815160009082906020808601845b838110156130375781518552938201939082019060010161301b565b50929695505050505050565b602081016002831061306557634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161308884875180518252602090810151910152565b60208087015161309c604087018251612f42565b8101516130ac6080870182612f42565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156130fa578351855293820193928201926001016130de565b5092979650505050505050565b83815282602082015260606040820152600082518060608401526131328160808501602087016132b5565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff8111828210171561316b5761316b613360565b60405290565b60405160a0810167ffffffffffffffff8111828210171561316b5761316b613360565b604051610180810167ffffffffffffffff8111828210171561316b5761316b613360565b604051601f8201601f1916810167ffffffffffffffff811182821017156131e1576131e1613360565b604052919050565b600067ffffffffffffffff82111561320357613203613360565b5060051b60200190565b600082198211156132205761322061331e565b500190565b600063ffffffff8083168185168083038211156132445761324461331e565b01949350505050565b600063ffffffff808316818516818304811182151516156132705761327061331e565b02949350505050565b60008282101561328b5761328b61331e565b500390565b600063ffffffff838116908316818110156132ad576132ad61331e565b039392505050565b60005b838110156132d05781810151838201526020016132b8565b83811115612f655750506000910152565b60006000198214156132f5576132f561331e565b5060010190565b60008261331957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461271457600080fd5b801515811461271457600080fdfea26469706673582212202e29268a91ca0d8f5b90d2c35cf85299f79eedcaf9faaae7db1b58468bcfa10264736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
