/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004157600080fd5b5060405162003fd538038062003fd5833981016040819052620000649162000813565b60016000558060ff8116620000cc5760405162461bcd60e51b8152602060048201526024808201527f5f747265654865696768742073686f756c6420626520677265617465722074686044820152630616e20360e41b60648201526084015b60405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000f3816200011a565b600a8190556000908152600960205260409020805460ff19166001179055506200083f9050565b600060ff82166200014c57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200018057507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff1660021415620001b457507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001e857507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200021b57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200024f57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200028357507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002b757507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002eb57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200031f57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200035357507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200038757507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003bb57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003ef57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200042357507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200045757507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200048b57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004be57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004f257507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200052657507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200055a57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200058e57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005c257507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005f657507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200062a57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200065e57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200069257507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006c657507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006fa57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200072e57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200076257507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200079657507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007ca57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b60405162461bcd60e51b815260206004820152601960248201527f7472656520686569676874206f7574206f6620626f756e6473000000000000006044820152606401620000c3565b6000602082840312156200082657600080fd5b815160ff811681146200083857600080fd5b9392505050565b60805161376c6200086960003960008181610324015281816111150152611aae015261376c6000f3fe6080604052600436106101c65760003560e01c80637fa4b09c116100f7578063b3b7563111610095578063ec571c6a11610064578063ec571c6a14610535578063f2da1d411461056d578063f8f053881461058d578063ffa89b88146105ad57600080fd5b8063b3b75631146104c0578063c259e2e6146104e0578063deeff7cd14610500578063e500f5041461052057600080fd5b80639cc6b354116100d15780639cc6b3541461043b578063a6232a931461045b578063a9b1d2961461048b578063b08892d0146104ab57600080fd5b80637fa4b09c146103da578063830d9ebe146103fa5780639b0a6fea1461041b57600080fd5b80633fae882e116101645780634eb069f71161013e5780634eb069f714610352578063570600161461036a57806378d60cd71461039a5780637cbf0ff6146103ba57600080fd5b80633fae882e146102d95780633fe3347a146102f9578063484eb6521461031557600080fd5b806306b2ad59116101a057806306b2ad591461023457806314a7737d1461025457806334c33e83146102745780633bb8d1b41461029457600080fd5b806302d498f1146101d257806303db9874146101f457806306394c9b1461021457600080fd5b366101cd57005b600080fd5b3480156101de57600080fd5b506101f26101ed366004612fa8565b6105ca565b005b34801561020057600080fd5b506101f261020f366004612fa8565b61063e565b34801561022057600080fd5b506101f261022f366004612fa8565b6106aa565b34801561024057600080fd5b506101f261024f366004612fcc565b610724565b34801561026057600080fd5b506101f261026f3660046130ad565b6107c7565b34801561028057600080fd5b506101f261028f366004612fa8565b610e80565b3480156102a057600080fd5b506102c46102af3660046132b0565b60009081526005602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156102e557600080fd5b506101f26102f4366004613121565b610f26565b34801561030557600080fd5b5060016040516102d0919061340e565b34801561032157600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040519081526020016102d0565b34801561035e57600080fd5b50600f5460ff166102c4565b34801561037657600080fd5b506102c46103853660046132b0565b60009081526004602052604090205460ff1690565b3480156103a657600080fd5b506101f26103b5366004613006565b6119f7565b3480156103c657600080fd5b506101f26103d53660046132b0565b611bdb565b3480156103e657600080fd5b506101f26103f5366004613368565b611c7b565b34801561040657600080fd5b506001546102c490600160a01b900460ff1681565b34801561042757600080fd5b506101f26104363660046132ec565b611deb565b34801561044757600080fd5b506101f2610456366004612fa8565b611f01565b34801561046757600080fd5b506102c46104763660046132b0565b60009081526009602052604090205460ff1690565b34801561049757600080fd5b506101f26104a6366004612fa8565b611f6d565b3480156104b757600080fd5b50600c54610344565b3480156104cc57600080fd5b506101f26104db366004612fcc565b611fdc565b3480156104ec57600080fd5b506101f26104fb36600461333e565b612068565b34801561050c57600080fd5b506101f261051b366004613307565b612199565b34801561052c57600080fd5b50600854610344565b34801561054157600080fd5b50600154610555906001600160a01b031681565b6040516001600160a01b0390911681526020016102d0565b34801561057957600080fd5b506103446105883660046132c9565b612319565b34801561059957600080fd5b506101f26105a8366004612fcc565b612354565b3480156105b957600080fd5b50600f54610100900460ff166102c4565b600b546001600160a01b0316331461061a5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146106895760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146106f55760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b546001600160a01b0316331461076f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b60018054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a443906107bc90831515815260200190565b60405180910390a150565b600f54610100900460ff16806107ec5750336000908152600d602052604090205460ff165b6108385760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c697374656420726f6c6c65722e00000000000000006044820152606401610611565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018160400151106108d15760405162461bcd60e51b815260206004820152602660248201527f6e6577526f6f742073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a4500000000000000000000000000000000000000000000000000006064820152608401610611565b60408082015160009081526009602052205460ff16156109335760405162461bcd60e51b815260206004820152601560248201527f6e6577526f6f74206973206475706c69636174656400000000000000000000006044820152606401610611565b6000816020015163ffffffff161180156109595750600754816020015163ffffffff1611155b8015610986575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff165b6109c75760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610611565b60085460208201516109df9063ffffffff1682613699565b15610a385760405162461bcd60e51b815260206004820152602360248201527f696e76616c696420726f6c6c757053697a652061742063757272656e7420737460448201526261746560e81b6064820152608401610611565b6000610a48828460200151612319565b90506000836020015163ffffffff1667ffffffffffffffff811115610a6f57610a6f6136fd565b604051908082528060200260200182016040528015610a98578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610bc5576000610abd82876135fb565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610b395760405162461bcd60e51b815260206004820152601260248201527f696e646578206f7574206f6620626f756e6400000000000000000000000000006044820152606401610611565b8060000151858481518110610b5057610b506136e7565b602002602001018181525050806020015184610b6c91906135fb565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610bbd9061367e565b915050610a9f565b50846020015163ffffffff1660076000828254610be29190613667565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610c1d91906133d8565b6040516020818303038152906040528051906020012060001c610c409190613699565b905080866060015114610c955760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206c65616648617368000000000000000000000000000000006044820152606401610611565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610cce57610cce6136e7565b602002602001018181525050866040015181600181518110610cf257610cf26136e7565b6020026020010181815250508181600281518110610d1257610d126136e7565b6020026020010181815250508481600381518110610d3257610d326136e7565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610d8a91908690600401613436565b602060405180830381600087803b158015610da457600080fd5b505af1158015610db8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddc9190612fe9565b905080610e2b5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610611565b876020015163ffffffff1660086000828254610e4791906135fb565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610e76846123e8565b5050505050505050565b600b546001600160a01b03163314610ecb5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016107bc565b60026000541415610f795760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610611565b600260008181556040848101515160e08601515163ffffffff808316855260209586528385209082168552909452912054909190600160a01b900460ff166110035760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420692f6f206c656e67746800000000000000000000000000006044820152606401610611565b8163ffffffff168460600151511461105d5760405162461bcd60e51b815260206004820152601860248201527f696e76616c696420736967486173686573206c656e67746800000000000000006044820152606401610611565b8063ffffffff1684610100015151146110b85760405162461bcd60e51b815260206004820152601c60248201527f696e76616c6964206f7574526f6c6c757046656573206c656e677468000000006044820152606401610611565b8063ffffffff1684610160015151146111135760405162461bcd60e51b815260206004820181905260248201527f696e76616c6964206f7574456e637279707465644e6f746573206c656e6774686044820152606401610611565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660075460085461114b91906135fb565b61115591906135fb565b11156111925760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610611565b6111a0846101200151612480565b156111ed5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e6564206164647265737300000000000000000000000000006044820152606401610611565b60006111f885612520565b9050600061120682866126fa565b60808701519091506001600160a01b038216146112655760405162461bcd60e51b815260206004820152601160248201527f696e76616c6964207369676e61747572650000000000000000000000000000006044820152606401610611565b600061127284600261363b565b61127d86600261363b565b611288906004613613565b6112929190613613565b63ffffffff1667ffffffffffffffff8111156112b0576112b06136fd565b6040519080825280602002602001820160405280156112d9578160200160208202803683370190505b5060208089015160009081526009909152604090205490915060ff166113415760405162461bcd60e51b815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152606401610611565b866020015181600081518110611359576113596136e7565b60209081029190910101526000611371866001613613565b63ffffffff16905060005b8663ffffffff16811015611493576000896040015182815181106113a2576113a26136e7565b6020908102919091018101516000818152600590925260409091205490915060ff16156114115760405162461bcd60e51b815260206004820152601760248201527f746865206e6f746520686173206265656e207370656e740000000000000000006044820152606401610611565b808461141e8460016135fb565b8151811061142e5761142e6136e7565b60200260200101818152505089606001518281518110611450576114506136e7565b602002602001015184848461146591906135fb565b81518110611475576114756136e7565b6020908102919091010152508061148b8161367e565b91505061137c565b506080880151826114a588600261363b565b6114b0906001613613565b63ffffffff16815181106114c6576114c66136e7565b602090810291909101015260a0880151826114e288600261363b565b6114ed906002613613565b63ffffffff1681518110611503576115036136e7565b602090810291909101015260c08801518261151f88600261363b565b61152a906003613613565b63ffffffff1681518110611540576115406136e7565b6020908102919091010152600061155887600261363b565b611563906004613613565b63ffffffff16905060008663ffffffff168261157f91906135fb565b905060005b8763ffffffff1681101561172757600460008c60e0015183815181106115ac576115ac6136e7565b60209081029190910181015182528101919091526040016000205460ff16156116175760405162461bcd60e51b815260206004820152601460248201527f6475706c696361746520636f6d6d69746d656e740000000000000000000000006044820152606401610611565b600c548b61010001518281518110611631576116316136e7565b602002602001015110156116875760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206c6f7700000000000000000000000000006044820152606401610611565b8a60e00151818151811061169d5761169d6136e7565b60200260200101518584836116b291906135fb565b815181106116c2576116c26136e7565b6020026020010181815250508a610100015181815181106116e5576116e56136e7565b60200260200101518583836116fa91906135fb565b8151811061170a5761170a6136e7565b60209081029190910101528061171f8161367e565b915050611584565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c94176479161177d918990600401613436565b602060405180830381600087803b15801561179757600080fd5b505af11580156117ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cf9190612fe9565b90508061181e5760405162461bcd60e51b815260206004820152601660248201527f696e76616c6964207472616e736163742070726f6f66000000000000000000006044820152606401610611565b60005b8963ffffffff168110156118d9576001600560008e60400151848151811061184b5761184b6136e7565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b60400151818151811061188e5761188e6136e7565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806118d18161367e565b915050611821565b5060005b8863ffffffff168110156119aa576001600460008e60e001518481518110611907576119076136e7565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119988c60e00151828151811061194d5761194d6136e7565b60200260200101518d6101000151838151811061196c5761196c6136e7565b60200260200101518e6101600151848151811061198b5761198b6136e7565b602002602001015161271e565b806119a28161367e565b9150506118dd565b5060a08b0151156119c8576119c88b61012001518c60a001516127bd565b60c08b0151156119e5576119e58b61014001518c60c001516127bd565b50506001600055505050505050505050565b336000908152600e602052604090205460ff16611a565760405162461bcd60e51b815260206004820152601860248201527f6f6e6c792077686974656c69737465642073656e6465722e00000000000000006044820152606401610611565b600c5482606001511015611aac5760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f2066657700000000000000000000000000006044820152606401610611565b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611add91906135fb565b10611b195760405162461bcd60e51b815260206004820152600c60248201526b1d1c9959481a5cc8199d5b1b60a21b6044820152606401610611565b60208083015160009081526004909152604090205460ff1615611b885760405162461bcd60e51b815260206004820152602160248201527f74686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610611565b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611bbf92919061271e565b604082015115611bd757611bd78183604001516128b3565b5050565b600b546001600160a01b03163314611c265760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b60008111611c765760405162461bcd60e51b815260206004820152601560248201527f696e76616c6964205f6d696e526f6c6c757046656500000000000000000000006044820152606401610611565b600c55565b600b546001600160a01b03163314611cc65760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600f5460ff1615611d255760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610611565b60008363ffffffff1611611d7b5760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610611565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611e365760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600f5460ff1615611e955760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610611565b60008163ffffffff1611611ee05760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610611565b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611f4c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611fb85760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b031633146120275760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e4906020016107bc565b600b546001600160a01b031633146120b35760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600f5460ff16156121125760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610611565b60008263ffffffff16116121685760405162461bcd60e51b815260206004820152601460248201527f6e756d496e707574732073686f756c64203e20300000000000000000000000006044820152606401610611565b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b031633146121e45760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600f5460ff16156122435760405162461bcd60e51b8152602060048201526024808201527f766572696669657220757064617465732068617665206265656e2064697361626044820152633632b21760e11b6064820152608401610611565b8163ffffffff166001148061225e57508163ffffffff166004145b8061226f57508163ffffffff166010145b6122b05760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420726f6c6c757053697a6560701b6044820152606401610611565b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60008163ffffffff166010141561233657600483901c925061234d565b8163ffffffff166004141561234d57600283901c92505b5090919050565b600b546001600160a01b0316331461239f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b6044820152606401610611565b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b479906107bc90831515815260200190565b604051600090339083908381818185875af1925050503d806000811461242a576040519150601f19603f3d011682016040523d82523d6000602084013e61242f565b606091505b5050905080611bd75760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610611565b600154600090600160a01b900460ff161561249d57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156124e257600080fd5b505afa1580156124f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061251a9190612fe9565b92915050565b610160810151516000906003811061257a5760405162461bcd60e51b815260206004820152601860248201527f6f7574707574206e6f746573206c657373207468616e203300000000000000006044820152606401610611565b61012083015161014084015160608060008561259857506028612616565b85600114156125cc5760f990508761016001516000815181106125bd576125bd6136e7565b60200260200101519250612616565b6101ca90508761016001516000815181106125e9576125e96136e7565b6020026020010151925087610160015160018151811061260b5761260b6136e7565b602002602001015191505b60006040518660601b60008201528560601b6014820152600088131561265f576028810160d18101602087015b8183101561265b578051835260209283019201612643565b5050505b60018813156126915760f9810160d18101602086015b8183101561268d578051835260209283019201612675565b5050505b82902090506126ed816040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9998505050505050505050565b60008060006127098585612956565b91509150612716816129c6565b509392505050565b600060085460075461273091906135fb565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906127749084906135fb565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf98483856040516127af939291906134d2565b60405180910390a250505050565b341561280b5760405162461bcd60e51b815260206004820152601860248201527f6e6f206d61696e6e657420746f6b656e20616c6c6f77656400000000000000006044820152606401610611565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612858576040519150601f19603f3d011682016040523d82523d6000602084013e61285d565b606091505b50509050806128ae5760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610611565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612900576040519150601f19603f3d011682016040523d82523d6000602084013e612905565b606091505b50509050806128ae5760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610611565b60008082516041141561298d5760208301516040840151606085015160001a61298187828585612b84565b945094505050506129bf565b8251604014156129b757602083015160408401516129ac868383612c71565b9350935050506129bf565b506000905060025b9250929050565b60008160048111156129da576129da6136d1565b14156129e35750565b60018160048111156129f7576129f76136d1565b1415612a455760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610611565b6002816004811115612a5957612a596136d1565b1415612aa75760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610611565b6003816004811115612abb57612abb6136d1565b1415612b145760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610611565b6004816004811115612b2857612b286136d1565b1415612b815760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610611565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612bbb5750600090506003612c68565b8460ff16601b14158015612bd357508460ff16601c14155b15612be45750600090506004612c68565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612c38573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612c6157600060019250925050612c68565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831681612ca760ff86901c601b6135fb565b9050612cb587828885612b84565b935093505050935093915050565b8035612cce81613713565b919050565b600082601f830112612ce457600080fd5b81356020612cf9612cf4836135d7565b6135a6565b80838252828201915082860187848660051b8901011115612d1957600080fd5b6000805b86811015612d5c57823567ffffffffffffffff811115612d3b578283fd5b612d498b88838d0101612e2f565b8652509385019391850191600101612d1d565b509198975050505050505050565b600082601f830112612d7b57600080fd5b612d83613536565b808385604086011115612d9557600080fd5b60005b6002811015612db7578135845260209384019390910190600101612d98565b509095945050505050565b600082601f830112612dd357600080fd5b81356020612de3612cf4836135d7565b80838252828201915082860187848660051b8901011115612e0357600080fd5b60005b85811015612e2257813584529284019290840190600101612e06565b5090979650505050505050565b600082601f830112612e4057600080fd5b813567ffffffffffffffff811115612e5a57612e5a6136fd565b612e6d601f8201601f19166020016135a6565b818152846020838601011115612e8257600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612eb157600080fd5b6040516040810181811067ffffffffffffffff82111715612ed457612ed46136fd565b604052823581526020928301359281019290925250919050565b6000818303610100811215612f0257600080fd5b6040516060810181811067ffffffffffffffff82111715612f2557612f256136fd565b604052915081612f358585612e9f565b81526080603f1983011215612f4957600080fd5b612f51613536565b9150612f608560408601612d6a565b8252612f6f8560808601612d6a565b6020830152816020820152612f878560c08601612e9f565b6040820152505092915050565b803563ffffffff81168114612cce57600080fd5b600060208284031215612fba57600080fd5b8135612fc581613713565b9392505050565b600060208284031215612fde57600080fd5b8135612fc581613728565b600060208284031215612ffb57600080fd5b8151612fc581613728565b6000806040838503121561301957600080fd5b823567ffffffffffffffff8082111561303157600080fd5b9084019060a0828703121561304557600080fd5b61304d61355f565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561308157600080fd5b61308d88828601612e2f565b60808301525093506130a491505060208401612cc3565b90509250929050565b600061016082840312156130c057600080fd5b6040516080810181811067ffffffffffffffff821117156130e3576130e36136fd565b6040526130f08484612eee565b81526130ff6101008401612f94565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561313457600080fd5b823567ffffffffffffffff8082111561314c57600080fd5b90840190610260828703121561316157600080fd5b613169613582565b6131738784612eee565b8152610100808401356020830152610120808501358481111561319557600080fd5b6131a18a828801612dc2565b60408501525061014080860135858111156131bb57600080fd5b6131c78b828901612dc2565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c08701358681111561320257600080fd5b61320e8c828a01612dc2565b60e0870152506101e08701358681111561322757600080fd5b6132338c828a01612dc2565b85870152506132456102008801612cc3565b838601526132566102208801612cc3565b8286015261024087013593508584111561326f57600080fd5b61327b8b858901612cd3565b90850152509195505050602085013591508082111561329957600080fd5b506132a685828601612e2f565b9150509250929050565b6000602082840312156132c257600080fd5b5035919050565b600080604083850312156132dc57600080fd5b823591506130a460208401612f94565b6000602082840312156132fe57600080fd5b612fc582612f94565b6000806040838503121561331a57600080fd5b61332383612f94565b9150602083013561333381613713565b809150509250929050565b6000806040838503121561335157600080fd5b61335a83612f94565b91506130a460208401612f94565b60008060006060848603121561337d57600080fd5b61338684612f94565b925061339460208501612f94565b915060408401356133a481613713565b809150509250925092565b8060005b60028110156133d25781518452602093840193909101906001016133b3565b50505050565b815160009082906020808601845b83811015613402578151855293820193908201906001016133e6565b50929695505050505050565b602081016002831061343057634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161345384875180518252602090810151910152565b6020808701516134676040870182516133af565b81015161347760808701826133af565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156134c5578351855293820193928201926001016134a9565b5092979650505050505050565b83815260006020848184015260606040840152835180606085015260005b8181101561350c578581018301518582016080015282016134f0565b8181111561351e576000608083870101525b50601f01601f19169290920160800195945050505050565b6040805190810167ffffffffffffffff81118282101715613559576135596136fd565b60405290565b60405160a0810167ffffffffffffffff81118282101715613559576135596136fd565b604051610180810167ffffffffffffffff81118282101715613559576135596136fd565b604051601f8201601f1916810167ffffffffffffffff811182821017156135cf576135cf6136fd565b604052919050565b600067ffffffffffffffff8211156135f1576135f16136fd565b5060051b60200190565b6000821982111561360e5761360e6136bb565b500190565b600063ffffffff808316818516808303821115613632576136326136bb565b01949350505050565b600063ffffffff8083168185168183048111821515161561365e5761365e6136bb565b02949350505050565b600082821015613679576136796136bb565b500390565b6000600019821415613692576136926136bb565b5060010190565b6000826136b657634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612b8157600080fd5b8015158114612b8157600080fdfea2646970667358221220427fb9cdef912505071b847e262122016ef1a55e42379e8d40b514c1902c24b264736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
