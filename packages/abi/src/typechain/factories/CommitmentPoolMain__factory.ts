/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'key',
        type: 'bytes32',
      },
    ],
    name: 'AuditorKeyChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorKey',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_key',
        type: 'bytes32',
      },
    ],
    name: 'updateAuditorKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162003daf38038062003daf8339810160408190526200006591620007a4565b60016000558060ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b481620000db565b600a8190556000908152600960205260409020805460ff1916600117905550620007d09050565b600060ff82166200010d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200021057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ac57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002e057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003b057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005eb57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006bb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ef57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078b57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b757600080fd5b815160ff81168114620007c957600080fd5b9392505050565b6080516135b5620007fa600039600081816103980152818161103601526119cd01526135b56000f3fe6080604052600436106102025760003560e01c80637cbf0ff61161011d578063b3b75631116100b0578063e500f5041161007f578063f2da1d4111610064578063f2da1d411461060c578063f8f053881461062c578063ffa89b881461064c57600080fd5b8063e500f504146105bf578063ec571c6a146105d457600080fd5b8063b3b756311461054a578063c259e2e61461056a578063dd757c341461058a578063deeff7cd1461059f57600080fd5b8063a6232a93116100ec578063a6232a93146104c4578063a9b1d296146104f4578063b08892d014610514578063b1c394221461052957600080fd5b80637cbf0ff6146104445780637fa4b09c146104645780639b0a6fea146104845780639cc6b354146104a457600080fd5b80633fae882e116101955780634eb069f7116101645780634eb069f7146103bc57806357060016146103d45780636c75d6641461040457806378d60cd71461042457600080fd5b80633fae882e1461032d5780633fe3347a1461034d57806342c00ac314610369578063484eb6521461038957600080fd5b8063115f574c116101d1578063115f574c1461028557806314a7737d146102ad57806330f49cac146102cd5780633bb8d1b4146102ed57600080fd5b806301dbf19f1461020e57806302d498f11461022557806303db98741461024557806306394c9b1461026557600080fd5b3661020957005b600080fd5b34801561021a57600080fd5b50610223610669565b005b34801561023157600080fd5b50610223610240366004612cff565b6106ed565b34801561025157600080fd5b50610223610260366004612cff565b61073c565b34801561027157600080fd5b50610223610280366004612cff565b610788565b34801561029157600080fd5b5061029a600581565b6040519081526020015b60405180910390f35b3480156102b957600080fd5b506102236102c8366004612e04565b610839565b3480156102d957600080fd5b506102236102e8366004612cff565b610d9c565b3480156102f957600080fd5b5061031d610308366004613007565b60009081526005602052604090205460ff1690565b60405190151581526020016102a4565b34801561033957600080fd5b50610223610348366004612e78565b610e29565b34801561035957600080fd5b5060016040516102a49190613229565b34801561037557600080fd5b5061029a610384366004613007565b611861565b34801561039557600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061029a565b3480156103c857600080fd5b50600f5460ff1661031d565b3480156103e057600080fd5b5061031d6103ef366004613007565b60009081526004602052604090205460ff1690565b34801561041057600080fd5b5061022361041f366004613020565b611899565b34801561043057600080fd5b5061022361043f366004612d5d565b611974565b34801561045057600080fd5b5061022361045f366004613007565b611aa3565b34801561047057600080fd5b5061022361047f3660046130e1565b611b21565b34801561049057600080fd5b5061022361049f366004613065565b611c04565b3480156104b057600080fd5b506102236104bf366004612cff565b611cfc565b3480156104d057600080fd5b5061031d6104df366004613007565b60009081526009602052604090205460ff1690565b34801561050057600080fd5b5061022361050f366004612cff565b611d48565b34801561052057600080fd5b50600c5461029a565b34801561053557600080fd5b5060015461031d90600160a01b900460ff1681565b34801561055657600080fd5b50610223610565366004612d23565b611d97565b34801561057657600080fd5b506102236105853660046130b7565b611e03565b34801561059657600080fd5b50610223611ea7565b3480156105ab57600080fd5b506102236105ba366004613080565b611f1f565b3480156105cb57600080fd5b5060085461029a565b3480156105e057600080fd5b506001546105f4906001600160a01b031681565b6040516001600160a01b0390911681526020016102a4565b34801561061857600080fd5b5061029a610627366004613042565b61205f565b34801561063857600080fd5b50610223610647366004612d23565b6120e8565b34801561065857600080fd5b50600f54610100900460ff1661031d565b600b546001600160a01b03163314610694576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926106e392900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610718576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610767576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146107b3576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b03828116911614156107e2576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600f54610100900460ff161580156108615750336000908152600d602052604090205460ff16155b1561087f576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156108b25760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806108ee575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561092e576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516109469063ffffffff16826134e2565b15610981576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610925565b600061099182846020015161205f565b90506000836020015163ffffffff1667ffffffffffffffff8111156109b8576109b8613546565b6040519080825280602002602001820160405280156109e1578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610adf576000610a0682876133f3565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a535760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610a6a57610a6a613530565b602002602001018181525050806020015184610a8691906133f3565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610ad7906134c7565b9150506109e8565b50846020015163ffffffff1660076000828254610afc919061345f565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b3791906131f3565b6040516020818303038152906040528051906020012060001c610b5a91906134e2565b905080866060015114610bb0576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610925565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610be957610be9613530565b602002602001018181525050866040015181600181518110610c0d57610c0d613530565b6020026020010181815250508181600281518110610c2d57610c2d613530565b6020026020010181815250508481600381518110610c4d57610c4d613530565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610ca591908690600401613251565b602060405180830381600087803b158015610cbf57600080fd5b505af1158015610cd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf79190612d40565b905080610d47576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610925565b876020015163ffffffff1660086000828254610d6391906133f3565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d928461215c565b5050505050505050565b600b546001600160a01b03163314610dc7576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60026000541415610e7c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610925565b60026000908155604083015151610e92906121f4565b90506000610ea48460e00151516121f4565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16610f21576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610925565b8163ffffffff1684606001515114610f7c576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610925565b8063ffffffff168461010001515114610fd8576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610925565b8063ffffffff168461016001515114611034576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610925565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660075460085461106c91906133f3565b61107691906133f3565b111561109557604051633b5ccb4360e21b815260040160405180910390fd5b61109e32612274565b156110bc57604051632e70c0b160e01b815260040160405180910390fd5b6110ca846101200151612274565b156110e857604051632e70c0b160e01b815260040160405180910390fd5b60006110f385612313565b90506110ff818561249f565b6001600160a01b031660001b85608001511461115e576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610925565b600061116b846002613433565b63ffffffff1690506000611180856002613433565b61118b90600461340b565b63ffffffff16905060006111a0856002613433565b6111b09063ffffffff16836133f3565b67ffffffffffffffff8111156111c8576111c8613546565b6040519080825280602002602001820160405280156111f1578160200160208202803683370190505b506020808a015160009081526009909152604090205490915060ff16611243576040516314e8955b60e21b8152600401610925906020808252600490820152631c9bdbdd60e21b604082015260600190565b87602001518160008151811061125b5761125b613530565b6020908102919091010152600061127387600161340b565b63ffffffff16905060005b8763ffffffff1681101561137f5760008a6040015182815181106112a4576112a4613530565b6020908102919091018101516000818152600590925260409091205490915060ff16156112fd576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461130a8460016133f3565b8151811061131a5761131a613530565b6020026020010181815250508a60600151828151811061133c5761133c613530565b602002602001015184848461135191906133f3565b8151811061136157611361613530565b60209081029190910101525080611377816134c7565b91505061127e565b506080890151826113918660016133f3565b815181106113a1576113a1613530565b602090810291909101015260a0890151826113bd8660026133f3565b815181106113cd576113cd613530565b602090810291909101015260c0890151826113e98660036133f3565b815181106113f9576113f9613530565b6020908102919091010152600061141663ffffffff8816856133f3565b905060005b8763ffffffff1681101561159057600460008c60e00151838151811061144357611443613530565b60209081029190910181015182528101919091526040016000205460ff16156114af5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610925565b600c548b610100015182815181106114c9576114c9613530565b602002602001015110156114f05760405163784f02bd60e11b815260040160405180910390fd5b8a60e00151818151811061150657611506613530565b602002602001015184868361151b91906133f3565b8151811061152b5761152b613530565b6020026020010181815250508a6101000151818151811061154e5761154e613530565b602002602001015184838361156391906133f3565b8151811061157357611573613530565b602090810291909101015280611588816134c7565b91505061141b565b5063ffffffff8089166000908152600260209081526040808320938b168352929052818120548c51925163c941764760e01b815291926001600160a01b039091169163c9417647916115e6918890600401613251565b602060405180830381600087803b15801561160057600080fd5b505af1158015611614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116389190612d40565b905080611688576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610925565b60005b8963ffffffff16811015611743576001600560008e6040015184815181106116b5576116b5613530565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508b6040015181815181106116f8576116f8613530565b60200260200101518c602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061173b816134c7565b91505061168b565b5060005b8863ffffffff16811015611814576001600460008e60e00151848151811061177157611771613530565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506118028c60e0015182815181106117b7576117b7613530565b60200260200101518d610100015183815181106117d6576117d6613530565b60200260200101518e610160015184815181106117f5576117f5613530565b60200260200101516124c3565b8061180c816134c7565b915050611747565b5060a08b015115611832576118328b61012001518c60a00151612562565b60c08b01511561184f5761184f8b61014001518c60c00151612562565b50506001600055505050505050505050565b600060056118708360016133f3565b111561187e57506000919050565b6010826005811061189157611891613530565b015492915050565b600b546001600160a01b031633146118c4576040516327e1f1e560e01b815260040160405180910390fd5b60056118d18360016133f3565b11156118f05760405163318c434560e21b815260040160405180910390fd5b806010836005811061190457611904613530565b015414156119255760405163e984c61760e01b815260040160405180910390fd5b806010836005811061193957611939613530565b015560405181815282907f8d463a7e10f676dd3b90506a17258d1f1a9f4f66adbdb6a22b2f8bbd3b484e239060200160405180910390a25050565b336000908152600e602052604090205460ff166119a45760405163f75e9fc760e01b815260040160405180910390fd5b600c54826060015110156119cb5760405163784f02bd60e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006007546008546119fc91906133f3565b10611a1a57604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611a505760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611a879291906124c3565b604082015115611a9f57611a9f81836040015161260a565b5050565b600b546001600160a01b03163314611ace576040516327e1f1e560e01b815260040160405180910390fd5b80611b1c576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610925565b600c55565b600b546001600160a01b03163314611b4c576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611b70576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611b9457604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600b546001600160a01b03163314611c2f576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c53576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611c6d57506104008163ffffffff16115b15611ca8576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610925565b611cb3600182613476565b811663ffffffff16600014611cdb576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611d27576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611d73576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611dc2576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610e1e565b600b546001600160a01b03163314611e2e576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611e52576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611e7657604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314611ed2576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916106e391600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314611f4a576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611f6e576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82161580611f8857506104008263ffffffff16115b15611fc3576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610925565b611fce600183613476565b821663ffffffff16600014611ff6576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106120855760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106120a85760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106120cb5760028263ffffffff16901c9150600283901c92505b60028263ffffffff16106120e157600183901c92505b5090919050565b600b546001600160a01b03163314612113576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610e1e90831515815260200190565b604051600090339083908381818185875af1925050503d806000811461219e576040519150601f19603f3d011682016040523d82523d6000602084013e6121a3565b606091505b5050905080611a9f5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610925565b600063ffffffff8211156122705760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610925565b5090565b600154600090600160a01b900460ff1661229057506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156122d557600080fd5b505afa1580156122e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230d9190612d40565b92915050565b610160810151516000906003811061233e57604051633fb1945d60e11b815260040160405180910390fd5b606081612392576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061244a565b81600114156123d9578361012001518461014001518561016001516000815181106123bf576123bf613530565b602002602001015160405160200161237c93929190613151565b8361012001518461014001518561016001516000815181106123fd576123fd613530565b602002602001015186610160015160018151811061241d5761241d613530565b60200260200101516040516020016124389493929190613197565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006124ae85856126ad565b915091506124bb8161271d565b509392505050565b60006008546007546124d591906133f3565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906125199084906133f3565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612554939291906132ed565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146125af576040519150601f19603f3d011682016040523d82523d6000602084013e6125b4565b606091505b50509050806126055760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610925565b505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612657576040519150601f19603f3d011682016040523d82523d6000602084013e61265c565b606091505b50509050806126055760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610925565b6000808251604114156126e45760208301516040840151606085015160001a6126d8878285856128db565b94509450505050612716565b82516040141561270e57602083015160408401516127038683836129c8565b935093505050612716565b506000905060025b9250929050565b60008160048111156127315761273161351a565b141561273a5750565b600181600481111561274e5761274e61351a565b141561279c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610925565b60028160048111156127b0576127b061351a565b14156127fe5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610925565b60038160048111156128125761281261351a565b141561286b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610925565b600481600481111561287f5761287f61351a565b14156128d85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610925565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561291257506000905060036129bf565b8460ff16601b1415801561292a57508460ff16601c14155b1561293b57506000905060046129bf565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561298f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166129b8576000600192509250506129bf565b9150600090505b94509492505050565b6000807f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8316816129fe60ff86901c601b6133f3565b9050612a0c878288856128db565b935093505050935093915050565b8035612a258161355c565b919050565b600082601f830112612a3b57600080fd5b81356020612a50612a4b836133cf565b61339e565b80838252828201915082860187848660051b8901011115612a7057600080fd5b6000805b86811015612ab357823567ffffffffffffffff811115612a92578283fd5b612aa08b88838d0101612b86565b8652509385019391850191600101612a74565b509198975050505050505050565b600082601f830112612ad257600080fd5b612ada61332e565b808385604086011115612aec57600080fd5b60005b6002811015612b0e578135845260209384019390910190600101612aef565b509095945050505050565b600082601f830112612b2a57600080fd5b81356020612b3a612a4b836133cf565b80838252828201915082860187848660051b8901011115612b5a57600080fd5b60005b85811015612b7957813584529284019290840190600101612b5d565b5090979650505050505050565b600082601f830112612b9757600080fd5b813567ffffffffffffffff811115612bb157612bb1613546565b612bc4601f8201601f191660200161339e565b818152846020838601011115612bd957600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612c0857600080fd5b6040516040810181811067ffffffffffffffff82111715612c2b57612c2b613546565b604052823581526020928301359281019290925250919050565b6000818303610100811215612c5957600080fd5b6040516060810181811067ffffffffffffffff82111715612c7c57612c7c613546565b604052915081612c8c8585612bf6565b81526080603f1983011215612ca057600080fd5b612ca861332e565b9150612cb78560408601612ac1565b8252612cc68560808601612ac1565b6020830152816020820152612cde8560c08601612bf6565b6040820152505092915050565b803563ffffffff81168114612a2557600080fd5b600060208284031215612d1157600080fd5b8135612d1c8161355c565b9392505050565b600060208284031215612d3557600080fd5b8135612d1c81613571565b600060208284031215612d5257600080fd5b8151612d1c81613571565b60008060408385031215612d7057600080fd5b823567ffffffffffffffff80821115612d8857600080fd5b9084019060a08287031215612d9c57600080fd5b612da4613357565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115612dd857600080fd5b612de488828601612b86565b6080830152509350612dfb91505060208401612a1a565b90509250929050565b60006101608284031215612e1757600080fd5b6040516080810181811067ffffffffffffffff82111715612e3a57612e3a613546565b604052612e478484612c45565b8152612e566101008401612ceb565b6020820152610120830135604082015261014090920135606083015250919050565b60008060408385031215612e8b57600080fd5b823567ffffffffffffffff80821115612ea357600080fd5b908401906102608287031215612eb857600080fd5b612ec061337a565b612eca8784612c45565b81526101008084013560208301526101208085013584811115612eec57600080fd5b612ef88a828801612b19565b6040850152506101408086013585811115612f1257600080fd5b612f1e8b828901612b19565b60608601525061016080870135608086015261018087013560a08601526101a087013560c08601526101c087013586811115612f5957600080fd5b612f658c828a01612b19565b60e0870152506101e087013586811115612f7e57600080fd5b612f8a8c828a01612b19565b8587015250612f9c6102008801612a1a565b83860152612fad6102208801612a1a565b82860152610240870135935085841115612fc657600080fd5b612fd28b858901612a2a565b908501525091955050506020850135915080821115612ff057600080fd5b50612ffd85828601612b86565b9150509250929050565b60006020828403121561301957600080fd5b5035919050565b6000806040838503121561303357600080fd5b50508035926020909101359150565b6000806040838503121561305557600080fd5b82359150612dfb60208401612ceb565b60006020828403121561307757600080fd5b612d1c82612ceb565b6000806040838503121561309357600080fd5b61309c83612ceb565b915060208301356130ac8161355c565b809150509250929050565b600080604083850312156130ca57600080fd5b6130d383612ceb565b9150612dfb60208401612ceb565b6000806000606084860312156130f657600080fd5b6130ff84612ceb565b925061310d60208501612ceb565b9150604084013561311d8161355c565b809150509250925092565b8060005b600281101561314b57815184526020938401939091019060010161312c565b50505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161318881602885016020870161349b565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083516131ce81602885016020880161349b565b8351908301906131e581602884016020880161349b565b016028019695505050505050565b815160009082906020808601845b8381101561321d57815185529382019390820190600101613201565b50929695505050505050565b602081016002831061324b57634e487b7160e01b600052602160045260246000fd5b91905290565b600061012080830161326e84875180518252602090810151910152565b602080870151613282604087018251613128565b8101516132926080870182613128565b506040870151805160c08701526020015160e08601526101008501929092528451908190526101408401918581019160005b818110156132e0578351855293820193928201926001016132c4565b5092979650505050505050565b838152826020820152606060408201526000825180606084015261331881608085016020870161349b565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff8111828210171561335157613351613546565b60405290565b60405160a0810167ffffffffffffffff8111828210171561335157613351613546565b604051610180810167ffffffffffffffff8111828210171561335157613351613546565b604051601f8201601f1916810167ffffffffffffffff811182821017156133c7576133c7613546565b604052919050565b600067ffffffffffffffff8211156133e9576133e9613546565b5060051b60200190565b6000821982111561340657613406613504565b500190565b600063ffffffff80831681851680830382111561342a5761342a613504565b01949350505050565b600063ffffffff8083168185168183048111821515161561345657613456613504565b02949350505050565b60008282101561347157613471613504565b500390565b600063ffffffff8381169083168181101561349357613493613504565b039392505050565b60005b838110156134b657818101518382015260200161349e565b8381111561314b5750506000910152565b60006000198214156134db576134db613504565b5060010190565b6000826134ff57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146128d857600080fd5b80151581146128d857600080fdfea264697066735822122002d185a1bf3d17ae42a97b033ff72cf2071424b7645c2e25533759aac1c27d9864736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
