/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopERC20, MystikoV2LoopERC20Interface } from '../MystikoV2LoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeDividerTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'ChainalysisSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'MinAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'MystikoSanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFee',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collector',
        type: 'address',
      },
    ],
    name: 'ServiceFeeCollectorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeDividerChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainalysisSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFee',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCollector',
        type: 'address',
      },
    ],
    name: 'changeServiceFeeCollector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFeeDivider',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeCollector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeDivider',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mystikoSanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateChainalysisSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateMystikoSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a01b0319167340c57923924b5c5c5455c48d93317139addac8fb1790556001805460ff60a01b1916600160a01b1790553480156200004a57600080fd5b506040516200195e3803806200195e8339810160408190526200006d91620000c8565b600580546001600160a01b03199081163317909155600280546001600160a01b0394851692169190911790556103e8600755620f4240600855600980549190921661010002610100600160a81b031990911617905562000120565b60008060408385031215620000dc57600080fd5b8251620000e98162000107565b6020840151909250620000fc8162000107565b809150509250929050565b6001600160a01b03811681146200011d57600080fd5b50565b61182e80620001306000396000f3fe6080604052600436106101a15760003560e01c8063a7542e37116100e1578063d3e256bf1161008a578063e19abef811610064578063e19abef814610468578063ea0cde8514610488578063ed6ea33a146104a8578063f6afe88f146104c057600080fd5b8063d3e256bf14610415578063dd757c3414610435578063ddac5dc11461044a57600080fd5b8063c2d41601116100bb578063c2d41601146103c4578063c9230c5d146103eb578063cfc7e2da1461040057600080fd5b8063a7542e3714610353578063b1a0b35814610373578063b1c394221461039357600080fd5b80632421e1551161014e5780633fe3347a116101285780633fe3347a146102d75780634973203d146102f3578063897b0637146103135780638c0768121461033357600080fd5b80632421e1551461025857806331b2d332146102855780633fc8c4d6146102a557600080fd5b80630f087d761161017f5780630f087d761461020157806311a1933c14610221578063176de7a81461023657600080fd5b806301dbf19f146101a657806306394c9b146101bd5780630a5ea9eb146101dd575b600080fd5b3480156101b257600080fd5b506101bb6104d3565b005b3480156101c957600080fd5b506101bb6101d83660046113ab565b610557565b3480156101e957600080fd5b506008545b6040519081526020015b60405180910390f35b34801561020d57600080fd5b506101bb61021c3660046113ab565b6105fb565b34801561022d57600080fd5b506007546101ee565b34801561024257600080fd5b5061024b61069f565b6040516101f8919061162f565b34801561026457600080fd5b5060408051808201909152600481526306c6f6f760e41b602082015261024b565b34801561029157600080fd5b506101bb6102a03660046113ab565b610730565b3480156102b157600080fd5b506006546001600160a01b03165b6040516001600160a01b0390911681526020016101f8565b3480156102e357600080fd5b5060006040516101f89190611607565b3480156102ff57600080fd5b506000546102bf906001600160a01b031681565b34801561031f57600080fd5b506101bb61032e366004611539565b6107b0565b34801561033f57600080fd5b506001546102bf906001600160a01b031681565b34801561035f57600080fd5b506101bb61036e3660046113ab565b610810565b34801561037f57600080fd5b506101bb61038e366004611539565b610889565b34801561039f57600080fd5b506001546103b490600160a01b900460ff1681565b60405190151581526020016101f8565b3480156103d057600080fd5b506103d961092a565b60405160ff90911681526020016101f8565b3480156103f757600080fd5b5061024b6109b2565b34801561040c57600080fd5b506004546101ee565b34801561042157600080fd5b506101bb610430366004611539565b610a02565b34801561044157600080fd5b506101bb610a85565b34801561045657600080fd5b506003546001600160a01b03166102bf565b34801561047457600080fd5b506101bb6104833660046113ab565b610afd565b34801561049457600080fd5b506101bb6104a33660046113c8565b610b4a565b3480156104b457600080fd5b5060095460ff166103b4565b6101bb6104ce366004611479565b610bb6565b6005546001600160a01b031633146104fe576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261054d92900460ff161515815260200190565b60405180910390a1565b6005546001600160a01b03163314610582576040516327e1f1e560e01b815260040160405180910390fd5b6005546001600160a01b03828116911614156105b1576040516336a1c33f60e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b6005546001600160a01b03163314610626576040516327e1f1e560e01b815260040160405180910390fd5b6006546001600160a01b0382811691161415610655576040516336a1c33f60e01b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517fe6bc4ba4d04102f8f1140ad88cba6b7bd753b0391069bca06f44a955507dbb9390600090a250565b6060600960019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156106ef57600080fd5b505afa158015610703573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072b9190810190611402565b905090565b6005546001600160a01b0316331461075b576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f017e1ccd0899030de557a9d08af3a798fc32e1f31fb548ebf6dfe71e082ec529906020015b60405180910390a150565b6005546001600160a01b031633146107db576040516327e1f1e560e01b815260040160405180910390fd5b60048190556040518181527f1c853e705f5e96d9076d1f48114d62650faf218827df3fed720227b3dbf18c5a906020016107a5565b6005546001600160a01b0316331461083b576040516327e1f1e560e01b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f93c42ce86c3480aa42cb7e04c0270c66bcee4eaf35410ed3f00ea08bb3b32a84906020016107a5565b6005546001600160a01b031633146108b4576040516327e1f1e560e01b815260040160405180910390fd5b8060085414156108d7576040516336a1c33f60e01b815260040160405180910390fd5b806108f5576040516313a2a85760e21b815260040160405180910390fd5b60088190556040518181527fc9993a13ab327e43d2c7222016ea042dc8e0889c91571ae6062990deacb4540c906020016107a5565b6000600960019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561097a57600080fd5b505afa15801561098e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b919061156b565b6060600960019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156106ef57600080fd5b6005546001600160a01b03163314610a2d576040516327e1f1e560e01b815260040160405180910390fd5b806007541415610a50576040516336a1c33f60e01b815260040160405180910390fd5b60078190556040518181527f1c068decb3b5138b265d62b22c4c2d8191a2e0bd3745e97b5b0ff66fa852eca5906020016107a5565b6005546001600160a01b03163314610ab0576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161054d91600160a01b90910460ff161515815260200190565b6005546001600160a01b03163314610b28576040516327e1f1e560e01b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03163314610b75576040516327e1f1e560e01b815260040160405180910390fd5b6009805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e09906020016107a5565b60095460ff1615610bda57604051630e2f42c960e31b815260040160405180910390fd5b60045481511015610bfe5760405163617ab12d60e11b815260040160405180910390fd5b6000610c17826040015183600001518460600151610c84565b905080826020015114610c3d576040516301bfaa2560e51b815260040160405180910390fd5b610c4633610dac565b15610c6457604051632e70c0b160e01b815260040160405180910390fd5b610c80826000015183602001518460a001518560800151610edd565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610cc75760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610cf957604051633bbde0bf60e21b815260040160405180910390fd5b60025460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610d51916004016115d6565b60206040518083038186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da19190611552565b9150505b9392505050565b600154600090600160a01b900460ff16610dc857506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610e0d57600080fd5b505afa158015610e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4591906113e5565b80610ec8575060005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610e9057600080fd5b505afa158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec891906113e5565b15610ed557506001919050565b506000919050565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260035492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610f3791859190600401611642565b600060405180830381600087803b158015610f5157600080fd5b505af1158015610f65573d6000803e3d6000fd5b5050600354600654600854600754610faf95506001600160a01b0393841694509190921691610f9e91610f98908b610fb6565b90610fc2565b610fa8878a611721565b6000610fce565b5050505050565b6000610da5828461175b565b6000610da58284611739565b8034146110225760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b60095461103f9061010090046001600160a01b031633878561105e565b8215610faf57600954610faf9061010090046001600160a01b03163386865b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526110cd9085906110d3565b50505050565b6000611128826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111bd9092919063ffffffff16565b8051909150156111b8578080602001905181019061114691906113e5565b6111b85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401611019565b505050565b60606111cc84846000856111d4565b949350505050565b60608247101561124c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401611019565b6001600160a01b0385163b6112a35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611019565b600080866001600160a01b031685876040516112bf91906115ba565b60006040518083038185875af1925050503d80600081146112fc576040519150601f19603f3d011682016040523d82523d6000602084013e611301565b606091505b509150915061131182828661131c565b979650505050505050565b6060831561132b575081610da5565b82511561133b5782518084602001fd5b8160405162461bcd60e51b8152600401611019919061162f565b600082601f83011261136657600080fd5b8135611379611374826116f9565b6116c8565b81815284602083860101111561138e57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156113bd57600080fd5b8135610da5816117d2565b6000602082840312156113da57600080fd5b8135610da5816117ea565b6000602082840312156113f757600080fd5b8151610da5816117ea565b60006020828403121561141457600080fd5b815167ffffffffffffffff81111561142b57600080fd5b8201601f8101841361143c57600080fd5b805161144a611374826116f9565b81815285602083850101111561145f57600080fd5b61147082602083016020860161177a565b95945050505050565b60006020828403121561148b57600080fd5b813567ffffffffffffffff808211156114a357600080fd5b9083019060c082860312156114b757600080fd5b6114bf61169f565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff811681146114fa57600080fd5b606082015260808301358281111561151157600080fd5b61151d87828601611355565b60808301525060a083013560a082015280935050505092915050565b60006020828403121561154b57600080fd5b5035919050565b60006020828403121561156457600080fd5b5051919050565b60006020828403121561157d57600080fd5b815160ff81168114610da557600080fd5b600081518084526115a681602086016020860161177a565b601f01601f19169290920160200192915050565b600082516115cc81846020870161177a565b9190910192915050565b60608101818360005b60038110156115fe5781518352602092830192909101906001016115df565b50505092915050565b602081016002831061162957634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610da5602083018461158e565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261168660e084018261158e565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff811182821017156116c2576116c26117bc565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156116f1576116f16117bc565b604052919050565b600067ffffffffffffffff821115611713576117136117bc565b50601f01601f191660200190565b60008219821115611734576117346117a6565b500190565b60008261175657634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611775576117756117a6565b500290565b60005b8381101561179557818101518382015260200161177d565b838111156110cd5750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146117e757600080fd5b50565b80151581146117e757600080fdfea26469706673582212206d262b097f53e22e6d1d6b87f5800095737423784e3a646c0a8e16774febc5b664736f6c63430008070033';

type MystikoV2LoopERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopERC20> {
    return super.deploy(_hasher3, _token, overrides || {}) as Promise<MystikoV2LoopERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, overrides || {});
  }
  attach(address: string): MystikoV2LoopERC20 {
    return super.attach(address) as MystikoV2LoopERC20;
  }
  connect(signer: Signer): MystikoV2LoopERC20__factory {
    return super.connect(signer) as MystikoV2LoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2LoopERC20';
  public readonly contractName: 'MystikoV2LoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2LoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopERC20;
  }
}
