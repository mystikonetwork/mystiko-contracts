/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopERC20, MystikoV2LoopERC20Interface } from '../MystikoV2LoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MaxAmountLessThanMinAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeDividerTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
    ],
    name: 'MaxAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'MinAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFee',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'collector',
        type: 'address',
      },
    ],
    name: 'ServiceFeeCollectorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeDividerChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFee',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCollector',
        type: 'address',
      },
    ],
    name: 'changeServiceFeeCollector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFeeDivider',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeCollector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeDivider',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
    ],
    name: 'setMaxAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb1790553480156200003857600080fd5b50604051620018fe380380620018fe8339810160408190526200005b91620000b6565b600580546001600160a01b03199081163317909155600180546001600160a01b0394851692169190911790556103e8600755620f4240600855600980549190921661010002610100600160a81b03199091161790556200010e565b60008060408385031215620000ca57600080fd5b8251620000d781620000f5565b6020840151909250620000ea81620000f5565b809150509250929050565b6001600160a01b03811681146200010b57600080fd5b50565b6117e0806200011e6000396000f3fe6080604052600436106101a15760003560e01c8063b1a0b358116100e1578063dd757c341161008a578063ea0cde8511610064578063ea0cde851461045d578063ec571c6a1461047d578063ed6ea33a1461049d578063f6afe88f146104b557600080fd5b8063dd757c341461040a578063ddac5dc11461041f578063e19abef81461043d57600080fd5b8063c9230c5d116100bb578063c9230c5d146103c0578063cfc7e2da146103d5578063d3e256bf146103ea57600080fd5b8063b1a0b35814610348578063b1c3942214610368578063c2d416011461039957600080fd5b8063176de7a81161014e5780633fc8c4d6116101285780633fc8c4d6146102ba5780633fe3347a146102ec5780634fe47f7014610308578063897b06371461032857600080fd5b8063176de7a81461024b5780632421e1551461026d57806330f49cac1461029a57600080fd5b80630ba959091161017f5780630ba95909146102015780630f087d761461021657806311a1933c1461023657600080fd5b806301dbf19f146101a657806306394c9b146101bd5780630a5ea9eb146101dd575b600080fd5b3480156101b257600080fd5b506101bb6104c8565b005b3480156101c957600080fd5b506101bb6101d836600461135d565b61054c565b3480156101e957600080fd5b506008545b6040519081526020015b60405180910390f35b34801561020d57600080fd5b506004546101ee565b34801561022257600080fd5b506101bb61023136600461135d565b6105f0565b34801561024257600080fd5b506007546101ee565b34801561025757600080fd5b50610260610694565b6040516101f891906115e1565b34801561027957600080fd5b5060408051808201909152600481526306c6f6f760e41b6020820152610260565b3480156102a657600080fd5b506101bb6102b536600461135d565b610725565b3480156102c657600080fd5b506006546001600160a01b03165b6040516001600160a01b0390911681526020016101f8565b3480156102f857600080fd5b5060006040516101f891906115b9565b34801561031457600080fd5b506101bb6103233660046114eb565b6107a5565b34801561033457600080fd5b506101bb6103433660046114eb565b610828565b34801561035457600080fd5b506101bb6103633660046114eb565b6108ab565b34801561037457600080fd5b5060005461038990600160a01b900460ff1681565b60405190151581526020016101f8565b3480156103a557600080fd5b506103ae61094c565b60405160ff90911681526020016101f8565b3480156103cc57600080fd5b506102606109d4565b3480156103e157600080fd5b506003546101ee565b3480156103f657600080fd5b506101bb6104053660046114eb565b610a24565b34801561041657600080fd5b506101bb610aa7565b34801561042b57600080fd5b506002546001600160a01b03166102d4565b34801561044957600080fd5b506101bb61045836600461135d565b610b1f565b34801561046957600080fd5b506101bb61047836600461137a565b610b6c565b34801561048957600080fd5b506000546102d4906001600160a01b031681565b3480156104a957600080fd5b5060095460ff16610389565b6101bb6104c336600461142b565b610bd8565b6005546001600160a01b031633146104f3576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261054292900460ff161515815260200190565b60405180910390a1565b6005546001600160a01b03163314610577576040516327e1f1e560e01b815260040160405180910390fd5b6005546001600160a01b03828116911614156105a6576040516336a1c33f60e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b6005546001600160a01b0316331461061b576040516327e1f1e560e01b815260040160405180910390fd5b6006546001600160a01b038281169116141561064a576040516336a1c33f60e01b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517fe6bc4ba4d04102f8f1140ad88cba6b7bd753b0391069bca06f44a955507dbb9390600090a250565b6060600960019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072091908101906113b4565b905090565b6005546001600160a01b03163314610750576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b6005546001600160a01b031633146107d0576040516327e1f1e560e01b815260040160405180910390fd5b6003548110156107f35760405163c91c531760e01b815260040160405180910390fd5b60048190556040518181527f09cd51dbb3863eb5590065f7de41ae4950c3ede201a9f214669deadb855d39559060200161079a565b6005546001600160a01b03163314610853576040516327e1f1e560e01b815260040160405180910390fd5b60045481111561087657604051636003e82160e11b815260040160405180910390fd5b60038190556040518181527f1c853e705f5e96d9076d1f48114d62650faf218827df3fed720227b3dbf18c5a9060200161079a565b6005546001600160a01b031633146108d6576040516327e1f1e560e01b815260040160405180910390fd5b8060085414156108f9576040516336a1c33f60e01b815260040160405180910390fd5b80610917576040516313a2a85760e21b815260040160405180910390fd5b60088190556040518181527fc9993a13ab327e43d2c7222016ea042dc8e0889c91571ae6062990deacb4540c9060200161079a565b6000600960019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561099c57600080fd5b505afa1580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610720919061151d565b6060600960019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156106e457600080fd5b6005546001600160a01b03163314610a4f576040516327e1f1e560e01b815260040160405180910390fd5b806007541415610a72576040516336a1c33f60e01b815260040160405180910390fd5b60078190556040518181527f1c068decb3b5138b265d62b22c4c2d8191a2e0bd3745e97b5b0ff66fa852eca59060200161079a565b6005546001600160a01b03163314610ad2576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161054291600160a01b90910460ff161515815260200190565b6005546001600160a01b03163314610b4a576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b03163314610b97576040516327e1f1e560e01b815260040160405180910390fd5b6009805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e099060200161079a565b60095460ff1615610bfc57604051630e2f42c960e31b815260040160405180910390fd5b60035481511015610c205760405163617ab12d60e11b815260040160405180910390fd5b60045481511115610c4457604051630625040160e01b815260040160405180910390fd5b6000610c5d826040015183600001518460600151610cca565b905080826020015114610c83576040516301bfaa2560e51b815260040160405180910390fd5b610c8c33610df2565b15610caa57604051632e70c0b160e01b815260040160405180910390fd5b610cc6826000015183602001518460a001518560800151610e8f565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610d0d5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610d3f57604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610d9791600401611588565b60206040518083038186803b158015610daf57600080fd5b505afa158015610dc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de79190611504565b9150505b9392505050565b60008054600160a01b900460ff16610e0c57506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610e5157600080fd5b505afa158015610e65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e899190611397565b92915050565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610ee9918591906004016115f4565b600060405180830381600087803b158015610f0357600080fd5b505af1158015610f17573d6000803e3d6000fd5b5050600254600654600854600754610f6195506001600160a01b0393841694509190921691610f5091610f4a908b610f68565b90610f74565b610f5a878a6116d3565b6000610f80565b5050505050565b6000610deb828461170d565b6000610deb82846116eb565b803414610fd45760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600954610ff19061010090046001600160a01b0316338785611010565b8215610f6157600954610f619061010090046001600160a01b03163386865b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905261107f908590611085565b50505050565b60006110da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661116f9092919063ffffffff16565b80519091501561116a57808060200190518101906110f89190611397565b61116a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610fcb565b505050565b606061117e8484600085611186565b949350505050565b6060824710156111fe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610fcb565b6001600160a01b0385163b6112555760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610fcb565b600080866001600160a01b03168587604051611271919061156c565b60006040518083038185875af1925050503d80600081146112ae576040519150601f19603f3d011682016040523d82523d6000602084013e6112b3565b606091505b50915091506112c38282866112ce565b979650505050505050565b606083156112dd575081610deb565b8251156112ed5782518084602001fd5b8160405162461bcd60e51b8152600401610fcb91906115e1565b600082601f83011261131857600080fd5b813561132b611326826116ab565b61167a565b81815284602083860101111561134057600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561136f57600080fd5b8135610deb81611784565b60006020828403121561138c57600080fd5b8135610deb8161179c565b6000602082840312156113a957600080fd5b8151610deb8161179c565b6000602082840312156113c657600080fd5b815167ffffffffffffffff8111156113dd57600080fd5b8201601f810184136113ee57600080fd5b80516113fc611326826116ab565b81815285602083850101111561141157600080fd5b61142282602083016020860161172c565b95945050505050565b60006020828403121561143d57600080fd5b813567ffffffffffffffff8082111561145557600080fd5b9083019060c0828603121561146957600080fd5b611471611651565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff811681146114ac57600080fd5b60608201526080830135828111156114c357600080fd5b6114cf87828601611307565b60808301525060a083013560a082015280935050505092915050565b6000602082840312156114fd57600080fd5b5035919050565b60006020828403121561151657600080fd5b5051919050565b60006020828403121561152f57600080fd5b815160ff81168114610deb57600080fd5b6000815180845261155881602086016020860161172c565b601f01601f19169290920160200192915050565b6000825161157e81846020870161172c565b9190910192915050565b60608101818360005b60038110156115b0578151835260209283019290910190600101611591565b50505092915050565b60208101600283106115db57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610deb6020830184611540565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261163860e0840182611540565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff811182821017156116745761167461176e565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156116a3576116a361176e565b604052919050565b600067ffffffffffffffff8211156116c5576116c561176e565b50601f01601f191660200190565b600082198211156116e6576116e6611758565b500190565b60008261170857634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561172757611727611758565b500290565b60005b8381101561174757818101518382015260200161172f565b8381111561107f5750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461179957600080fd5b50565b801515811461179957600080fdfea2646970667358221220b3f07044b823b8dc33c85ac04ec5324d8fc48113ead183187149da196232be1464736f6c63430008070033';

type MystikoV2LoopERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopERC20> {
    return super.deploy(_hasher3, _token, overrides || {}) as Promise<MystikoV2LoopERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, overrides || {});
  }
  attach(address: string): MystikoV2LoopERC20 {
    return super.attach(address) as MystikoV2LoopERC20;
  }
  connect(signer: Signer): MystikoV2LoopERC20__factory {
    return super.connect(signer) as MystikoV2LoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2LoopERC20';
  public readonly contractName: 'MystikoV2LoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2LoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopERC20;
  }
}
