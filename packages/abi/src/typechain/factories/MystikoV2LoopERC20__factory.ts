/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopERC20, MystikoV2LoopERC20Interface } from '../MystikoV2LoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeDividerTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'MinAmount',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFee',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'address',
        name: 'servicer',
        type: 'address',
      },
    ],
    name: 'ServiceFeeCollectorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'serviceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeDividerChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFee',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newCollector',
        type: 'address',
      },
    ],
    name: 'changeServiceFeeCollector',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeDivider',
        type: 'uint256',
      },
    ],
    name: 'changeServiceFeeDivider',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeCollector',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeDivider',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905534801561003657600080fd5b50604051620016c5380380620016c5833981016040819052610057916100b1565b600480546001600160a01b03199081163317909155600180546001600160a01b0394851692169190911790556103e8600655620f4240600755600880549190921661010002610100600160a81b0319909116179055610103565b600080604083850312156100c457600080fd5b82516100cf816100eb565b60208401519092506100e0816100eb565b809150509250929050565b6001600160a01b038116811461010057600080fd5b50565b6115b280620001136000396000f3fe6080604052600436106101805760003560e01c8063897b0637116100d6578063ddac5dc11161007f578063ec571c6a11610059578063ec571c6a1461041d578063ed6ea33a1461043d578063f6afe88f1461045557600080fd5b8063ddac5dc1146103bf578063e19abef8146103dd578063ea0cde85146103fd57600080fd5b8063c9230c5d116100b0578063c9230c5d14610375578063cfc7e2da1461038a578063d3e256bf1461039f57600080fd5b8063897b06371461030e578063b1a0b3581461032e578063c2d416011461034e57600080fd5b8063176de7a8116101385780633fc8c4d6116101125780633fc8c4d61461028f5780633fe3347a146102c1578063830d9ebe146102dd57600080fd5b8063176de7a8146102205780632421e1551461024257806330f49cac1461026f57600080fd5b80630a5ea9eb116101695780630a5ea9eb146101c75780630f087d76146101eb57806311a1933c1461020b57600080fd5b806306394c9b1461018557806306b2ad59146101a7575b600080fd5b34801561019157600080fd5b506101a56101a036600461112f565b610468565b005b3480156101b357600080fd5b506101a56101c236600461114c565b6104e8565b3480156101d357600080fd5b506007545b6040519081526020015b60405180910390f35b3480156101f757600080fd5b506101a561020636600461112f565b61057b565b34801561021757600080fd5b506006546101d8565b34801561022c57600080fd5b506102356105f4565b6040516101e291906113b3565b34801561024e57600080fd5b5060408051808201909152600481526306c6f6f760e41b6020820152610235565b34801561027b57600080fd5b506101a561028a36600461112f565b610685565b34801561029b57600080fd5b506005546001600160a01b03165b6040516001600160a01b0390911681526020016101e2565b3480156102cd57600080fd5b5060006040516101e2919061138b565b3480156102e957600080fd5b506000546102fe90600160a01b900460ff1681565b60405190151581526020016101e2565b34801561031a57600080fd5b506101a56103293660046112bd565b6106fe565b34801561033a57600080fd5b506101a56103493660046112bd565b61075e565b34801561035a57600080fd5b506103636107dc565b60405160ff90911681526020016101e2565b34801561038157600080fd5b50610235610864565b34801561039657600080fd5b506003546101d8565b3480156103ab57600080fd5b506101a56103ba3660046112bd565b6108b4565b3480156103cb57600080fd5b506002546001600160a01b03166102a9565b3480156103e957600080fd5b506101a56103f836600461112f565b610914565b34801561040957600080fd5b506101a561041836600461114c565b610961565b34801561042957600080fd5b506000546102a9906001600160a01b031681565b34801561044957600080fd5b5060085460ff166102fe565b6101a56104633660046111fd565b6109cd565b6004546001600160a01b03163314610493576040516327e1f1e560e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0383169081179091556040519081527f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e54906020015b60405180910390a150565b6004546001600160a01b03163314610513576040516327e1f1e560e01b815260040160405180910390fd5b60008054821515600160a01b027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff9091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a443906104dd90831515815260200190565b6004546001600160a01b031633146105a6576040516327e1f1e560e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527fe6bc4ba4d04102f8f1140ad88cba6b7bd753b0391069bca06f44a955507dbb93906020016104dd565b6060600860019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561064457600080fd5b505afa158015610658573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106809190810190611186565b905090565b6004546001600160a01b031633146106b0576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020016104dd565b6004546001600160a01b03163314610729576040516327e1f1e560e01b815260040160405180910390fd5b60038190556040518181527f1c853e705f5e96d9076d1f48114d62650faf218827df3fed720227b3dbf18c5a906020016104dd565b6004546001600160a01b03163314610789576040516327e1f1e560e01b815260040160405180910390fd5b806107a7576040516313a2a85760e21b815260040160405180910390fd5b60078190556040518181527fc9993a13ab327e43d2c7222016ea042dc8e0889c91571ae6062990deacb4540c906020016104dd565b6000600860019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561082c57600080fd5b505afa158015610840573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068091906112ef565b6060600860019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b15801561064457600080fd5b6004546001600160a01b031633146108df576040516327e1f1e560e01b815260040160405180910390fd5b60068190556040518181527f1c068decb3b5138b265d62b22c4c2d8191a2e0bd3745e97b5b0ff66fa852eca5906020016104dd565b6004546001600160a01b0316331461093f576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0316331461098c576040516327e1f1e560e01b815260040160405180910390fd5b6008805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e09906020016104dd565b60085460ff16156109f157604051630e2f42c960e31b815260040160405180910390fd5b60035481511015610a155760405163617ab12d60e11b815260040160405180910390fd5b6000610a2e826040015183600001518460600151610a9b565b905080826020015114610a54576040516301bfaa2560e51b815260040160405180910390fd5b610a5d33610bc3565b15610a7b57604051632e70c0b160e01b815260040160405180910390fd5b610a97826000015183602001518460a001518560800151610c61565b5050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610ade5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610b1057604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610b689160040161135a565b60206040518083038186803b158015610b8057600080fd5b505afa158015610b94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb891906112d6565b9150505b9392505050565b60008054600160a01b900460ff1615610bde57506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610c2357600080fd5b505afa158015610c37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5b9190611169565b92915050565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610cbb918591906004016113c6565b600060405180830381600087803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b5050600254600554600754600654610d3395506001600160a01b0393841694509190921691610d2291610d1c908b610d3a565b90610d46565b610d2c878a6114a5565b6000610d52565b5050505050565b6000610bbc82846114df565b6000610bbc82846114bd565b803414610da65760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600854610dc39061010090046001600160a01b0316338785610de2565b8215610d3357600854610d339061010090046001600160a01b03163386865b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610e51908590610e57565b50505050565b6000610eac826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f419092919063ffffffff16565b805190915015610f3c5780806020019051810190610eca9190611169565b610f3c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610d9d565b505050565b6060610f508484600085610f58565b949350505050565b606082471015610fd05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610d9d565b6001600160a01b0385163b6110275760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d9d565b600080866001600160a01b03168587604051611043919061133e565b60006040518083038185875af1925050503d8060008114611080576040519150601f19603f3d011682016040523d82523d6000602084013e611085565b606091505b50915091506110958282866110a0565b979650505050505050565b606083156110af575081610bbc565b8251156110bf5782518084602001fd5b8160405162461bcd60e51b8152600401610d9d91906113b3565b600082601f8301126110ea57600080fd5b81356110fd6110f88261147d565b61144c565b81815284602083860101111561111257600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561114157600080fd5b8135610bbc81611556565b60006020828403121561115e57600080fd5b8135610bbc8161156e565b60006020828403121561117b57600080fd5b8151610bbc8161156e565b60006020828403121561119857600080fd5b815167ffffffffffffffff8111156111af57600080fd5b8201601f810184136111c057600080fd5b80516111ce6110f88261147d565b8181528560208385010111156111e357600080fd5b6111f48260208301602086016114fe565b95945050505050565b60006020828403121561120f57600080fd5b813567ffffffffffffffff8082111561122757600080fd5b9083019060c0828603121561123b57600080fd5b611243611423565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff8116811461127e57600080fd5b606082015260808301358281111561129557600080fd5b6112a1878286016110d9565b60808301525060a083013560a082015280935050505092915050565b6000602082840312156112cf57600080fd5b5035919050565b6000602082840312156112e857600080fd5b5051919050565b60006020828403121561130157600080fd5b815160ff81168114610bbc57600080fd5b6000815180845261132a8160208601602086016114fe565b601f01601f19169290920160200192915050565b600082516113508184602087016114fe565b9190910192915050565b60608101818360005b6003811015611382578151835260209283019290910190600101611363565b50505092915050565b60208101600283106113ad57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610bbc6020830184611312565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261140a60e0840182611312565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff8111828210171561144657611446611540565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561147557611475611540565b604052919050565b600067ffffffffffffffff82111561149757611497611540565b50601f01601f191660200190565b600082198211156114b8576114b861152a565b500190565b6000826114da57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114f9576114f961152a565b500290565b60005b83811015611519578181015183820152602001611501565b83811115610e515750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461156b57600080fd5b50565b801515811461156b57600080fdfea26469706673582212208ca0ed3c2ee15cbcbab1f93e31b7acf1d0fa7dab2b6b747e0e32fe54c7e9b5df64736f6c63430008070033';

type MystikoV2LoopERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopERC20> {
    return super.deploy(_hasher3, _token, overrides || {}) as Promise<MystikoV2LoopERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, overrides || {});
  }
  attach(address: string): MystikoV2LoopERC20 {
    return super.attach(address) as MystikoV2LoopERC20;
  }
  connect(signer: Signer): MystikoV2LoopERC20__factory {
    return super.connect(signer) as MystikoV2LoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2LoopERC20';
  public readonly contractName: 'MystikoV2LoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2LoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopERC20;
  }
}
