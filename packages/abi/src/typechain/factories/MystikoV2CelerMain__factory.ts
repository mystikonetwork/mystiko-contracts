/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2CelerMain, MystikoV2CelerMainInterface } from '../MystikoV2CelerMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSanctionsContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSanctionCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'toggleDeposits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_check',
        type: 'bool',
      },
    ],
    name: 'toggleSanctionCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionContractAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb1790557f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016001553480156200005b57600080fd5b50604051620025eb380380620025eb8339810160408190526200007e91620000b2565b600c80546001600160a01b03199081163317909155600280546001600160a01b0390931692909116919091179055620000e4565b600060208284031215620000c557600080fd5b81516001600160a01b0381168114620000dd57600080fd5b9392505050565b6124f780620000f46000396000f3fe6080604052600436106101965760003560e01c8063897b0637116100e1578063ce7461021161008a578063e19abef811610064578063e19abef81461046c578063ed6ea33a1461048c578063efbfb2ae146104ab578063f4ad17c6146104c057600080fd5b8063ce74610214610407578063cfc7e2da14610439578063ddac5dc11461044e57600080fd5b80639c649fdf116100bb5780639c649fdf146103b4578063a3bc64f2146103c7578063b4318ead146103e757600080fd5b8063897b06371461036157806399383f78146103815780639a03636c146103a157600080fd5b80633fe3347a116101435780635e10b2b71161011d5780635e10b2b71461030c5780637d2c85201461032c578063825b5f8d1461034c57600080fd5b80633fe3347a146102a0578063521ff057146102cd5780635898a0a8146102ed57600080fd5b80632421e155116101745780632421e155146101fd57806330d780361461025557806334c33e831461028057600080fd5b806306394c9b1461019b578063153dc450146101bd57806319e75d6e146101dd575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004611fe5565b6104d5565b005b3480156101c957600080fd5b506101bb6101d836600461219d565b610547565b3480156101e957600080fd5b506101bb6101f836600461219d565b610597565b34801561020957600080fd5b5060408051808201909152600581527f63656c657200000000000000000000000000000000000000000000000000000060208201525b60405161024c9190612373565b60405180910390f35b34801561026157600080fd5b50600054600160a01b900460ff165b604051901515815260200161024c565b34801561028c57600080fd5b506101bb61029b366004611fe5565b6105e7565b3480156102ac57600080fd5b5060408051808201909152600481526336b0b4b760e11b602082015261023f565b3480156102d957600080fd5b506101bb6102e836600461219d565b610654565b3480156102f957600080fd5b50600a545b60405190815260200161024c565b34801561031857600080fd5b506101bb61032736600461219d565b6106f4565b34801561033857600080fd5b506101bb6103473660046121cf565b610744565b34801561035857600080fd5b50600b546102fe565b34801561036d57600080fd5b506101bb61037c36600461219d565b610801565b34801561038d57600080fd5b506101bb61039c3660046120a5565b610851565b6101bb6103af3660046120df565b6108ba565b6102706103c2366004612000565b610bef565b3480156103d357600080fd5b506101bb6103e2366004611fe5565b610ca8565b3480156103f357600080fd5b506101bb6104023660046120a5565b610d15565b34801561041357600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161024c565b34801561044557600080fd5b506007546102fe565b34801561045a57600080fd5b506003546001600160a01b0316610421565b34801561047857600080fd5b506101bb610487366004611fe5565b610d7e565b34801561049857600080fd5b50600c54600160a01b900460ff16610270565b3480156104b757600080fd5b506008546102fe565b3480156104cc57600080fd5b506009546102fe565b600c546001600160a01b031633146105255760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b60448201526064015b60405180910390fd5b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b600c546001600160a01b031633146105925760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600a55565b600c546001600160a01b031633146105e25760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600855565b600c546001600160a01b031633146106325760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600c546001600160a01b0316331461069f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600081116106ef5760405162461bcd60e51b815260206004820152601f60248201527f696e76616c69642070656572206d696e696d616c20726f6c6c75702066656500604482015260640161051c565b600b55565b600c546001600160a01b0316331461073f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600955565b600c546001600160a01b0316331461078f5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600380547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff86160217905581516107dc906004906020850190611e67565b50600580546001600160a01b0319166001600160a01b03929092169190911790555050565b600c546001600160a01b0316331461084c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600755565b600c546001600160a01b0316331461089c5760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600c8054911515600160a01b0260ff60a01b19909216919091179055565b600c54600160a01b900460ff16156109145760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c65640000000000000000000000604482015260640161051c565b600754815110156109675760405162461bcd60e51b815260206004820152600e60248201527f616d6f756e7420746f6f20666577000000000000000000000000000000000000604482015260640161051c565b6008548160a0015110156109bd5760405162461bcd60e51b815260206004820152601260248201527f6272696467652066656520746f6f206665770000000000000000000000000000604482015260640161051c565b600a548160c001511015610a135760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f20666577000000000000000000000000604482015260640161051c565b600b548160e001511015610a695760405162461bcd60e51b815260206004820152601260248201527f726f6c6c75702066656520746f6f206665770000000000000000000000000000604482015260640161051c565b6000610a82826040015183600001518460600151610deb565b905080826020015114610ad75760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f727265637400000000000000604482015260640161051c565b610ae033610f71565b15610b2d5760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e656420616464726573730000000000000000000000000000604482015260640161051c565b60035460e083015160c08401518451610b68936001600160a01b03169291610b549161240d565b610b5e919061240d565b8460a00151611012565b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610bab82611113565b9050610bbb8460a0015182611182565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b6006546000906001600160a01b03163314610c4c5760405162461bcd60e51b815260206004820152601e60248201527f6d73672073656e646572206973206e6f74206272696467652070726f78790000604482015260640161051c565b6000610c8d85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061120892505050565b9050610c9b868885846112d0565b5060019695505050505050565b600c546001600160a01b03163314610cf35760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600c546001600160a01b03163314610d605760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b60008054911515600160a01b0260ff60a01b19909216919091179055565b600c546001600160a01b03163314610dc95760405162461bcd60e51b815260206004820152600e60248201526d37b7363c9037b832b930ba37b91760911b604482015260640161051c565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b60006001548410610e4a5760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b606482015260840161051c565b6001548310610ec15760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a450000000000000000000000000000000000000000000000000000606482015260840161051c565b60025460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610f1991600401612342565b60206040518083038186803b158015610f3157600080fd5b505afa158015610f45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6991906121b6565b949350505050565b60008054600160a01b900460ff1615610f8c57506000919050565b60005460405163df592f7d60e01b81526001600160a01b03848116600483015290911690819063df592f7d9060240160206040518083038186803b158015610fd357600080fd5b505afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b91906120c2565b9392505050565b61101c818361240d565b341461106a5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e0000000000000000000000000000604482015260640161051c565b6000836001600160a01b03168360405160006040518083038185875af1925050503d80600081146110b7576040519150601f19603f3d011682016040523d82523d6000602084013e6110bc565b606091505b505090508061110d5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c656400000000000000000000604482015260640161051c565b50505050565b60608061112383600001516114b0565b61113084602001516114b0565b61113d85604001516114b0565b61114a86606001516114b0565b6111578760800151611548565b60405160200161116b95949392919061229c565b60408051601f198184030181529190529392505050565b600654600554600354604051634f9e72ad60e11b81526001600160a01b0393841693639f3ce55a9387936111d293919092169167ffffffffffffffff600160a01b90910416908790600401612307565b6000604051808303818588803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b50505050505050565b61123a6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b61126c6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000611278848261157f565b9083529050611287848261157f565b6020840191909152905061129b848261157f565b604084019190915290506112af848261157f565b606084019190915290506112c384826116b0565b5060808301525092915050565b6005546001600160a01b0384811691161461132d5760405162461bcd60e51b815260206004820152601e60248201527f66726f6d2070726f78792061646472657373206e6f74206d6174636865640000604482015260640161051c565b60035467ffffffffffffffff858116600160a01b90920416146113925760405162461bcd60e51b815260206004820152601960248201527f66726f6d20636861696e206964206e6f74206d61746368656400000000000000604482015260640161051c565b80516113e05760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e203000604482015260640161051c565b6003546040516378d60cd760e01b81526001600160a01b03909116906378d60cd7906114129084908690600401612386565b602060405180830381600087803b15801561142c57600080fd5b505af1158015611440573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061146491906120c2565b61110d5760405162461bcd60e51b815260206004820152601260248201527f63616c6c20656e7175657565206572726f720000000000000000000000000000604482015260640161051c565b60606001600160ff1b038211156115095760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e67650000000000604482015260640161051c565b60405160208082526000601f5b828210156115385785811a826020860101536001919091019060001901611516565b5050506040818101905292915050565b8051606090611556816117bd565b8360405160200161156892919061226d565b604051602081830303815290604052915050919050565b6000808351836020611591919061240d565b111580156115a857506115a583602061240d565b83105b6116005760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b606482015260840161051c565b600060405160206000600182038760208a0101515b838310156116355780821a83860153600183019250600182039150611615565b50505081016040525190506001600160ff1b038111156116975760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e6765000000000000000000604482015260640161051c565b806116a385602061240d565b92509250505b9250929050565b60606000806116bf858561188c565b86519095509091506116d1828661240d565b111580156116e757506116e4818561240d565b84105b61173f5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b606482015260840161051c565b60608115801561175a576040519150602082016040526117a4565b6040519150601f8316801560200281840101848101888315602002848c0101015b8183101561179357805183526020928301920161177b565b5050848452601f01601f1916604052505b50806117b0838761240d565b9350935050509250929050565b606060fd8267ffffffffffffffff1610156117f257604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff16116118425761181260fd60f81b611a92565b61181b83611ab9565b60405160200161182c92919061226d565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff161161186d57611864607f60f91b611a92565b61181b83611afc565b61187e6001600160f81b0319611a92565b61181b83611b3f565b919050565b600080600061189b8585611b82565b94509050600060fd60f81b6001600160f81b031983161415611934576118c18686611c0a565b955061ffff16905060fd81108015906118dc575061ffff8111155b6119285760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e676500604482015260640161051c565b92508391506116a99050565b607f60f91b6001600160f81b0319831614156119bf576119548686611cc3565b955063ffffffff16905061ffff81118015611973575063ffffffff8111155b6119285760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161051c565b6001600160f81b03198083161415611a3c576119db8686611d95565b955067ffffffffffffffff16905063ffffffff81116119285760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161051c565b5060f881901c60fd81106119285760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161051c565b60408051600181526001600160f81b031983166020820152602181019091526060906117ec565b6040516002808252606091906000601f5b82821015611aec5785811a826020860101536001919091019060001901611aca565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611b2f5785811a826020860101536001919091019060001901611b0d565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611b725785811a826020860101536001919091019060001901611b50565b5050506028810160405292915050565b6000808351836001611b94919061240d565b11158015611bab5750611ba883600161240d565b83105b611bf75760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d604482015260640161051c565b83830160200151806116a385600161240d565b6000808351836002611c1c919061240d565b11158015611c335750611c3083600261240d565b83105b611c8a5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161051c565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e810351915050808460026116a3919061240d565b6000808351836004611cd5919061240d565b11158015611cec5750611ce983600461240d565b83105b611d435760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161051c565b600060405160046000600182038760208a0101515b83831015611d785780821a83860153600183019250600182039150611d58565b5050508181016040526020039003519050806116a385600461240d565b6000808351836008611da7919061240d565b11158015611dbe5750611dbb83600861240d565b83105b611e155760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161051c565b600060405160086000600182038760208a0101515b83831015611e4a5780821a83860153600183019250600182039150611e2a565b5050508181016040526020039003519050806116a385600861240d565b828054611e739061245f565b90600052602060002090601f016020900481019282611e955760008555611edb565b82601f10611eae57805160ff1916838001178555611edb565b82800160010185558215611edb579182015b82811115611edb578251825591602001919060010190611ec0565b50611ee7929150611eeb565b5090565b5b80821115611ee75760008155600101611eec565b600067ffffffffffffffff80841115611f1b57611f1b61249a565b604051601f8501601f19908116603f01168101908282118183101715611f4357611f4361249a565b81604052809350858152868686011115611f5c57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461188757600080fd5b600082601f830112611f9e57600080fd5b61100b83833560208501611f00565b80356fffffffffffffffffffffffffffffffff8116811461188757600080fd5b803567ffffffffffffffff8116811461188757600080fd5b600060208284031215611ff757600080fd5b61100b82611f76565b60008060008060006080868803121561201857600080fd5b61202186611f76565b945061202f60208701611fcd565b9350604086013567ffffffffffffffff8082111561204c57600080fd5b818801915088601f83011261206057600080fd5b81358181111561206f57600080fd5b89602082850101111561208157600080fd5b60208301955080945050505061209960608701611f76565b90509295509295909350565b6000602082840312156120b757600080fd5b813561100b816124b0565b6000602082840312156120d457600080fd5b815161100b816124b0565b6000602082840312156120f157600080fd5b813567ffffffffffffffff8082111561210957600080fd5b90830190610100828603121561211e57600080fd5b6121266123e3565b82358152602083013560208201526040830135604082015261214a60608401611fad565b606082015260808301358281111561216157600080fd5b61216d87828601611f8d565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b6000602082840312156121af57600080fd5b5035919050565b6000602082840312156121c857600080fd5b5051919050565b6000806000606084860312156121e457600080fd5b6121ed84611fcd565b9250602084013567ffffffffffffffff81111561220957600080fd5b8401601f8101861361221a57600080fd5b61222986823560208401611f00565b92505061223860408501611f76565b90509250925092565b60008151808452612259816020860160208601612433565b601f01601f19169290920160200192915050565b6000835161227f818460208801612433565b835190830190612293818360208801612433565b01949350505050565b600086516122ae818460208b01612433565b8651908301906122c2818360208b01612433565b86519101906122d5818360208a01612433565b85519101906122e8818360208901612433565b84519101906122fb818360208801612433565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006123396060830184612241565b95945050505050565b60608101818360005b600381101561236a57815183526020928301929091019060010161234b565b50505092915050565b60208152600061100b6020830184612241565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526123ca60e0840182612241565b9150506001600160a01b03831660208301529392505050565b604051610100810167ffffffffffffffff811182821017156124075761240761249a565b60405290565b6000821982111561242e57634e487b7160e01b600052601160045260246000fd5b500190565b60005b8381101561244e578181015183820152602001612436565b8381111561110d5750506000910152565b600181811c9082168061247357607f821691505b6020821081141561249457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b80151581146124be57600080fd5b5056fea2646970667358221220a6a9602ab626b0f7fc636a7532ce231182878de3525d35f8bdecafdbaaa45d8564736f6c63430008070033';

type MystikoV2CelerMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerMain__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2CelerMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2CelerMain {
    return super.attach(address) as MystikoV2CelerMain;
  }
  connect(signer: Signer): MystikoV2CelerMain__factory {
    return super.connect(signer) as MystikoV2CelerMain__factory;
  }
  static readonly contractName: 'MystikoV2CelerMain';
  public readonly contractName: 'MystikoV2CelerMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerMainInterface {
    return new utils.Interface(_abi) as MystikoV2CelerMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerMain;
  }
}
