/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2CelerMain, MystikoV2CelerMainInterface } from '../MystikoV2CelerMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905534801561003657600080fd5b5060405162002220380380620022208339810160408190526100579161008a565b600b80546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556100ba565b60006020828403121561009c57600080fd5b81516001600160a01b03811681146100b357600080fd5b9392505050565b61215680620000ca6000396000f3fe6080604052600436106101965760003560e01c8063830d9ebe116100e1578063ddac5dc11161008a578063ec571c6a11610064578063ec571c6a14610460578063ed6ea33a14610480578063efbfb2ae1461049f578063f4ad17c6146104b457600080fd5b8063ddac5dc1146103ee578063e19abef814610420578063ea0cde851461044057600080fd5b80639c649fdf116100bb5780639c649fdf146103a6578063a3bc64f2146103b9578063cfc7e2da146103d957600080fd5b8063830d9ebe14610342578063897b0637146103735780639a03636c1461039357600080fd5b80633fe3347a116101435780635e10b2b71161011d5780635e10b2b7146102ed5780637d2c85201461030d578063825b5f8d1461032d57600080fd5b80633fe3347a14610292578063521ff057146102ae5780635898a0a8146102ce57600080fd5b806319e75d6e1161017457806319e75d6e146101fd5780632421e1551461021d57806330f49cac1461027257600080fd5b806306394c9b1461019b57806306b2ad59146101bd578063153dc450146101dd575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004611bfb565b6104c9565b005b3480156101c957600080fd5b506101bb6101d8366004611cc3565b610516565b3480156101e957600080fd5b506101bb6101f8366004611dbb565b610599565b34801561020957600080fd5b506101bb610218366004611dbb565b6105c9565b34801561022957600080fd5b50604080518082018252600581527f63656c6572000000000000000000000000000000000000000000000000000000602082015290516102699190611fbd565b60405180910390f35b34801561027e57600080fd5b506101bb61028d366004611bfb565b6105f9565b34801561029e57600080fd5b5060016040516102699190611f95565b3480156102ba57600080fd5b506101bb6102c9366004611dbb565b610672565b3480156102da57600080fd5b506009545b604051908152602001610269565b3480156102f957600080fd5b506101bb610308366004611dbb565b6106f8565b34801561031957600080fd5b506101bb610328366004611ded565b610728565b34801561033957600080fd5b50600a546102df565b34801561034e57600080fd5b5060005461036390600160a01b900460ff1681565b6040519015158152602001610269565b34801561037f57600080fd5b506101bb61038e366004611dbb565b6107c5565b6101bb6103a1366004611cfd565b6107f5565b6103636103b4366004611c18565b6109e1565b3480156103c557600080fd5b506101bb6103d4366004611bfb565b610a6b565b3480156103e557600080fd5b506006546102df565b3480156103fa57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610269565b34801561042c57600080fd5b506101bb61043b366004611bfb565b610ab8565b34801561044c57600080fd5b506101bb61045b366004611cc3565b610b05565b34801561046c57600080fd5b50600054610408906001600160a01b031681565b34801561048c57600080fd5b50600b54600160a01b900460ff16610363565b3480156104ab57600080fd5b506007546102df565b3480156104c057600080fd5b506008546102df565b600b546001600160a01b031633146104f4576040516327e1f1e560e01b815260040160405180910390fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610541576040516327e1f1e560e01b815260040160405180910390fd5b60008054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061058e90831515815260200190565b60405180910390a150565b600b546001600160a01b031633146105c4576040516327e1f1e560e01b815260040160405180910390fd5b600955565b600b546001600160a01b031633146105f4576040516327e1f1e560e01b815260040160405180910390fd5b600755565b600b546001600160a01b03163314610624576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200161058e565b600b546001600160a01b0316331461069d576040516327e1f1e560e01b815260040160405180910390fd5b600081116106f3576040516314e8955b60e21b815260206004820152601760248201527f70656572206d696e696d616c20726f6c6c75702066656500000000000000000060448201526064015b60405180910390fd5b600a55565b600b546001600160a01b03163314610723576040516327e1f1e560e01b815260040160405180910390fd5b600855565b600b546001600160a01b03163314610753576040516327e1f1e560e01b815260040160405180910390fd5b600280547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff86160217905581516107a0906003906020850190611a8d565b50600480546001600160a01b0319166001600160a01b03929092169190911790555050565b600b546001600160a01b031633146107f0576040516327e1f1e560e01b815260040160405180910390fd5b600655565b600b54600160a01b900460ff161561082057604051630e2f42c960e31b815260040160405180910390fd5b600654815110156108445760405163617ab12d60e11b815260040160405180910390fd5b6007548160a00151101561086b5760405163c4d8d00d60e01b815260040160405180910390fd5b6009548160c001511015610892576040516355a6d6a160e11b815260040160405180910390fd5b600a548160e0015110156108b95760405163784f02bd60e11b815260040160405180910390fd5b60006108d2826040015183600001518460600151610b4e565b9050808260200151146108f8576040516301bfaa2560e51b815260040160405180910390fd5b61090133610c92565b1561091f57604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e0830151606082015260808084015190820152600061096282610d30565b90506109728460a0015182610d9f565b60025460e085015160c086015186516109ad936001600160a01b0316929161099991612057565b6109a39190612057565b8660a00151610e22565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b6005546000906001600160a01b03163314610a0f57604051633dca01cf60e11b815260040160405180910390fd5b6000610a5085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f2392505050565b9050610a5e86888584610feb565b5060019695505050505050565b600b546001600160a01b03163314610a96576040516327e1f1e560e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610ae3576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610b30576040516327e1f1e560e01b815260040160405180910390fd5b600b8054911515600160a01b0260ff60a01b19909216919091179055565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410610b905760405163805f2a4960e01b815260040160405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826fffffffffffffffffffffffffffffffff1610610be257604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610c3a91600401611f64565b60206040518083038186803b158015610c5257600080fd5b505afa158015610c66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8a9190611dd4565b949350505050565b60008054600160a01b900460ff1615610cad57506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610cf257600080fd5b505afa158015610d06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2a9190611ce0565b92915050565b606080610d4083600001516110d8565b610d4d84602001516110d8565b610d5a85604001516110d8565b610d6786606001516110d8565b610d748760800151611170565b604051602001610d88959493929190611ebe565b60408051601f198184030181529190529392505050565b60055460048054600254604051634f9e72ad60e11b81526001600160a01b0394851694639f3ce55a948894610dec94921692600160a01b90920467ffffffffffffffff1691889101611f29565b6000604051808303818588803b158015610e0557600080fd5b505af1158015610e19573d6000803e3d6000fd5b50505050505050565b610e2c8183612057565b3414610e7a5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016106ea565b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610ec7576040519150601f19603f3d011682016040523d82523d6000602084013e610ecc565b606091505b5050905080610f1d5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c65640000000000000000000060448201526064016106ea565b50505050565b610f556040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b610f876040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000610f9384826111a7565b9083529050610fa284826111a7565b60208401919091529050610fb684826111a7565b60408401919091529050610fca84826111a7565b60608401919091529050610fde84826112d8565b5060808301525092915050565b6004546001600160a01b0384811691161461101957604051631440e07960e11b815260040160405180910390fd5b60025467ffffffffffffffff858116600160a01b909204161461104f57604051633876304f60e21b815260040160405180910390fd5b805161106e5760405163820bf1e560e01b815260040160405180910390fd5b6002546040516378d60cd760e01b81526001600160a01b03909116906378d60cd7906110a09084908690600401611fd0565b600060405180830381600087803b1580156110ba57600080fd5b505af11580156110ce573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b038211156111315760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016106ea565b60405160208082526000601f5b828210156111605785811a82602086010153600191909101906000190161113e565b5050506040818101905292915050565b805160609061117e816113e5565b83604051602001611190929190611e8f565b604051602081830303815290604052915050919050565b60008083518360206111b99190612057565b111580156111d057506111cd836020612057565b83105b6112285760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016106ea565b600060405160206000600182038760208a0101515b8383101561125d5780821a8386015360018301925060018203915061123d565b50505081016040525190506001600160ff1b038111156112bf5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016106ea565b806112cb856020612057565b92509250505b9250929050565b60606000806112e785856114b2565b86519095509091506112f98286612057565b1115801561130f575061130c8185612057565b84105b6113675760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016106ea565b606081158015611382576040519150602082016040526113cc565b6040519150601f8316801560200281840101848101888315602002848c0101015b818310156113bb5780518352602092830192016113a3565b5050848452601f01601f1916604052505b50806113d88387612057565b9350935050509250929050565b606060fd8267ffffffffffffffff16101561141857604080516001815260f884901b602082015260218101909152610d2a565b61ffff8267ffffffffffffffff16116114685761143860fd60f81b6116b8565b611441836116df565b604051602001611452929190611e8f565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116114935761148a607f60f91b6116b8565b61144183611722565b6114a46001600160f81b03196116b8565b61144183611765565b919050565b60008060006114c185856117a8565b94509050600060fd60f81b6001600160f81b03198316141561155a576114e78686611830565b955061ffff16905060fd8110801590611502575061ffff8111155b61154e5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016106ea565b92508391506112d19050565b607f60f91b6001600160f81b0319831614156115e55761157a86866118e9565b955063ffffffff16905061ffff81118015611599575063ffffffff8111155b61154e5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106ea565b6001600160f81b031980831614156116625761160186866119bb565b955067ffffffffffffffff16905063ffffffff811161154e5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106ea565b5060f881901c60fd811061154e5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106ea565b60408051600181526001600160f81b03198316602082015260218101909152606090610d2a565b6040516002808252606091906000601f5b828210156117125785811a8260208601015360019190910190600019016116f0565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156117555785811a826020860101536001919091019060001901611733565b5050506024810160405292915050565b6040516008808252606091906000601f5b828210156117985785811a826020860101536001919091019060001901611776565b5050506028810160405292915050565b60008083518360016117ba9190612057565b111580156117d157506117ce836001612057565b83105b61181d5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016106ea565b83830160200151806112cb856001612057565b60008083518360026118429190612057565b111580156118595750611856836002612057565b83105b6118b05760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106ea565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e810351915050808460026112cb9190612057565b60008083518360046118fb9190612057565b11158015611912575061190f836004612057565b83105b6119695760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106ea565b600060405160046000600182038760208a0101515b8383101561199e5780821a8386015360018301925060018203915061197e565b5050508181016040526020039003519050806112cb856004612057565b60008083518360086119cd9190612057565b111580156119e457506119e1836008612057565b83105b611a3b5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106ea565b600060405160086000600182038760208a0101515b83831015611a705780821a83860153600183019250600182039150611a50565b5050508181016040526020039003519050806112cb856008612057565b828054611a99906120a9565b90600052602060002090601f016020900481019282611abb5760008555611b01565b82601f10611ad457805160ff1916838001178555611b01565b82800160010185558215611b01579182015b82811115611b01578251825591602001919060010190611ae6565b50611b0d929150611b11565b5090565b5b80821115611b0d5760008155600101611b12565b600067ffffffffffffffff80841115611b4157611b416120e4565b604051601f8501601f19908116603f01168101908282118183101715611b6957611b696120e4565b81604052809350858152868686011115611b8257600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611bad57600080fd5b611bbc83833560208501611b26565b9392505050565b80356fffffffffffffffffffffffffffffffff811681146114ad57600080fd5b803567ffffffffffffffff811681146114ad57600080fd5b600060208284031215611c0d57600080fd5b8135611bbc816120fa565b600080600080600060808688031215611c3057600080fd5b8535611c3b816120fa565b9450611c4960208701611be3565b9350604086013567ffffffffffffffff80821115611c6657600080fd5b818801915088601f830112611c7a57600080fd5b813581811115611c8957600080fd5b896020828501011115611c9b57600080fd5b6020830195508094505050506060860135611cb5816120fa565b809150509295509295909350565b600060208284031215611cd557600080fd5b8135611bbc81612112565b600060208284031215611cf257600080fd5b8151611bbc81612112565b600060208284031215611d0f57600080fd5b813567ffffffffffffffff80821115611d2757600080fd5b908301906101008286031215611d3c57600080fd5b611d4461202d565b823581526020830135602082015260408301356040820152611d6860608401611bc3565b6060820152608083013582811115611d7f57600080fd5b611d8b87828601611b9c565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b600060208284031215611dcd57600080fd5b5035919050565b600060208284031215611de657600080fd5b5051919050565b600080600060608486031215611e0257600080fd5b611e0b84611be3565b9250602084013567ffffffffffffffff811115611e2757600080fd5b8401601f81018613611e3857600080fd5b611e4786823560208401611b26565b9250506040840135611e58816120fa565b809150509250925092565b60008151808452611e7b81602086016020860161207d565b601f01601f19169290920160200192915050565b60008351611ea181846020880161207d565b835190830190611eb581836020880161207d565b01949350505050565b60008651611ed0818460208b0161207d565b865190830190611ee4818360208b0161207d565b8651910190611ef7818360208a0161207d565b8551910190611f0a81836020890161207d565b8451910190611f1d81836020880161207d565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201526000611f5b6060830184611e63565b95945050505050565b60608101818360005b6003811015611f8c578151835260209283019290910190600101611f6d565b50505092915050565b6020810160028310611fb757634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000611bbc6020830184611e63565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261201460e0840182611e63565b9150506001600160a01b03831660208301529392505050565b604051610100810167ffffffffffffffff81118282101715612051576120516120e4565b60405290565b6000821982111561207857634e487b7160e01b600052601160045260246000fd5b500190565b60005b83811015612098578181015183820152602001612080565b83811115610f1d5750506000910152565b600181811c908216806120bd57607f821691505b602082108114156120de57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461210f57600080fd5b50565b801515811461210f57600080fdfea26469706673582212208f457dede01ec4018d4cd0ab3636550e2d744beff84a4edee488a6ad248864a264736f6c63430008070033';

type MystikoV2CelerMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerMain__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2CelerMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2CelerMain {
    return super.attach(address) as MystikoV2CelerMain;
  }
  connect(signer: Signer): MystikoV2CelerMain__factory {
    return super.connect(signer) as MystikoV2CelerMain__factory;
  }
  static readonly contractName: 'MystikoV2CelerMain';
  public readonly contractName: 'MystikoV2CelerMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerMainInterface {
    return new utils.Interface(_abi) as MystikoV2CelerMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerMain;
  }
}
