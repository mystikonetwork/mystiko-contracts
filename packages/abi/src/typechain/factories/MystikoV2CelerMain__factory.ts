/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2CelerMain, MystikoV2CelerMainInterface } from '../MystikoV2CelerMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheckDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheckDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'setMinAmount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setSanctionCheckDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b0319167340c57923924b5c5c5455c48d93317139addac8fb17905534801561003657600080fd5b5060405162002485380380620024858339810160408190526100579161008a565b600b80546001600160a01b03199081163317909155600180546001600160a01b03909316929091169190911790556100ba565b60006020828403121561009c57600080fd5b81516001600160a01b03811681146100b357600080fd5b9392505050565b6123bb80620000ca6000396000f3fe6080604052600436106101965760003560e01c8063830d9ebe116100e1578063ddac5dc11161008a578063ec571c6a11610064578063ec571c6a14610460578063ed6ea33a14610480578063efbfb2ae1461049f578063f4ad17c6146104b457600080fd5b8063ddac5dc1146103ee578063e19abef814610420578063ea0cde851461044057600080fd5b80639c649fdf116100bb5780639c649fdf146103a6578063a3bc64f2146103b9578063cfc7e2da146103d957600080fd5b8063830d9ebe14610342578063897b0637146103735780639a03636c1461039357600080fd5b80633fe3347a116101435780635e10b2b71161011d5780635e10b2b7146102ed5780637d2c85201461030d578063825b5f8d1461032d57600080fd5b80633fe3347a14610292578063521ff057146102ae5780635898a0a8146102ce57600080fd5b806319e75d6e1161017457806319e75d6e146101fd5780632421e1551461021d57806330f49cac1461027257600080fd5b806306394c9b1461019b57806306b2ad59146101bd578063153dc450146101dd575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004611e60565b6104c9565b005b3480156101c957600080fd5b506101bb6101d8366004611f28565b610516565b3480156101e957600080fd5b506101bb6101f8366004612020565b610599565b34801561020957600080fd5b506101bb610218366004612020565b6105c9565b34801561022957600080fd5b50604080518082018252600581527f63656c6572000000000000000000000000000000000000000000000000000000602082015290516102699190612222565b60405180910390f35b34801561027e57600080fd5b506101bb61028d366004611e60565b6105f9565b34801561029e57600080fd5b50600160405161026991906121fa565b3480156102ba57600080fd5b506101bb6102c9366004612020565b610672565b3480156102da57600080fd5b506009545b604051908152602001610269565b3480156102f957600080fd5b506101bb610308366004612020565b6106f7565b34801561031957600080fd5b506101bb610328366004612052565b610727565b34801561033957600080fd5b50600a546102df565b34801561034e57600080fd5b5060005461036390600160a01b900460ff1681565b6040519015158152602001610269565b34801561037f57600080fd5b506101bb61038e366004612020565b6107c4565b6101bb6103a1366004611f62565b6107f4565b6103636103b4366004611e7d565b610afa565b3480156103c557600080fd5b506101bb6103d4366004611e60565b610bb3565b3480156103e557600080fd5b506006546102df565b3480156103fa57600080fd5b506002546001600160a01b03165b6040516001600160a01b039091168152602001610269565b34801561042c57600080fd5b506101bb61043b366004611e60565b610c00565b34801561044c57600080fd5b506101bb61045b366004611f28565b610c4d565b34801561046c57600080fd5b50600054610408906001600160a01b031681565b34801561048c57600080fd5b50600b54600160a01b900460ff16610363565b3480156104ab57600080fd5b506007546102df565b3480156104c057600080fd5b506008546102df565b600b546001600160a01b031633146104f4576040516327e1f1e560e01b815260040160405180910390fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610541576040516327e1f1e560e01b815260040160405180910390fd5b60008054821515600160a01b0260ff60a01b199091161790556040517fcdc31f40dac54b1c36a4e7d0cc192a99c3dd73a03d73ace4aeaa2bb3f655a4439061058e90831515815260200190565b60405180910390a150565b600b546001600160a01b031633146105c4576040516327e1f1e560e01b815260040160405180910390fd5b600955565b600b546001600160a01b031633146105f4576040516327e1f1e560e01b815260040160405180910390fd5b600755565b600b546001600160a01b03163314610624576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200161058e565b600b546001600160a01b0316331461069d576040516327e1f1e560e01b815260040160405180910390fd5b600081116106f25760405162461bcd60e51b815260206004820152601f60248201527f696e76616c69642070656572206d696e696d616c20726f6c6c7570206665650060448201526064015b60405180910390fd5b600a55565b600b546001600160a01b03163314610722576040516327e1f1e560e01b815260040160405180910390fd5b600855565b600b546001600160a01b03163314610752576040516327e1f1e560e01b815260040160405180910390fd5b600280547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff861602179055815161079f906003906020850190611cf2565b50600480546001600160a01b0319166001600160a01b03929092169190911790555050565b600b546001600160a01b031633146107ef576040516327e1f1e560e01b815260040160405180910390fd5b600655565b600b54600160a01b900460ff161561084e5760405162461bcd60e51b815260206004820152601560248201527f6465706f73697473206172652064697361626c6564000000000000000000000060448201526064016106e9565b600654815110156108a15760405162461bcd60e51b815260206004820152601060248201527f616d6f756e7420746f6f20736d616c6c0000000000000000000000000000000060448201526064016106e9565b6007548160a0015110156108f75760405162461bcd60e51b815260206004820152601260248201527f6272696467652066656520746f6f20666577000000000000000000000000000060448201526064016106e9565b6009548160c00151101561094d5760405162461bcd60e51b815260206004820152601460248201527f6578656375746f722066656520746f6f2066657700000000000000000000000060448201526064016106e9565b600a548160e0015110156109745760405163784f02bd60e11b815260040160405180910390fd5b600061098d826040015183600001518460600151610c96565b9050808260200151146109e25760405162461bcd60e51b815260206004820152601960248201527f636f6d6d69746d656e74206861736820696e636f72726563740000000000000060448201526064016106e9565b6109eb33610e6a565b15610a385760405162461bcd60e51b815260206004820152601260248201527f73616e6374696f6e65642061646472657373000000000000000000000000000060448201526064016106e9565b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610a7b82610f08565b9050610a8b8460a0015182610f77565b60025460e085015160c08601518651610ac6936001600160a01b03169291610ab2916122bc565b610abc91906122bc565b8660a00151610ffa565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b6005546000906001600160a01b03163314610b575760405162461bcd60e51b815260206004820152601e60248201527f6d73672073656e646572206973206e6f74206272696467652070726f7879000060448201526064016106e9565b6000610b9885858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110fb92505050565b9050610ba6868885846111c3565b5060019695505050505050565b600b546001600160a01b03163314610bde576040516327e1f1e560e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610c2b576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03163314610c78576040516327e1f1e560e01b815260040160405180910390fd5b600b8054911515600160a01b0260ff60a01b19909216919091179055565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018410610d135760405162461bcd60e51b8152602060048201526024808201527f686173684b2073686f756c64206265206c657373207468616e204649454c445f60448201526353495a4560e01b60648201526084016106e9565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826fffffffffffffffffffffffffffffffff1610610dba5760405162461bcd60e51b815260206004820152602660248201527f72616e646f6d532073686f756c64206265206c657373207468616e204649454c60448201527f445f53495a45000000000000000000000000000000000000000000000000000060648201526084016106e9565b60015460408051606081018252868152602081018690526fffffffffffffffffffffffffffffffff85168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610e12916004016121c9565b60206040518083038186803b158015610e2a57600080fd5b505afa158015610e3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e629190612039565b949350505050565b60008054600160a01b900460ff1615610e8557506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610eca57600080fd5b505afa158015610ede573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f029190611f45565b92915050565b606080610f18836000015161133d565b610f25846020015161133d565b610f32856040015161133d565b610f3f866060015161133d565b610f4c87608001516113d5565b604051602001610f60959493929190612123565b60408051601f198184030181529190529392505050565b60055460048054600254604051634f9e72ad60e11b81526001600160a01b0394851694639f3ce55a948894610fc494921692600160a01b90920467ffffffffffffffff169188910161218e565b6000604051808303818588803b158015610fdd57600080fd5b505af1158015610ff1573d6000803e3d6000fd5b50505050505050565b61100481836122bc565b34146110525760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064016106e9565b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461109f576040519150601f19603f3d011682016040523d82523d6000602084013e6110a4565b606091505b50509050806110f55760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c65640000000000000000000060448201526064016106e9565b50505050565b61112d6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b61115f6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b600061116b848261140c565b908352905061117a848261140c565b6020840191909152905061118e848261140c565b604084019190915290506111a2848261140c565b606084019190915290506111b6848261153d565b5060808301525092915050565b6004546001600160a01b038481169116146112205760405162461bcd60e51b815260206004820152601e60248201527f66726f6d2070726f78792061646472657373206e6f74206d617463686564000060448201526064016106e9565b60025467ffffffffffffffff858116600160a01b90920416146112855760405162461bcd60e51b815260206004820152601960248201527f66726f6d20636861696e206964206e6f74206d6174636865640000000000000060448201526064016106e9565b80516112d35760405162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e20300060448201526064016106e9565b6002546040516378d60cd760e01b81526001600160a01b03909116906378d60cd7906113059084908690600401612235565b600060405180830381600087803b15801561131f57600080fd5b505af1158015611333573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b038211156113965760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016106e9565b60405160208082526000601f5b828210156113c55785811a8260208601015360019190910190600019016113a3565b5050506040818101905292915050565b80516060906113e38161164a565b836040516020016113f59291906120f4565b604051602081830303815290604052915050919050565b600080835183602061141e91906122bc565b1115801561143557506114328360206122bc565b83105b61148d5760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016106e9565b600060405160206000600182038760208a0101515b838310156114c25780821a838601536001830192506001820391506114a2565b50505081016040525190506001600160ff1b038111156115245760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016106e9565b806115308560206122bc565b92509250505b9250929050565b606060008061154c8585611717565b865190955090915061155e82866122bc565b11158015611574575061157181856122bc565b84105b6115cc5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016106e9565b6060811580156115e757604051915060208201604052611631565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611620578051835260209283019201611608565b5050848452601f01601f1916604052505b508061163d83876122bc565b9350935050509250929050565b606060fd8267ffffffffffffffff16101561167d57604080516001815260f884901b602082015260218101909152610f02565b61ffff8267ffffffffffffffff16116116cd5761169d60fd60f81b61191d565b6116a683611944565b6040516020016116b79291906120f4565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116116f8576116ef607f60f91b61191d565b6116a683611987565b6117096001600160f81b031961191d565b6116a6836119ca565b919050565b60008060006117268585611a0d565b94509050600060fd60f81b6001600160f81b0319831614156117bf5761174c8686611a95565b955061ffff16905060fd8110801590611767575061ffff8111155b6117b35760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016106e9565b92508391506115369050565b607f60f91b6001600160f81b03198316141561184a576117df8686611b4e565b955063ffffffff16905061ffff811180156117fe575063ffffffff8111155b6117b35760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106e9565b6001600160f81b031980831614156118c7576118668686611c20565b955067ffffffffffffffff16905063ffffffff81116117b35760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106e9565b5060f881901c60fd81106117b35760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016106e9565b60408051600181526001600160f81b03198316602082015260218101909152606090610f02565b6040516002808252606091906000601f5b828210156119775785811a826020860101536001919091019060001901611955565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156119ba5785811a826020860101536001919091019060001901611998565b5050506024810160405292915050565b6040516008808252606091906000601f5b828210156119fd5785811a8260208601015360019190910190600019016119db565b5050506028810160405292915050565b6000808351836001611a1f91906122bc565b11158015611a365750611a338360016122bc565b83105b611a825760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016106e9565b83830160200151806115308560016122bc565b6000808351836002611aa791906122bc565b11158015611abe5750611abb8360026122bc565b83105b611b155760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106e9565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e8103519150508084600261153091906122bc565b6000808351836004611b6091906122bc565b11158015611b775750611b748360046122bc565b83105b611bce5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106e9565b600060405160046000600182038760208a0101515b83831015611c035780821a83860153600183019250600182039150611be3565b5050508181016040526020039003519050806115308560046122bc565b6000808351836008611c3291906122bc565b11158015611c495750611c468360086122bc565b83105b611ca05760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016106e9565b600060405160086000600182038760208a0101515b83831015611cd55780821a83860153600183019250600182039150611cb5565b5050508181016040526020039003519050806115308560086122bc565b828054611cfe9061230e565b90600052602060002090601f016020900481019282611d205760008555611d66565b82601f10611d3957805160ff1916838001178555611d66565b82800160010185558215611d66579182015b82811115611d66578251825591602001919060010190611d4b565b50611d72929150611d76565b5090565b5b80821115611d725760008155600101611d77565b600067ffffffffffffffff80841115611da657611da6612349565b604051601f8501601f19908116603f01168101908282118183101715611dce57611dce612349565b81604052809350858152868686011115611de757600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611e1257600080fd5b611e2183833560208501611d8b565b9392505050565b80356fffffffffffffffffffffffffffffffff8116811461171257600080fd5b803567ffffffffffffffff8116811461171257600080fd5b600060208284031215611e7257600080fd5b8135611e218161235f565b600080600080600060808688031215611e9557600080fd5b8535611ea08161235f565b9450611eae60208701611e48565b9350604086013567ffffffffffffffff80821115611ecb57600080fd5b818801915088601f830112611edf57600080fd5b813581811115611eee57600080fd5b896020828501011115611f0057600080fd5b6020830195508094505050506060860135611f1a8161235f565b809150509295509295909350565b600060208284031215611f3a57600080fd5b8135611e2181612377565b600060208284031215611f5757600080fd5b8151611e2181612377565b600060208284031215611f7457600080fd5b813567ffffffffffffffff80821115611f8c57600080fd5b908301906101008286031215611fa157600080fd5b611fa9612292565b823581526020830135602082015260408301356040820152611fcd60608401611e28565b6060820152608083013582811115611fe457600080fd5b611ff087828601611e01565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b60006020828403121561203257600080fd5b5035919050565b60006020828403121561204b57600080fd5b5051919050565b60008060006060848603121561206757600080fd5b61207084611e48565b9250602084013567ffffffffffffffff81111561208c57600080fd5b8401601f8101861361209d57600080fd5b6120ac86823560208401611d8b565b92505060408401356120bd8161235f565b809150509250925092565b600081518084526120e08160208601602086016122e2565b601f01601f19169290920160200192915050565b600083516121068184602088016122e2565b83519083019061211a8183602088016122e2565b01949350505050565b60008651612135818460208b016122e2565b865190830190612149818360208b016122e2565b865191019061215c818360208a016122e2565b855191019061216f8183602089016122e2565b84519101906121828183602088016122e2565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006121c060608301846120c8565b95945050505050565b60608101818360005b60038110156121f15781518352602092830192909101906001016121d2565b50505092915050565b602081016002831061221c57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000611e2160208301846120c8565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261227960e08401826120c8565b9150506001600160a01b03831660208301529392505050565b604051610100810167ffffffffffffffff811182821017156122b6576122b6612349565b60405290565b600082198211156122dd57634e487b7160e01b600052601160045260246000fd5b500190565b60005b838110156122fd5781810151838201526020016122e5565b838111156110f55750506000910152565b600181811c9082168061232257607f821691505b6020821081141561234357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461237457600080fd5b50565b801515811461237457600080fdfea2646970667358221220d91b5b79ff76fee107814d5fc1b965f40463e36335abe82a3bb392bd1e5a484764736f6c63430008070033';

type MystikoV2CelerMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerMain__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2CelerMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2CelerMain {
    return super.attach(address) as MystikoV2CelerMain;
  }
  connect(signer: Signer): MystikoV2CelerMain__factory {
    return super.connect(signer) as MystikoV2CelerMain__factory;
  }
  static readonly contractName: 'MystikoV2CelerMain';
  public readonly contractName: 'MystikoV2CelerMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerMainInterface {
    return new utils.Interface(_abi) as MystikoV2CelerMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerMain;
  }
}
