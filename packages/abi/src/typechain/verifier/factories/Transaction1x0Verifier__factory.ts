/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x0Verifier, Transaction1x0VerifierInterface } from '../Transaction1x0Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611e8f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611c89565b610057565b604051901515815260200160405180910390f35b6000815160171461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce9190611d95565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906111d4565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161124c565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516111d4565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611e2d565b6020026020010151611336565b905060005b865181101561038c57838782815181106102fd576102fd611e2d565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c9190611d95565b8151811061034c5761034c611e2d565b60200260200101518a858151811061036657610366611e2d565b60200260200101516113b3565b611336565b91508061038481611dc4565b9150506102e1565b50610396816111d4565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611402565b85604001516103db8a60400151611402565b606088015188516103eb90611402565b89602001516114b0565b9695505050505050565b610407611a53565b6040805180820182527f27787ad17473be87139e398e21750d88966b629353aca91a68e6172d6180e6c381527f0d13ba44040e53d925559a051a1bd2223346e09f6570e5d9160d1260ed7ca7876020808301919091529083528151608080820184527f1d844d2ea2295fa376bd1bec85742f4eb27b3f5bc9b1f01d3ebf317b8d2e88b18285019081527f2f93858ff1ae966b19c66ee88bf6c32708f9ef91eef2ad3533d3eb990debe8a3606080850191909152908352845180860186527f0312b1273a8eaf82d5dacf9f21e13afdec34f6471a19b743db2c02e07119bde181527f0d6e68b5ae521129dc6ed4d28888720d218d05497df1d278989b0140706a4eb4818601528385015285840192909252835180820185527f05b550e0341292e4732edb357cf2f9c68b6ef56d6d7d56f3a3c748262af6bcc28186019081527f0b89437ae7ea7d4e87c78798e2508728d11f7462ec5fcf25d1572063f96162c9828501528152845180860186527f1d4ef02cac677a4019325ddb775bbe763df8f4d7659541ad90acd61e93da19d181527f2e73bea286d1b01592d3ed3624023e53fa565ba67261d287cfc0b535ba5cd06f818601528185015285850152835190810184527f16d02f0b38c997f99e4a4956b12e00d5934f1bf5943713c2bb5156a359a8473e8185019081527f0beb71ffdf9dd4766b2cbe20616f27f60ae98266b65e95b0ba36f8142b6d6bbc828401528152835180850185527f0e8a2f1faba5f703683a528833d01397969c13f42f95d89232bebebfb22502f281527f2f253372bc27839138bdc51ab5e6492f0cc8648c2dcad4d38dbfcce9c0e5155a818501528184015290840152815160188082526103208201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f2c60bf0f8e2bfbbefe8b44c35cf205b3cfd277599a1fd10fa093b8f365bfe29481527f0855ace8158b1d57a4f850d9b067af88a49237058a44642781cfa09b3d0e5d5660208201529051805160009061071657610716611e2d565b602002602001018190525060405180604001604052807f1279326d2399ac5770a047bd60edd930971062e317e98c2e1f51eb62f1d68d5981526020017f2dd082f15c3dcf91847ccf7aa8ae94b1620b90e5f86a4c5cbf1f1d06829711d6815250816080015160018151811061078d5761078d611e2d565b602002602001018190525060405180604001604052807f230c5e860ad5ca04014a8110cbf3515c0726d1ef3643741c664b1c8ea4faeefc81526020017e07c0580f6962b6c9ad72844c03b8465ecd7780b71371dcf8b785727101e5f3815250816080015160028151811061080357610803611e2d565b602002602001018190525060405180604001604052807f1eb36f734116f423c1f9cc4b0f3fa8f564331afba5dbc3ad2d22df7c0d5aae0d81526020017f2aeeff288d787aeac2674d783e7e1c77ce49a52c3110b107993f452faf6e0bc8815250816080015160038151811061087a5761087a611e2d565b602002602001018190525060405180604001604052807f2058abb82e9c35bb7ae5acd0555aa4048c107b57da8ef5c04d562541a7e48c7881526020017f01969403ffbe61daafa90659092eff12ee20d48e6de927adcb92c4efe226776b81525081608001516004815181106108f1576108f1611e2d565b602002602001018190525060405180604001604052807f180b094a1ba7ac535bd33708f53617af1bc2a474bd0fb2d4b1fe6ae1d9ae4f7581526020017f0f792a1972e2dfd3480942790fb3adc229cdc2cbb6d76507789319590be28b75815250816080015160058151811061096857610968611e2d565b602002602001018190525060405180604001604052807f274a8a2abd0c99589ec48978aa3118c580e2640452a853754dad5af73bc4f49581526020017f2513a023db7d283bf49b173ee5f186269f86858f0d0971a3d802d5edc9bc41eb81525081608001516006815181106109df576109df611e2d565b602002602001018190525060405180604001604052807f0cc7ff20ccb11a8b0d4499967ff113198559b076da290a2c472d0a8217624cb581526020017f1179710b699b89a9098df2ba78721c0a70cba2d2cdded101f7bb444180c1815e8152508160800151600781518110610a5657610a56611e2d565b602002602001018190525060405180604001604052807f223e461d708d60325e61d33de081b46ac1d40f4f1d44945c43c9cc68615d54ca81526020017f03df9aca39ab644045ceefec6a15277ff5829efbbd2e8134967063e441f95f948152508160800151600881518110610acd57610acd611e2d565b602002602001018190525060405180604001604052807f1fa1275ab2fd1d0f9d1dff3564723b24184a0a400c392c9e4f1362349bf3cdf081526020017f0c967bc7a1c7a9df8880b264b25d048ef39ef0cfce4018f5a71b42b12c5f34d28152508160800151600981518110610b4457610b44611e2d565b602002602001018190525060405180604001604052807f291d629e6e0e7d28d055b6dedccc7ba75e1c49757e1ea6cbbf81b024913e7a8b81526020017f1bf9eaaac70b542ec81dd03172e9e2262404ac9cfded217671a2effad90272558152508160800151600a81518110610bbb57610bbb611e2d565b602002602001018190525060405180604001604052807f1e01b76bfdee4e56df859b8fd3867121516eee052e27a5361332604b11cf96a081526020017f21115c48972c132c733418a1a7dc98e85fed1f701af2fb81f1f1e523c8096e078152508160800151600b81518110610c3257610c32611e2d565b602002602001018190525060405180604001604052807f068c6144997cf953176ee30c803bc3dba7c90018104548e2a4efddf86d4861ef81526020017f12716c1e5b9ca442f035a6cd396623904794425c90b0d4e9fb095ead2cfbb03d8152508160800151600c81518110610ca957610ca9611e2d565b602002602001018190525060405180604001604052807f02b85cd45f4129da2dd4490f60a0e19be8dc13621c2202213902b3f6d5b0b69a81526020017f10cd9c71c6932fbc561942d3c04564582d710562067797a0bcd809fa194096cb8152508160800151600d81518110610d2057610d20611e2d565b602002602001018190525060405180604001604052807f1dece0b08269346a6df183d8aae045919a0aeab0c88bcc834a56c966145b7bc581526020017f14f74900a39508dce90209c93e4a3b740edfcfaec348b773741df1547d99dacf8152508160800151600e81518110610d9757610d97611e2d565b602002602001018190525060405180604001604052807f02c98729b034dfc4f02190a810ec7a50ed25deab0267e0ddb78ad88c18c5abd581526020017f11b480b2e977aa74153e9b3788e122cb0340016f03499b0a18abb88fd4765ad58152508160800151600f81518110610e0e57610e0e611e2d565b602002602001018190525060405180604001604052807f2a6e8e18534b1dd83ca3af8f1f1a8ab79c16d686c1337fb6b25040e5d3a047b881526020017f26573b3f08ee070354d21249cf37cda66d44047597bf53aaa613fdc2ba8646638152508160800151601081518110610e8557610e85611e2d565b602002602001018190525060405180604001604052807f0b209e008603f48cbd6afad599689c710d64ced2b16c9e6498c1548e4277531b81526020017f100b7371578635b4ceefac52aa1a3137d33970b010fde7a5a0ccdaae8ae114778152508160800151601181518110610efc57610efc611e2d565b602002602001018190525060405180604001604052807f23071d2b17612d6d3183a585e640aa6bd9add94980272489ba3997f1c520045b81526020017f057cf187cd00c196d6a3dcb19c53e4c0259039048c3a7fe935e04c35f95c9e1b8152508160800151601281518110610f7357610f73611e2d565b602002602001018190525060405180604001604052807f0838267078482132c3ca78bce83e767b6f1f795a01ef91842b9e1acb829ca09e81526020017f1f0b15f36b56e63b5bb9ff783747315c1c192e181e0a6a292d2c19f8dc265d448152508160800151601381518110610fea57610fea611e2d565b602002602001018190525060405180604001604052807f23da3df70cf04ebdae1ffdbe59966302fd708b98c457e31d43634f707767240f81526020017f072934adfc7422babc5785577f7115e1f8fcd380242bdb4e86d96a2d68dd21df815250816080015160148151811061106157611061611e2d565b602002602001018190525060405180604001604052807f0c5046fcb72aa63d8a7716c947bba1e31c75337910fa6191dd6203f37665d23481526020017f228ef33a692dc2b6939c893041eef322ed6c1f7e205c74b5068405770aac87a281525081608001516015815181106110d8576110d8611e2d565b602002602001018190525060405180604001604052807f263fc9df67985ffd860ddb3e9a78a59f7ac394149bca8b8f3c98892283020bd681526020017f24bae49842fc7c0ea62a70fe0296c00952a97e81e2eec2b372ffdb94cd0a67a1815250816080015160168151811061114f5761114f611e2d565b602002602001018190525060405180604001604052807f0798710c41b61477a1491c4de28b1210d4a1b9cca574d5909874b5a4eb19e44e81526020017f042d6f66ddb0852c7c29cacd05130c03d4aec09c75ba6905632f6204fe78a8e581525081608001516017815181106111c6576111c6611e2d565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611202816003611ddf565b818061121057611210611e17565b8451838061122057611220611e17565b8651800909828061123357611233611e17565b602086015180096112449190611dad565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926112bc92909190829060015b6020020151611911565b8951805160208201519397509195506112e1929060005b60200201518b5160016112b2565b895191935091506112f7908390839060006112d3565b909250905061130884848484611992565b909450925061131984848888611992565b90945092508315801561132a575082155b98975050505050505050565b6040805180820190915260008082526020820152611352611aa4565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806113ab57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526113cf611ac2565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b5761138c565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061146d57604051806040016040528082856000015161145c9190611ddf565b815260006020909101529392505050565b60405180604001604052808285600001516114889190611ddf565b815260200182856020015161149d9190611ddf565b6114a79084611dad565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106114f1576114f1611e2d565b6020026020010181815250508a602001518160018151811061151557611515611e2d565b60209081029190910101528951600160200201518160028151811061153c5761153c611e2d565b602090810291909101015289515181518290600390811061155f5761155f611e2d565b602002602001018181525050896020015160016002811061158257611582611e2d565b60200201518160048151811061159a5761159a611e2d565b60200260200101818152505089602001516000600281106115bd576115bd611e2d565b6020020151816005815181106115d5576115d5611e2d565b6020026020010181815250508860000151816006815181106115f9576115f9611e2d565b60200260200101818152505088602001518160078151811061161d5761161d611e2d565b60209081029190910101528751600160200201518160088151811061164457611644611e2d565b602090810291909101015287515181518290600990811061166757611667611e2d565b602002602001018181525050876020015160016002811061168a5761168a611e2d565b602002015181600a815181106116a2576116a2611e2d565b60200260200101818152505087602001516000600281106116c5576116c5611e2d565b602002015181600b815181106116dd576116dd611e2d565b602002602001018181525050866000015181600c8151811061170157611701611e2d565b602002602001018181525050866020015181600d8151811061172557611725611e2d565b602090810291909101015285516001602002015181600e8151811061174c5761174c611e2d565b602090810291909101015285515181518290600f90811061176f5761176f611e2d565b602002602001018181525050856020015160016002811061179257611792611e2d565b6020020151816010815181106117aa576117aa611e2d565b60200260200101818152505085602001516000600281106117cd576117cd611e2d565b6020020151816011815181106117e5576117e5611e2d565b60200260200101818152505084600001518160128151811061180957611809611e2d565b60200260200101818152505084602001518160138151811061182d5761182d611e2d565b60209081029190910101528351600160200201518160148151811061185457611854611e2d565b602090810291909101015283515181518290601590811061187757611877611e2d565b602002602001018181525050836020015160016002811061189a5761189a611e2d565b6020020151816016815181106118b2576118b2611e2d565b60200260200101818152505083602001516000600281106118d5576118d5611e2d565b6020020151816017815181106118ed576118ed611e2d565b602002602001018181525050611902816119da565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761195381868909828061194a5761194a611e17565b86890983611a2f565b818061196157611961611e17565b828061196f5761196f611e17565b878909838061198057611980611e17565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476119c1878683611a2f565b6119cc878684611a2f565b925092505094509492505050565b80516000906119e7611ae0565b6000602082602085026020880160086107d05a03fa905080801561002b575080611a2457604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611a3f57611a3f611e17565b611a498484611dad565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611a7d611afe565b8152602001611a8a611afe565b8152602001611a97611afe565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611b11611b23565b8152602001611b1e611b23565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611b5257600080fd5b611b5a611d49565b808385604086011115611b6c57600080fd5b60005b6002811015611b8e578135845260209384019390910190600101611b6f565b509095945050505050565b600082601f830112611baa57600080fd5b8135602067ffffffffffffffff80831115611bc757611bc7611e43565b8260051b604051601f19603f83011681018181108482111715611bec57611bec611e43565b60405284815283810192508684018288018501891015611c0b57600080fd5b600092505b85831015611c2e578035845292840192600192909201918401611c10565b50979650505050505050565b600060408284031215611c4c57600080fd5b6040516040810181811067ffffffffffffffff82111715611c6f57611c6f611e43565b604052823581526020928301359281019290925250919050565b600080828403610120811215611c9e57600080fd5b61010080821215611cae57600080fd5b611cb6611d72565b611cc08787611c3a565b81526080603f1984011215611cd457600080fd5b611cdc611d49565b9250611ceb8760408801611b41565b8352611cfa8760808801611b41565b6020840152826020820152611d128760c08801611c3a565b60408201529350840135905067ffffffffffffffff811115611d3357600080fd5b611d3f85828601611b99565b9150509250929050565b6040805190810167ffffffffffffffff81118282101715611d6c57611d6c611e43565b60405290565b6040516060810167ffffffffffffffff81118282101715611d6c57611d6c611e43565b60008219821115611da857611da8611e01565b500190565b600082821015611dbf57611dbf611e01565b500390565b6000600019821415611dd857611dd8611e01565b5060010190565b600082611dfc57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212206952840a9d9c2dfb6ad7fc37cde3958a801a69477ba338fb7e5aa5f54955c05a64736f6c63430008070033';

type Transaction1x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x0Verifier {
    return super.attach(address) as Transaction1x0Verifier;
  }
  connect(signer: Signer): Transaction1x0Verifier__factory {
    return super.connect(signer) as Transaction1x0Verifier__factory;
  }
  static readonly contractName: 'Transaction1x0Verifier';
  public readonly contractName: 'Transaction1x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x0Verifier;
  }
}
