/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x0Verifier, Transaction1x0VerifierInterface } from '../Transaction1x0Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611e8c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611c86565b610057565b604051901515815260200160405180910390f35b6000815160171461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce9190611d92565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906111d1565b610248576040516361586bdd60e01b815260040160405180910390fd5b6102558460200151611249565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516111d1565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611e2a565b6020026020010151611333565b905060005b865181101561038c57838782815181106102fd576102fd611e2a565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c9190611d92565b8151811061034c5761034c611e2a565b60200260200101518a858151811061036657610366611e2a565b60200260200101516113b0565b611333565b91508061038481611dc1565b9150506102e1565b50610396816111d1565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c9846113ff565b85604001516103db8a604001516113ff565b606088015188516103eb906113ff565b89602001516114ad565b9695505050505050565b610407611a50565b6040805180820182527e80f327f510a1194071ed92587987e7e48d55b02aaff00131c4d3027a61efe981527f07e3ea6e057d530abdaab1c451aabcd9a2193e9c940649058ba2d47c9f75e2d66020808301919091529083528151608080820184527f05bd987dd06c17a8b60234a270607d03d0cdc395bf33cdde701b791f427d20f88285019081527f2212a557c4bf862d15f90a2aca7c9e29259bd58175f3872fd581fed17acefa96606080850191909152908352845180860186527f0b869ceff34256ca7edb7bcf3c994d8d27619af39bc78a0e49615697d153aaa381527f2ec1a333085ed67b7c04905a1cc664c103c8a25efd3c4de4da6ec51b3744441e818601528385015285840192909252835180820185527f0a222b517137b407d2ae27398dca02acd4cb228a01889e9d6392c8c136a1b8ae8186019081527f146fb90d7d457cc418abc97cee736e9e8e38b397f1d121189188a70316bd36a8828501528152845180860186527f1dfe60e3bdd1c0fff2ca0eab0df592f6e7f6958dff9b845f1fd08cfbcedd6ac081527f176706dbd9130d649940a91f98bf7d97e419c2a5993912339b8ed56827bec0ad818601528185015285850152835190810184527f13fa77544f8a68b608f3f30cba1ec4508af7e6ca563ea8b6897f7e7bc2129dcd8185019081527f2e15d7e99c89e779d7f77f4c1fde01c8180db008f127b0aa4a2c5d5ca00e3321828401528152835180850185527f04b75f94efce8e5e6dde54455c13755f2de63c3a857fcf3a73062d165e539d8d81527f2564188e6e0385e8111089d6b15bd0f650f9795ec8dbceef56b1118a611f465c818501528184015290840152815160188082526103208201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068257505060808201908152604080518082019091527f29ca955dcdea3eb818909379c4ba347c9e9d7d46e5ce5822cc7ed01a9e18e96f81527f18d79fb99a7fcf411582c43e0305b05590ac428d34b8291924007294e7989a2160208201529051805160009061071557610715611e2a565b602002602001018190525060405180604001604052807f2a5b3cccad93c170226f1d6f2819c033de42a7fb4f835a022e02ad0f1778502181526020017f1cfd562473cc7a3672487442c3d735d425a6ceffeae1074512a6733a05ee3700815250816080015160018151811061078c5761078c611e2a565b602002602001018190525060405180604001604052807f27b12302e84db9eb5e0d9d76206a04e126ab028c08b804ef6188d862f6580ed281526020017f2dfe2265437d26fa825599f3a6d25be85c00fce8166841cb78216ffb046c24b4815250816080015160028151811061080357610803611e2a565b602002602001018190525060405180604001604052807f1f1db980314a81c4f16bdcdc956d8810153ae407be82568a56754365cb0cd47c81526020017f1a1ee8c8f250cc40734dc1758383d6e2cc720c7ac16ef4e59465468fc947d1ab815250816080015160038151811061087a5761087a611e2a565b602002602001018190525060405180604001604052807e9b91312eaa352bba88c204503c5601f95fe82c208077aeb65a148807a5f79081526020017e02d1a95e51d4c85d8ce7e97ac0f07fe6b67582514affa748c3ecc4983f126681525081608001516004815181106108ef576108ef611e2a565b602002602001018190525060405180604001604052807f08b07fdcd95b8f225c567b1ff6780788e727fbb35d6019315de6d44ae608625781526020017f089f04d7cb6e3ac9c29790e15c2a00a9d9a67b352814c7f06d6e98af867c759d815250816080015160058151811061096657610966611e2a565b602002602001018190525060405180604001604052807f1bb91c3b0e02d53efab1494f92c51d32180d6bfebf8ad28894874dd876c12e4681526020017eca13861669660b3d42a004b4b79c237c989363a47e02f01175be3e5312c87b81525081608001516006815181106109dc576109dc611e2a565b602002602001018190525060405180604001604052807f10d5ebc13b63efba52f94822ddafc89cbba37cd26c246ad5e436ace0534269e781526020017f22e99ca538091c0f443ee85f2910dff8ec380c3e6d0f1d3d7daa9eca03953eb68152508160800151600781518110610a5357610a53611e2a565b602002602001018190525060405180604001604052807f02e2ed15faed6f7d83a0c380610eb1597324f8ddecad651f95a512f2ada5309281526020017f1c5aaeda68a8cd7a8afc163b94026bae8ac7198a2ebab5ae80a0f9c09dde92918152508160800151600881518110610aca57610aca611e2a565b602002602001018190525060405180604001604052807f15c31fbb77b5583703a5f8b76dcfb969ebe88a1e6bf73c8d47df3848f4aa1dba81526020017f11cd3d2c476a02f90b0d52cdd29634a9b06542783e2e627bbb3743c5727705ea8152508160800151600981518110610b4157610b41611e2a565b602002602001018190525060405180604001604052807f0aad473cb561813c0dd64f2076f71960a84cf4a54ce02d1e11ec5cc1254ec22581526020017f162440871333dae32287255adffbf77eb3db587b836624ceb65e3bea7bf7f9238152508160800151600a81518110610bb857610bb8611e2a565b602002602001018190525060405180604001604052807f2adeac741f8bbdf817ac166abe8e5b90eb6873b3de73b155afe3b15934e950ee81526020017f15c571f1bcc94c82a907c4c56306ad8a1a631e77ad52e385bbffdea4fbf8931f8152508160800151600b81518110610c2f57610c2f611e2a565b602002602001018190525060405180604001604052807f19f5f9df1f9079e7abe78374dd7df5503ed83e95f7b880548b5a5afebc04d6d381526020017f1510a67fb66fa23fdcbfc21c0095ece8a2ed80548973d82f2eb29f0237100f898152508160800151600c81518110610ca657610ca6611e2a565b602002602001018190525060405180604001604052807f2ba4f36d307fec34cf82c06e3620dc69e2f232ec639602137055d2452bd1471181526020017f2159877bb853ecd7af5fc2b5e8a79d36e98911e7e86c597aba0b6919cd22504d8152508160800151600d81518110610d1d57610d1d611e2a565b602002602001018190525060405180604001604052807f12f39c580ee4e64be559711f89c8fd9e4bd7a258dc0cab87102472f7137db6ec81526020017f0748adaeacd3316dfdf740123648f827b58916cf16868433b35900d713382b048152508160800151600e81518110610d9457610d94611e2a565b602002602001018190525060405180604001604052807f153594478a0ab3f3b13fa7d0cd5152453bb82c5ec5f401dd92f2d70ce7780b1881526020017f08bccca49e9d612fdd465e7e37f924fc5906a63540059d32919a43af452e8ecc8152508160800151600f81518110610e0b57610e0b611e2a565b602002602001018190525060405180604001604052807f06fe596dbb3878dd0e365bfa7ff433c7d161368a8a16c80feb396aae77fc412481526020017f1fb7c11060c613dd33eeda35460b4cb64bd1752c6941b8f2cb2fcb78ab3d7f9d8152508160800151601081518110610e8257610e82611e2a565b602002602001018190525060405180604001604052807f10d5788f920972dd86eb48bd39ed8383a0e20457559f617bffaa4330b43d3e0781526020017f221e7f5c92ccfefe15126fea683eb2dc4fe9f0be5d474148aa13e7fe670793298152508160800151601181518110610ef957610ef9611e2a565b602002602001018190525060405180604001604052807f22db6705002b5509d3a1cf6bd63c2e812b2495a2316b75e02bd47a12fcc8151481526020017f10e07f9841f18e548900ede0c1743f93978be7ce70662e584edf61eb094cad498152508160800151601281518110610f7057610f70611e2a565b602002602001018190525060405180604001604052807f29ab17593387f75e21c5bb49c36a55ba665b747298cc3e37ee7e27e6dbf320e581526020017f1ed3b646e9df21d8a3aad2d0744fa8333aef09cb894afcb945888cb8f5448a018152508160800151601381518110610fe757610fe7611e2a565b602002602001018190525060405180604001604052807f019a7660d0f141ba22dee2cc32fbd419c8919b14c7a0f1da11dba7bdb8d8601781526020017f059796bf9d47300600258ba12c78411b3be5c95a48c547d4f751bc1fdfa46b99815250816080015160148151811061105e5761105e611e2a565b602002602001018190525060405180604001604052807f2b0317e9c2cf72d5f8136670abb448ca7af8d326843eb5946fb41d3b5de7aa2081526020017f1e0c0d7362f275e28b1a186336d9920a9035a0f43cf723ad12d2e5938cc2a88881525081608001516015815181106110d5576110d5611e2a565b602002602001018190525060405180604001604052807f0d0340b6cf011390397ecfdaf99b829fbd6117a1658783869a3460614614674181526020017f243c0d0da49f78ad4255f8c2877548e030651d5575ec11ea6ba260da053feeeb815250816080015160168151811061114c5761114c611e2a565b602002602001018190525060405180604001604052807f1dfd538517dc05cb8dfdc3c3999f0a4874c474f961288c3065368042f22f67d981526020017f29e83c669b32e016724f5d01e9eb70cd7bc44c4459ef0e64d99f3de8c4d9c54181525081608001516017815181106111c3576111c3611e2a565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476111ff816003611ddc565b818061120d5761120d611e14565b8451838061121d5761121d611e14565b8651800909828061123057611230611e14565b602086015180096112419190611daa565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926112b992909190829060015b602002015161190e565b8951805160208201519397509195506112de929060005b60200201518b5160016112af565b895191935091506112f4908390839060006112d0565b90925090506113058484848461198f565b90945092506113168484888861198f565b909450925083158015611327575082155b98975050505050505050565b604080518082019091526000808252602082015261134f611aa1565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806113a857604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526113cc611abf565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b57611389565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061146a5760405180604001604052808285600001516114599190611ddc565b815260006020909101529392505050565b60405180604001604052808285600001516114859190611ddc565b815260200182856020015161149a9190611ddc565b6114a49084611daa565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106114ee576114ee611e2a565b6020026020010181815250508a602001518160018151811061151257611512611e2a565b60209081029190910101528951600160200201518160028151811061153957611539611e2a565b602090810291909101015289515181518290600390811061155c5761155c611e2a565b602002602001018181525050896020015160016002811061157f5761157f611e2a565b60200201518160048151811061159757611597611e2a565b60200260200101818152505089602001516000600281106115ba576115ba611e2a565b6020020151816005815181106115d2576115d2611e2a565b6020026020010181815250508860000151816006815181106115f6576115f6611e2a565b60200260200101818152505088602001518160078151811061161a5761161a611e2a565b60209081029190910101528751600160200201518160088151811061164157611641611e2a565b602090810291909101015287515181518290600990811061166457611664611e2a565b602002602001018181525050876020015160016002811061168757611687611e2a565b602002015181600a8151811061169f5761169f611e2a565b60200260200101818152505087602001516000600281106116c2576116c2611e2a565b602002015181600b815181106116da576116da611e2a565b602002602001018181525050866000015181600c815181106116fe576116fe611e2a565b602002602001018181525050866020015181600d8151811061172257611722611e2a565b602090810291909101015285516001602002015181600e8151811061174957611749611e2a565b602090810291909101015285515181518290600f90811061176c5761176c611e2a565b602002602001018181525050856020015160016002811061178f5761178f611e2a565b6020020151816010815181106117a7576117a7611e2a565b60200260200101818152505085602001516000600281106117ca576117ca611e2a565b6020020151816011815181106117e2576117e2611e2a565b60200260200101818152505084600001518160128151811061180657611806611e2a565b60200260200101818152505084602001518160138151811061182a5761182a611e2a565b60209081029190910101528351600160200201518160148151811061185157611851611e2a565b602090810291909101015283515181518290601590811061187457611874611e2a565b602002602001018181525050836020015160016002811061189757611897611e2a565b6020020151816016815181106118af576118af611e2a565b60200260200101818152505083602001516000600281106118d2576118d2611e2a565b6020020151816017815181106118ea576118ea611e2a565b6020026020010181815250506118ff816119d7565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761195081868909828061194757611947611e14565b86890983611a2c565b818061195e5761195e611e14565b828061196c5761196c611e14565b878909838061197d5761197d611e14565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476119be878683611a2c565b6119c9878684611a2c565b925092505094509492505050565b80516000906119e4611add565b6000602082602085026020880160086107d05a03fa905080801561002b575080611a2157604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611a3c57611a3c611e14565b611a468484611daa565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611a7a611afb565b8152602001611a87611afb565b8152602001611a94611afb565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611b0e611b20565b8152602001611b1b611b20565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611b4f57600080fd5b611b57611d46565b808385604086011115611b6957600080fd5b60005b6002811015611b8b578135845260209384019390910190600101611b6c565b509095945050505050565b600082601f830112611ba757600080fd5b8135602067ffffffffffffffff80831115611bc457611bc4611e40565b8260051b604051601f19603f83011681018181108482111715611be957611be9611e40565b60405284815283810192508684018288018501891015611c0857600080fd5b600092505b85831015611c2b578035845292840192600192909201918401611c0d565b50979650505050505050565b600060408284031215611c4957600080fd5b6040516040810181811067ffffffffffffffff82111715611c6c57611c6c611e40565b604052823581526020928301359281019290925250919050565b600080828403610120811215611c9b57600080fd5b61010080821215611cab57600080fd5b611cb3611d6f565b611cbd8787611c37565b81526080603f1984011215611cd157600080fd5b611cd9611d46565b9250611ce88760408801611b3e565b8352611cf78760808801611b3e565b6020840152826020820152611d0f8760c08801611c37565b60408201529350840135905067ffffffffffffffff811115611d3057600080fd5b611d3c85828601611b96565b9150509250929050565b6040805190810167ffffffffffffffff81118282101715611d6957611d69611e40565b60405290565b6040516060810167ffffffffffffffff81118282101715611d6957611d69611e40565b60008219821115611da557611da5611dfe565b500190565b600082821015611dbc57611dbc611dfe565b500390565b6000600019821415611dd557611dd5611dfe565b5060010190565b600082611df957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220013b428ce24447b4ae9578cbe361198e07c583aabb19ace2983c455581255c9664736f6c63430008070033';

type Transaction1x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x0Verifier {
    return super.attach(address) as Transaction1x0Verifier;
  }
  connect(signer: Signer): Transaction1x0Verifier__factory {
    return super.connect(signer) as Transaction1x0Verifier__factory;
  }
  static readonly contractName: 'Transaction1x0Verifier';
  public readonly contractName: 'Transaction1x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x0Verifier;
  }
}
