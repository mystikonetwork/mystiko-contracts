/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction1x1Verifier, Transaction1x1VerifierInterface } from '../Transaction1x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50611f7c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611d76565b610057565b604051901515815260200160405180910390f35b6000815160191461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce9190611e82565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906112c1565b610248576040516361586bdd60e01b815260040160405180910390fd5b6102558460200151611339565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516112c1565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611f1a565b6020026020010151611423565b905060005b865181101561038c57838782815181106102fd576102fd611f1a565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c9190611e82565b8151811061034c5761034c611f1a565b60200260200101518a858151811061036657610366611f1a565b60200260200101516114a0565b611423565b91508061038481611eb1565b9150506102e1565b50610396816112c1565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c9846114ef565b85604001516103db8a604001516114ef565b606088015188516103eb906114ef565b896020015161159d565b9695505050505050565b610407611b40565b6040805180820182527f2989758e6faccb8d559c9968e937edb6d93b67787c6ac6239d68173216bf848b81527f2941f2eb59cd3f07a2f9e6c32c36e8346555029ad16538b6adcc803e0239f99d6020808301919091529083528151608080820184527f0a1ee7e4d4b4deb17de8574280f38ff274dad1a0ef61350e50110dcbcbf254768285019081527f3062027e3a53795fccb025e261fddd67d1a40b02f43c6a6851fb0e7cb53daf91606080850191909152908352845180860186527f015f8116090af3ef823964e7618a8043ea93d8a00db613b7df4e94cced732e5281527f289b4855ae8a1a896d63bfbbe42b78583896095d8fb80c9df86667a497388050818601528385015285840192909252835180820185527f122792c1666be48fa7a5f88e9fce4a4b73f062d9e719075c70c143adb42c47358186019081527f23f1545d09e0b7cd64f740b32f4efbc1dfa622e5eefbd89c6de5b558bb07874e828501528152845180860186527f0ca6cc2dd17fe1bb55b98eac7c8e68a51f37359131d83e296c887321cda7c42b81527f0e8bc35e0a9be37b3ffd90ee193b3c0f6325d46fc51c4e8111288fe142f27d98818601528185015285850152835190810184527f1cb3faf4af3543de6ceaab10500c783a7fa77167a56feba97bb3ac76d3a8e9658185019081527f2b6cfa7a7408e8a3da4e4f6b87e9a1179b732b89cccd9ac317ee61eda3b4a7c1828401528152835180850185527f24d014707b18297b3cd66e29fe3f6c8591258a0f482329d69fbce139caff67f181527f1a19641c07d9675b902b24b342cf9dc295fd81104da1f3ab2fde1f424408429e8185015281840152908401528151601a8082526103608201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f2b839bcc2f89e299b862dd69c5020937fa80ff068907ceaf6aee80389d76c9d581527f12ab63834a0a55b73b967b226e3dba6ae9e6305e88f8917d44584655a4243b8060208201529051805160009061071657610716611f1a565b602002602001018190525060405180604001604052807f2890a7c8b3138573059f047fbb534827b468bc1663a3914db4199204ade72c8d81526020017f1bed206c095546728e57800932984957cb8abaa0b676c4a0461a3ffa33d75af9815250816080015160018151811061078d5761078d611f1a565b602002602001018190525060405180604001604052807f1b85371f44840605f57660aeb5c2cd48df5e8c410dbb81325d7828912aa1764881526020017f24705a32bbd2122d1920d1db6c917f4499f22bafb485cd2ec513cef049ea1386815250816080015160028151811061080457610804611f1a565b602002602001018190525060405180604001604052807f265db042475bf8f2c401553439ee1d84a46b7ebe6863e9624ce423ba1a8af1d581526020017f24acf7199e6f6975f07731e45fde0b28890a1fdebccb8b66a84cdae180a9d1cf815250816080015160038151811061087b5761087b611f1a565b602002602001018190525060405180604001604052807f0efc0fc8a7205df46832b94645e3f3e4fdb8c5f2969d0d53a5e4f1be76457f6881526020017f053de428979a8e95d3d742d09afd747de92286bf59b1c0e4dcba30a415c0747e81525081608001516004815181106108f2576108f2611f1a565b602002602001018190525060405180604001604052807f17dfba3c75355de5f2edab1dc9233b4d61fcb02170497f4ab85f991264810a6281526020017f29d99ed74e5ed62bda9b91817ed5a7c5229545efb0e0a9b680c316021abf32ac815250816080015160058151811061096957610969611f1a565b602002602001018190525060405180604001604052807f01208102419811f31b2f40cb8ae1349cddbb13ec61ac9776923a586ae6ae009281526020017f27cbae9b9593aaa8cf89f7c9c14cd9510586ebf10034fd8f10d3240f8bb02c4281525081608001516006815181106109e0576109e0611f1a565b602002602001018190525060405180604001604052807f25a7d335ba7aef1208a136f19f75cf9e4d9f8acfbbc2f0ec5eb285df12909b8281526020017f1fe000fae0ca163e9a883dc6bacda43ddc14358a242074c9103db7d6c6cd6e5f8152508160800151600781518110610a5757610a57611f1a565b602002602001018190525060405180604001604052807f269cfa727b045260077f6903be08522389af940406fedafcd087c95e0c22ee3181526020017f0eb411a6c33736e10d99395033376e9282eb1470d128e7fc0831360183b02b308152508160800151600881518110610ace57610ace611f1a565b602002602001018190525060405180604001604052807f20a0cdc01aa5cb687827b0c68c052caa666b3e19b96004d4b59249840eb17eee81526020017f23f7de08f086728f2b73d906bbb5510ce696c1233ff1ef1649e99f49fd8611518152508160800151600981518110610b4557610b45611f1a565b602002602001018190525060405180604001604052807e42aad1c3427380f3645a7cd52c8caddf9824a3386745aec229d1dd6e2536a281526020017f09a4f15f73bc214c5296599849bfb3868983a74e9621625763893b1e1fea9c948152508160800151600a81518110610bbb57610bbb611f1a565b602002602001018190525060405180604001604052807f212142ba77c9b26bbd1e42b8f12a6818aafd4e737a46cbfabaa9c050ce3a56c581526020017e4cb1bae501a3fb574b8ae696dfe77d945750613456c7ad71fa6eb314198a858152508160800151600b81518110610c3157610c31611f1a565b602002602001018190525060405180604001604052807f09c64479cc0f1ad1221bf2f2d2402fea15d9f7f44c9a7e1dd2f7d1672d5aacd581526020017f1640e7f37a306979298bb3b69ee058e58c8cab6e73be3549c2edb776c9a31d9b8152508160800151600c81518110610ca857610ca8611f1a565b602002602001018190525060405180604001604052807f06a9ce833344e8bb40a7d3a305481280a14f7f0989e27251312b92e3be56e88181526020017f2bda39c48c12c3f2e3322462bed7501763ce329b3f529b35e97799c00d21be408152508160800151600d81518110610d1f57610d1f611f1a565b602002602001018190525060405180604001604052807f0491e133824a225e8ff11e2d7ef630ad2b79aae77a640258e4c3cb2968cc7aff81526020017f288e54a67571bf0808c23e31951618a6537d204912f5bec29293ee7e1fc2076c8152508160800151600e81518110610d9657610d96611f1a565b602002602001018190525060405180604001604052807f29be9b12b2400a560f93d61f5c2dc1ec95f5095f48592f0ce0f26d80943205e881526020017f12f05b1b1824990d00e32922a1dda8883ed57c2d467e7c8864c30ffce1520d9e8152508160800151600f81518110610e0d57610e0d611f1a565b602002602001018190525060405180604001604052807f157d8e5ba046f66e6e6394ab1601de7735db0e2dffd496039d2091b26428c31a81526020017f2853a80d09a1cea2b3115f58abc6b3c87935d1a7838d9507b444a6d4b7ea36928152508160800151601081518110610e8457610e84611f1a565b602002602001018190525060405180604001604052807f13591c744f2e8e0f2793299e24fcc6fa9e1aaf2f252112b195eaa0e05149a46d81526020017f297e8c442da8679b63950694d605299441cb32912fb598158f91ed7164e7a0068152508160800151601181518110610efb57610efb611f1a565b602002602001018190525060405180604001604052807f233f4d7ab228b8be3edcc8d33eade7cb70282b99dc8ab61c54825366688da93781526020017f2208605145a485a1acd0a6ce737ea89c66c6dff9373d4a229d8fce50fc6d8fa08152508160800151601281518110610f7257610f72611f1a565b602002602001018190525060405180604001604052807f04353ccec710363e96a8f453220a88c552dcb3305780a1605c665e641a5f438c81526020017f1e5daa0c01b5fdd4cc17982b045ddd3871e6f06aaf84e6c9767a8078b8499ce48152508160800151601381518110610fe957610fe9611f1a565b602002602001018190525060405180604001604052807f0c28b44e2d7809094013415444904e0fa4809a298ea5cb7572ca6bd75bc0766e81526020017f192b6cd7ca5be0f83064535e5e6b909ccdd270d47858cadb63fa9728cb89a4ba815250816080015160148151811061106057611060611f1a565b602002602001018190525060405180604001604052807f0c44da5b75a32e6104c80b0ec4df81eb691069cdf354b7119a16588869d6866181526020017f01551a24caa3ae7f28e997ee3e2cca3253dc0188b07838c38cb85a529074e60281525081608001516015815181106110d7576110d7611f1a565b602002602001018190525060405180604001604052807f1937b737334bad91057da55f83a0b89c4542d722f19dea846ddb884b2873c6cd81526020017f2ed32134d815eff2138e1db54475bfd80492497c84d81420a38fa548ce7ad750815250816080015160168151811061114e5761114e611f1a565b602002602001018190525060405180604001604052807f163e0bb1c303967c3ad4cafe309eb918f295eb7209bf965703f5f219a4477bf881526020017f25e8e3c304186420e116c56ee00ad6f02ac35653a62c9fcd3a964e5e87b5384581525081608001516017815181106111c5576111c5611f1a565b602002602001018190525060405180604001604052807f254f02835a11cea07017a3b7b49412d3a2850dbb54c8f42f52f81f107159c81381526020017f2649e0a83e2a211739bfc1ee83fa541af609aba995a16186628882ac1586d3c1815250816080015160188151811061123c5761123c611f1a565b602002602001018190525060405180604001604052807f07da5341ee7ab2e1d15f7411f556586889cac3888e0124d8dad1fe255643503581526020017f25084159bde27a5f46753218ded69eca8d69a468c998df58437d903785b595b381525081608001516019815181106112b3576112b3611f1a565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476112ef816003611ecc565b81806112fd576112fd611f04565b8451838061130d5761130d611f04565b8651800909828061132057611320611f04565b602086015180096113319190611e9a565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926113a992909190829060015b60200201516119fe565b8951805160208201519397509195506113ce929060005b60200201518b51600161139f565b895191935091506113e4908390839060006113c0565b90925090506113f584848484611a7f565b909450925061140684848888611a7f565b909450925083158015611417575082155b98975050505050505050565b604080518082019091526000808252602082015261143f611b91565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b508061149857604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526114bc611baf565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b57611479565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061155a5760405180604001604052808285600001516115499190611ecc565b815260006020909101529392505050565b60405180604001604052808285600001516115759190611ecc565b815260200182856020015161158a9190611ecc565b6115949084611e9a565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106115de576115de611f1a565b6020026020010181815250508a602001518160018151811061160257611602611f1a565b60209081029190910101528951600160200201518160028151811061162957611629611f1a565b602090810291909101015289515181518290600390811061164c5761164c611f1a565b602002602001018181525050896020015160016002811061166f5761166f611f1a565b60200201518160048151811061168757611687611f1a565b60200260200101818152505089602001516000600281106116aa576116aa611f1a565b6020020151816005815181106116c2576116c2611f1a565b6020026020010181815250508860000151816006815181106116e6576116e6611f1a565b60200260200101818152505088602001518160078151811061170a5761170a611f1a565b60209081029190910101528751600160200201518160088151811061173157611731611f1a565b602090810291909101015287515181518290600990811061175457611754611f1a565b602002602001018181525050876020015160016002811061177757611777611f1a565b602002015181600a8151811061178f5761178f611f1a565b60200260200101818152505087602001516000600281106117b2576117b2611f1a565b602002015181600b815181106117ca576117ca611f1a565b602002602001018181525050866000015181600c815181106117ee576117ee611f1a565b602002602001018181525050866020015181600d8151811061181257611812611f1a565b602090810291909101015285516001602002015181600e8151811061183957611839611f1a565b602090810291909101015285515181518290600f90811061185c5761185c611f1a565b602002602001018181525050856020015160016002811061187f5761187f611f1a565b60200201518160108151811061189757611897611f1a565b60200260200101818152505085602001516000600281106118ba576118ba611f1a565b6020020151816011815181106118d2576118d2611f1a565b6020026020010181815250508460000151816012815181106118f6576118f6611f1a565b60200260200101818152505084602001518160138151811061191a5761191a611f1a565b60209081029190910101528351600160200201518160148151811061194157611941611f1a565b602090810291909101015283515181518290601590811061196457611964611f1a565b602002602001018181525050836020015160016002811061198757611987611f1a565b60200201518160168151811061199f5761199f611f1a565b60200260200101818152505083602001516000600281106119c2576119c2611f1a565b6020020151816017815181106119da576119da611f1a565b6020026020010181815250506119ef81611ac7565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611a40818689098280611a3757611a37611f04565b86890983611b1c565b8180611a4e57611a4e611f04565b8280611a5c57611a5c611f04565b8789098380611a6d57611a6d611f04565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611aae878683611b1c565b611ab9878684611b1c565b925092505094509492505050565b8051600090611ad4611bcd565b6000602082602085026020880160086107d05a03fa905080801561002b575080611b1157604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611b2c57611b2c611f04565b611b368484611e9a565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611b6a611beb565b8152602001611b77611beb565b8152602001611b84611beb565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611bfe611c10565b8152602001611c0b611c10565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611c3f57600080fd5b611c47611e36565b808385604086011115611c5957600080fd5b60005b6002811015611c7b578135845260209384019390910190600101611c5c565b509095945050505050565b600082601f830112611c9757600080fd5b8135602067ffffffffffffffff80831115611cb457611cb4611f30565b8260051b604051601f19603f83011681018181108482111715611cd957611cd9611f30565b60405284815283810192508684018288018501891015611cf857600080fd5b600092505b85831015611d1b578035845292840192600192909201918401611cfd565b50979650505050505050565b600060408284031215611d3957600080fd5b6040516040810181811067ffffffffffffffff82111715611d5c57611d5c611f30565b604052823581526020928301359281019290925250919050565b600080828403610120811215611d8b57600080fd5b61010080821215611d9b57600080fd5b611da3611e5f565b611dad8787611d27565b81526080603f1984011215611dc157600080fd5b611dc9611e36565b9250611dd88760408801611c2e565b8352611de78760808801611c2e565b6020840152826020820152611dff8760c08801611d27565b60408201529350840135905067ffffffffffffffff811115611e2057600080fd5b611e2c85828601611c86565b9150509250929050565b6040805190810167ffffffffffffffff81118282101715611e5957611e59611f30565b60405290565b6040516060810167ffffffffffffffff81118282101715611e5957611e59611f30565b60008219821115611e9557611e95611eee565b500190565b600082821015611eac57611eac611eee565b500390565b6000600019821415611ec557611ec5611eee565b5060010190565b600082611ee957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220369dd671ed279d32998bcf8a1c3d12f12b0bf1e40862c625558f724ec545ee3964736f6c63430008070033';

type Transaction1x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction1x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction1x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction1x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction1x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction1x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction1x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction1x1Verifier {
    return super.attach(address) as Transaction1x1Verifier;
  }
  connect(signer: Signer): Transaction1x1Verifier__factory {
    return super.connect(signer) as Transaction1x1Verifier__factory;
  }
  static readonly contractName: 'Transaction1x1Verifier';
  public readonly contractName: 'Transaction1x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction1x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction1x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction1x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction1x1Verifier;
  }
}
