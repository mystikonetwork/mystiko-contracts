/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Rollup4Verifier, Rollup4VerifierInterface } from '../Rollup4Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506115b8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046113b2565b610057565b604051901515815260200160405180910390f35b6000815160041461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906114be565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906108fd565b610248576040516361586bdd60e01b815260040160405180910390fd5b6102558460200151610975565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516108fd565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611556565b6020026020010151610a5f565b905060005b865181101561038c57838782815181106102fd576102fd611556565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906114be565b8151811061034c5761034c611556565b60200260200101518a858151811061036657610366611556565b6020026020010151610adc565b610a5f565b915080610384816114ed565b9150506102e1565b50610396816108fd565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984610b2b565b85604001516103db8a60400151610b2b565b606088015188516103eb90610b2b565b8960200151610bd9565b9695505050505050565b61040761117c565b6040805180820182527f2bdbfc8c11c9de8bfbcd261b952e797c7def3e5f22e331a9d7d2be7cf54191a981527f16d8f2b77ff3ceba3c6abf4ff9fd8e333dc08290427a00a083b94131c905b2216020808301919091529083528151608080820184527f25689a8d889eaac73b2ecae0a2830527fea1c9e2ad4ec084efb37e52878959e18285019081527ec0ddde8788f037466ea03ca1aabf0f26bfc7f515e7b7892eb01e8d5a213370606080850191909152908352845180860186527f2df8240dc04fa7481cda528f9e317bdbb66f82f7c99c6362665236506adf09f581527f2fe9ba859aeb3f60cdeffa45503898830d9e20911231823ea0c0f0c02fe57711818601528385015285840192909252835180820185527f2b38052387166fb3df567723b2ff02ac5be8814d560a8135f39cec21348a84268186019081527f0ef7cf8baf2192b18f1d1b1b57e28b81189c5ef3f304d5f744c869434f3e4a5c828501528152845180860186527f2cd70249c052b290c68727b3f5ded33d70f8ab334f9bf22a745fcb3b12505c5981527f26ed94dbb5c5e248024d440b4a7bdb653e107039a5b1bde1372398cedc034349818601528185015285850152835190810184527f14d3ceb54dc4bf360538801b4f71e16254bf16fc12129f23216c0d514e4e1afa8185019081527f0f6d26d57f1fe7508e732319f14171a9b6288266e3c788a4c711741624902c30828401528152835180850185527f10ac38e89243188b7f3a5beeec4edcd111e202f6659c2eb8c3f531841ae6e2b481527f198819877539aeafc740acf9288def97366feba5b1d32df711d696bebe41ff318185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068157505060808201908152604080518082019091527eb397970c06a6ecfbf8eaad162c19a789c185c2082da48fcf8491804c0170e981527f0ff6f3607b7f9e69f029126fdaf13267de78afc1ab064dc1549ae993fb0543ca60208201529051805160009061071357610713611556565b602002602001018190525060405180604001604052807f030be1acb8e253cdacc74c69e8d31e0e49887c613d4734b1fedc0adf7a8c10da81526020017f1cff477fd9ff0f2c53e30dcc092752d64e7984dcd51176415ee2df2f07593b9c815250816080015160018151811061078a5761078a611556565b602002602001018190525060405180604001604052807f2b5b6ed78073405986ae8859d0e058336a00352444e54e64a32629e8e5d37e3d81526020017f158b8f15694dd63f9badc042fb46dbd640b58405a25c2a703d677df4e47184bc815250816080015160028151811061080157610801611556565b602002602001018190525060405180604001604052807f2b3b68355a6eecb60e4c175512a5ff27aefa35044d2a6a6364c87e6b1c0105fa81526020017f0140b20d81ff647b9bac5ee338c542ba2e261c8239b5893ea9aeb5832f873b89815250816080015160038151811061087857610878611556565b602002602001018190525060405180604001604052807f29993a392c4d9e71e9126d6a67c245be00022b63a3b4d3115fb63be720de439181526020017f1eb7af3dbfb3a69e06198502d4330ba16591900909a47a29426203ccdb35677b81525081608001516004815181106108ef576108ef611556565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761092b816003611508565b818061093957610939611540565b8451838061094957610949611540565b8651800909828061095c5761095c611540565b6020860151800961096d91906114d6565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926109e592909190829060015b602002015161103a565b895180516020820151939750919550610a0a929060005b60200201518b5160016109db565b89519193509150610a20908390839060006109fc565b9092509050610a31848484846110bb565b9094509250610a42848488886110bb565b909450925083158015610a53575082155b98975050505050505050565b6040805180820190915260008082526020820152610a7b6111cd565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b5080610ad457604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152610af86111eb565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b57610ab5565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610b96576040518060400160405280828560000151610b859190611508565b815260006020909101529392505050565b6040518060400160405280828560000151610bb19190611508565b8152602001828560200151610bc69190611508565b610bd090846114d6565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610c1a57610c1a611556565b6020026020010181815250508a6020015181600181518110610c3e57610c3e611556565b602090810291909101015289516001602002015181600281518110610c6557610c65611556565b6020908102919091010152895151815182906003908110610c8857610c88611556565b6020026020010181815250508960200151600160028110610cab57610cab611556565b602002015181600481518110610cc357610cc3611556565b6020026020010181815250508960200151600060028110610ce657610ce6611556565b602002015181600581518110610cfe57610cfe611556565b602002602001018181525050886000015181600681518110610d2257610d22611556565b602002602001018181525050886020015181600781518110610d4657610d46611556565b602090810291909101015287516001602002015181600881518110610d6d57610d6d611556565b6020908102919091010152875151815182906009908110610d9057610d90611556565b6020026020010181815250508760200151600160028110610db357610db3611556565b602002015181600a81518110610dcb57610dcb611556565b6020026020010181815250508760200151600060028110610dee57610dee611556565b602002015181600b81518110610e0657610e06611556565b602002602001018181525050866000015181600c81518110610e2a57610e2a611556565b602002602001018181525050866020015181600d81518110610e4e57610e4e611556565b602090810291909101015285516001602002015181600e81518110610e7557610e75611556565b602090810291909101015285515181518290600f908110610e9857610e98611556565b6020026020010181815250508560200151600160028110610ebb57610ebb611556565b602002015181601081518110610ed357610ed3611556565b6020026020010181815250508560200151600060028110610ef657610ef6611556565b602002015181601181518110610f0e57610f0e611556565b602002602001018181525050846000015181601281518110610f3257610f32611556565b602002602001018181525050846020015181601381518110610f5657610f56611556565b602090810291909101015283516001602002015181601481518110610f7d57610f7d611556565b6020908102919091010152835151815182906015908110610fa057610fa0611556565b6020026020010181815250508360200151600160028110610fc357610fc3611556565b602002015181601681518110610fdb57610fdb611556565b6020026020010181815250508360200151600060028110610ffe57610ffe611556565b60200201518160178151811061101657611016611556565b60200260200101818152505061102b81611103565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761107c81868909828061107357611073611540565b86890983611158565b818061108a5761108a611540565b828061109857611098611540565b87890983806110a9576110a9611540565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476110ea878683611158565b6110f5878684611158565b925092505094509492505050565b8051600090611110611209565b6000602082602085026020880160086107d05a03fa905080801561002b57508061114d57604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b6000818061116857611168611540565b61117284846114d6565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016111a6611227565b81526020016111b3611227565b81526020016111c0611227565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061123a61124c565b815260200161124761124c565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261127b57600080fd5b611283611472565b80838560408601111561129557600080fd5b60005b60028110156112b7578135845260209384019390910190600101611298565b509095945050505050565b600082601f8301126112d357600080fd5b8135602067ffffffffffffffff808311156112f0576112f061156c565b8260051b604051601f19603f830116810181811084821117156113155761131561156c565b6040528481528381019250868401828801850189101561133457600080fd5b600092505b85831015611357578035845292840192600192909201918401611339565b50979650505050505050565b60006040828403121561137557600080fd5b6040516040810181811067ffffffffffffffff821117156113985761139861156c565b604052823581526020928301359281019290925250919050565b6000808284036101208112156113c757600080fd5b610100808212156113d757600080fd5b6113df61149b565b6113e98787611363565b81526080603f19840112156113fd57600080fd5b611405611472565b9250611414876040880161126a565b8352611423876080880161126a565b602084015282602082015261143b8760c08801611363565b60408201529350840135905067ffffffffffffffff81111561145c57600080fd5b611468858286016112c2565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156114955761149561156c565b60405290565b6040516060810167ffffffffffffffff811182821017156114955761149561156c565b600082198211156114d1576114d161152a565b500190565b6000828210156114e8576114e861152a565b500390565b60006000198214156115015761150161152a565b5060010190565b60008261152557634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d951e438d5a47e525493c103a71bfc84769152b891c4d0ae7f6254daa973f6b564736f6c63430008070033';

type Rollup4VerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Rollup4VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup4Verifier__factory extends ContractFactory {
  constructor(...args: Rollup4VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Rollup4Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Rollup4Verifier> {
    return super.deploy(overrides || {}) as Promise<Rollup4Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Rollup4Verifier {
    return super.attach(address) as Rollup4Verifier;
  }
  connect(signer: Signer): Rollup4Verifier__factory {
    return super.connect(signer) as Rollup4Verifier__factory;
  }
  static readonly contractName: 'Rollup4Verifier';
  public readonly contractName: 'Rollup4Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Rollup4VerifierInterface {
    return new utils.Interface(_abi) as Rollup4VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup4Verifier {
    return new Contract(address, _abi, signerOrProvider) as Rollup4Verifier;
  }
}
