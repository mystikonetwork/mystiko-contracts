/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x0Verifier, Transaction2x0VerifierInterface } from '../Transaction2x0Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506121ce806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611fc8565b610057565b604051901515815260200160405180910390f35b60008151601e1461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906120d4565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611513565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161158b565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611513565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61216c565b6020026020010151611675565b905060005b865181101561038c57838782815181106102fd576102fd61216c565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906120d4565b8151811061034c5761034c61216c565b60200260200101518a85815181106103665761036661216c565b60200260200101516116f2565b611675565b91508061038481612103565b9150506102e1565b5061039681611513565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611741565b85604001516103db8a60400151611741565b606088015188516103eb90611741565b89602001516117ef565b9695505050505050565b610407611d92565b6040805180820182527f2b8d51c0e412cd00ffb7fa96499c624933f68b914a0453b4d17ecb0d0af7e4fd81527f2b5002f1c806d2ea7ed003b61ca749e155088120ac8ecafd0f3bb60ebbbef8646020808301919091529083528151608080820184527f050a78d53293745b5e167874380221f66a423233d5592c5778bee290cb13b8748285019081527f0d514a45994ac00d156103afc66382722cf2c7615977437f1db59d5779fc235c606080850191909152908352845180860186527f24e07c6a8f43ddb998422c3d1b457c69b80a5a55ab5d2d4abc25823aada5085f81527f05cf9493b7e93d90a41a5f534ba09612e92efef0667cce0a26f117369749a28f818601528385015285840192909252835180820185527f142e51c32709d3c651b6bc3108c5de9ab8feb888baae26616b3fead3d1587cd28186019081527f1417d4f91e0bdb033d022dcdef274648f740eaadf8f536a908fd35c3d7dfb094828501528152845180860186527f1fe0a8c77cc6560ba1b1ae811c79c2687286c9406b0a4a4d632b61155df0573581527f06513e83e067792e0c0465acecf3869869092a7341b7802368a4ce8545943efa818601528185015285850152835190810184527f0d1fb8f293892a5c6991198fcd15cb455ed7ee2313179fcb2fb12383d404bd5b8185019081527f287f099e64cd8d0e75fd552c93cd45c557672817193294400b53bb3a2c135b23828401528152835180850185527f089113b25df6486de601c8037645615a3710cefbfb04114ec2d190bb57552f3881527f1172946135a0a904a7beeeafed8c01bc19dbe065a8d23055ad595f2f554bb4e28185015281840152908401528151601f8082526104008201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f1ac9a2977b68296f2b16e913d28dbbcfd934b873b8641f5ae11c297992190a3c81527f10d62b1378614806e2632459eb571f67c7970f18d59c83274b5a38274ec2d5516020820152905180516000906107165761071661216c565b602002602001018190525060405180604001604052807f2511337bd39a3e5aef489eaa2366344ab02576b059509676bf1d2a72a23a4e4781526020017f2d0cc69d54bb11bfa413b6fecc6a4d11088ce863ad0756cc0851f700e7c686e4815250816080015160018151811061078d5761078d61216c565b602002602001018190525060405180604001604052807f11158c900b86a957ef1817432b0a9709166585b4fc4d6e3949dc59a9bc40f12881526020017f173425344ac16e606c32e478c69539de8f84978300102c96e970ecf2cc4a9e8e81525081608001516002815181106108045761080461216c565b602002602001018190525060405180604001604052807f04842f7b88ba3f037e266264a1e017146d39e8254c72bbe59d0a71cceb9d8a8981526020017f07646ef240ba543e8a6ca5ba99ca86ef4b7c6cbf321b6d6012bcb414e41130dc815250816080015160038151811061087b5761087b61216c565b602002602001018190525060405180604001604052807f118caf462fc90dddee1b4f015f214bf068c8942b66e50200307d443b675877be81526020017f1c958d839fa0b0cfe94f4d62ebe47aa0bc4e2ce57677b223e5ef0e6b8e182b5981525081608001516004815181106108f2576108f261216c565b602002602001018190525060405180604001604052807eebdb6f851f5bf6701d29d477bce983966594b2c4362ec1cfba6bf8d14f95ab81526020017f18b879aa8ef7aee89d9768eded1b9e0fc8ccf6bef865234113452cce6e30633081525081608001516005815181106109685761096861216c565b602002602001018190525060405180604001604052807f1468bc27ede4ca284ce309e1b4360bf692d781a3f385315281646911a9b612d981526020017f0b6120719969326abba5c68ce95efdd69f8746862c38da1c0fe32014e30bbaf481525081608001516006815181106109df576109df61216c565b602002602001018190525060405180604001604052807f17dabc8423cff02b2e0448110895e2a9d9093921948ffae971e0bd9d4def2f0581526020017f0c7ff3686765683ffcd6b45cdf6b31ed38074354d0b00cf7eefa9716337304238152508160800151600781518110610a5657610a5661216c565b602002602001018190525060405180604001604052807f24f39b1b9c136fe2924ddba7091d297ea9b0af8fd58f1d897da0ea2de99f371681526020017f18a6922b9f27e880ecd8e6ab2c4c4ae76899751db7d5e433ebfe5db97f114d318152508160800151600881518110610acd57610acd61216c565b602002602001018190525060405180604001604052807f14461412694ab4cd55e68133a92705c13cecfb0cafb380d7a4575939e0948c7a81526020017f045ae5d5a5a50db957ac886d6994ae22efe19dcf569b828c78a87a39773bfd938152508160800151600981518110610b4457610b4461216c565b602002602001018190525060405180604001604052807f17a20961d2e63f59de29a3a880455319ff836f504c79b89cb4d00a6d7695230981526020017f097062dd92876e083b94c6a236636aba0d880c1b84a6a26195772e80d0f1a8a68152508160800151600a81518110610bbb57610bbb61216c565b602002602001018190525060405180604001604052807f0799ec3f9d0eeb1274caed59cbb58f1f37d379c0646fff1c33afd064d7d4a26b81526020017f25d49e4be3a69ac90b71be984e340f31c591aa1da76d025f81d0b398b33cee7a8152508160800151600b81518110610c3257610c3261216c565b602002602001018190525060405180604001604052807f19008481aa3f415bfc6f6c88c391dc2514bd20df7a14e45f13097c68e50b009181526020017f25ed9658afee416b7f7667ac2f07bcf2255012f9611866e5dbf4196d8f7c54688152508160800151600c81518110610ca957610ca961216c565b602002602001018190525060405180604001604052807f0a14467f27029bed0f7932940c07b622f93f1f61063fb4074480e0ee4d27449e81526020017f023ff78a124f7a429c050ed2813d712f1c529d540c8ff8d978410bb09d6086698152508160800151600d81518110610d2057610d2061216c565b602002602001018190525060405180604001604052807f267ecb15beb3611642582f6b2c6c12279f3c75f501f54aef88dc70ee34c7d57e81526020017f2c3de4f0702fa89bfc580754a73cc01a9d39a0addd585f6e9e09ebbb51879a3c8152508160800151600e81518110610d9757610d9761216c565b602002602001018190525060405180604001604052807f07f2ead3d5dfb12547eae11ffe611c786528cefa04b77a7d6ef1f9b2a8a436d581526020017f2264332898dccd0e8acf61e4c7602138aa7cec548da4f2e29ed1f8473701326d8152508160800151600f81518110610e0e57610e0e61216c565b602002602001018190525060405180604001604052807f25ab40ebe3aa9f2acda19253bcb0fab619c67bd97af467a5e036f30b12895ab381526020017f09b16a47a4419817aad63aa7710236c85d8f342b7588199e2d4b5d5481d3ae518152508160800151601081518110610e8557610e8561216c565b602002602001018190525060405180604001604052807f172b209b94bcd2d4fab3f16b4b0a8356a3e2b66b0af5f4863ec3148f9f3f228781526020017f198e1ac783b1d5c125ab500062bfb9b4fb23ec4a30f0771624abce87d6b52aee8152508160800151601181518110610efc57610efc61216c565b602002602001018190525060405180604001604052807e3b0301a9587bb90143f35a49052da09263d43bda11258c5f2897036c64538681526020017f1a8779d5270f25e3a23d4cdd13260717bc8442ac190912ba02ecaec93ac195dc8152508160800151601281518110610f7257610f7261216c565b602002602001018190525060405180604001604052807f15be6bde1dc83365e28f22cf42da0a96caa50094ff04e272bab251055bda60e081526020017f1376bbd5680d0b56c9d6e21e58dd7cb5b5a472bb9827beb2197c4d2d2305bf558152508160800151601381518110610fe957610fe961216c565b602002602001018190525060405180604001604052807f14af7671ba9e0e33de68f9b1513463e7712007d49c49bda32a1ecbbbe103427581526020017f0ff07ac459b71878b16d0d27112ee5844ab382eb4070216933cd8bc5fb36ebe381525081608001516014815181106110605761106061216c565b602002602001018190525060405180604001604052807f135cd74c7bb9d19564d4bbcbb9e1af5ec4b22a92592cd0f87e6f3fb56d96c00781526020017f03ce6b25482cab60a8ebd1c3cbfe3afd1f2d6c2bf8477570de6efe819a352bbb81525081608001516015815181106110d7576110d761216c565b602002602001018190525060405180604001604052807f218bfa02bc21747e1c789d58a71fbaf10d862ba28080a5a2d4d9c98a7f4c9eaa81526020017f2c2070173dd48062d9a9e7980610da97390dbf00a44cb31fa3a27e2650e3f3d4815250816080015160168151811061114e5761114e61216c565b602002602001018190525060405180604001604052807f1ae7906eeacfebdeccc324cf0637f0760e00e1ede05209319893a481cd3635df81526020017f18a02c9237c9de8aab954fe0e09c9ffaae273a76c58f0ed5283d2e94cd2eb47f81525081608001516017815181106111c5576111c561216c565b602002602001018190525060405180604001604052807f136f3dfd5c98845717e373717a3eaa57d18d70f9e70c20e9330dc6095416f5ac81526020017f0a59580d9c9c3b4a4d016ea05610e76ae8d18577018edab60e0f8b898569ada9815250816080015160188151811061123c5761123c61216c565b602002602001018190525060405180604001604052807f1cf76247b02dfff28a72b0cc354389d77c87cb1c8b5069adbdfccbc417a59f7981526020017f0d2637a4c09d9775c91c760c1ae37bc7628523c0baacb8e4ecb9b95f48aeb05081525081608001516019815181106112b3576112b361216c565b602002602001018190525060405180604001604052807f2d35d6eacd7e2c82a8c8b5fac3452920899d3531f77f311faaf66dbcc55a331a81526020017f162357c5f46146985a7a3877a8b6c60d8e6e60a3561e4081e5cf2eeeba5fe36c8152508160800151601a8151811061132a5761132a61216c565b602002602001018190525060405180604001604052807eb77725bef06caf5cd36b3c425e03565a75ddf898b6e7956e0dcfcc080e056981526020017f0f65a264c42cd1b305938875881001b136dcf006ce2df6dfbdd0fe9275f073b48152508160800151601b815181106113a0576113a061216c565b602002602001018190525060405180604001604052807f08f842b6bb84fd65c89b3b3d3aeffe1772aa8389421a85e9e175641dcfc905b581526020017f07d62512ed6ad22dd5e978759772f682569b440c591757bbd051c8936168de108152508160800151601c815181106114175761141761216c565b602002602001018190525060405180604001604052807f24f22453d90cfb075da165fa3b7718041bb7bcde262f335745e3f735024d864281526020017f1bfcddeb44f09b1bc6553f72d0f075242403de8ce8b7ea904348ae5eaa629a6d8152508160800151601d8151811061148e5761148e61216c565b602002602001018190525060405180604001604052807f24392860911f7fba95465127cd39eca7a6e9466240833eabe826f8e2af34c20181526020017f2e2d53015d8cca83b9f03788c5466c07e5215e59e02a13187066a684a772b1698152508160800151601e815181106115055761150561216c565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761154181600361211e565b818061154f5761154f612156565b8451838061155f5761155f612156565b8651800909828061157257611572612156565b6020860151800961158391906120ec565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926115fb92909190829060015b6020020151611c50565b895180516020820151939750919550611620929060005b60200201518b5160016115f1565b8951919350915061163690839083906000611612565b909250905061164784848484611cd1565b909450925061165884848888611cd1565b909450925083158015611669575082155b98975050505050505050565b6040805180820190915260008082526020820152611691611de3565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806116ea57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b604080518082019091526000808252602082015261170e611e01565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576116cb565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47906117ac57604051806040016040528082856000015161179b919061211e565b815260006020909101529392505050565b60405180604001604052808285600001516117c7919061211e565b81526020018285602001516117dc919061211e565b6117e690846120ec565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106118305761183061216c565b6020026020010181815250508a60200151816001815181106118545761185461216c565b60209081029190910101528951600160200201518160028151811061187b5761187b61216c565b602090810291909101015289515181518290600390811061189e5761189e61216c565b60200260200101818152505089602001516001600281106118c1576118c161216c565b6020020151816004815181106118d9576118d961216c565b60200260200101818152505089602001516000600281106118fc576118fc61216c565b6020020151816005815181106119145761191461216c565b6020026020010181815250508860000151816006815181106119385761193861216c565b60200260200101818152505088602001518160078151811061195c5761195c61216c565b6020908102919091010152875160016020020151816008815181106119835761198361216c565b60209081029190910101528751518151829060099081106119a6576119a661216c565b60200260200101818152505087602001516001600281106119c9576119c961216c565b602002015181600a815181106119e1576119e161216c565b6020026020010181815250508760200151600060028110611a0457611a0461216c565b602002015181600b81518110611a1c57611a1c61216c565b602002602001018181525050866000015181600c81518110611a4057611a4061216c565b602002602001018181525050866020015181600d81518110611a6457611a6461216c565b602090810291909101015285516001602002015181600e81518110611a8b57611a8b61216c565b602090810291909101015285515181518290600f908110611aae57611aae61216c565b6020026020010181815250508560200151600160028110611ad157611ad161216c565b602002015181601081518110611ae957611ae961216c565b6020026020010181815250508560200151600060028110611b0c57611b0c61216c565b602002015181601181518110611b2457611b2461216c565b602002602001018181525050846000015181601281518110611b4857611b4861216c565b602002602001018181525050846020015181601381518110611b6c57611b6c61216c565b602090810291909101015283516001602002015181601481518110611b9357611b9361216c565b6020908102919091010152835151815182906015908110611bb657611bb661216c565b6020026020010181815250508360200151600160028110611bd957611bd961216c565b602002015181601681518110611bf157611bf161216c565b6020026020010181815250508360200151600060028110611c1457611c1461216c565b602002015181601781518110611c2c57611c2c61216c565b602002602001018181525050611c4181611d19565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611c92818689098280611c8957611c89612156565b86890983611d6e565b8180611ca057611ca0612156565b8280611cae57611cae612156565b8789098380611cbf57611cbf612156565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d00878683611d6e565b611d0b878684611d6e565b925092505094509492505050565b8051600090611d26611e1f565b6000602082602085026020880160086107d05a03fa905080801561002b575080611d6357604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611d7e57611d7e612156565b611d8884846120ec565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611dbc611e3d565b8152602001611dc9611e3d565b8152602001611dd6611e3d565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611e50611e62565b8152602001611e5d611e62565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611e9157600080fd5b611e99612088565b808385604086011115611eab57600080fd5b60005b6002811015611ecd578135845260209384019390910190600101611eae565b509095945050505050565b600082601f830112611ee957600080fd5b8135602067ffffffffffffffff80831115611f0657611f06612182565b8260051b604051601f19603f83011681018181108482111715611f2b57611f2b612182565b60405284815283810192508684018288018501891015611f4a57600080fd5b600092505b85831015611f6d578035845292840192600192909201918401611f4f565b50979650505050505050565b600060408284031215611f8b57600080fd5b6040516040810181811067ffffffffffffffff82111715611fae57611fae612182565b604052823581526020928301359281019290925250919050565b600080828403610120811215611fdd57600080fd5b61010080821215611fed57600080fd5b611ff56120b1565b611fff8787611f79565b81526080603f198401121561201357600080fd5b61201b612088565b925061202a8760408801611e80565b83526120398760808801611e80565b60208401528260208201526120518760c08801611f79565b60408201529350840135905067ffffffffffffffff81111561207257600080fd5b61207e85828601611ed8565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156120ab576120ab612182565b60405290565b6040516060810167ffffffffffffffff811182821017156120ab576120ab612182565b600082198211156120e7576120e7612140565b500190565b6000828210156120fe576120fe612140565b500390565b600060001982141561211757612117612140565b5060010190565b60008261213b57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dd0741fcbf3da56b89e357cb7243637e7212d5deee7c063240d8e181ca6cf9a364736f6c63430008070033';

type Transaction2x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x0Verifier {
    return super.attach(address) as Transaction2x0Verifier;
  }
  connect(signer: Signer): Transaction2x0Verifier__factory {
    return super.connect(signer) as Transaction2x0Verifier__factory;
  }
  static readonly contractName: 'Transaction2x0Verifier';
  public readonly contractName: 'Transaction2x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x0Verifier;
  }
}
