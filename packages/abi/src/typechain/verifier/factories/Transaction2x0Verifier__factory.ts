/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x0Verifier, Transaction2x0VerifierInterface } from '../Transaction2x0Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506121d0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e366004611fca565b610057565b604051901515815260200160405180910390f35b60008151601e1461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906120d6565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611515565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161158d565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611515565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61216e565b6020026020010151611677565b905060005b865181101561038c57838782815181106102fd576102fd61216e565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906120d6565b8151811061034c5761034c61216e565b60200260200101518a85815181106103665761036661216e565b60200260200101516116f4565b611677565b91508061038481612105565b9150506102e1565b5061039681611515565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611743565b85604001516103db8a60400151611743565b606088015188516103eb90611743565b89602001516117f1565b9695505050505050565b610407611d94565b6040805180820182527f1da2894fc4f2a3f4ed60fd74de9cf824d8b30080c91d12266b63834a7442496c81527f25e027b2d928be274356d5b126406b5fe25cc8db98bd28e3dae3e4d1829e85c86020808301919091529083528151608080820184527f28d5c65d53d41a4a24c6a56b5090927685d9f8e4d2f542e07da58aaac111ee418285019081527f0f88336e9c074054c246f5902e18067c2f5032d2d0a7cf48193ac345782726f3606080850191909152908352845180860186527f135f58bcb6ff3ea805541f805dbfabb18a0d11c1de2410c7266bd8e965c2414481527f2fcddb8abeecf5e0a5958298559d013c8fe1a716376b77553eedecd5f2a87e79818601528385015285840192909252835180820185527f01d7d48c36055cefb32955f21a5935a8d1a08dadf53e4fa2d0eb27ea542b26c78186019081527f191d9807e340039db2f0e911d9e26c36cd31cb3a4f1dde30b20f7c44b232f02c828501528152845180860186527f18be7ea06ce0cbecec71f2b9b704cb417cf7871ef1f6c85753bde56d9712e74081527f29af066638a83aca67c108d0a02f699c094a2adeccc6abf43e18b74278581caf818601528185015285850152835190810184527f115fc979a9a2feac45dd6a4b871b90914683624f258e276f067ab4eaf43bf7698185019081527f04cde34b0716841728fcb0a3704f4e535212635711decd0ef9e663a3608497e9828401528152835180850185527f19b60dbb5ec06523d41b0949a3ce07bcf1d219b63c9b0223836f66f38ba918ba81527f2b23d6db726015f874cbe03aaf2af5aeec95a3eb2a519fddbb0b788027b9e32b8185015281840152908401528151601f8082526104008201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068357505060808201908152604080518082019091527f2e6fea39280efadec91a6cdff1c68f400b29c6e8f2872cc7b266a5d5b585315781527f050aa096ec90d1ea885666ed96a586d0c4f48b85b8f106611b4fe864fc8e924c6020820152905180516000906107165761071661216e565b602002602001018190525060405180604001604052807f1cbb675ff9684f3fe290b25118b0fa1811c4041bf1fd101bc6fac24873ba665581526020017f04615121d78d94ec19bd29bee87c003fa20d31660266e8c5dfea7b279fcb5a83815250816080015160018151811061078d5761078d61216e565b602002602001018190525060405180604001604052807f2a05fc6527769fc268c86579cc734203f2a98dc00f505bbaa47de14848a06a1f81526020017f2201e215ce77c6fc7c83b453c4ef4e2828d59ef84121660b27ece4b3c510d84881525081608001516002815181106108045761080461216e565b602002602001018190525060405180604001604052807f24245a4a72c86956de840cdf7b65695c16761071fa7811ce2aa64ce214b988ff81526020017f04eaf5fd238964227f1cc30d17a1e8392f5b924282bd7137c101e27073db889d815250816080015160038151811061087b5761087b61216e565b602002602001018190525060405180604001604052807f2b64ebe3bab7bf22c747bc52f2233359c3a1e9e4ba9ad73adc00f104dd2f4aad81526020017f0183b480bfdec9b1dead3b6ad33c5d07ca7aec191bdcd0f9c7c7c76a7cd55f3781525081608001516004815181106108f2576108f261216e565b602002602001018190525060405180604001604052807f2e002c34aac032112205deb5e3a6c4be8b0a66d2b1890abb11e0d7a43dd4d38281526020017f0e8966d924bdd0f0c62d0cc56f1a5c334d697947ac50e368909701fefdcda32c81525081608001516005815181106109695761096961216e565b602002602001018190525060405180604001604052807e3bfec2ce1381a47ee9759b0f136bb57f84e47f6c3fa87184358bf6b15e456381526020017f02342f53d7a7a33f9b188065ff35977e182044f3ad61770aa613ef9298c9437781525081608001516006815181106109df576109df61216e565b602002602001018190525060405180604001604052807f0e805b7745c3131b89cd20097c46127bc101ab39611c70e40da4dcd963ec831681526020017f25d49567445962d28aab341f47a62b4c50b556c9711ef909121deeccc08e9b258152508160800151600781518110610a5657610a5661216e565b602002602001018190525060405180604001604052807f201353e9ce62500f73169fef48f32bca7c92a0ca2ea6d7aef137b3a82d0b659381526020017f22659ab4755c8016169ae22d08e1375452ecbea624126a0400b96415e8d521818152508160800151600881518110610acd57610acd61216e565b602002602001018190525060405180604001604052807f2f8e9fa47b913a269d0a7d8a5753509c0b15dc43176cfdfd32792af69507675b81526020017f0b3e58183069a363888721aeb88fb254ab780c4702569e25d7de0408badc1c6d8152508160800151600981518110610b4457610b4461216e565b602002602001018190525060405180604001604052807f302426a2dcbee89d27a265f833b389898cf1dba63f8a1214153121db794ab35e81526020017f27ddaf679563e94d01d2d55755136456e82f970da93fd2605d32d04b21991cd08152508160800151600a81518110610bbb57610bbb61216e565b602002602001018190525060405180604001604052807f291c090302ff94730784ce99b7d48d4273d4091d43425730d8e773fcb4b8103f81526020017f01edda4edf7f9302b1dc74fc7f604a0963bd832c28caa795afe3ea5bf4d7d6868152508160800151600b81518110610c3257610c3261216e565b602002602001018190525060405180604001604052807f0fcf499ca12cf828584270a1ab5a2c2d22b29b394716dac378b0142ab666d3e781526020017f06c1a8394eee9fcbde4df93d22b4f724488f6f5b43be5369f57c21d8b42f2efc8152508160800151600c81518110610ca957610ca961216e565b602002602001018190525060405180604001604052807f1c7ae8dc64014e09143810be4be886c5f327d12f6e62fba9423d819e8be08ae381526020017f27c238df7a86c35bae0df8dd72d73cda5b3ab9222504c239a558c3f8204037d88152508160800151600d81518110610d2057610d2061216e565b602002602001018190525060405180604001604052807f10bbc23da89ee13de070d4177a681960bd3032a982f04ce5492b64ce9e19675181526020017f1f25894de6b6bc84d975cce3d4df5690e861f2f1f2ec7f101ec26842f6d61c878152508160800151600e81518110610d9757610d9761216e565b602002602001018190525060405180604001604052807f0cfcdff7c6e3aff4c892464599c9cddd6c59d2ab3868b3c72ef169e1315f95a481526020017f059f7ddaf634b0100f1310e455a5609d3c5b8aa202cb8d85b19fda6c242ef6aa8152508160800151600f81518110610e0e57610e0e61216e565b602002602001018190525060405180604001604052807f13376823d4a81d9f01f11f5efd1f69d736c4c1d5e7ea511071caf2fa1bf4657081526020017f23291022ef45d7e8dbb3608826e36acc27efc334c0d39613e09104ce5bfb4d508152508160800151601081518110610e8557610e8561216e565b602002602001018190525060405180604001604052807f1f462ba90b620dc6e4c82e217b80ed062fd8d6c3f621d5eec21091e84d102d4a81526020017f1f395ad94284ee3e58169021ecd8c6debf04a5469b82a9a50c6bd58acc2e234d8152508160800151601181518110610efc57610efc61216e565b602002602001018190525060405180604001604052807f23cda01ee5b5b4502f84a70b617968e604572a7e6560bd2fb1b09dc696e44c1981526020017f15acca0ff6bc216237d46d125410aafe9351c115c771207340f1b90c1f8b9aaa8152508160800151601281518110610f7357610f7361216e565b602002602001018190525060405180604001604052807f06c5cbc2eb37061b6b5192accad0cc268ca3584b7bd5d6d6908ab7a5981e8e3d81526020017f1011cf4dd929e146a95d6b5ce95f5cb5e842538a0bc3cd854fd1638840d807798152508160800151601381518110610fea57610fea61216e565b602002602001018190525060405180604001604052807f178ee64f2bef9159fce7dca9f0e0f30db0dfa9d73a9a9d3a5a54c02369cc29ab81526020017f2ca12e96cc4e5bffcab088965307559532bafdc8cf3cd6428c550df72daaa6c381525081608001516014815181106110615761106161216e565b602002602001018190525060405180604001604052807f0c1c42ea6d0877fe17e3aaa67bc58b5958aa3da7fe464d25557ddd07f01958ca81526020017f19115ec91ccdd33501a1266b4ecccc4d38990c1acc836dd85907f8faabc07f7c81525081608001516015815181106110d8576110d861216e565b602002602001018190525060405180604001604052807f2fc0735babd8cf0babf4314330480b45c402d0c9910d7c642514599f36b13ad981526020017f266638c4e3ce506001d5dd4f16a35ad2ebce23816cb732f0c8eca5946d487027815250816080015160168151811061114f5761114f61216e565b602002602001018190525060405180604001604052807f30455f5fe4f2b2faf14193db523cf866bb303d076f94e29de94c008a19b3048781526020017f172dbb726e385ad3c3f63df29cf5be804db6cbc68a2926f98fe8440454182cf481525081608001516017815181106111c6576111c661216e565b602002602001018190525060405180604001604052807f2f49644c06ed8540dc6093020dd2d61f4b2b3d1b234653291d0d642f58dea95c81526020017f15a81fb3059f6d4fc6dd2d3b05edabf121f058f4a6f3ae3e5e6b79dd619ec1a9815250816080015160188151811061123d5761123d61216e565b602002602001018190525060405180604001604052807f1939ae83e93fc8750a20cd28a466fa4799de1d09c0d052eebf855e222bc79c4381526020017f1f15757728d12410b6149d0f36c4b1197ce4542ad8fbd41dad4e21acf532b28381525081608001516019815181106112b4576112b461216e565b602002602001018190525060405180604001604052807f2cc955d1435341c752761e7013725dd42f3b0ea9d3cc686a2aeac0f702d8e3a881526020017f2234f4fec2728db142a8fa12b2b42ebaf351aa8324c0bc0a9cf6a76b65464efa8152508160800151601a8151811061132b5761132b61216e565b602002602001018190525060405180604001604052807f21e866c8f590d27bbd282ac4e620afbaea60ee1de535aed7ba36e1aa9586b04581526020017f1eccc499f3076e3feadaf7e61aa2968c4c1389a81a40e7726ef0690fecc83dd68152508160800151601b815181106113a2576113a261216e565b602002602001018190525060405180604001604052807f2aeb14ee548030534232221d2c3789fb3111b87cde727f5d158e660f7e92cda681526020017f060f90ad3cd32e5a6ee2b8028967e1b94382cd789242dc0f49077df6c7d24bcc8152508160800151601c815181106114195761141961216e565b602002602001018190525060405180604001604052807f287cbe86ceb4760c73b435cb5a03371358768290a6b22af26cb28e91156adfd881526020017f0fb7ad180072c5866bfa084712fcd1a1789c12d9354d873339e17314b2da0da68152508160800151601d815181106114905761149061216e565b602002602001018190525060405180604001604052807f2378ec2ddaf9fb7ea3916cc377e3f0135c6c761c3444f3d1bfc38b22b1ee1ff981526020017f081551f5b05ef66064a903d2a66d9e50284d41dd3e852a155118fffbfa6e7a768152508160800151601e815181106115075761150761216e565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611543816003612120565b818061155157611551612158565b8451838061156157611561612158565b8651800909828061157457611574612158565b6020860151800961158591906120ee565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926115fd92909190829060015b6020020151611c52565b895180516020820151939750919550611622929060005b60200201518b5160016115f3565b8951919350915061163890839083906000611614565b909250905061164984848484611cd3565b909450925061165a84848888611cd3565b90945092508315801561166b575082155b98975050505050505050565b6040805180820190915260008082526020820152611693611de5565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806116ec57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152611710611e03565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576116cd565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47906117ae57604051806040016040528082856000015161179d9190612120565b815260006020909101529392505050565b60405180604001604052808285600001516117c99190612120565b81526020018285602001516117de9190612120565b6117e890846120ee565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106118325761183261216e565b6020026020010181815250508a60200151816001815181106118565761185661216e565b60209081029190910101528951600160200201518160028151811061187d5761187d61216e565b60209081029190910101528951518151829060039081106118a0576118a061216e565b60200260200101818152505089602001516001600281106118c3576118c361216e565b6020020151816004815181106118db576118db61216e565b60200260200101818152505089602001516000600281106118fe576118fe61216e565b6020020151816005815181106119165761191661216e565b60200260200101818152505088600001518160068151811061193a5761193a61216e565b60200260200101818152505088602001518160078151811061195e5761195e61216e565b6020908102919091010152875160016020020151816008815181106119855761198561216e565b60209081029190910101528751518151829060099081106119a8576119a861216e565b60200260200101818152505087602001516001600281106119cb576119cb61216e565b602002015181600a815181106119e3576119e361216e565b6020026020010181815250508760200151600060028110611a0657611a0661216e565b602002015181600b81518110611a1e57611a1e61216e565b602002602001018181525050866000015181600c81518110611a4257611a4261216e565b602002602001018181525050866020015181600d81518110611a6657611a6661216e565b602090810291909101015285516001602002015181600e81518110611a8d57611a8d61216e565b602090810291909101015285515181518290600f908110611ab057611ab061216e565b6020026020010181815250508560200151600160028110611ad357611ad361216e565b602002015181601081518110611aeb57611aeb61216e565b6020026020010181815250508560200151600060028110611b0e57611b0e61216e565b602002015181601181518110611b2657611b2661216e565b602002602001018181525050846000015181601281518110611b4a57611b4a61216e565b602002602001018181525050846020015181601381518110611b6e57611b6e61216e565b602090810291909101015283516001602002015181601481518110611b9557611b9561216e565b6020908102919091010152835151815182906015908110611bb857611bb861216e565b6020026020010181815250508360200151600160028110611bdb57611bdb61216e565b602002015181601681518110611bf357611bf361216e565b6020026020010181815250508360200151600060028110611c1657611c1661216e565b602002015181601781518110611c2e57611c2e61216e565b602002602001018181525050611c4381611d1b565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611c94818689098280611c8b57611c8b612158565b86890983611d70565b8180611ca257611ca2612158565b8280611cb057611cb0612158565b8789098380611cc157611cc1612158565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d02878683611d70565b611d0d878684611d70565b925092505094509492505050565b8051600090611d28611e21565b6000602082602085026020880160086107d05a03fa905080801561002b575080611d6557604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611d8057611d80612158565b611d8a84846120ee565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611dbe611e3f565b8152602001611dcb611e3f565b8152602001611dd8611e3f565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611e52611e64565b8152602001611e5f611e64565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611e9357600080fd5b611e9b61208a565b808385604086011115611ead57600080fd5b60005b6002811015611ecf578135845260209384019390910190600101611eb0565b509095945050505050565b600082601f830112611eeb57600080fd5b8135602067ffffffffffffffff80831115611f0857611f08612184565b8260051b604051601f19603f83011681018181108482111715611f2d57611f2d612184565b60405284815283810192508684018288018501891015611f4c57600080fd5b600092505b85831015611f6f578035845292840192600192909201918401611f51565b50979650505050505050565b600060408284031215611f8d57600080fd5b6040516040810181811067ffffffffffffffff82111715611fb057611fb0612184565b604052823581526020928301359281019290925250919050565b600080828403610120811215611fdf57600080fd5b61010080821215611fef57600080fd5b611ff76120b3565b6120018787611f7b565b81526080603f198401121561201557600080fd5b61201d61208a565b925061202c8760408801611e82565b835261203b8760808801611e82565b60208401528260208201526120538760c08801611f7b565b60408201529350840135905067ffffffffffffffff81111561207457600080fd5b61208085828601611eda565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156120ad576120ad612184565b60405290565b6040516060810167ffffffffffffffff811182821017156120ad576120ad612184565b600082198211156120e9576120e9612142565b500190565b60008282101561210057612100612142565b500390565b600060001982141561211957612119612142565b5060010190565b60008261213d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c79535692b1eeb835b6fc96f634041441d2b2e9eaae9eb0e9d4b4b24123832ab64736f6c63430008070033';

type Transaction2x0VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x0VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x0Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x0VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x0Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x0Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x0Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x0Verifier {
    return super.attach(address) as Transaction2x0Verifier;
  }
  connect(signer: Signer): Transaction2x0Verifier__factory {
    return super.connect(signer) as Transaction2x0Verifier__factory;
  }
  static readonly contractName: 'Transaction2x0Verifier';
  public readonly contractName: 'Transaction2x0Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x0VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x0VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x0Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x0Verifier;
  }
}
