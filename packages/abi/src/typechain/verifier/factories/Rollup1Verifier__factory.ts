/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Rollup1Verifier, Rollup1VerifierInterface } from '../Rollup1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5061158c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046113f3565b610057565b604051901515815260200160405180910390f35b6000815160041461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008e565b90505b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100ba610401565b9050806080015151855160016100d091906114c9565b146100ee57604051633494a40d60e21b815260040160405180910390fd5b835151821161011057604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013557604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015b57604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018357604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101ab57604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d557604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101fa57604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022257604051633494a40d60e21b815260040160405180910390fd5b835161022d90610900565b61024a576040516361586bdd60e01b815260040160405180910390fd5b6102578460200151610978565b610274576040516361586bdd60e01b815260040160405180910390fd5b6102818460400151610900565b61029e576040516361586bdd60e01b815260040160405180910390fd5b60006102de604051806040016040528060008152602001600081525083608001516000815181106102d1576102d16114dc565b6020026020010151610a62565b905060005b865181101561038e57838782815181106102ff576102ff6114dc565b60200260200101511061032557604051633494a40d60e21b815260040160405180910390fd5b61037a82610375856080015184600161033e91906114c9565b8151811061034e5761034e6114dc565b60200260200101518a8581518110610368576103686114dc565b6020026020010151610ae2565b610a62565b915080610386816114f2565b9150506102e3565b5061039881610900565b6103b5576040516361586bdd60e01b815260040160405180910390fd5b6103f7856000015186602001516103cb84610b30565b85604001516103dd8a60400151610b30565b606088015188516103ed90610b30565b8960200151610be1565b9695505050505050565b610409611188565b6040805180820182527f022355fd68d896ffb7ff2de11288ba7c4e5a7f1ddaa2a579615763ba50b0d19281527f1047d4b5351181a000656beda0ab520887d4006e9cf72641362fbf82d48c7c386020808301919091529083528151608080820184527f0ab2e50bd1825bb9746eaa17608a047026f6c5792d212849a080f3f86dd675538285019081527f21cda125d8a58a3e25e15a8dc52608544c29f1dcbfd42edda7c71ccc35fe83b9606080850191909152908352845180860186527f0a3a6286e8715fa2131ff80cf3eb3b2ffb7605b5479f4b225068d087164253ca81527f22a900c4333760573ce6ee347e295841ba9fd3a6cf40d4fd4cd41da01ef008a3818601528385015285840192909252835180820185527f019a9bbcbded2f079e4cf4ec2b6e0bd71a49994889ed110b8399b495ed59d2228186019081527f2ce5df9fd122390eab1f74cf994a238af5130d6f75f5f2d411c9ac99b1be74fe828501528152845180860186527f1bdcf16c13a2c30f6f9043b1edc3f126690d534a0f0bd2ff48535a6299f8fafe81527f06a96bc5ed0cbc4311b1bc7486476d9c989bc7d4b7c6c50b2c7a5767137ca750818601528185015285850152835190810184527f0b702f237c06e20f8e21bccf6cfa62ffe6199ad70f6a1c3234ca207b51fd04768185019081527f0d5b77a844781165622a3f7e8e0a1156eb0392a1fbe366b76587304c23da051e828401528152835180850185527f0ca5f6f018337b0309942f565179408e985ad98c48e5b6d2a4a0a965a601b7cd81527f060101943cce1431642afbfd8da5dfab083ee7d7e625b7e3265f4ad875bf7a8e8185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068457505060808201908152604080518082019091527f166456b0fc3a0e56b83cb5c50b3a25a403c334d0417599f066404375a112b37681527e6f4e8748daff4933e719125a43f3a5546eff61c65f7ea8bdfb51598fd150ad602082015290518051600090610716576107166114dc565b602002602001018190525060405180604001604052807f206c2f726a566fec692f640e8a495c9c5b0ebfdb36ec1c0ebd237e42c92657b981526020017f23749877e96245e308522ea0964737b8b47487e696f4456caf85bf03799d9465815250816080015160018151811061078d5761078d6114dc565b602002602001018190525060405180604001604052807f0ec85d3ad7b608d31b6e73ea1020ce2a4e23de7f65c01e44b0ca7af2c5fdb96981526020017f290f42d4d3ab871bdba337ed4216ff33a4c9472d6fd01fed83d226463bff62d98152508160800151600281518110610804576108046114dc565b602002602001018190525060405180604001604052807f1d9debae22a98a3bab893376b0f536eebd56daf597d0787441fde0355122c8d981526020017f26ce9072dc49a4e97ac12610d0a5b4cfc254893a19e678d643fbdf2c4008a2db815250816080015160038151811061087b5761087b6114dc565b602002602001018190525060405180604001604052807f2a71cef84cf7f3c868073384d877a2adceb412b8aa60265802c3af097345148481526020017f03b23e4e5666ab7afdfdcbcf91883cddacda31bdcce7e505e0103cc5f0ce993681525081608001516004815181106108f2576108f26114dc565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761092e816003611521565b818061093c5761093c61150b565b8451838061094c5761094c61150b565b8651800909828061095f5761095f61150b565b602086015180096109709190611543565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926109e892909190829060015b6020020151611042565b895180516020820151939750919550610a0d929060005b60200201518b5160016109de565b89519193509150610a23908390839060006109ff565b9092509050610a34848484846110c3565b9094509250610a45848488886110c3565b909450925083158015610a56575082155b98975050505050505050565b6040805180820190915260008082526020820152610a7e6111d9565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa90508080610abb57600080fd5b5080610ada57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152610afe6111f7565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa90508080610abb57600080fd5b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790600003610b9e576040518060400160405280828560000151610b8d9190611521565b815260006020909101529392505050565b6040518060400160405280828560000151610bb99190611521565b8152602001828560200151610bce9190611521565b610bd89084611543565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610c2257610c226114dc565b6020026020010181815250508a6020015181600181518110610c4657610c466114dc565b602090810291909101015289516001602002015181600281518110610c6d57610c6d6114dc565b6020908102919091010152895151815182906003908110610c9057610c906114dc565b6020026020010181815250508960200151600160028110610cb357610cb36114dc565b602002015181600481518110610ccb57610ccb6114dc565b6020026020010181815250508960200151600060028110610cee57610cee6114dc565b602002015181600581518110610d0657610d066114dc565b602002602001018181525050886000015181600681518110610d2a57610d2a6114dc565b602002602001018181525050886020015181600781518110610d4e57610d4e6114dc565b602090810291909101015287516001602002015181600881518110610d7557610d756114dc565b6020908102919091010152875151815182906009908110610d9857610d986114dc565b6020026020010181815250508760200151600160028110610dbb57610dbb6114dc565b602002015181600a81518110610dd357610dd36114dc565b6020026020010181815250508760200151600060028110610df657610df66114dc565b602002015181600b81518110610e0e57610e0e6114dc565b602002602001018181525050866000015181600c81518110610e3257610e326114dc565b602002602001018181525050866020015181600d81518110610e5657610e566114dc565b602090810291909101015285516001602002015181600e81518110610e7d57610e7d6114dc565b602090810291909101015285515181518290600f908110610ea057610ea06114dc565b6020026020010181815250508560200151600160028110610ec357610ec36114dc565b602002015181601081518110610edb57610edb6114dc565b6020026020010181815250508560200151600060028110610efe57610efe6114dc565b602002015181601181518110610f1657610f166114dc565b602002602001018181525050846000015181601281518110610f3a57610f3a6114dc565b602002602001018181525050846020015181601381518110610f5e57610f5e6114dc565b602090810291909101015283516001602002015181601481518110610f8557610f856114dc565b6020908102919091010152835151815182906015908110610fa857610fa86114dc565b6020026020010181815250508360200151600160028110610fcb57610fcb6114dc565b602002015181601681518110610fe357610fe36114dc565b6020026020010181815250508360200151600060028110611006576110066114dc565b60200201518160178151811061101e5761101e6114dc565b6020026020010181815250506110338161110b565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761108481868909828061107b5761107b61150b565b86890983611164565b81806110925761109261150b565b82806110a0576110a061150b565b87890983806110b1576110b161150b565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476110f2878683611164565b6110fd878684611164565b925092505094509492505050565b8051600090611118611215565b6000602082602085026020880160086107d05a03fa9050808061113a57600080fd5b508061115957604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b600081806111745761117461150b565b61117e8484611543565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016111b2611233565b81526020016111bf611233565b81526020016111cc611233565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611246611258565b8152602001611253611258565b905290565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156112af576112af611276565b60405290565b6040516060810167ffffffffffffffff811182821017156112af576112af611276565b6000604082840312156112ea57600080fd5b6112f261128c565b9050813581526020820135602082015292915050565b600082601f83011261131957600080fd5b61132161128c565b80604084018581111561133357600080fd5b845b8181101561134d578035845260209384019301611335565b509095945050505050565b600082601f83011261136957600080fd5b8135602067ffffffffffffffff8083111561138657611386611276565b8260051b604051601f19603f830116810181811084821117156113ab576113ab611276565b6040529384528581018301938381019250878511156113c957600080fd5b83870191505b848210156113e8578135835291830191908301906113cf565b979650505050505050565b60008082840361012081121561140857600080fd5b6101008082121561141857600080fd5b6114206112b5565b61142a87876112d8565b81526080603f198401121561143e57600080fd5b61144661128c565b92506114558760408801611308565b83526114648760808801611308565b602084015282602082015261147c8760c088016112d8565b60408201529350840135905067ffffffffffffffff81111561149d57600080fd5b6114a985828601611358565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610088576100886114b3565b634e487b7160e01b600052603260045260246000fd5b600060018201611504576115046114b3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261153e57634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610088576100886114b356fea2646970667358221220b56bd89dbf985075f7960e4666d6538cb8454866a98ee3b9358c0fc2ca69a09664736f6c63430008140033';

type Rollup1VerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Rollup1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup1Verifier__factory extends ContractFactory {
  constructor(...args: Rollup1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Rollup1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Rollup1Verifier> {
    return super.deploy(overrides || {}) as Promise<Rollup1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Rollup1Verifier {
    return super.attach(address) as Rollup1Verifier;
  }
  connect(signer: Signer): Rollup1Verifier__factory {
    return super.connect(signer) as Rollup1Verifier__factory;
  }
  static readonly contractName: 'Rollup1Verifier';
  public readonly contractName: 'Rollup1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Rollup1VerifierInterface {
    return new utils.Interface(_abi) as Rollup1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Rollup1Verifier;
  }
}
