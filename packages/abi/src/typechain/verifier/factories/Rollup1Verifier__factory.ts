/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Rollup1Verifier, Rollup1VerifierInterface } from '../Rollup1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506115b9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046113b3565b610057565b604051901515815260200160405180910390f35b6000815160041461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906114bf565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906108fe565b610248576040516361586bdd60e01b815260040160405180910390fd5b6102558460200151610976565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516108fe565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611557565b6020026020010151610a60565b905060005b865181101561038c57838782815181106102fd576102fd611557565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906114bf565b8151811061034c5761034c611557565b60200260200101518a858151811061036657610366611557565b6020026020010151610add565b610a60565b915080610384816114ee565b9150506102e1565b50610396816108fe565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984610b2c565b85604001516103db8a60400151610b2c565b606088015188516103eb90610b2c565b8960200151610bda565b9695505050505050565b61040761117d565b6040805180820182527f022355fd68d896ffb7ff2de11288ba7c4e5a7f1ddaa2a579615763ba50b0d19281527f1047d4b5351181a000656beda0ab520887d4006e9cf72641362fbf82d48c7c386020808301919091529083528151608080820184527f0ab2e50bd1825bb9746eaa17608a047026f6c5792d212849a080f3f86dd675538285019081527f21cda125d8a58a3e25e15a8dc52608544c29f1dcbfd42edda7c71ccc35fe83b9606080850191909152908352845180860186527f0a3a6286e8715fa2131ff80cf3eb3b2ffb7605b5479f4b225068d087164253ca81527f22a900c4333760573ce6ee347e295841ba9fd3a6cf40d4fd4cd41da01ef008a3818601528385015285840192909252835180820185527f019a9bbcbded2f079e4cf4ec2b6e0bd71a49994889ed110b8399b495ed59d2228186019081527f2ce5df9fd122390eab1f74cf994a238af5130d6f75f5f2d411c9ac99b1be74fe828501528152845180860186527f1bdcf16c13a2c30f6f9043b1edc3f126690d534a0f0bd2ff48535a6299f8fafe81527f06a96bc5ed0cbc4311b1bc7486476d9c989bc7d4b7c6c50b2c7a5767137ca750818601528185015285850152835190810184527f0b702f237c06e20f8e21bccf6cfa62ffe6199ad70f6a1c3234ca207b51fd04768185019081527f0d5b77a844781165622a3f7e8e0a1156eb0392a1fbe366b76587304c23da051e828401528152835180850185527f0ca5f6f018337b0309942f565179408e985ad98c48e5b6d2a4a0a965a601b7cd81527f060101943cce1431642afbfd8da5dfab083ee7d7e625b7e3265f4ad875bf7a8e8185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068257505060808201908152604080518082019091527f166456b0fc3a0e56b83cb5c50b3a25a403c334d0417599f066404375a112b37681527e6f4e8748daff4933e719125a43f3a5546eff61c65f7ea8bdfb51598fd150ad60208201529051805160009061071457610714611557565b602002602001018190525060405180604001604052807f206c2f726a566fec692f640e8a495c9c5b0ebfdb36ec1c0ebd237e42c92657b981526020017f23749877e96245e308522ea0964737b8b47487e696f4456caf85bf03799d9465815250816080015160018151811061078b5761078b611557565b602002602001018190525060405180604001604052807f0ec85d3ad7b608d31b6e73ea1020ce2a4e23de7f65c01e44b0ca7af2c5fdb96981526020017f290f42d4d3ab871bdba337ed4216ff33a4c9472d6fd01fed83d226463bff62d9815250816080015160028151811061080257610802611557565b602002602001018190525060405180604001604052807f1d9debae22a98a3bab893376b0f536eebd56daf597d0787441fde0355122c8d981526020017f26ce9072dc49a4e97ac12610d0a5b4cfc254893a19e678d643fbdf2c4008a2db815250816080015160038151811061087957610879611557565b602002602001018190525060405180604001604052807f2a71cef84cf7f3c868073384d877a2adceb412b8aa60265802c3af097345148481526020017f03b23e4e5666ab7afdfdcbcf91883cddacda31bdcce7e505e0103cc5f0ce993681525081608001516004815181106108f0576108f0611557565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761092c816003611509565b818061093a5761093a611541565b8451838061094a5761094a611541565b8651800909828061095d5761095d611541565b6020860151800961096e91906114d7565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926109e692909190829060015b602002015161103b565b895180516020820151939750919550610a0b929060005b60200201518b5160016109dc565b89519193509150610a21908390839060006109fd565b9092509050610a32848484846110bc565b9094509250610a43848488886110bc565b909450925083158015610a54575082155b98975050505050505050565b6040805180820190915260008082526020820152610a7c6111ce565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b5080610ad557604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152610af96111ec565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b57610ab6565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610b97576040518060400160405280828560000151610b869190611509565b815260006020909101529392505050565b6040518060400160405280828560000151610bb29190611509565b8152602001828560200151610bc79190611509565b610bd190846114d7565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610c1b57610c1b611557565b6020026020010181815250508a6020015181600181518110610c3f57610c3f611557565b602090810291909101015289516001602002015181600281518110610c6657610c66611557565b6020908102919091010152895151815182906003908110610c8957610c89611557565b6020026020010181815250508960200151600160028110610cac57610cac611557565b602002015181600481518110610cc457610cc4611557565b6020026020010181815250508960200151600060028110610ce757610ce7611557565b602002015181600581518110610cff57610cff611557565b602002602001018181525050886000015181600681518110610d2357610d23611557565b602002602001018181525050886020015181600781518110610d4757610d47611557565b602090810291909101015287516001602002015181600881518110610d6e57610d6e611557565b6020908102919091010152875151815182906009908110610d9157610d91611557565b6020026020010181815250508760200151600160028110610db457610db4611557565b602002015181600a81518110610dcc57610dcc611557565b6020026020010181815250508760200151600060028110610def57610def611557565b602002015181600b81518110610e0757610e07611557565b602002602001018181525050866000015181600c81518110610e2b57610e2b611557565b602002602001018181525050866020015181600d81518110610e4f57610e4f611557565b602090810291909101015285516001602002015181600e81518110610e7657610e76611557565b602090810291909101015285515181518290600f908110610e9957610e99611557565b6020026020010181815250508560200151600160028110610ebc57610ebc611557565b602002015181601081518110610ed457610ed4611557565b6020026020010181815250508560200151600060028110610ef757610ef7611557565b602002015181601181518110610f0f57610f0f611557565b602002602001018181525050846000015181601281518110610f3357610f33611557565b602002602001018181525050846020015181601381518110610f5757610f57611557565b602090810291909101015283516001602002015181601481518110610f7e57610f7e611557565b6020908102919091010152835151815182906015908110610fa157610fa1611557565b6020026020010181815250508360200151600160028110610fc457610fc4611557565b602002015181601681518110610fdc57610fdc611557565b6020026020010181815250508360200151600060028110610fff57610fff611557565b60200201518160178151811061101757611017611557565b60200260200101818152505061102c81611104565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761107d81868909828061107457611074611541565b86890983611159565b818061108b5761108b611541565b828061109957611099611541565b87890983806110aa576110aa611541565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476110eb878683611159565b6110f6878684611159565b925092505094509492505050565b805160009061111161120a565b6000602082602085026020880160086107d05a03fa905080801561002b57508061114e57604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b6000818061116957611169611541565b61117384846114d7565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016111a7611228565b81526020016111b4611228565b81526020016111c1611228565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061123b61124d565b815260200161124861124d565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261127c57600080fd5b611284611473565b80838560408601111561129657600080fd5b60005b60028110156112b8578135845260209384019390910190600101611299565b509095945050505050565b600082601f8301126112d457600080fd5b8135602067ffffffffffffffff808311156112f1576112f161156d565b8260051b604051601f19603f830116810181811084821117156113165761131661156d565b6040528481528381019250868401828801850189101561133557600080fd5b600092505b8583101561135857803584529284019260019290920191840161133a565b50979650505050505050565b60006040828403121561137657600080fd5b6040516040810181811067ffffffffffffffff821117156113995761139961156d565b604052823581526020928301359281019290925250919050565b6000808284036101208112156113c857600080fd5b610100808212156113d857600080fd5b6113e061149c565b6113ea8787611364565b81526080603f19840112156113fe57600080fd5b611406611473565b9250611415876040880161126b565b8352611424876080880161126b565b602084015282602082015261143c8760c08801611364565b60408201529350840135905067ffffffffffffffff81111561145d57600080fd5b611469858286016112c3565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156114965761149661156d565b60405290565b6040516060810167ffffffffffffffff811182821017156114965761149661156d565b600082198211156114d2576114d261152b565b500190565b6000828210156114e9576114e961152b565b500390565b60006000198214156115025761150261152b565b5060010190565b60008261152657634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a5094aa8592272fd01f94b51a63bbc4a48207c9309d38094659042a12f69d62b64736f6c63430008070033';

type Rollup1VerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Rollup1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup1Verifier__factory extends ContractFactory {
  constructor(...args: Rollup1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Rollup1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Rollup1Verifier> {
    return super.deploy(overrides || {}) as Promise<Rollup1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Rollup1Verifier {
    return super.attach(address) as Rollup1Verifier;
  }
  connect(signer: Signer): Rollup1Verifier__factory {
    return super.connect(signer) as Rollup1Verifier__factory;
  }
  static readonly contractName: 'Rollup1Verifier';
  public readonly contractName: 'Rollup1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Rollup1VerifierInterface {
    return new utils.Interface(_abi) as Rollup1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Rollup1Verifier;
  }
}
