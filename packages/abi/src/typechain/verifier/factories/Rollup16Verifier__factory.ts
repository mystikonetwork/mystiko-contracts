/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Rollup16Verifier, Rollup16VerifierInterface } from '../Rollup16Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506115b9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046113b3565b610057565b604051901515815260200160405180910390f35b6000815160041461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906114bf565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b906108fe565b610248576040516361586bdd60e01b815260040160405180910390fd5b6102558460200151610976565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f84604001516108fe565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf611557565b6020026020010151610a60565b905060005b865181101561038c57838782815181106102fd576102fd611557565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906114bf565b8151811061034c5761034c611557565b60200260200101518a858151811061036657610366611557565b6020026020010151610add565b610a60565b915080610384816114ee565b9150506102e1565b50610396816108fe565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984610b2c565b85604001516103db8a60400151610b2c565b606088015188516103eb90610b2c565b8960200151610bda565b9695505050505050565b61040761117d565b6040805180820182527f1093ea47fd122998dccce33491da4ef97bbbd8aec40cdb005f4934583842a80181527f20e117ac016aeed2c7bdcb3eb57762869bdb2787ffedcf2f51b2a8ddee1742726020808301919091529083528151608080820184527f1a4032afc99229a91c5e198f12a33141b55ec7b36670af4289f70b65ee84bd878285019081527f28978f7cd0a07bbbd531e7affc1a6409fb8c1581f7c3a50db6e2da4ce8f94008606080850191909152908352845180860186527f2a9723206e058ad16d150a7976b87fca5c91c9eac92776b9d00ff302d89564f581527e44dbcd6510e243a616d487372de926b9c250514e18243ec3a8269e63f11d88818601528385015285840192909252835180820185527f0c7de5a294e6b7efc9eeba6d9ede32a9ae1e547b360c7912b74cd5872005f8ea8186019081527f1fb2467ef5c769aac38adea410d609dce7b2bf930d1889e501935a86e93bc1e6828501528152845180860186527f10c3ce8e598fcc52f5b8a95cab866b8684a5e9dfb9e62c809ac6d859cc68382781527f2087d45f712c0cef7eeb5a20a751007cd4bb738433e298b8cea6f1a5ac7c5535818601528185015285850152835190810184527f16c9d66f75ab1d64fecabd283710409681d3fbbc8227c1fe0aad1e4f3c16a9718185019081527f2dd1c595193edec73e9fc9e55df36c4d90cf27cb7d637f964f661694f53810dd828401528152835180850185527f23a07a57938a73adc3cd2e3decbc17aba162acb3d8feb3e03ca4c1cc0ba5dac881527f1ceebc522a60979286cd2eec58ca833b2623d85d8da16616322efd2e5b0cb0ed8185015281840152908401528151600580825260c08201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068157505060808201908152604080518082019091527f14390fd77e1434b1f1ce41bfd9c233391e59ea226f940df8a20768a957339cc081527f103243d6c048550ab0a1e394323d6f1c169fcda1ae17c20d8bd17ef6fd014cca60208201529051805160009061071457610714611557565b602002602001018190525060405180604001604052807f2de994843397b93a399a99270bba6afed71ac04c506449802e6d0fc493f3c47081526020017f2ece98b481450a91df91bcbfa046099e391c2f1e5aff6b80c3f452c2b182a639815250816080015160018151811061078b5761078b611557565b602002602001018190525060405180604001604052807f0b3c033d57525f09a23ae5cee67a2bb8a6f7f268535324217a64a128d62069ed81526020017f1c471a567f6c3f406b7bab8f6e654850c4a31296d9bbea9362d23444b17d5aaf815250816080015160028151811061080257610802611557565b602002602001018190525060405180604001604052807f28b13f9e41b42020d99c9f2eb7eebf283e6b04970a332eef7284c28f3e9f638d81526020017f06f584ab8b56d93eef8bd6395f259d1fba753461040f6043ab61a7b59cdd2f76815250816080015160038151811061087957610879611557565b602002602001018190525060405180604001604052807f2ddf4d3226adf7403c7fb20d91c8dedcdb860ec601335b05bca4dfdfd26461b081526020017f217f7fe4c9549d84b932849396849782f595876c97fdd6e32b21efc2bcc1ddd581525081608001516004815181106108f0576108f0611557565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761092c816003611509565b818061093a5761093a611541565b8451838061094a5761094a611541565b8651800909828061095d5761095d611541565b6020860151800961096e91906114d7565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926109e692909190829060015b602002015161103b565b895180516020820151939750919550610a0b929060005b60200201518b5160016109dc565b89519193509150610a21908390839060006109fd565b9092509050610a32848484846110bc565b9094509250610a43848488886110bc565b909450925083158015610a54575082155b98975050505050505050565b6040805180820190915260008082526020820152610a7c6111ce565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b5080610ad557604051633842fc7360e21b815260040160405180910390fd5b505092915050565b6040805180820190915260008082526020820152610af96111ec565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b57610ab6565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4790610b97576040518060400160405280828560000151610b869190611509565b815260006020909101529392505050565b6040518060400160405280828560000151610bb29190611509565b8152602001828560200151610bc79190611509565b610bd190846114d7565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a6000015181600081518110610c1b57610c1b611557565b6020026020010181815250508a6020015181600181518110610c3f57610c3f611557565b602090810291909101015289516001602002015181600281518110610c6657610c66611557565b6020908102919091010152895151815182906003908110610c8957610c89611557565b6020026020010181815250508960200151600160028110610cac57610cac611557565b602002015181600481518110610cc457610cc4611557565b6020026020010181815250508960200151600060028110610ce757610ce7611557565b602002015181600581518110610cff57610cff611557565b602002602001018181525050886000015181600681518110610d2357610d23611557565b602002602001018181525050886020015181600781518110610d4757610d47611557565b602090810291909101015287516001602002015181600881518110610d6e57610d6e611557565b6020908102919091010152875151815182906009908110610d9157610d91611557565b6020026020010181815250508760200151600160028110610db457610db4611557565b602002015181600a81518110610dcc57610dcc611557565b6020026020010181815250508760200151600060028110610def57610def611557565b602002015181600b81518110610e0757610e07611557565b602002602001018181525050866000015181600c81518110610e2b57610e2b611557565b602002602001018181525050866020015181600d81518110610e4f57610e4f611557565b602090810291909101015285516001602002015181600e81518110610e7657610e76611557565b602090810291909101015285515181518290600f908110610e9957610e99611557565b6020026020010181815250508560200151600160028110610ebc57610ebc611557565b602002015181601081518110610ed457610ed4611557565b6020026020010181815250508560200151600060028110610ef757610ef7611557565b602002015181601181518110610f0f57610f0f611557565b602002602001018181525050846000015181601281518110610f3357610f33611557565b602002602001018181525050846020015181601381518110610f5757610f57611557565b602090810291909101015283516001602002015181601481518110610f7e57610f7e611557565b6020908102919091010152835151815182906015908110610fa157610fa1611557565b6020026020010181815250508360200151600160028110610fc457610fc4611557565b602002015181601681518110610fdc57610fdc611557565b6020026020010181815250508360200151600060028110610fff57610fff611557565b60200201518160178151811061101757611017611557565b60200260200101818152505061102c81611104565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761107d81868909828061107457611074611541565b86890983611159565b818061108b5761108b611541565b828061109957611099611541565b87890983806110aa576110aa611541565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476110eb878683611159565b6110f6878684611159565b925092505094509492505050565b805160009061111161120a565b6000602082602085026020880160086107d05a03fa905080801561002b57508061114e57604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b6000818061116957611169611541565b61117384846114d7565b8508949350505050565b6040805160e08101909152600060a0820181815260c08301919091528152602081016111a7611228565b81526020016111b4611228565b81526020016111c1611228565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061123b61124d565b815260200161124861124d565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f83011261127c57600080fd5b611284611473565b80838560408601111561129657600080fd5b60005b60028110156112b8578135845260209384019390910190600101611299565b509095945050505050565b600082601f8301126112d457600080fd5b8135602067ffffffffffffffff808311156112f1576112f161156d565b8260051b604051601f19603f830116810181811084821117156113165761131661156d565b6040528481528381019250868401828801850189101561133557600080fd5b600092505b8583101561135857803584529284019260019290920191840161133a565b50979650505050505050565b60006040828403121561137657600080fd5b6040516040810181811067ffffffffffffffff821117156113995761139961156d565b604052823581526020928301359281019290925250919050565b6000808284036101208112156113c857600080fd5b610100808212156113d857600080fd5b6113e061149c565b6113ea8787611364565b81526080603f19840112156113fe57600080fd5b611406611473565b9250611415876040880161126b565b8352611424876080880161126b565b602084015282602082015261143c8760c08801611364565b60408201529350840135905067ffffffffffffffff81111561145d57600080fd5b611469858286016112c3565b9150509250929050565b6040805190810167ffffffffffffffff811182821017156114965761149661156d565b60405290565b6040516060810167ffffffffffffffff811182821017156114965761149661156d565b600082198211156114d2576114d261152b565b500190565b6000828210156114e9576114e961152b565b500390565b60006000198214156115025761150261152b565b5060010190565b60008261152657634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200dced96b5df719f9003017d01dc4b6fe820701c55e376e09dc117df5567a454764736f6c63430008070033';

type Rollup16VerifierConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Rollup16VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Rollup16Verifier__factory extends ContractFactory {
  constructor(...args: Rollup16VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Rollup16Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Rollup16Verifier> {
    return super.deploy(overrides || {}) as Promise<Rollup16Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Rollup16Verifier {
    return super.attach(address) as Rollup16Verifier;
  }
  connect(signer: Signer): Rollup16Verifier__factory {
    return super.connect(signer) as Rollup16Verifier__factory;
  }
  static readonly contractName: 'Rollup16Verifier';
  public readonly contractName: 'Rollup16Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Rollup16VerifierInterface {
    return new utils.Interface(_abi) as Rollup16VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Rollup16Verifier {
    return new Contract(address, _abi, signerOrProvider) as Rollup16Verifier;
  }
}
