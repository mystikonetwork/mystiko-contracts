/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x1Verifier, Transaction2x1VerifierInterface } from '../Transaction2x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506122bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046120b7565b610057565b604051901515815260200160405180910390f35b6000815160201461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906121c3565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611602565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161167a565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611602565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61225b565b6020026020010151611764565b905060005b865181101561038c57838782815181106102fd576102fd61225b565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906121c3565b8151811061034c5761034c61225b565b60200260200101518a85815181106103665761036661225b565b60200260200101516117e1565b611764565b915080610384816121f2565b9150506102e1565b5061039681611602565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611830565b85604001516103db8a60400151611830565b606088015188516103eb90611830565b89602001516118de565b9695505050505050565b610407611e81565b6040805180820182527f0f4d801a7198908b342fedecc5e986d0957dadcbd1aec84d228ce9d21b496a4c81527f1fb761fe3da830ea3ce2f040436dd4f9fb1326ca870a8c05c182ecd179289a196020808301919091529083528151608080820184527f137da50c0769958112d9b3f9a41855c5337e60f05e0c4da62534ca36100548e78285019081527f2cec2cc3a2015a7e9eefb4f590a1007f3969f0971336348acbc5c8f91b2982e7606080850191909152908352845180860186527f2b2ca7974aff9e80512f6ad8829fb912fb8c76daee799b4e6a552827f7c7be2981527f29824139dcfabac34f81bb39603fbe96bc317089d2765ebfe4f77543494d5b04818601528385015285840192909252835180820185527f29cf04a3bf1035ac7d2642318f2de8131040df8bc59ed936082289090c1998f18186019081527f03ed4261104303a8a62d684c6f3cae51833732b0e850b8927507c7b2e08f40ec828501528152845180860186527f2912594e1b169f29e77f6db5818a63f0ae1e9485aeaf2317c40bc8545d20470081527ef3705398bb3272c05402461f2cc915a9ee53e0c3d4285e9c46fce458830597818601528185015285850152835190810184527f1b149f1c01e40ec2a19af52eb321a63a692351c202ed1ecc2d22d20c97d22a348185019081527f2cdd8fd5eb8bdb5d961feabff4371b57e2bfb7ba45d3d7d25de750ac6192dd32828401528152835180850185527f13c039ef716935636e832e7ac693672fa28358b1918011b59a4ec59a86650af981527f2519d4832a0555e8699440eb8bcd8e468cccfca5e72d29c4be5b0573a19d33e8818501528184015290840152815160218082526104408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068257505060808201908152604080518082019091527f0e877aff733993b2c904e7bfa9a70e5258533ac4acb9f755e9cbfaeaa662341381527f01e1dcfdff90b89378d7e269e5baf0b3977ebaba0c279f9d6250b231e6d730656020820152905180516000906107155761071561225b565b602002602001018190525060405180604001604052807f2332ced75203f338c717ff6dd455505424eab7845538b5e41085db6c5829944781526020017f0a80d966040b18ad4a0228f4dc6ea80924f8791ebb39ea7e99cf37412a75b3ed815250816080015160018151811061078c5761078c61225b565b602002602001018190525060405180604001604052807f1cdd7be99804820f91aad7d980cd3f51401c5ab589de7262c2fd285f1761d47781526020017f1e134807197f01c286d68d07bd85c11ec3683cd2b4bf98504a4b6102871b0ffa81525081608001516002815181106108035761080361225b565b602002602001018190525060405180604001604052807f0cdd3f62133e0f5c24ff1ad244d68dce03093f187fa72128462a7b28dc77c6c781526020017f1072781549679e27ac25f5d5a7c6d13d3fbeb6b7a2aaaa4a83f21d94f591d635815250816080015160038151811061087a5761087a61225b565b602002602001018190525060405180604001604052807f1dbe8565610634b605026642d5927fc11a53c96ce8b254201eecba026ac7913281526020017f0226433ea1163389790e612a12eff3588b0509345a075cd9b12e95dc7e08f71d81525081608001516004815181106108f1576108f161225b565b602002602001018190525060405180604001604052807f2d0a9a436fef0c81efbac23e79ea7099a7854c8cb78c63d136dffdd469b0838d81526020017f134e2fe8f67bf6cb8bc523d75d875507cab3055748fde5ac579365d1d6e05b4a81525081608001516005815181106109685761096861225b565b602002602001018190525060405180604001604052807f06507cc8a4d196ca9caf031d88524669912f0a37bcfd2f6fd6b5c00d16b1b04a81526020017f235ff16c52d76c899494c621b2641ee891a59173049d728de66fac317401878d81525081608001516006815181106109df576109df61225b565b602002602001018190525060405180604001604052807f244789ec03fdd6be6a022d6cb5b89600b95ff43bf0753ecd5790dfbe7f25f79181526020017f1a47ba71fba438673b1a2e08aba2c9b227f898ceea5b8641d609e415917d52178152508160800151600781518110610a5657610a5661225b565b602002602001018190525060405180604001604052807f04ef368f09cce5f319e61c842be086de0b886a63aa4631b7fb681bba16eb16ea81526020017f0842cf839bc11e279aeebdc9e0c59180fc25e60bfdb94abaeb1c9980422c6f678152508160800151600881518110610acd57610acd61225b565b602002602001018190525060405180604001604052807f08a459d25456156bbba0516a4a916c3e42fe1e8116fdfc50c9d9ef0f3896cd0981526020017f1110894a65693028c94373f772896509c1fec9eb0af6473dcd604beb29188d248152508160800151600981518110610b4457610b4461225b565b602002602001018190525060405180604001604052807f2b8214dd45557cf96b8b88d3de0a3f5c4d43c3c3dc3fce1d1deab4e9d89180bf81526020017f11a168270379e00265e097db70a284331ff6514c66626d61b3480cd7c8ac183a8152508160800151600a81518110610bbb57610bbb61225b565b602002602001018190525060405180604001604052807f0a6cc8bd1132bfe995d8cb474abe84b5177813fecfbfd5d633bcf5231ce3663e81526020017f2321b6159b2111cd77202b46f8872130d5f1da75a08c9836a5697620c09f8b968152508160800151600b81518110610c3257610c3261225b565b602002602001018190525060405180604001604052807f0cc3e068138c74f3ccd78757a9da5b964cd8b9817fbf152ffd7aa3985420cf2d81526020017f07133be344e61d850b60503cd5b1d548eaeccc0b09771b5122710b990cd0e4b68152508160800151600c81518110610ca957610ca961225b565b602002602001018190525060405180604001604052807f2ecb0333d5b145146eca3633cf5d96e8bbb666ad9123334c9cf647340a2df77f81526020017f260ebfe46e7ea9d3d983e53aad85615ddadd911980402f9efc15d5bcb5e035c88152508160800151600d81518110610d2057610d2061225b565b602002602001018190525060405180604001604052807f173f5b30fdce245a1d88a98655264754837957f3bb1fa6238227c725b83e12b981526020017f239952769eef024c1ef060c064b2aa7e7dd0cafa4f4c25aa6428cdf6568104f28152508160800151600e81518110610d9757610d9761225b565b602002602001018190525060405180604001604052807f0f4c437ec86943315076c5df74a522d27e720e90947b4cc6c823fbf0cc86798981526020017f2d0e32d7581a4ad1a7c5f54508b9fdcb2677fc224d6b9872b86a03945fd2b30c8152508160800151600f81518110610e0e57610e0e61225b565b602002602001018190525060405180604001604052807f1fd2129e69ecf7d84639e2b1e505bea40f247e8864b73e1b2b71ecdf13a0284f81526020017f2f135162164786e8eefefbca9c1367353be70a6a6ad6ec65596120c7718af67e8152508160800151601081518110610e8557610e8561225b565b602002602001018190525060405180604001604052807f18c2ba23c068ebdce61a9f3d7e6d1e4c0f0e14366c4b0e6fc113d1a48152381981526020017f2f76f39afaeecf7374a0b6c28827983152b30e3c70be39bee85a1c815d537ce28152508160800151601181518110610efc57610efc61225b565b602002602001018190525060405180604001604052807f021974b38411f269529d6038a00bf67093487be1bd1f3d85d0ff9211aba7f5d981526020017f1045486e16d7260987581c62903a44e66546be1f1a60f7bc4fbb1822325b6cf18152508160800151601281518110610f7357610f7361225b565b602002602001018190525060405180604001604052807f2035d08823be3507f82b1ce8143dee90794d1f709cc26eeb68a1a014c3ada36b81526020017f2a936ad6197de174ffb4e7f4e7f60ed9511faaea6d86a5a1341412b493dd166a8152508160800151601381518110610fea57610fea61225b565b602002602001018190525060405180604001604052807f283c28213fe61a81d94b3a8fe775c28dd40cfefaf0a816c3bdabc7d354b69d8f81526020017f2cdbb2071b682abeac14c78eff3dbab662b7e530e69e111fb9d36508c3893bfb81525081608001516014815181106110615761106161225b565b602002602001018190525060405180604001604052807e73802d21a80b29646e4265d01a7ce05b5195b517cfb80f76e1950e491496ac81526020017f2034c5cf45a7ca0c77bcd2c1af75eb4197bcc5df2eb7612b19dec5c9333b8c4a81525081608001516015815181106110d7576110d761225b565b602002602001018190525060405180604001604052807f1e061cdc77b110d12cddcb2e449164d1916faeb86854f2b57de46867c37f6f5c81526020017f2f1151e2793e313cd49b399d7fbf0a4b9ad4631e8e9c3a73911ac31b2df65c77815250816080015160168151811061114e5761114e61225b565b602002602001018190525060405180604001604052807f2d9616ade0186cf8c18d663ad9de50743fc146299f34da186c09801fd650e6eb81526020017f1b1ab89cfd839a4d1554344603deced09b6755ff357408a8ebbfa8a4409c96f481525081608001516017815181106111c5576111c561225b565b602002602001018190525060405180604001604052807f19720a33f5f6521e493b4dce034008176c2dd482321ed4eeffdd771a833404c581526020017f2816d394a7ac64f4fd247080b76db648ca365b38e0189d06b3268218be21a0d6815250816080015160188151811061123c5761123c61225b565b602002602001018190525060405180604001604052807f27311b912761a063b8495580d226e8f14f1bc3eb63f1f6693b91aabef21129b681526020017f23c70432db11504bd62ebd6df46a55d589fc828a4221b5884c6662bed9e089e281525081608001516019815181106112b3576112b361225b565b602002602001018190525060405180604001604052807f03c7911bcaff4d8d7684186a3f4289a430b1c431bf5f4a675d8e560eb2db20ec81526020017f18fde428ec03683f815d5064930f8f3683d5a2cd38278116d726be7b0b30db0f8152508160800151601a8151811061132a5761132a61225b565b602002602001018190525060405180604001604052807f0fddc64edb84fd28517d091a6a6f64200d619c109cd03fcc04a6cec294ec88ef81526020017f080d556c2562f8d5eb6c0b255dc597b8b773f307cfe3eae4d2aa93f6de88bf618152508160800151601b815181106113a1576113a161225b565b602002602001018190525060405180604001604052807f25f34de71a5c215baa8d3137548b8a8c79306d8646b886310f0bfa447e555f7b81526020017f0b1899b26c09a455127ad39d322d445274eb42063af75afa23286fc341335d168152508160800151601c815181106114185761141861225b565b602002602001018190525060405180604001604052807f1f2bf8a967e6f84863b23931fa845de3836586156a66bffb9fcfc5d13679a20d81526020017f08b4cb2b0c2685160429582e0690bf02b24607ae307df8272a2b064d5cef1aa68152508160800151601d8151811061148f5761148f61225b565b602002602001018190525060405180604001604052807f24e0095c7fb360d779bb8999a11d209553b17cf74c1c80f42fbe67f02a4e27f781526020017f14aebd6fa0c1e95bd9a87405c784b5f746d2b26019129dfc6114a411cd35c60b8152508160800151601e815181106115065761150661225b565b602002602001018190525060405180604001604052807f27d671383975bc1fb66e62edd0cb71283b1f4d79e04602dc00ce43eb602724c081526020017f2513265a255d053bbcc2defd12b57ddee93c1bc1a45fb7992ba619ce3d693dda8152508160800151601f8151811061157d5761157d61225b565b602002602001018190525060405180604001604052807f081d2b0d2411e8a08d888f0362ca6f463f1a71bbb39f3dcfe5ca96964cdd21ed81526020017f02e66db6427c9058dd675d0b6e546784ae24cf17a53649608754915dd35662d881525081608001516020815181106115f4576115f461225b565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761163081600361220d565b818061163e5761163e612245565b8451838061164e5761164e612245565b8651800909828061166157611661612245565b6020860151800961167291906121db565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926116ea92909190829060015b6020020151611d3f565b89518051602082015193975091955061170f929060005b60200201518b5160016116e0565b8951919350915061172590839083906000611701565b909250905061173684848484611dc0565b909450925061174784848888611dc0565b909450925083158015611758575082155b98975050505050505050565b6040805180820190915260008082526020820152611780611ed2565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806117d957604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526117fd611ef0565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576117ba565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061189b57604051806040016040528082856000015161188a919061220d565b815260006020909101529392505050565b60405180604001604052808285600001516118b6919061220d565b81526020018285602001516118cb919061220d565b6118d590846121db565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a600001518160008151811061191f5761191f61225b565b6020026020010181815250508a60200151816001815181106119435761194361225b565b60209081029190910101528951600160200201518160028151811061196a5761196a61225b565b602090810291909101015289515181518290600390811061198d5761198d61225b565b60200260200101818152505089602001516001600281106119b0576119b061225b565b6020020151816004815181106119c8576119c861225b565b60200260200101818152505089602001516000600281106119eb576119eb61225b565b602002015181600581518110611a0357611a0361225b565b602002602001018181525050886000015181600681518110611a2757611a2761225b565b602002602001018181525050886020015181600781518110611a4b57611a4b61225b565b602090810291909101015287516001602002015181600881518110611a7257611a7261225b565b6020908102919091010152875151815182906009908110611a9557611a9561225b565b6020026020010181815250508760200151600160028110611ab857611ab861225b565b602002015181600a81518110611ad057611ad061225b565b6020026020010181815250508760200151600060028110611af357611af361225b565b602002015181600b81518110611b0b57611b0b61225b565b602002602001018181525050866000015181600c81518110611b2f57611b2f61225b565b602002602001018181525050866020015181600d81518110611b5357611b5361225b565b602090810291909101015285516001602002015181600e81518110611b7a57611b7a61225b565b602090810291909101015285515181518290600f908110611b9d57611b9d61225b565b6020026020010181815250508560200151600160028110611bc057611bc061225b565b602002015181601081518110611bd857611bd861225b565b6020026020010181815250508560200151600060028110611bfb57611bfb61225b565b602002015181601181518110611c1357611c1361225b565b602002602001018181525050846000015181601281518110611c3757611c3761225b565b602002602001018181525050846020015181601381518110611c5b57611c5b61225b565b602090810291909101015283516001602002015181601481518110611c8257611c8261225b565b6020908102919091010152835151815182906015908110611ca557611ca561225b565b6020026020010181815250508360200151600160028110611cc857611cc861225b565b602002015181601681518110611ce057611ce061225b565b6020026020010181815250508360200151600060028110611d0357611d0361225b565b602002015181601781518110611d1b57611d1b61225b565b602002602001018181525050611d3081611e08565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d81818689098280611d7857611d78612245565b86890983611e5d565b8180611d8f57611d8f612245565b8280611d9d57611d9d612245565b8789098380611dae57611dae612245565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611def878683611e5d565b611dfa878684611e5d565b925092505094509492505050565b8051600090611e15611f0e565b6000602082602085026020880160086107d05a03fa905080801561002b575080611e5257604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611e6d57611e6d612245565b611e7784846121db565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611eab611f2c565b8152602001611eb8611f2c565b8152602001611ec5611f2c565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611f3f611f51565b8152602001611f4c611f51565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611f8057600080fd5b611f88612177565b808385604086011115611f9a57600080fd5b60005b6002811015611fbc578135845260209384019390910190600101611f9d565b509095945050505050565b600082601f830112611fd857600080fd5b8135602067ffffffffffffffff80831115611ff557611ff5612271565b8260051b604051601f19603f8301168101818110848211171561201a5761201a612271565b6040528481528381019250868401828801850189101561203957600080fd5b600092505b8583101561205c57803584529284019260019290920191840161203e565b50979650505050505050565b60006040828403121561207a57600080fd5b6040516040810181811067ffffffffffffffff8211171561209d5761209d612271565b604052823581526020928301359281019290925250919050565b6000808284036101208112156120cc57600080fd5b610100808212156120dc57600080fd5b6120e46121a0565b6120ee8787612068565b81526080603f198401121561210257600080fd5b61210a612177565b92506121198760408801611f6f565b83526121288760808801611f6f565b60208401528260208201526121408760c08801612068565b60408201529350840135905067ffffffffffffffff81111561216157600080fd5b61216d85828601611fc7565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561219a5761219a612271565b60405290565b6040516060810167ffffffffffffffff8111828210171561219a5761219a612271565b600082198211156121d6576121d661222f565b500190565b6000828210156121ed576121ed61222f565b500390565b60006000198214156122065761220661222f565b5060010190565b60008261222a57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122058627b2b541677b3d45899228968303a15a72f1a7531e4b41f9b86aaf7595ea564736f6c63430008070033';

type Transaction2x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x1Verifier {
    return super.attach(address) as Transaction2x1Verifier;
  }
  connect(signer: Signer): Transaction2x1Verifier__factory {
    return super.connect(signer) as Transaction2x1Verifier__factory;
  }
  static readonly contractName: 'Transaction2x1Verifier';
  public readonly contractName: 'Transaction2x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x1Verifier;
  }
}
