/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x1Verifier, Transaction2x1VerifierInterface } from '../Transaction2x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506122bd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046120b7565b610057565b604051901515815260200160405180910390f35b6000815160201461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906121c3565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611602565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161167a565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611602565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61225b565b6020026020010151611764565b905060005b865181101561038c57838782815181106102fd576102fd61225b565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906121c3565b8151811061034c5761034c61225b565b60200260200101518a85815181106103665761036661225b565b60200260200101516117e1565b611764565b915080610384816121f2565b9150506102e1565b5061039681611602565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611830565b85604001516103db8a60400151611830565b606088015188516103eb90611830565b89602001516118de565b9695505050505050565b610407611e81565b6040805180820182527f2aa50dbdeb2e35bf208510dd7d5dbc339ff5430a8660a007a88b4ca02285cd8b81527f18d758715404aa3580aa30a87bbfd97dc6cb7bf23bc2fba54aa67ce86e13686e6020808301919091529083528151608080820184527f1c52501ee550c81d0c402e5a2f28a2b683310b3199aa731383a16b2a5b8802ce8285019081527f2df69f900dfe7cc1313c334bf6b9fe9fdb2dcef57e9c781f13b397d82404ef22606080850191909152908352845180860186527e6737b02445a4823c4343e77508c985cfbe196331203569018f5ed15a8a173a81527f040e1dc0a711e1506aac5637ca5ae55ed519ef59307145168a85e80674f2d109818601528385015285840192909252835180820185527f01e878d9b9f395e89a89ec01f396b80a437ca9ce2c284a05dabcf361324284a88186019081527f2469613cd6aa531517d48c4d2d31673c32563cc595749528dd49f19696f8a7c6828501528152845180860186527f034423b8c57bd74298812304261f119ab125f1be83c0e5cef825c8c3582c3d7a81527f1a7d140bf64959480ec735c73d1b0334fcf9bfc37b72a817f8370e83353d97eb818601528185015285850152835190810184527f08fcdfe0d6277e3c3a84cc2ee8c9033b10c6c48ab461865cf37d7e00cfb72a2e8185019081527f07cc9a62de707d4e7c0b8c4a6a108aed7893db634fc06c60c87d316ca229a6bb828401528152835180850185527f24e632a110186989f3ea1743cf307e041e86ac3c57f1a6320949933ac905b10481527f200dcd931afa32f133b068def8b3ced4335127c06537adaa27157d23ed16678d818501528184015290840152815160218082526104408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068257505060808201908152604080518082019091527f2e40569c63e4955285ec166f7e2eb5c3716cb5ddc27c6086801c193e75e0684381527f1fb7f289a828f8fa14873bb1d95463642d0c0b02ad6630c58eedae0cd52e58e16020820152905180516000906107155761071561225b565b602002602001018190525060405180604001604052807f01631b167053c2d39100f1cbe0df58a49c37e9421dc40a012257a7cfe826083981526020017f0e48ac1c5fcb946dde7a90a6a9aa0c6f20e3fae68617ecee266644996f1545f3815250816080015160018151811061078c5761078c61225b565b602002602001018190525060405180604001604052807f0b38a14ef104aa0df323a3e1ac8a1c65c5c23d73d078b3ce515b3130496745e781526020017f2e66f6d5d7c69efb58592802cb2b1e8b015dfdc5891fee1ba81b526683700e0681525081608001516002815181106108035761080361225b565b602002602001018190525060405180604001604052807f1c29388913d762cb287ba8aa5c89bfba3c6de2dd0ef970a36530fa1f35fadb6e81526020017f0d04ac592b1b040a2c165635c1e8252c927840253a15d7c3bd490bcf71b62cb8815250816080015160038151811061087a5761087a61225b565b602002602001018190525060405180604001604052807f21461b1304d0aaf44c73c2d1ef5d633df9d5738dc869fdc4a1192352a0d1005381526020017f29201d58bc66c157d39879ae9a806de04612b26c28a872acb5317cd74b74b77f81525081608001516004815181106108f1576108f161225b565b602002602001018190525060405180604001604052807f244aeeccd12e904a0a28c30858a7c3b155409f1d8450f8e049e929ca9cfd509b81526020017f0c5beec2c99e0bc5e16090273631e49c3fc2472b3c471996db26706415184c3681525081608001516005815181106109685761096861225b565b602002602001018190525060405180604001604052807e0bbddf44c5342ff62a858e98079d003ce0e55910589d5d29d2cecaf934eee981526020017f056adb800c4343687f0b01c0f73665e0719f288a0c09aad10b22dca4c43aec9a81525081608001516006815181106109de576109de61225b565b602002602001018190525060405180604001604052807f148a088e2fa5f7e7fe7d36216302dffbb3ad46c27bb254137f7fb57ddf5f8ecf81526020017f0c0d1ace6b1f9d398d7e487366514aa05f15020d05321f1641cc27c8723a3af38152508160800151600781518110610a5557610a5561225b565b602002602001018190525060405180604001604052807f0de662a79e6055e22a55a74fb5d92ce5b07eb803124ad843f84d19ba7030090f81526020017f070b5cc551bbfc8d75c851970fe57c9bcb513754706654ab1fa428074b15dfde8152508160800151600881518110610acc57610acc61225b565b602002602001018190525060405180604001604052807f0cafdf361e7c8086724e41a02aed84fa2e49260bcc5d19dcd3c9046bab86070881526020017f0e1b0ed7b8c29e7431e5ec5917710d19b2f6d4815d8668212c1a4d1dd8e05c418152508160800151600981518110610b4357610b4361225b565b602002602001018190525060405180604001604052807f15e280202507714990c6f980010df4d096aa2ae742109c17ab1275c41a41c7f581526020017f11cf1e84ebf6ae3432617226a75c9c471a5e097e22c6e63d813ed9d13e66f79b8152508160800151600a81518110610bba57610bba61225b565b602002602001018190525060405180604001604052807f0e1bc04c29dd985df3ec6bf835dc0276b8ec3fe891ac42a2c56fee1b358d679f81526020017f1130f2c39b29060666e343003395e221a739d909cd75d156629be9f52f85b90b8152508160800151600b81518110610c3157610c3161225b565b602002602001018190525060405180604001604052807f28971e9f1c8b6ec8a936dc7e16cc48c0240f62b9bf0a31852276dc17e23dbccc81526020017f012fff449072b3040f2e8c99fdb5c9f07bf1e012f45a79f305c14604b25ce8198152508160800151600c81518110610ca857610ca861225b565b602002602001018190525060405180604001604052807f16ce64ced8137ca0db6b9c4ff19aef341f9a3a65ccc9d5ec43e32825fd03ad1281526020017f24023fa85a584219b7f5843d8f750b5dec9bc15a8f8b926a1c681d19470948bb8152508160800151600d81518110610d1f57610d1f61225b565b602002602001018190525060405180604001604052807f0bff40edf8f1659c1b801d610158ae8548a3cca777deecbe3fb584754523277081526020017f0e692611f2c8ae3949ddf6f99b40c128e23caead5a9b4ac68e9992469e51903a8152508160800151600e81518110610d9657610d9661225b565b602002602001018190525060405180604001604052807f18a6a9519659054712dba8ee546f372f3ad5f8347f5419d8e78af8b28a9a757681526020017f1be8829113bc55abc35835ddba6db71e8c0ec551afba4d0779347e4557e86a4c8152508160800151600f81518110610e0d57610e0d61225b565b602002602001018190525060405180604001604052807f1c6c80962705feddf3255469ebcf6e7c2d9191201be685a0c430d041c7d0740981526020017f08d0dfc2130be4628b283025f4f04542100d23c623a88355a24699f820782b718152508160800151601081518110610e8457610e8461225b565b602002602001018190525060405180604001604052807f1ec5ff8ceda65fa35d5215d2761309cc3eac99f783f7f804fd19c870d6bdba0981526020017f1043400dd905a2277fbb4b64aeff709ea7542a439cdd586efbb4aefa72fcd8f08152508160800151601181518110610efb57610efb61225b565b602002602001018190525060405180604001604052807f0da523c939c27b99cd8497d9c0878c6c0296f771de209772c7562539c7063e1681526020017f1d23168bf81915ac5c7838e153a9782b0d75e89cf33fcd19a9a84986fd2838998152508160800151601281518110610f7257610f7261225b565b602002602001018190525060405180604001604052807f21f060e3e2f2faa30229a8cc68bf429b796966b55eabdb6c5de69c47049c569181526020017f04b5200e22b7d5f37d36d2221c52eac2e706e20a14791b622117bf737f1aad548152508160800151601381518110610fe957610fe961225b565b602002602001018190525060405180604001604052807f2a1f5b702df743d9c5cad34e6e72731e0833816492248386b6b7f77b7076794e81526020017f26bf9bc3afada3fdbe6df90ad467dcd3122345f84a40424bd43b6b5ceaed1e1c81525081608001516014815181106110605761106061225b565b602002602001018190525060405180604001604052807f07a3733a798eb0a6ffb9cd360e6c8672814dcc62c37974b32bb754173ae7b82c81526020017f04e7b8091d23f52dcf9a6ef85ad45aa8bf1cf5ff1f0de9a33580cd26e5926afe81525081608001516015815181106110d7576110d761225b565b602002602001018190525060405180604001604052807f0e7768c9687adbedad615237bf1f603f05b6bf4cfce714d5f07a45858608154d81526020017f2e73a7aa1892239a1161c8e1da0917d9c1ee932f0dfd004b3a2cf362c9af8d65815250816080015160168151811061114e5761114e61225b565b602002602001018190525060405180604001604052807f272dd0b5fcf210adbbafa978a385962861d7c1021b445b879a2b9d17a045b73181526020017f2aaf24cb39996cf076e8d7f96abc66a6e2b5a03b74624b0075c8a2c9c38823b181525081608001516017815181106111c5576111c561225b565b602002602001018190525060405180604001604052807f02df3ffc8242ea53507ef576df8d0c32dab43f3c4b229bb52c27adf0a594a01781526020017f22e62df15004dfa6f08c5c121456f841e5a47ae44a650255ca31865f96cef498815250816080015160188151811061123c5761123c61225b565b602002602001018190525060405180604001604052807f2f2e7b9f15969dca5b8be71d651ebe9417f6b9627a2a67c6ddb60037e224735181526020017f270bd29d84349c9da333ff81713fbc26321710d7b4c5e5f3224035b557beae9581525081608001516019815181106112b3576112b361225b565b602002602001018190525060405180604001604052807f1344eca839f1088fda09080e348dc05165bd5785e6bbab342b40253f7c750b2781526020017f02f27f215ad3a4eaebfb9b8b927deae55e2c11aa7168ed739be5abd5c86d476d8152508160800151601a8151811061132a5761132a61225b565b602002602001018190525060405180604001604052807f05d2aea2c4ced524f414a584d0ae7047b641abd18184dfcda0731dd19d678f4481526020017f19b28764799601608454328510f4f98a1a3bad9e8f877d9fac9785edbb70def08152508160800151601b815181106113a1576113a161225b565b602002602001018190525060405180604001604052807f1025c56c96770a8d234dff93f9f2e306253dc61fc4bd675680abd56739e00b1581526020017f2b3e8b513d63fb3ac91e0e85bcb58b3a37e3d145e63103f7c139991bae1a050f8152508160800151601c815181106114185761141861225b565b602002602001018190525060405180604001604052807f24353bfe4b682c253050b042e7d395e08bbce2bbf793410a3204cebf22f4eeb981526020017f1698d17de956437947be0719ff1b0f6edff255290cea7586800c74e9aed858f68152508160800151601d8151811061148f5761148f61225b565b602002602001018190525060405180604001604052807f092c223322b36a31dc910b45396dda7851f3f3644155323f7d8ca174029b1b2581526020017f25596e4ecb87f8b1d020c5b4426375b5ac3a1d73f1d3925d4ee49b12511d787d8152508160800151601e815181106115065761150661225b565b602002602001018190525060405180604001604052807f1ba914215ef8d1e07d72315de218bfe4221d6d763d3f046c060ba04f6526f26281526020017f02ebd526f637c9f7f1d309c07937957c273f7a80f8dca7b36597ef738b3d27c58152508160800151601f8151811061157d5761157d61225b565b602002602001018190525060405180604001604052807f30040bcb671d89f7173ee1e341df261c3b0b3e7fa4617ffd44842ad0f608832a81526020017f2ae5247a46ae497cf688fb8476781d32e0aaa247862c288714971c374987a68981525081608001516020815181106115f4576115f461225b565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761163081600361220d565b818061163e5761163e612245565b8451838061164e5761164e612245565b8651800909828061166157611661612245565b6020860151800961167291906121db565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926116ea92909190829060015b6020020151611d3f565b89518051602082015193975091955061170f929060005b60200201518b5160016116e0565b8951919350915061172590839083906000611701565b909250905061173684848484611dc0565b909450925061174784848888611dc0565b909450925083158015611758575082155b98975050505050505050565b6040805180820190915260008082526020820152611780611ed2565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806117d957604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526117fd611ef0565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576117ba565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061189b57604051806040016040528082856000015161188a919061220d565b815260006020909101529392505050565b60405180604001604052808285600001516118b6919061220d565b81526020018285602001516118cb919061220d565b6118d590846121db565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a600001518160008151811061191f5761191f61225b565b6020026020010181815250508a60200151816001815181106119435761194361225b565b60209081029190910101528951600160200201518160028151811061196a5761196a61225b565b602090810291909101015289515181518290600390811061198d5761198d61225b565b60200260200101818152505089602001516001600281106119b0576119b061225b565b6020020151816004815181106119c8576119c861225b565b60200260200101818152505089602001516000600281106119eb576119eb61225b565b602002015181600581518110611a0357611a0361225b565b602002602001018181525050886000015181600681518110611a2757611a2761225b565b602002602001018181525050886020015181600781518110611a4b57611a4b61225b565b602090810291909101015287516001602002015181600881518110611a7257611a7261225b565b6020908102919091010152875151815182906009908110611a9557611a9561225b565b6020026020010181815250508760200151600160028110611ab857611ab861225b565b602002015181600a81518110611ad057611ad061225b565b6020026020010181815250508760200151600060028110611af357611af361225b565b602002015181600b81518110611b0b57611b0b61225b565b602002602001018181525050866000015181600c81518110611b2f57611b2f61225b565b602002602001018181525050866020015181600d81518110611b5357611b5361225b565b602090810291909101015285516001602002015181600e81518110611b7a57611b7a61225b565b602090810291909101015285515181518290600f908110611b9d57611b9d61225b565b6020026020010181815250508560200151600160028110611bc057611bc061225b565b602002015181601081518110611bd857611bd861225b565b6020026020010181815250508560200151600060028110611bfb57611bfb61225b565b602002015181601181518110611c1357611c1361225b565b602002602001018181525050846000015181601281518110611c3757611c3761225b565b602002602001018181525050846020015181601381518110611c5b57611c5b61225b565b602090810291909101015283516001602002015181601481518110611c8257611c8261225b565b6020908102919091010152835151815182906015908110611ca557611ca561225b565b6020026020010181815250508360200151600160028110611cc857611cc861225b565b602002015181601681518110611ce057611ce061225b565b6020026020010181815250508360200151600060028110611d0357611d0361225b565b602002015181601781518110611d1b57611d1b61225b565b602002602001018181525050611d3081611e08565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d81818689098280611d7857611d78612245565b86890983611e5d565b8180611d8f57611d8f612245565b8280611d9d57611d9d612245565b8789098380611dae57611dae612245565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611def878683611e5d565b611dfa878684611e5d565b925092505094509492505050565b8051600090611e15611f0e565b6000602082602085026020880160086107d05a03fa905080801561002b575080611e5257604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611e6d57611e6d612245565b611e7784846121db565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611eab611f2c565b8152602001611eb8611f2c565b8152602001611ec5611f2c565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611f3f611f51565b8152602001611f4c611f51565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611f8057600080fd5b611f88612177565b808385604086011115611f9a57600080fd5b60005b6002811015611fbc578135845260209384019390910190600101611f9d565b509095945050505050565b600082601f830112611fd857600080fd5b8135602067ffffffffffffffff80831115611ff557611ff5612271565b8260051b604051601f19603f8301168101818110848211171561201a5761201a612271565b6040528481528381019250868401828801850189101561203957600080fd5b600092505b8583101561205c57803584529284019260019290920191840161203e565b50979650505050505050565b60006040828403121561207a57600080fd5b6040516040810181811067ffffffffffffffff8211171561209d5761209d612271565b604052823581526020928301359281019290925250919050565b6000808284036101208112156120cc57600080fd5b610100808212156120dc57600080fd5b6120e46121a0565b6120ee8787612068565b81526080603f198401121561210257600080fd5b61210a612177565b92506121198760408801611f6f565b83526121288760808801611f6f565b60208401528260208201526121408760c08801612068565b60408201529350840135905067ffffffffffffffff81111561216157600080fd5b61216d85828601611fc7565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561219a5761219a612271565b60405290565b6040516060810167ffffffffffffffff8111828210171561219a5761219a612271565b600082198211156121d6576121d661222f565b500190565b6000828210156121ed576121ed61222f565b500390565b60006000198214156122065761220661222f565b5060010190565b60008261222a57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220b1b80a2bc817de452f4dce7736cb3b2b513e6b97ac35cb30b034070ccd1afbd164736f6c63430008070033';

type Transaction2x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x1Verifier {
    return super.attach(address) as Transaction2x1Verifier;
  }
  connect(signer: Signer): Transaction2x1Verifier__factory {
    return super.connect(signer) as Transaction2x1Verifier__factory;
  }
  static readonly contractName: 'Transaction2x1Verifier';
  public readonly contractName: 'Transaction2x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x1Verifier;
  }
}
