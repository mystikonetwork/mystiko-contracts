/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x1Verifier, Transaction2x1VerifierInterface } from '../Transaction2x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b506122be806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046120b8565b610057565b604051901515815260200160405180910390f35b6000815160201461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008c565b9392505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100b86103ff565b9050806080015151855160016100ce91906121c4565b146100ec57604051633494a40d60e21b815260040160405180910390fd5b835151821161010e57604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013357604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015957604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018157604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101a957604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d357604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101f857604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022057604051633494a40d60e21b815260040160405180910390fd5b835161022b90611603565b610248576040516361586bdd60e01b815260040160405180910390fd5b610255846020015161167b565b610272576040516361586bdd60e01b815260040160405180910390fd5b61027f8460400151611603565b61029c576040516361586bdd60e01b815260040160405180910390fd5b60006102dc604051806040016040528060008152602001600081525083608001516000815181106102cf576102cf61225c565b6020026020010151611765565b905060005b865181101561038c57838782815181106102fd576102fd61225c565b60200260200101511061032357604051633494a40d60e21b815260040160405180910390fd5b61037882610373856080015184600161033c91906121c4565b8151811061034c5761034c61225c565b60200260200101518a85815181106103665761036661225c565b60200260200101516117e2565b611765565b915080610384816121f3565b9150506102e1565b5061039681611603565b6103b3576040516361586bdd60e01b815260040160405180910390fd5b6103f5856000015186602001516103c984611831565b85604001516103db8a60400151611831565b606088015188516103eb90611831565b89602001516118df565b9695505050505050565b610407611e82565b6040805180820182527f0eada3bbac2f6f1daac3dde05c6f9e440c0d0241816ca761d3af1fd5c16cce1b81527f07633e33b1939e75a568b2451a57bb84e405fcdbc1497a8f20e48a84626559456020808301919091529083528151608080820184527f0b642ed5d5c7e7f4ee11c4aaf46067e031f5de6275e9669ca5f2bf4ae05f40798285019081527f28f2cadf5430c122eb085f2414dfd857c4b92ce25a228e2bb1e503b39aba63ef606080850191909152908352845180860186527e92f26c4b2280b785471e0e3566234822fae859a179c524ba5061f8d4c5e11e81527f0cae2cef32e7ee16341d5a599e876c2816423b2a85561f24b35cfd5e38655f9b818601528385015285840192909252835180820185527f2df02bdf19f6c2891d391f57c623ad3b07dc38ae450805bbe01f8e6caba7f5c28186019081527f087ea2c9e2fa5cee19cf6fed918ac0022faac3808743ab403be996dbdbeaa308828501528152845180860186527f2b5cc997e73128765eb5e4f246edb320ff722fbb0ec58afe955e44425c64c76b81527f0fda088386fee96c0acaf6c239f064d708bb65ac89d57418f56373a81ef44d5e818601528185015285850152835190810184527f0babb16610a4f94b1665a2ddb7a3d8e15157a150d448a7ab733f7b48b630ba1a8185019081527f20b70182e78e549c795299199471b565228b2a03896d837f35a04a3f125178c1828401528152835180850185527f2cfd26104389205a9b28ec894670ee2b8ca0c5934a92e2aad1a2ed7f5fe3ed1e81527f029a424384844b810f0d71ffec4434e813403f17f964e87a2fac2eb9bb615ebe818501528184015290840152815160218082526104408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161068257505060808201908152604080518082019091527f1d37c521dd4c98e9ee30088ac7301f147ba7f72e202804ffec7ad0aead178f6781527f2dd73821ae7f93f001224913709dec7d13dd2e42347be013078a1a908e9ea01d6020820152905180516000906107155761071561225c565b602002602001018190525060405180604001604052807f2e7682c28a4d4173b18e879575eb37a9d86278dbb93eeb065d3d413f8c8de68081526020017f2348089b5d4fd040971963731b2bb48de3ca5bdd6961622758e0af761d017a86815250816080015160018151811061078c5761078c61225c565b602002602001018190525060405180604001604052807f0daddb16faadfb82d169745ee39540a926aa2812d6d2611599234c898d962c6f81526020017f2f4922dac39970719d59c0072e229949b599d341824b90f3c10db2706bc793a481525081608001516002815181106108035761080361225c565b602002602001018190525060405180604001604052807f15187ca91c1e418596b1ce54c64e5dede8aa97f6a94a0f30951bc0fed15563fd81526020017f283a2ce62ac70373ec47d0d86c82fd87a23e9e4b9ba90df8103ee0d967400a2b815250816080015160038151811061087a5761087a61225c565b602002602001018190525060405180604001604052807f11c846974a38ae96b6c576d3e17ba782f02c098d8791aeaa21a125e32bf9cbc881526020017f1b63f9ab7ca95a4e06f48f19f9bfac488a8a98788fd3eacd629b421f73a43cfe81525081608001516004815181106108f1576108f161225c565b602002602001018190525060405180604001604052807f020748ba5fd2d3ddcf4ee6730b88e0a8757611bf44ef288e558e8ccd5586013481526020017f2fda5824e3bfa9c8fd625d2528f40f79562f1dcd9c63df9920c37dce35e32bfd81525081608001516005815181106109685761096861225c565b602002602001018190525060405180604001604052807f17b375cba23fdb50466c36078dd2107dd3da49defa606b4d31e4ff7c360aee0681526020017f04e4f42cc30e544f7fc149347df510f88e31ea509d5a9b2cd46d5496ba6b05f881525081608001516006815181106109df576109df61225c565b602002602001018190525060405180604001604052807f1790dd6beafb46852d931dcdb83fd9e7659e3da9341a71428a36cef763736cd281526020017f26992d51fc39f6792d767e4c2503e65a5437cd4a28ebfaa61aee46b19aeab3958152508160800151600781518110610a5657610a5661225c565b602002602001018190525060405180604001604052807f2746add94fde0042bbe2d8e02a0a748939ad08aca084205438ad1f65003b717581526020017f1ab7839d3496845311a8e0e4b2300d422108ea4290320999d7954dcf60466a128152508160800151600881518110610acd57610acd61225c565b602002602001018190525060405180604001604052807f20d09d4a94ebf11b94fcf02d23b4f8a8975450c46cd2ebb0b25526bb01cbeeee81526020017f2bed7e3ace0af460e5acbc71081ed4f761cbba817c88065469e82b8df0d24ab88152508160800151600981518110610b4457610b4461225c565b602002602001018190525060405180604001604052807f2ecf8d593dbcf284f63b21d0e712b3dbabe7c2c778c2574bf93e7fd4c904a88d81526020017f09cd6f360a5e31f7b97bcb1ba3f97ba8a21160bc4ea15d48ffdbaa172042c8048152508160800151600a81518110610bbb57610bbb61225c565b602002602001018190525060405180604001604052807f1e0d62467f91bdb6257eec198a15ba19a01caf7c2a51f75b2273f109b079087581526020017f056f7fb0cd25d173d80613c1c0fe331d2d6ac14efe895395ccb3ffa2c0cc3eb88152508160800151600b81518110610c3257610c3261225c565b602002602001018190525060405180604001604052807f0feca08f59e666296b6d4053daf46ea51846ab6579ee0b7e23af1739fb262e6a81526020017f2a0065b07a410e8cff401e438a9bcdc3381664b2d83fbf25a0c966da9478e41e8152508160800151600c81518110610ca957610ca961225c565b602002602001018190525060405180604001604052807f19e6ab53413c99f957d7158a045c87a5984cba770d63ab0e0b36171810d3a64c81526020017f1e77c9a5981e32624b0aac50e5626affeffbe5582f6e97f4075f1e315119403e8152508160800151600d81518110610d2057610d2061225c565b602002602001018190525060405180604001604052807f106f6fc8dfb6ba73ed48cb047637bca9bc75fab960615db44c948695a2b0e45081526020017f1d9cd0edc540a2023d25d8d900a8432262696501d0ac0a342242ffbbd2a4211a8152508160800151600e81518110610d9757610d9761225c565b602002602001018190525060405180604001604052807f1283af5da475b0be3dd26b9c2846aa25ce154ac529711a4a6c3bb11e59d39baf81526020017f2a0b8c37253780bc67475fd92db296043476532d0912b1cda1b17bcd44a0f4578152508160800151600f81518110610e0e57610e0e61225c565b602002602001018190525060405180604001604052807f0854bea360ff3e7ecccf9a3e28c82af3e9200d8de2ec6e3c25ed1f295e37fa6f81526020017f2ee2555259ebe8f1d9358df3f3442398c0c70ca06c3050809dc404d7fcc28eda8152508160800151601081518110610e8557610e8561225c565b602002602001018190525060405180604001604052807f18ab18c6b7ccdbd7571d0790c7dd2eb087f950422ad9e2b3dbfa91e3d316341a81526020017f100e7bdf4b4a4b8980aa962144aaa66d53881915aa891d6afefe6a479e9e37838152508160800151601181518110610efc57610efc61225c565b602002602001018190525060405180604001604052807f098a624b1657515aa1ad91f9b406e4a547e5c24eaf4ff47db45337f04a9cc90a81526020017f08161eab7de25e0eeadc979bdeb98c89b23e714b6624bbbe5390c07ab89ec8568152508160800151601281518110610f7357610f7361225c565b602002602001018190525060405180604001604052807f06fc0387c61028c5020ad22a68d1ed0b8480c7260a30471f1d3890473875c93181526020017f18a465a4d04148e0270a45405cda95f2ad6a9498d9ea6d848bba1c60a9f0b58f8152508160800151601381518110610fea57610fea61225c565b602002602001018190525060405180604001604052807f29c90a06c92c0dcbbcf54562c252d6169f07533ae4d8cc0e61fb4bf5fdf5d3b581526020017f21925e072e5c09b032ffeee3eca9a405e73f148a8a4ff9fcbe22f0b495846e8581525081608001516014815181106110615761106161225c565b602002602001018190525060405180604001604052807f0f8d9ad883401429c118f3cc7ed6b181193059c9c2ad798c77d052d366fb420581526020017f29b2922d7539926481998ab9e7b6168cd29dd8c0dcb45a38a033f42567d5d93c81525081608001516015815181106110d8576110d861225c565b602002602001018190525060405180604001604052807f1c50d438b028cb63dee8c9e2d024f0e1e49961fbfdc1fc506efd0b92d91f85d781526020017f22189663ded21d0b0cc0627decf8bf9f6a292c464f3ffa317813244093809345815250816080015160168151811061114f5761114f61225c565b602002602001018190525060405180604001604052807f2c0760456821bd6f91feb53deb7f20a76bfe1fa9a59d2ddce91ea95a8e0b66a081526020017f05d050870ff0a53e33db63415e8a7a1e0057fe768ef0b042184f96ed9f3be9b381525081608001516017815181106111c6576111c661225c565b602002602001018190525060405180604001604052807f1a9bd2ce04cb5581623fc8e07b216b79f4366c523570ff15112a05c26442f49281526020017f2f6ff33e6cf614465297e273dd0edf95cc6039f3c9d8932773f3309c8d8c3efb815250816080015160188151811061123d5761123d61225c565b602002602001018190525060405180604001604052807f047cdeabd023d06623ce5dee83216e2ca3921536e4ae4644370925a0980513af81526020017f1633c143452752e2fe136cd4eabd90f2e43df15c4f83a4ec56597bdb6bfbc2f881525081608001516019815181106112b4576112b461225c565b602002602001018190525060405180604001604052807f17c3f0fe258816645d6999dd693d4777200461545679be529bf8cbdfcec98f7281526020017f26e6dd9805a28fbae69c40da9faed6e035362a1ddfc0703507d5eaa4290e6c988152508160800151601a8151811061132b5761132b61225c565b602002602001018190525060405180604001604052807f19db23d1b2266416d60b88dbbc818c8f7966a569e56bca0fe4235e1bf1f0765681526020017f19a7d076fe2376386eb40357ce3f683fbb92ccb7609b31844118bb80283024378152508160800151601b815181106113a2576113a261225c565b602002602001018190525060405180604001604052807f13f3f62e5332c6594300e6b9bdbca97ef9777fd6303386327d7db746657af7fd81526020017f1c859f04212a43cc2dd40024d9e1d769f46fb11a5ea24b25d7d737b9967e83dd8152508160800151601c815181106114195761141961225c565b602002602001018190525060405180604001604052807f2c642f5f2d1995d83d195c2c52f8263695a7d9f43d5dedc813fee6354729741881526020017f1b4d891e971278a5c57f71fe34a305b9f2b8e3fadd01d27882d4d494af5db6198152508160800151601d815181106114905761149061225c565b602002602001018190525060405180604001604052807f028ff04b33101c4aaf7f7dcb457fc9cbd654059114a9fe43ee537b67eed5bc4d81526020017f08cd15a491d358819c74f3261d791f693a3d7eb8365806828b221fdf8df2155d8152508160800151601e815181106115075761150761225c565b602002602001018190525060405180604001604052807f263fd58d64d8d13ce262e26394657011ac622a5e79b56417204db5e287cde6f681526020017f28a2183db53890ad8d90dfae2d9cc6c6dbbb72bb009967612a71e83bfed5b4278152508160800151601f8151811061157e5761157e61225c565b602002602001018190525060405180604001604052807f02d0fe339ea3ea196fee2d136aab44461ac4b5404d61779b067f586e8eb5232381526020017f02e45fdb2b4e911d5b60b8fc44034288062691a46c9404ecf099e533acd6d14c81525081608001516020815181106115f5576115f561225c565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4761163181600361220e565b818061163f5761163f612246565b8451838061164f5761164f612246565b8651800909828061166257611662612246565b6020860151800961167391906121dc565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926116eb92909190829060015b6020020151611d40565b895180516020820151939750919550611710929060005b60200201518b5160016116e1565b8951919350915061172690839083906000611702565b909250905061173784848484611dc1565b909450925061174884848888611dc1565b909450925083158015611759575082155b98975050505050505050565b6040805180820190915260008082526020820152611781611ed3565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080801561002b575b50806117da57604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526117fe611ef1565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080801561002b576117bb565b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479061189c57604051806040016040528082856000015161188b919061220e565b815260006020909101529392505050565b60405180604001604052808285600001516118b7919061220e565b81526020018285602001516118cc919061220e565b6118d690846121dc565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a60000151816000815181106119205761192061225c565b6020026020010181815250508a60200151816001815181106119445761194461225c565b60209081029190910101528951600160200201518160028151811061196b5761196b61225c565b602090810291909101015289515181518290600390811061198e5761198e61225c565b60200260200101818152505089602001516001600281106119b1576119b161225c565b6020020151816004815181106119c9576119c961225c565b60200260200101818152505089602001516000600281106119ec576119ec61225c565b602002015181600581518110611a0457611a0461225c565b602002602001018181525050886000015181600681518110611a2857611a2861225c565b602002602001018181525050886020015181600781518110611a4c57611a4c61225c565b602090810291909101015287516001602002015181600881518110611a7357611a7361225c565b6020908102919091010152875151815182906009908110611a9657611a9661225c565b6020026020010181815250508760200151600160028110611ab957611ab961225c565b602002015181600a81518110611ad157611ad161225c565b6020026020010181815250508760200151600060028110611af457611af461225c565b602002015181600b81518110611b0c57611b0c61225c565b602002602001018181525050866000015181600c81518110611b3057611b3061225c565b602002602001018181525050866020015181600d81518110611b5457611b5461225c565b602090810291909101015285516001602002015181600e81518110611b7b57611b7b61225c565b602090810291909101015285515181518290600f908110611b9e57611b9e61225c565b6020026020010181815250508560200151600160028110611bc157611bc161225c565b602002015181601081518110611bd957611bd961225c565b6020026020010181815250508560200151600060028110611bfc57611bfc61225c565b602002015181601181518110611c1457611c1461225c565b602002602001018181525050846000015181601281518110611c3857611c3861225c565b602002602001018181525050846020015181601381518110611c5c57611c5c61225c565b602090810291909101015283516001602002015181601481518110611c8357611c8361225c565b6020908102919091010152835151815182906015908110611ca657611ca661225c565b6020026020010181815250508360200151600160028110611cc957611cc961225c565b602002015181601681518110611ce157611ce161225c565b6020026020010181815250508360200151600060028110611d0457611d0461225c565b602002015181601781518110611d1c57611d1c61225c565b602002602001018181525050611d3181611e09565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d82818689098280611d7957611d79612246565b86890983611e5e565b8180611d9057611d90612246565b8280611d9e57611d9e612246565b8789098380611daf57611daf612246565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611df0878683611e5e565b611dfb878684611e5e565b925092505094509492505050565b8051600090611e16611f0f565b6000602082602085026020880160086107d05a03fa905080801561002b575080611e5357604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611e6e57611e6e612246565b611e7884846121dc565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611eac611f2d565b8152602001611eb9611f2d565b8152602001611ec6611f2d565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611f40611f52565b8152602001611f4d611f52565b905290565b60405180604001604052806002906020820280368337509192915050565b600082601f830112611f8157600080fd5b611f89612178565b808385604086011115611f9b57600080fd5b60005b6002811015611fbd578135845260209384019390910190600101611f9e565b509095945050505050565b600082601f830112611fd957600080fd5b8135602067ffffffffffffffff80831115611ff657611ff6612272565b8260051b604051601f19603f8301168101818110848211171561201b5761201b612272565b6040528481528381019250868401828801850189101561203a57600080fd5b600092505b8583101561205d57803584529284019260019290920191840161203f565b50979650505050505050565b60006040828403121561207b57600080fd5b6040516040810181811067ffffffffffffffff8211171561209e5761209e612272565b604052823581526020928301359281019290925250919050565b6000808284036101208112156120cd57600080fd5b610100808212156120dd57600080fd5b6120e56121a1565b6120ef8787612069565b81526080603f198401121561210357600080fd5b61210b612178565b925061211a8760408801611f70565b83526121298760808801611f70565b60208401528260208201526121418760c08801612069565b60408201529350840135905067ffffffffffffffff81111561216257600080fd5b61216e85828601611fc8565b9150509250929050565b6040805190810167ffffffffffffffff8111828210171561219b5761219b612272565b60405290565b6040516060810167ffffffffffffffff8111828210171561219b5761219b612272565b600082198211156121d7576121d7612230565b500190565b6000828210156121ee576121ee612230565b500390565b600060001982141561220757612207612230565b5060010190565b60008261222b57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220222f6a435058cf6bee868b931022df8f4a3ff2ae723e1485706b76e538cf0bb164736f6c63430008070033';

type Transaction2x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x1Verifier {
    return super.attach(address) as Transaction2x1Verifier;
  }
  connect(signer: Signer): Transaction2x1Verifier__factory {
    return super.connect(signer) as Transaction2x1Verifier__factory;
  }
  static readonly contractName: 'Transaction2x1Verifier';
  public readonly contractName: 'Transaction2x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x1Verifier;
  }
}
