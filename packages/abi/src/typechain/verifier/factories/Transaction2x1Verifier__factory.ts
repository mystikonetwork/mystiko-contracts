/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { Transaction2x1Verifier, Transaction2x1VerifierInterface } from '../Transaction2x1Verifier';

const _abi = [
  {
    inputs: [],
    name: 'InvalidParam',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotOnCurve',
    type: 'error',
  },
  {
    inputs: [],
    name: 'StaticCallFailed',
    type: 'error',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'a',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256[2]',
                name: 'X',
                type: 'uint256[2]',
              },
              {
                internalType: 'uint256[2]',
                name: 'Y',
                type: 'uint256[2]',
              },
            ],
            internalType: 'struct Pairing.G2Point',
            name: 'b',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'uint256',
                name: 'X',
                type: 'uint256',
              },
              {
                internalType: 'uint256',
                name: 'Y',
                type: 'uint256',
              },
            ],
            internalType: 'struct Pairing.G1Point',
            name: 'c',
            type: 'tuple',
          },
        ],
        internalType: 'struct VerifierLib.Proof',
        name: 'proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: 'input',
        type: 'uint256[]',
      },
    ],
    name: 'verifyTx',
    outputs: [
      {
        internalType: 'bool',
        name: 'r',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052348015600f57600080fd5b5061227f8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c941764714610030575b600080fd5b61004361003e3660046120fe565b610057565b604051901515815260200160405180910390f35b6000815160201461007b57604051633494a40d60e21b815260040160405180910390fd5b610085828461008e565b90505b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001816100ba6103f7565b9050806080015151855160016100d091906121d5565b146100ee57604051633494a40d60e21b815260040160405180910390fd5b835151821161011057604051633494a40d60e21b815260040160405180910390fd5b835160200151821161013557604051633494a40d60e21b815260040160405180910390fd5b60208401515151821161015b57604051633494a40d60e21b815260040160405180910390fd5b602084810151015151821161018357604051633494a40d60e21b815260040160405180910390fd5b60208481015151015182116101ab57604051633494a40d60e21b815260040160405180910390fd5b602084810151810151015182116101d557604051633494a40d60e21b815260040160405180910390fd5b60408401515182116101fa57604051633494a40d60e21b815260040160405180910390fd5b818460400151602001511061022257604051633494a40d60e21b815260040160405180910390fd5b835161022d906115fb565b61024a576040516361586bdd60e01b815260040160405180910390fd5b6102578460200151611673565b610274576040516361586bdd60e01b815260040160405180910390fd5b61028184604001516115fb565b61029e576040516361586bdd60e01b815260040160405180910390fd5b60006102de604051806040016040528060008152602001600081525083608001516000815181106102d1576102d16121e8565b602002602001015161175d565b905060005b865181101561038457838782815181106102ff576102ff6121e8565b60200260200101511061032557604051633494a40d60e21b815260040160405180910390fd5b61037a82610375856080015184600161033e91906121d5565b8151811061034e5761034e6121e8565b60200260200101518a8581518110610368576103686121e8565b60200260200101516117dd565b61175d565b91506001016102e3565b5061038e816115fb565b6103ab576040516361586bdd60e01b815260040160405180910390fd5b6103ed856000015186602001516103c18461182b565b85604001516103d38a6040015161182b565b606088015188516103e39061182b565b89602001516118dc565b9695505050505050565b6103ff611e83565b6040805180820182527f0eada3bbac2f6f1daac3dde05c6f9e440c0d0241816ca761d3af1fd5c16cce1b81527f07633e33b1939e75a568b2451a57bb84e405fcdbc1497a8f20e48a84626559456020808301919091529083528151608080820184527f0b642ed5d5c7e7f4ee11c4aaf46067e031f5de6275e9669ca5f2bf4ae05f40798285019081527f28f2cadf5430c122eb085f2414dfd857c4b92ce25a228e2bb1e503b39aba63ef606080850191909152908352845180860186527e92f26c4b2280b785471e0e3566234822fae859a179c524ba5061f8d4c5e11e81527f0cae2cef32e7ee16341d5a599e876c2816423b2a85561f24b35cfd5e38655f9b818601528385015285840192909252835180820185527f2df02bdf19f6c2891d391f57c623ad3b07dc38ae450805bbe01f8e6caba7f5c28186019081527f087ea2c9e2fa5cee19cf6fed918ac0022faac3808743ab403be996dbdbeaa308828501528152845180860186527f2b5cc997e73128765eb5e4f246edb320ff722fbb0ec58afe955e44425c64c76b81527f0fda088386fee96c0acaf6c239f064d708bb65ac89d57418f56373a81ef44d5e818601528185015285850152835190810184527f0babb16610a4f94b1665a2ddb7a3d8e15157a150d448a7ab733f7b48b630ba1a8185019081527f20b70182e78e549c795299199471b565228b2a03896d837f35a04a3f125178c1828401528152835180850185527f2cfd26104389205a9b28ec894670ee2b8ca0c5934a92e2aad1a2ed7f5fe3ed1e81527f029a424384844b810f0d71ffec4434e813403f17f964e87a2fac2eb9bb615ebe818501528184015290840152815160218082526104408201909352919082015b604080518082019091526000808252602082015281526020019060019003908161067a57505060808201908152604080518082019091527f1d37c521dd4c98e9ee30088ac7301f147ba7f72e202804ffec7ad0aead178f6781527f2dd73821ae7f93f001224913709dec7d13dd2e42347be013078a1a908e9ea01d60208201529051805160009061070d5761070d6121e8565b602002602001018190525060405180604001604052807f2e7682c28a4d4173b18e879575eb37a9d86278dbb93eeb065d3d413f8c8de68081526020017f2348089b5d4fd040971963731b2bb48de3ca5bdd6961622758e0af761d017a868152508160800151600181518110610784576107846121e8565b602002602001018190525060405180604001604052807f0daddb16faadfb82d169745ee39540a926aa2812d6d2611599234c898d962c6f81526020017f2f4922dac39970719d59c0072e229949b599d341824b90f3c10db2706bc793a481525081608001516002815181106107fb576107fb6121e8565b602002602001018190525060405180604001604052807f15187ca91c1e418596b1ce54c64e5dede8aa97f6a94a0f30951bc0fed15563fd81526020017f283a2ce62ac70373ec47d0d86c82fd87a23e9e4b9ba90df8103ee0d967400a2b8152508160800151600381518110610872576108726121e8565b602002602001018190525060405180604001604052807f11c846974a38ae96b6c576d3e17ba782f02c098d8791aeaa21a125e32bf9cbc881526020017f1b63f9ab7ca95a4e06f48f19f9bfac488a8a98788fd3eacd629b421f73a43cfe81525081608001516004815181106108e9576108e96121e8565b602002602001018190525060405180604001604052807f020748ba5fd2d3ddcf4ee6730b88e0a8757611bf44ef288e558e8ccd5586013481526020017f2fda5824e3bfa9c8fd625d2528f40f79562f1dcd9c63df9920c37dce35e32bfd8152508160800151600581518110610960576109606121e8565b602002602001018190525060405180604001604052807f17b375cba23fdb50466c36078dd2107dd3da49defa606b4d31e4ff7c360aee0681526020017f04e4f42cc30e544f7fc149347df510f88e31ea509d5a9b2cd46d5496ba6b05f881525081608001516006815181106109d7576109d76121e8565b602002602001018190525060405180604001604052807f1790dd6beafb46852d931dcdb83fd9e7659e3da9341a71428a36cef763736cd281526020017f26992d51fc39f6792d767e4c2503e65a5437cd4a28ebfaa61aee46b19aeab3958152508160800151600781518110610a4e57610a4e6121e8565b602002602001018190525060405180604001604052807f2746add94fde0042bbe2d8e02a0a748939ad08aca084205438ad1f65003b717581526020017f1ab7839d3496845311a8e0e4b2300d422108ea4290320999d7954dcf60466a128152508160800151600881518110610ac557610ac56121e8565b602002602001018190525060405180604001604052807f20d09d4a94ebf11b94fcf02d23b4f8a8975450c46cd2ebb0b25526bb01cbeeee81526020017f2bed7e3ace0af460e5acbc71081ed4f761cbba817c88065469e82b8df0d24ab88152508160800151600981518110610b3c57610b3c6121e8565b602002602001018190525060405180604001604052807f2ecf8d593dbcf284f63b21d0e712b3dbabe7c2c778c2574bf93e7fd4c904a88d81526020017f09cd6f360a5e31f7b97bcb1ba3f97ba8a21160bc4ea15d48ffdbaa172042c8048152508160800151600a81518110610bb357610bb36121e8565b602002602001018190525060405180604001604052807f1e0d62467f91bdb6257eec198a15ba19a01caf7c2a51f75b2273f109b079087581526020017f056f7fb0cd25d173d80613c1c0fe331d2d6ac14efe895395ccb3ffa2c0cc3eb88152508160800151600b81518110610c2a57610c2a6121e8565b602002602001018190525060405180604001604052807f0feca08f59e666296b6d4053daf46ea51846ab6579ee0b7e23af1739fb262e6a81526020017f2a0065b07a410e8cff401e438a9bcdc3381664b2d83fbf25a0c966da9478e41e8152508160800151600c81518110610ca157610ca16121e8565b602002602001018190525060405180604001604052807f19e6ab53413c99f957d7158a045c87a5984cba770d63ab0e0b36171810d3a64c81526020017f1e77c9a5981e32624b0aac50e5626affeffbe5582f6e97f4075f1e315119403e8152508160800151600d81518110610d1857610d186121e8565b602002602001018190525060405180604001604052807f106f6fc8dfb6ba73ed48cb047637bca9bc75fab960615db44c948695a2b0e45081526020017f1d9cd0edc540a2023d25d8d900a8432262696501d0ac0a342242ffbbd2a4211a8152508160800151600e81518110610d8f57610d8f6121e8565b602002602001018190525060405180604001604052807f1283af5da475b0be3dd26b9c2846aa25ce154ac529711a4a6c3bb11e59d39baf81526020017f2a0b8c37253780bc67475fd92db296043476532d0912b1cda1b17bcd44a0f4578152508160800151600f81518110610e0657610e066121e8565b602002602001018190525060405180604001604052807f0854bea360ff3e7ecccf9a3e28c82af3e9200d8de2ec6e3c25ed1f295e37fa6f81526020017f2ee2555259ebe8f1d9358df3f3442398c0c70ca06c3050809dc404d7fcc28eda8152508160800151601081518110610e7d57610e7d6121e8565b602002602001018190525060405180604001604052807f18ab18c6b7ccdbd7571d0790c7dd2eb087f950422ad9e2b3dbfa91e3d316341a81526020017f100e7bdf4b4a4b8980aa962144aaa66d53881915aa891d6afefe6a479e9e37838152508160800151601181518110610ef457610ef46121e8565b602002602001018190525060405180604001604052807f098a624b1657515aa1ad91f9b406e4a547e5c24eaf4ff47db45337f04a9cc90a81526020017f08161eab7de25e0eeadc979bdeb98c89b23e714b6624bbbe5390c07ab89ec8568152508160800151601281518110610f6b57610f6b6121e8565b602002602001018190525060405180604001604052807f06fc0387c61028c5020ad22a68d1ed0b8480c7260a30471f1d3890473875c93181526020017f18a465a4d04148e0270a45405cda95f2ad6a9498d9ea6d848bba1c60a9f0b58f8152508160800151601381518110610fe257610fe26121e8565b602002602001018190525060405180604001604052807f29c90a06c92c0dcbbcf54562c252d6169f07533ae4d8cc0e61fb4bf5fdf5d3b581526020017f21925e072e5c09b032ffeee3eca9a405e73f148a8a4ff9fcbe22f0b495846e858152508160800151601481518110611059576110596121e8565b602002602001018190525060405180604001604052807f0f8d9ad883401429c118f3cc7ed6b181193059c9c2ad798c77d052d366fb420581526020017f29b2922d7539926481998ab9e7b6168cd29dd8c0dcb45a38a033f42567d5d93c81525081608001516015815181106110d0576110d06121e8565b602002602001018190525060405180604001604052807f1c50d438b028cb63dee8c9e2d024f0e1e49961fbfdc1fc506efd0b92d91f85d781526020017f22189663ded21d0b0cc0627decf8bf9f6a292c464f3ffa3178132440938093458152508160800151601681518110611147576111476121e8565b602002602001018190525060405180604001604052807f2c0760456821bd6f91feb53deb7f20a76bfe1fa9a59d2ddce91ea95a8e0b66a081526020017f05d050870ff0a53e33db63415e8a7a1e0057fe768ef0b042184f96ed9f3be9b381525081608001516017815181106111be576111be6121e8565b602002602001018190525060405180604001604052807f1a9bd2ce04cb5581623fc8e07b216b79f4366c523570ff15112a05c26442f49281526020017f2f6ff33e6cf614465297e273dd0edf95cc6039f3c9d8932773f3309c8d8c3efb8152508160800151601881518110611235576112356121e8565b602002602001018190525060405180604001604052807f047cdeabd023d06623ce5dee83216e2ca3921536e4ae4644370925a0980513af81526020017f1633c143452752e2fe136cd4eabd90f2e43df15c4f83a4ec56597bdb6bfbc2f881525081608001516019815181106112ac576112ac6121e8565b602002602001018190525060405180604001604052807f17c3f0fe258816645d6999dd693d4777200461545679be529bf8cbdfcec98f7281526020017f26e6dd9805a28fbae69c40da9faed6e035362a1ddfc0703507d5eaa4290e6c988152508160800151601a81518110611323576113236121e8565b602002602001018190525060405180604001604052807f19db23d1b2266416d60b88dbbc818c8f7966a569e56bca0fe4235e1bf1f0765681526020017f19a7d076fe2376386eb40357ce3f683fbb92ccb7609b31844118bb80283024378152508160800151601b8151811061139a5761139a6121e8565b602002602001018190525060405180604001604052807f13f3f62e5332c6594300e6b9bdbca97ef9777fd6303386327d7db746657af7fd81526020017f1c859f04212a43cc2dd40024d9e1d769f46fb11a5ea24b25d7d737b9967e83dd8152508160800151601c81518110611411576114116121e8565b602002602001018190525060405180604001604052807f2c642f5f2d1995d83d195c2c52f8263695a7d9f43d5dedc813fee6354729741881526020017f1b4d891e971278a5c57f71fe34a305b9f2b8e3fadd01d27882d4d494af5db6198152508160800151601d81518110611488576114886121e8565b602002602001018190525060405180604001604052807f028ff04b33101c4aaf7f7dcb457fc9cbd654059114a9fe43ee537b67eed5bc4d81526020017f08cd15a491d358819c74f3261d791f693a3d7eb8365806828b221fdf8df2155d8152508160800151601e815181106114ff576114ff6121e8565b602002602001018190525060405180604001604052807f263fd58d64d8d13ce262e26394657011ac622a5e79b56417204db5e287cde6f681526020017f28a2183db53890ad8d90dfae2d9cc6c6dbbb72bb009967612a71e83bfed5b4278152508160800151601f81518110611576576115766121e8565b602002602001018190525060405180604001604052807f02d0fe339ea3ea196fee2d136aab44461ac4b5404d61779b067f586e8eb5232381526020017f02e45fdb2b4e911d5b60b8fc44034288062691a46c9404ecf099e533acd6d14c81525081608001516020815181106115ed576115ed6121e8565b602002602001018190525090565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611629816003612214565b8180611637576116376121fe565b84518380611647576116476121fe565b8651800909828061165a5761165a6121fe565b6020860151800961166b9190612236565b149392505050565b6020818101518051918101516000927f2b149d40ceb8aaae81be18991be06ac3b5b4c5e559dbefa33267e6dc24a138e5927e9713b03af0fed4cd2cafadeed8fdf4a74fa084e52d1852e4a2bd0685c315d29285928392839283926116e392909190829060015b6020020151611d3d565b895180516020820151939750919550611708929060005b60200201518b5160016116d9565b8951919350915061171e908390839060006116fa565b909250905061172f84848484611dbe565b909450925061174084848888611dbe565b909450925083158015611751575082155b98975050505050505050565b6040805180820190915260008082526020820152611779611ed4565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080806117b657600080fd5b50806117d557604051633842fc7360e21b815260040160405180910390fd5b505092915050565b60408051808201909152600080825260208201526117f9611ef2565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa905080806117b657600080fd5b604080518082019091526000808252602082015260208201517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47906000036118995760405180604001604052808285600001516118889190612214565b815260006020909101529392505050565b60405180604001604052808285600001516118b49190612214565b81526020018285602001516118c99190612214565b6118d39084612236565b90529392505050565b60408051601880825261032082019092526000919082908260208201610300803683370190505090508a600001518160008151811061191d5761191d6121e8565b6020026020010181815250508a6020015181600181518110611941576119416121e8565b602090810291909101015289516001602002015181600281518110611968576119686121e8565b602090810291909101015289515181518290600390811061198b5761198b6121e8565b60200260200101818152505089602001516001600281106119ae576119ae6121e8565b6020020151816004815181106119c6576119c66121e8565b60200260200101818152505089602001516000600281106119e9576119e96121e8565b602002015181600581518110611a0157611a016121e8565b602002602001018181525050886000015181600681518110611a2557611a256121e8565b602002602001018181525050886020015181600781518110611a4957611a496121e8565b602090810291909101015287516001602002015181600881518110611a7057611a706121e8565b6020908102919091010152875151815182906009908110611a9357611a936121e8565b6020026020010181815250508760200151600160028110611ab657611ab66121e8565b602002015181600a81518110611ace57611ace6121e8565b6020026020010181815250508760200151600060028110611af157611af16121e8565b602002015181600b81518110611b0957611b096121e8565b602002602001018181525050866000015181600c81518110611b2d57611b2d6121e8565b602002602001018181525050866020015181600d81518110611b5157611b516121e8565b602090810291909101015285516001602002015181600e81518110611b7857611b786121e8565b602090810291909101015285515181518290600f908110611b9b57611b9b6121e8565b6020026020010181815250508560200151600160028110611bbe57611bbe6121e8565b602002015181601081518110611bd657611bd66121e8565b6020026020010181815250508560200151600060028110611bf957611bf96121e8565b602002015181601181518110611c1157611c116121e8565b602002602001018181525050846000015181601281518110611c3557611c356121e8565b602002602001018181525050846020015181601381518110611c5957611c596121e8565b602090810291909101015283516001602002015181601481518110611c8057611c806121e8565b6020908102919091010152835151815182906015908110611ca357611ca36121e8565b6020026020010181815250508360200151600160028110611cc657611cc66121e8565b602002015181601681518110611cde57611cde6121e8565b6020026020010181815250508360200151600060028110611d0157611d016121e8565b602002015181601781518110611d1957611d196121e8565b602002602001018181525050611d2e81611e06565b9b9a5050505050505050505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611d7f818689098280611d7657611d766121fe565b86890983611e5f565b8180611d8d57611d8d6121fe565b8280611d9b57611d9b6121fe565b8789098380611dac57611dac6121fe565b878b0908925092505094509492505050565b6000807f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47611ded878683611e5f565b611df8878684611e5f565b925092505094509492505050565b8051600090611e13611f10565b6000602082602085026020880160086107d05a03fa90508080611e3557600080fd5b5080611e5457604051633842fc7360e21b815260040160405180910390fd5b505115159392505050565b60008180611e6f57611e6f6121fe565b611e798484612236565b8508949350505050565b6040805160e08101909152600060a0820181815260c0830191909152815260208101611ead611f2e565b8152602001611eba611f2e565b8152602001611ec7611f2e565b8152602001606081525090565b60405180608001604052806004906020820280368337509192915050565b60405180606001604052806003906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280611f41611f53565b8152602001611f4e611f53565b905290565b60405180604001604052806002906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611faa57611faa611f71565b60405290565b6040516060810167ffffffffffffffff81118282101715611faa57611faa611f71565b604051601f8201601f1916810167ffffffffffffffff81118282101715611ffc57611ffc611f71565b604052919050565b60006040828403121561201657600080fd5b61201e611f87565b823581526020928301359281019290925250919050565b600082601f83011261204657600080fd5b61204e611f87565b80604084018581111561206057600080fd5b845b8181101561207a578035845260209384019301612062565b509095945050505050565b600082601f83011261209657600080fd5b813567ffffffffffffffff8111156120b0576120b0611f71565b8060051b6120c060208201611fd3565b918252602081850181019290810190868411156120dc57600080fd5b6020860192505b838310156103ed5782358252602092830192909101906120e3565b60008082840361012081121561211357600080fd5b61010081121561212257600080fd5b61212a611fb0565b6121348686612004565b81526080603f198301121561214857600080fd5b612150611f87565b915061215f8660408701612035565b825261216e8660808701612035565b60208301528160208201526121868660c08701612004565b604082015292505061010083013567ffffffffffffffff8111156121a957600080fd5b6121b585828601612085565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610088576100886121bf565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b60008261223157634e487b7160e01b600052601260045260246000fd5b500690565b81810381811115610088576100886121bf56fea26469706673582212208876350ba4c190c9841220425d1c66babfece4c40c32c2f3a76ce5d3e6ef982264736f6c634300081a0033';

type Transaction2x1VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Transaction2x1VerifierConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transaction2x1Verifier__factory extends ContractFactory {
  constructor(...args: Transaction2x1VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'Transaction2x1Verifier';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<Transaction2x1Verifier> {
    return super.deploy(overrides || {}) as Promise<Transaction2x1Verifier>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Transaction2x1Verifier {
    return super.attach(address) as Transaction2x1Verifier;
  }
  connect(signer: Signer): Transaction2x1Verifier__factory {
    return super.connect(signer) as Transaction2x1Verifier__factory;
  }
  static readonly contractName: 'Transaction2x1Verifier';
  public readonly contractName: 'Transaction2x1Verifier';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Transaction2x1VerifierInterface {
    return new utils.Interface(_abi) as Transaction2x1VerifierInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Transaction2x1Verifier {
    return new Contract(address, _abi, signerOrProvider) as Transaction2x1Verifier;
  }
}
