/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_daoCenter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RejectRelay',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RejectRollup',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rollupSize',
        type: 'uint256',
      },
    ],
    name: 'RollupDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'inputNumber',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'outputNumber',
        type: 'uint32',
      },
    ],
    name: 'TransactDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UnauthorizedRole',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'auditorPublicKey',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'id',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'publicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'note',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct CommitmentPool.AuditorNote[]',
        name: 'notes',
        type: 'tuple[]',
      },
    ],
    name: 'EncryptedAuditorNotes',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentQueuedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNullifierCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getQueuedCommitments',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
    ],
    name: 'grantRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
    ],
    name: 'revokeRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'uint256',
            name: 'randomAuditingPublicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb1790555f6007819055600881905560095534801562000045575f80fd5b50604051620048e0380380620048e08339810160408190526200006891620007ed565b60015f908155600280546001600160a01b0319166001600160a01b038516179055839085908490849060ff84169003620000b557604051632c4f29b160e21b815260040160405180910390fd5b600160ff84161b608052620000ca836200012b565b600b8190555f908152600a602052604090208054600160ff19909116179055600d80546001600160a81b0319166001600160a01b03928316179055600e80546001600160a01b03191694909116939093179092555062000856945050505050565b5f8160ff165f036200015e57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff166001036200019157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600203620001c457507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff16600303620001f757507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff166004036200022957507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff166005036200025c57507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff166006036200028f57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600703620002c257507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff16600803620002f557507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff166009036200032857507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a036200035b57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b036200038e57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c03620003c157507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d03620003f457507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e036200042757507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f036200045a57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff166010036200048d57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601103620004bf57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff16601203620004f257507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff166013036200052557507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff166014036200055857507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff166015036200058b57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601603620005be57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff16601703620005f157507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff166018036200062457507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff166019036200065757507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a036200068a57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b03620006bd57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c03620006f057507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d036200072357507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e036200075657507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f036200078957507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602003620007bc57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b6001600160a01b0381168114620007ea575f80fd5b50565b5f805f806080858703121562000801575f80fd5b845160ff8116811462000812575f80fd5b60208601519094506200082581620007d5565b60408601519093506200083881620007d5565b60608601519092506200084b81620007d5565b939692955090935050565b6080516140636200087d5f395f81816102e0015281816111d10152611b8001526140635ff3fe608060405234801561000f575f80fd5b5060043610610201575f3560e01c80637a55374411610123578063b08892d0116100b8578063dd757c3411610088578063e5ef84051161006e578063e5ef840514610472578063ec571c6a14610485578063f2da1d4114610498575f80fd5b8063dd757c3414610462578063e500f5041461046a575f80fd5b8063b08892d014610424578063b1c394221461042c578063c2d4160114610440578063c9230c5d1461045a575f80fd5b8063866ac658116100f3578063866ac658146103d457806387780df9146103dc5780638dc9a3c3146103ef578063a6232a9314610402575f80fd5b80637a5537441461037b5780637cbf0ff6146103835780637ef09bca1461039657806380e52e3f146103c1575f80fd5b80633fe3347a116101995780635706001611610169578063570600161461031e57806363bc7d3214610340578063720829711461035557806378d60cd714610368575f80fd5b80633fe3347a146102d0578063484eb652146102de578063555d75f01461030e5780635688881f14610316575f80fd5b80631f02d715116101d45780631f02d7151461026557806330f49cac14610278578063389776861461028b5780633bb8d1b41461029e575f80fd5b806301dbf19f1461020557806314a7737d1461020f578063176de7a8146102225780631ba46cfd14610240575b5f80fd5b61020d6104ab565b005b61020d61021d36600461356f565b610596565b61022a610bcb565b604051610237919061362e565b60405180910390f35b600e546001600160a01b03165b6040516001600160a01b039091168152602001610237565b60025461024d906001600160a01b031681565b61020d610286366004613654565b610c3e565b61020d610299366004613654565b610d3c565b6102c06102ac36600461367a565b5f9081526005602052604090205460ff1690565b6040519015158152602001610237565b5f60405161023791906136a5565b7f00000000000000000000000000000000000000000000000000000000000000005b604051908152602001610237565b600754610300565b610300610e19565b6102c061032c36600461367a565b5f9081526004602052604090205460ff1690565b610348610e2a565b6040516102379190613704565b61020d610363366004613891565b610e98565b61020d610376366004613a48565b611b28565b600954610300565b61020d61039136600461367a565b611c55565b6102c06103a4366004613654565b6001600160a01b03165f9081526003602052604090205460ff1690565b61020d6103cf366004613654565b611d3c565b610348611e16565b6103006103ea36600461367a565b611ec5565b61020d6103fd366004613aea565b611f36565b6102c061041036600461367a565b5f908152600a602052604090205460ff1690565b600c54610300565b6001546102c090600160a01b900460ff1681565b610448612093565b60405160ff9091168152602001610237565b61022a6120fe565b61020d612145565b600854610300565b61020d610480366004613aea565b612224565b60015461024d906001600160a01b031681565b6103006104a6366004613b59565b612380565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156104f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105169190613b7a565b6001600160a01b03161461053d5760405163177bc95160e11b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261058c92900460ff161515815260200190565b60405180910390a1565b6040805160608101825230815233602080830191825284015163ffffffff16828401908152600d54935163dd53f8a160e01b815283516001600160a01b039081166004830152925183166024820152905160448201529192169063dd53f8a190606401602060405180830381865afa158015610614573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106389190613ba4565b61066e576040517fff4e342300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040808301515f908152600a602052205460ff16156106a05760405163e2e1210360e01b815260040160405180910390fd5b600d5460208301516040516305afd53360e31b815263ffffffff90911660048201525f916001600160a01b031690632d7ea998906024016040805180830381865afa1580156106f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107159190613bbd565b9050806020015161074c576020830151604051632a64af0160e01b815263ffffffff90911660048201526024015b60405180910390fd5b600754836020015163ffffffff161115610796576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610743565b60085460208401516107ae9063ffffffff1682613bfa565b156107e9576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610743565b5f6107f8828660200151612380565b90505f856020015163ffffffff1667ffffffffffffffff81111561081e5761081e613384565b604051908082528060200260200182016040528015610847578160200160208202803683370190505b5090505f805b876020015163ffffffff16811015610940575f61086a8287613c2d565b5f818152600660209081526040808320815180830190925280548083526001909101549282019290925292935090036108b65760405163d3482f7b60e01b815260040160405180910390fd5b805f01518584815181106108cc576108cc613c40565b6020026020010181815250508060200151846108e89190613c2d565b5f8381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a25050808061093890613c54565b91505061084d565b50866020015163ffffffff1660075f82825461095c9190613c6c565b925050819055505f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001836040516020016109969190613c7f565b604051602081830303815290604052805190602001205f1c6109b89190613bfa565b905080886060015114610a0e576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610743565b60408051600480825260a082019092525f9160208201608080368337019050509050600b54815f81518110610a4557610a45613c40565b602002602001018181525050886040015181600181518110610a6957610a69613c40565b6020026020010181815250508181600281518110610a8957610a89613c40565b6020026020010181815250508481600381518110610aa957610aa9613c40565b60209081029190910101528651895160405163c941764760e01b81525f926001600160a01b03169163c941764791610ae691908690600401613cdc565b6020604051808303815f875af1158015610b02573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b269190613ba4565b905080610b76576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610743565b896020015163ffffffff1660085f828254610b919190613c2d565b90915550506040808b0151600b8190555f908152600a60205220805460ff19166001179055610bbf84612408565b50505050505050505050565b600e54604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301925f9291908290030181865afa158015610c12573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610c399190810190613d4c565b905090565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610c85573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ca99190613b7a565b6001600160a01b031614610cd05760405163177bc95160e11b815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200160405180910390a150565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610d83573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610da79190613b7a565b6001600160a01b031614610dce5760405163177bc95160e11b815260040160405180910390fd5b6001600160a01b0381165f81815260036020526040808220805460ff19166001179055517f0baaa7abe79fc29984705b05242ef0b47970e216d9df1d047efebd0d490630699190a250565b5f600754600854610c399190613c2d565b600d5460408051633044b79b60e21b815290516060926001600160a01b03169163c112de6c916004808301925f9291908290030181865afa158015610e71573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610c399190810190613db5565b60025f5403610ee95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610743565b60025f908155604083015151610efe90612422565b90505f610f0f8460e0015151612422565b600d54909150600160a01b900460ff168015610f30575063ffffffff811615155b15610f5e57604051630286d72f60e31b815263ffffffff808416600483015282166024820152604401610743565b60c084015115611011576040805180820182523081523360208201908152600d549251635fa1062b60e11b815282516001600160a01b0390811660048301529151821660248201529192169063bf420c5690604401602060405180830381865afa158015610fce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff29190613ba4565b61100f5760405163324af8d960e11b815260040160405180910390fd5b505b600d546040516385e861eb60e01b815263ffffffff8085166004830152831660248201525f916001600160a01b0316906385e861eb906044016040805180830381865afa158015611064573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110889190613bbd565b905080602001516110bc57604051630286d72f60e31b815263ffffffff808516600483015283166024820152604401610743565b8263ffffffff1685606001515114611117576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610743565b8163ffffffff168561010001515114611173576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610743565b8163ffffffff1685610160015151146111cf576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610743565b7f00000000000000000000000000000000000000000000000000000000000000008263ffffffff166007546008546112079190613c2d565b6112119190613c2d565b111561123057604051633b5ccb4360e21b815260040160405180910390fd5b611239326124a1565b1561125757604051632e70c0b160e01b815260040160405180910390fd5b6112658561012001516124a1565b1561128357604051632e70c0b160e01b815260040160405180910390fd5b600d5f9054906101000a90046001600160a01b03166001600160a01b031663a592bd696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112f79190613e36565b6113079063ffffffff8516613e4d565b856101a00151511461132c57604051633acf48bb60e21b815260040160405180910390fd5b5f61133686612527565b905061134281866126b1565b6001600160a01b03165f1b8660800151146113a0576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610743565b5f6113ac856002613e64565b63ffffffff1690505f6113c0866002613e64565b6113cb906004613e8c565b63ffffffff1690505f6113df866002613e64565b6113ef9063ffffffff1683613c2d565b90505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663a592bd696040518163ffffffff1660e01b8152600401602060405180830381865afa158015611442573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114669190613e36565b611471896002613e8c565b63ffffffff166114819190613e4d565b61148c836002613c2d565b6114969190613c2d565b67ffffffffffffffff8111156114ae576114ae613384565b6040519080825280602002602001820160405280156114d7578160200160208202803683370190505b506020808c01515f908152600a909152604090205490915060ff16611528576040516314e8955b60e21b8152600401610743906020808252600490820152631c9bdbdd60e21b604082015260600190565b8960200151815f8151811061153f5761153f613c40565b60209081029190910101525f611556896001613e8c565b63ffffffff1690505f5b8963ffffffff1681101561165f575f8c60400151828151811061158557611585613c40565b6020908102919091018101515f818152600590925260409091205490915060ff16156115dd576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846115ea846001613c2d565b815181106115fa576115fa613c40565b6020026020010181815250508c60600151828151811061161c5761161c613c40565b60200260200101518484846116319190613c2d565b8151811061164157611641613c40565b6020908102919091010152508061165781613c54565b915050611560565b5060808b015182611671876001613c2d565b8151811061168157611681613c40565b602090810291909101015260a08b01518261169d876002613c2d565b815181106116ad576116ad613c40565b602090810291909101015260c08b0151826116c9876003613c2d565b815181106116d9576116d9613c40565b60209081029190910101525f6116f563ffffffff8a1686613c2d565b90505f5b8963ffffffff1681101561186c5760045f8e60e00151838151811061172057611720613c40565b60209081029190910181015182528101919091526040015f205460ff161561178b5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610743565b600c548d610100015182815181106117a5576117a5613c40565b602002602001015110156117cc5760405163784f02bd60e11b815260040160405180910390fd5b8c60e0015181815181106117e2576117e2613c40565b60200260200101518487836117f79190613c2d565b8151811061180757611807613c40565b6020026020010181815250508c6101000151818151811061182a5761182a613c40565b602002602001015184838361183f9190613c2d565b8151811061184f5761184f613c40565b60209081029190910101528061186481613c54565b9150506116f9565b506118788c84866126d3565b87518c5160405163c941764760e01b81526001600160a01b039092169163c9417647916118a9918790600401613cdc565b6020604051808303815f875af11580156118c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118e99190613ba4565b611936576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610743565b5f5b8a63ffffffff16811015611a0557600160055f8f60400151848151811061196157611961613c40565b602002602001015181526020019081526020015f205f6101000a81548160ff021916908315150217905550600160095f82825461199e9190613c2d565b909155505060408d01518051829081106119ba576119ba613c40565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806119fd81613c54565b915050611938565b505f5b8963ffffffff16811015611ad257600160045f8f60e001518481518110611a3157611a31613c40565b602002602001015181526020019081526020015f205f6101000a81548160ff021916908315150217905550611ac08d60e001518281518110611a7557611a75613c40565b60200260200101518e61010001518381518110611a9457611a94613c40565b60200260200101518f61016001518481518110611ab357611ab3613c40565b60200260200101516129b5565b80611aca81613c54565b915050611a08565b5060a08c015115611af057611af08c61012001518d60a00151612a52565b60c08c015115611b0d57611b0d8c61014001518d60c00151612a52565b611b168c612a6d565b505060015f5550505050505050505050565b335f8181526003602052604090205460ff16611b5757604051630aedfc3560e21b815260040160405180910390fd5b600c5483606001511015611b7e5760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611baf9190613c2d565b10611bcd57604051633b5ccb4360e21b815260040160405180910390fd5b6020808401515f9081526004909152604090205460ff1615611c025760405163e38cd14d60e01b815260040160405180910390fd5b602080840180515f90815260049092526040909120805460ff191660011790555160608401516080850151611c389291906129b5565b604083015115611c5057611c50828460400151612a52565b505050565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611c9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611cc09190613b7a565b6001600160a01b031614611ce75760405163177bc95160e11b815260040160405180910390fd5b805f03611d37576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610743565b600c55565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611d83573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611da79190613b7a565b6001600160a01b031614611dce5760405163177bc95160e11b815260040160405180910390fd5b6001600160a01b0381165f81815260036020526040808220805460ff19169055517f6107a4a5447a4208ba14e3ec240bccf0a93828124ccf501af04601031070b1839190a250565b60605f60075467ffffffffffffffff811115611e3457611e34613384565b604051908082528060200260200182016040528015611e5d578160200160208202803683370190505b5090505f5b600754811015611ebf575f81600854611e7b9190613c2d565b5f81815260066020526040902054845191925090849084908110611ea157611ea1613c40565b60209081029190910101525080611eb781613c54565b915050611e62565b50919050565b600d5460405163dbda082960e01b8152600481018390525f916001600160a01b03169063dbda082990602401602060405180830381865afa158015611f0c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f309190613e36565b92915050565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611f7d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fa19190613b7a565b6001600160a01b031614611fc85760405163177bc95160e11b815260040160405180910390fd5b5f5b81811015611c5057600160035f858585818110611fe957611fe9613c40565b9050602002016020810190611ffe9190613654565b6001600160a01b0316815260208101919091526040015f20805460ff191691151591909117905582828281811061203757612037613c40565b905060200201602081019061204c9190613654565b6001600160a01b03167f0baaa7abe79fc29984705b05242ef0b47970e216d9df1d047efebd0d4906306960405160405180910390a28061208b81613c54565b915050611fca565b600e546040805163313ce56760e01b815290515f926001600160a01b03169163313ce5679160048083019260209291908290030181865afa1580156120da573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c399190613eb0565b600e54604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301925f9291908290030181865afa158015610c12573d5f803e3d5ffd5b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561218c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121b09190613b7a565b6001600160a01b0316146121d75760405163177bc95160e11b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161058c91600160a01b90910460ff161515815260200190565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561226b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061228f9190613b7a565b6001600160a01b0316146122b65760405163177bc95160e11b815260040160405180910390fd5b5f5b81811015611c50575f60035f8585858181106122d6576122d6613c40565b90506020020160208101906122eb9190613654565b6001600160a01b0316815260208101919091526040015f20805460ff191691151591909117905582828281811061232457612324613c40565b90506020020160208101906123399190613654565b6001600160a01b03167f6107a4a5447a4208ba14e3ec240bccf0a93828124ccf501af04601031070b18360405160405180910390a28061237881613c54565b9150506122b8565b5f6101008263ffffffff16106123a55760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106123c85760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106123eb5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061240157600183901c92505b5090919050565b600e5461241f906001600160a01b03163383612d67565b50565b5f63ffffffff82111561249d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610743565b5090565b6001545f90600160a01b900460ff166124bb57505f919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d90602401602060405180830381865afa158015612503573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611f309190613ba4565b610160810151515f906003811061255157604051633fb1945d60e11b815260040160405180910390fd5b6060815f036125a7576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061265c565b816001036125ec578361012001518461014001518561016001515f815181106125d2576125d2613c40565b602002602001015160405160200161259193929190613ed0565b8361012001518461014001518561016001515f8151811061260f5761260f613c40565b602002602001015186610160015160018151811061262f5761262f613c40565b602002602001015160405160200161264a9493929190613f15565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b5f805f6126be8585612dce565b915091506126cb81612e39565b509392505050565b6101808301516040805180820182525f808252602091820152815180830190925260ff83901c8083526001600160ff1b0390931690820152835190919084908490811061272257612722613c40565b6020026020010181815250508060200151838360016127419190613c2d565b8151811061275157612751613c40565b6020026020010181815250505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663a592bd696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906127d29190613e36565b90505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663c112de6c6040518163ffffffff1660e01b81526004015f60405180830381865afa158015612824573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261284b9190810190613db5565b90505f612859856002613c2d565b90505f6128668483613c2d565b90505f612874856002613e4d565b61287e9084613c2d565b90505f5b8581101561294b575f6128df8683815181106128a0576128a0613c40565b60200260200101516040805180820182525f808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b80519091508a6128ef8488613c2d565b815181106128ff576128ff613c40565b60200260200101818152505080602001518a838661291d9190613c2d565b8151811061292d5761292d613c40565b6020908102919091010152508061294381613c54565b915050612882565b505f5b896101a0015151811015610bbf57896101a00151818151811061297357612973613c40565b60200260200101518982846129889190613c2d565b8151811061299857612998613c40565b6020908102919091010152806129ad81613c54565b91505061294e565b5f6008546007546129c69190613c2d565b60408051808201825286815260208082018781525f8581526006909252928120915182559151600191820155600780549394509092909190612a09908490613c2d565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612a4493929190613f70565b60405180910390a250505050565b600e54612a69906001600160a01b03168383612d67565b5050565b600d546040805163a592bd6960e01b815290515f926001600160a01b03169163a592bd699160048083019260209291908290030181865afa158015612ab4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612ad89190613e36565b90505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663c112de6c6040518163ffffffff1660e01b81526004015f60405180830381865afa158015612b2a573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612b519190810190613db5565b90505f82846040015151612b659190613e4d565b90505f8167ffffffffffffffff811115612b8157612b81613384565b604051908082528060200260200182016040528015612bdd57816020015b612bca60405180606001604052805f67ffffffffffffffff1681526020015f81526020015f81525090565b815260200190600190039081612b9f5790505b5090505f805b8660400151518163ffffffff161015612d27575f5b868163ffffffff161015612d14578063ffffffff1660208363ffffffff1667ffffffffffffffff16901b17848481518110612c3557612c35613c40565b602090810291909101015167ffffffffffffffff90911690528551869063ffffffff8316908110612c6857612c68613c40565b6020026020010151848481518110612c8257612c82613c40565b60200260200101516020018181525050876101a001518163ffffffff16888463ffffffff16612cb19190613e4d565b612cbb9190613c2d565b81518110612ccb57612ccb613c40565b6020026020010151848481518110612ce557612ce5613c40565b60209081029190910101516040015282612cfe81613c54565b9350508080612d0c90613f8e565b915050612bf8565b5080612d1f81613f8e565b915050612be3565b507f6af07ebcb33931abd348e785f70c6d259390cf799191f8c99124245b96e1a61382604051612d579190613fb0565b60405180910390a1505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052611c50908490612fee565b5f808251604103612e02576020830151604084015160608501515f1a612df6878285856130d2565b94509450505050612e32565b8251604003612e2b5760208301516040840151612e208683836131b7565b935093505050612e32565b505f905060025b9250929050565b5f816004811115612e4c57612e4c613691565b03612e545750565b6001816004811115612e6857612e68613691565b03612eb55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610743565b6002816004811115612ec957612ec9613691565b03612f165760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610743565b6003816004811115612f2a57612f2a613691565b03612f825760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610743565b6004816004811115612f9657612f96613691565b0361241f5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610743565b5f613042826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166131ef9092919063ffffffff16565b805190915015611c5057808060200190518101906130609190613ba4565b611c505760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610743565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561310757505f905060036131ae565b8460ff16601b1415801561311f57508460ff16601c14155b1561312f57505f905060046131ae565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015613180573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166131a8575f600192509250506131ae565b91505f90505b94509492505050565b5f806001600160ff1b038316816131d360ff86901c601b613c2d565b90506131e1878288856130d2565b935093505050935093915050565b60606131fd84845f85613207565b90505b9392505050565b60608247101561327f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610743565b6001600160a01b0385163b6132d65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610743565b5f80866001600160a01b031685876040516132f19190614012565b5f6040518083038185875af1925050503d805f811461332b576040519150601f19603f3d011682016040523d82523d5f602084013e613330565b606091505b509150915061334082828661334b565b979650505050505050565b6060831561335a575081613200565b82511561336a5782518084602001fd5b8160405162461bcd60e51b8152600401610743919061362e565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156133bb576133bb613384565b60405290565b6040516101c0810167ffffffffffffffff811182821017156133bb576133bb613384565b60405160a0810167ffffffffffffffff811182821017156133bb576133bb613384565b604051601f8201601f1916810167ffffffffffffffff8111828210171561343157613431613384565b604052919050565b5f60408284031215613449575f80fd5b613451613398565b9050813581526020820135602082015292915050565b5f82601f830112613476575f80fd5b61347e613398565b80604084018581111561348f575f80fd5b845b818110156134a9578035845260209384019301613491565b509095945050505050565b5f8183036101008112156134c6575f80fd5b6040516060810181811067ffffffffffffffff821117156134e9576134e9613384565b6040529150816134f98585613439565b81526080603f198301121561350c575f80fd5b613514613398565b91506135238560408601613467565b82526135328560808601613467565b602083015281602082015261354a8560c08601613439565b6040820152505092915050565b803563ffffffff8116811461356a575f80fd5b919050565b5f6101608284031215613580575f80fd5b6040516080810181811067ffffffffffffffff821117156135a3576135a3613384565b6040526135b084846134b4565b81526135bf6101008401613557565b6020820152610120830135604082015261014090920135606083015250919050565b5f5b838110156135fb5781810151838201526020016135e3565b50505f910152565b5f815180845261361a8160208601602086016135e1565b601f01601f19169290920160200192915050565b602081525f6132006020830184613603565b6001600160a01b038116811461241f575f80fd5b5f60208284031215613664575f80fd5b813561320081613640565b803561356a81613640565b5f6020828403121561368a575f80fd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b60208101600283106136c557634e487b7160e01b5f52602160045260245ffd5b91905290565b5f8151808452602080850194508084015f5b838110156136f9578151875295820195908201906001016136dd565b509495945050505050565b602081525f61320060208301846136cb565b5f67ffffffffffffffff82111561372f5761372f613384565b5060051b60200190565b5f82601f830112613748575f80fd5b8135602061375d61375883613716565b613408565b82815260059290921b8401810191818101908684111561377b575f80fd5b8286015b84811015613796578035835291830191830161377f565b509695505050505050565b5f67ffffffffffffffff8211156137ba576137ba613384565b50601f01601f191660200190565b5f82601f8301126137d7575f80fd5b81356137e5613758826137a1565b8181528460208386010111156137f9575f80fd5b816020850160208301375f918101602001919091529392505050565b5f82601f830112613824575f80fd5b8135602061383461375883613716565b82815260059290921b84018101918181019086841115613852575f80fd5b8286015b8481101561379657803567ffffffffffffffff811115613875575f8081fd5b6138838986838b01016137c8565b845250918301918301613856565b5f80604083850312156138a2575f80fd5b823567ffffffffffffffff808211156138b9575f80fd5b908401906102a082870312156138cd575f80fd5b6138d56133c1565b6138df87846134b4565b81526101008084013560208301526101208085013584811115613900575f80fd5b61390c8a828801613739565b6040850152506101408086013585811115613925575f80fd5b6139318b828901613739565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561396d575f80fd5b6139798e828c01613739565b60e0890152506101e089013588811115613991575f80fd5b61399d8e828c01613739565b87890152506139af6102008a0161366f565b858801526139c06102208a0161366f565b848801526102408901359550878611156139d8575f80fd5b6139e48d878b01613815565b8388015261026089013582880152610280890135955087861115613a06575f80fd5b613a128d878b01613739565b9087015250939750505050602086013592505080821115613a31575f80fd5b50613a3e858286016137c8565b9150509250929050565b5f8060408385031215613a59575f80fd5b823567ffffffffffffffff80821115613a70575f80fd5b9084019060a08287031215613a83575f80fd5b613a8b6133e5565b82358152602083013560208201526040830135604082015260608301356060820152608083013582811115613abe575f80fd5b613aca888286016137c8565b6080830152509350613ae19150506020840161366f565b90509250929050565b5f8060208385031215613afb575f80fd5b823567ffffffffffffffff80821115613b12575f80fd5b818501915085601f830112613b25575f80fd5b813581811115613b33575f80fd5b8660208260051b8501011115613b47575f80fd5b60209290920196919550909350505050565b5f8060408385031215613b6a575f80fd5b82359150613ae160208401613557565b5f60208284031215613b8a575f80fd5b815161320081613640565b8051801515811461356a575f80fd5b5f60208284031215613bb4575f80fd5b61320082613b95565b5f60408284031215613bcd575f80fd5b613bd5613398565b8251613be081613640565b8152613bee60208401613b95565b60208201529392505050565b5f82613c1457634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b80820180821115611f3057611f30613c19565b634e487b7160e01b5f52603260045260245ffd5b5f60018201613c6557613c65613c19565b5060010190565b81810381811115611f3057611f30613c19565b81515f9082906020808601845b83811015613ca857815185529382019390820190600101613c8c565b50929695505050505050565b805f5b6002811015613cd6578151845260209384019390910190600101613cb7565b50505050565b5f610120613cf583865180518252602090810151910152565b6020850151613d08604085018251613cb4565b60200151613d196080850182613cb4565b506040850151805160c08501526020015160e08401526101008301819052613d43818401856136cb565b95945050505050565b5f60208284031215613d5c575f80fd5b815167ffffffffffffffff811115613d72575f80fd5b8201601f81018413613d82575f80fd5b8051613d90613758826137a1565b818152856020838501011115613da4575f80fd5b613d438260208301602086016135e1565b5f6020808385031215613dc6575f80fd5b825167ffffffffffffffff811115613ddc575f80fd5b8301601f81018513613dec575f80fd5b8051613dfa61375882613716565b81815260059190911b82018301908381019087831115613e18575f80fd5b928401925b8284101561334057835182529284019290840190613e1d565b5f60208284031215613e46575f80fd5b5051919050565b8082028115828204841417611f3057611f30613c19565b63ffffffff818116838216028082169190828114613e8457613e84613c19565b505092915050565b63ffffffff818116838216019080821115613ea957613ea9613c19565b5092915050565b5f60208284031215613ec0575f80fd5b815160ff81168114613200575f80fd5b5f6bffffffffffffffffffffffff19808660601b168352808560601b166014840152508251613f068160288501602087016135e1565b91909101602801949350505050565b5f6bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613f4b8160288501602088016135e1565b835190830190613f628160288401602088016135e1565b016028019695505050505050565b838152826020820152606060408201525f613d436060830184613603565b5f63ffffffff808316818103613fa657613fa6613c19565b6001019392505050565b602080825282518282018190525f919060409081850190868401855b82811015614005578151805167ffffffffffffffff16855286810151878601528501518585015260609093019290850190600101613fcc565b5091979650505050505050565b5f82516140238184602087016135e1565b919091019291505056fea26469706673582212203711baaeab6a7edfec750c49aa17cbf3e2c951e25c069a1ca348e8f551a72e5b64736f6c63430008140033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    _daoCenter: string,
    _settingsCenter: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _token,
      _daoCenter,
      _settingsCenter,
      overrides || {},
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    _daoCenter: string,
    _settingsCenter: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, _daoCenter, _settingsCenter, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
