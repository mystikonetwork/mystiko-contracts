/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CommitmentPoolERC20,
  CommitmentPoolERC20Interface,
} from "../CommitmentPoolERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_treeHeight",
        type: "uint8",
      },
      {
        internalType: "contract IERC20Metadata",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AuditorIndexError",
    type: "error",
  },
  {
    inputs: [],
    name: "AuditorNotesLengthError",
    type: "error",
  },
  {
    inputs: [],
    name: "AuditorPublicKeyNotChanged",
    type: "error",
  },
  {
    inputs: [],
    name: "CommitmentHasBeenSubmitted",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "param",
        type: "string",
      },
    ],
    name: "Duplicated",
    type: "error",
  },
  {
    inputs: [],
    name: "IndexOutOfBound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "param",
        type: "string",
      },
    ],
    name: "Invalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NewRootIsDuplicated",
    type: "error",
  },
  {
    inputs: [],
    name: "NotChanged",
    type: "error",
  },
  {
    inputs: [],
    name: "NoteHasBeenSpent",
    type: "error",
  },
  {
    inputs: [],
    name: "NumInputsGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOperator",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWhitelistedRoller",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyWhitelistedSender",
    type: "error",
  },
  {
    inputs: [],
    name: "OutputNotesLessThanThree",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupFeeToFew",
    type: "error",
  },
  {
    inputs: [],
    name: "RollupSizeNotPowerOfTwo",
    type: "error",
  },
  {
    inputs: [],
    name: "SanctionedAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "TreeHeightLessThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "TreeHeightOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "TreeIsFull",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifierUpdatesHasBeenDisabled",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKey",
        type: "uint256",
      },
    ],
    name: "AuditorPublicKeyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
    ],
    name: "CommitmentIncluded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "commitment",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rollupFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedNote",
        type: "bytes",
      },
    ],
    name: "CommitmentQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rootHash",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "serialNumber",
        type: "uint256",
      },
    ],
    name: "CommitmentSpent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auditorPublicKey",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "encryptedAuditorNote",
        type: "uint256",
      },
    ],
    name: "EncryptedAuditorNote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "RollupWhitelistDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "SanctionsCheck",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract ISanctionsList",
        name: "sanctions",
        type: "address",
      },
    ],
    name: "SanctionsList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "VerifierUpdateDisabled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fullPath",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_rollupSize",
        type: "uint32",
      },
    ],
    name: "_pathIndices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_actor",
        type: "address",
      },
    ],
    name: "addEnqueueWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_roller",
        type: "address",
      },
    ],
    name: "addRollupWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "assetDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetSymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "assetType",
    outputs: [
      {
        internalType: "enum AssetPool.AssetType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "auditorCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOperator",
        type: "address",
      },
    ],
    name: "changeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_rollupSize",
        type: "uint32",
      },
    ],
    name: "disableRollupVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableSanctionsCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_numInputs",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_numOutputs",
        type: "uint32",
      },
    ],
    name: "disableTransactVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_rollupSize",
        type: "uint32",
      },
      {
        internalType: "contract IVerifier",
        name: "_rollupVerifier",
        type: "address",
      },
    ],
    name: "enableRollupVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableSanctionsCheck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_numInputs",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_numOutputs",
        type: "uint32",
      },
      {
        internalType: "contract IVerifier",
        name: "_transactVerifier",
        type: "address",
      },
    ],
    name: "enableTransactVerifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "commitment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "executorFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rollupFee",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "encryptedNote",
            type: "bytes",
          },
        ],
        internalType: "struct ICommitmentPool.CommitmentRequest",
        name: "_request",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
    ],
    name: "enqueue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAuditorPublicKeys",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getAuditorPublicKey",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommitmentIncludedCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinRollupFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreeCapacity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_commitment",
        type: "uint256",
      },
    ],
    name: "isHistoricCommitment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "root",
        type: "uint256",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isRollupWhitelistDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_serialNumber",
        type: "uint256",
      },
    ],
    name: "isSpentSerialNumber",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isVerifierUpdateDisabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_actor",
        type: "address",
      },
    ],
    name: "removeEnqueueWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_roller",
        type: "address",
      },
    ],
    name: "removeRollupWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "X",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Y",
                    type: "uint256",
                  },
                ],
                internalType: "struct IVerifier.G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "X",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "Y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct IVerifier.G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "X",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Y",
                    type: "uint256",
                  },
                ],
                internalType: "struct IVerifier.G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct IVerifier.Proof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "rollupSize",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "newRoot",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "leafHash",
            type: "uint256",
          },
        ],
        internalType: "struct ICommitmentPool.RollupRequest",
        name: "_request",
        type: "tuple",
      },
    ],
    name: "rollup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sanctionsCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sanctionsList",
    outputs: [
      {
        internalType: "contract ISanctionsList",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minRollupFee",
        type: "uint256",
      },
    ],
    name: "setMinRollupFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRollupWhitelistDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setVerifierUpdateDisabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "X",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Y",
                    type: "uint256",
                  },
                ],
                internalType: "struct IVerifier.G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "X",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "Y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct IVerifier.G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "X",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "Y",
                    type: "uint256",
                  },
                ],
                internalType: "struct IVerifier.G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct IVerifier.Proof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "rootHash",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "serialNumbers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "sigHashes",
            type: "uint256[]",
          },
          {
            internalType: "bytes32",
            name: "sigPk",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "publicAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "relayerFeeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "outCommitments",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "outRollupFees",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "publicRecipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "relayerAddress",
            type: "address",
          },
          {
            internalType: "bytes[]",
            name: "outEncryptedNotes",
            type: "bytes[]",
          },
          {
            internalType: "uint256",
            name: "randomAuditingPublicKey",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "encryptedAuditorNotes",
            type: "uint256[]",
          },
        ],
        internalType: "struct ICommitmentPool.TransactRequest",
        name: "_request",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_publicKey",
        type: "uint256",
      },
    ],
    name: "updateAuditorPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISanctionsList",
        name: "_sanction",
        type: "address",
      },
    ],
    name: "updateSanctionsListAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b50604051620044e3380380620044e38339810160408190526200006591620007c7565b6001600055808260ff81166200008e57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b581620000fe565b600a8190556000908152600960205260409020805460ff1916600117905550601580546001600160a01b039092166001600160a01b031990921691909117905550620008169050565b600060ff82166200013057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016457507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019857507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001cc57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001ff57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026757507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200029b57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002cf57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030357507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033757507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200036b57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200039f57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040757507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200043b57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200046f57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a257507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004d657507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200050a57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200053e57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005a657507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005da57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200060e57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064257507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067657507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006aa57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006de57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074657507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200077a57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007ae57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007db57600080fd5b825160ff81168114620007ed57600080fd5b60208401519092506001600160a01b03811681146200080b57600080fd5b809150509250929050565b608051613ca3620008406000396000818161036c015281816111200152611a250152613ca36000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c80637fa4b09c11610160578063c259e2e6116100d8578063e500f5041161008c578063f2da1d4111610071578063f2da1d4114610540578063f8f0538814610553578063ffa89b881461056657600080fd5b8063e500f5041461050d578063ec571c6a1461051557600080fd5b8063c9230c5d116100bd578063c9230c5d146104ea578063dd757c34146104f2578063deeff7cd146104fa57600080fd5b8063c259e2e6146104bd578063c2d41601146104d057600080fd5b8063a6232a931161012f578063b08892d011610114578063b08892d01461048e578063b1c3942214610496578063b3b75631146104aa57600080fd5b8063a6232a9314610458578063a9b1d2961461047b57600080fd5b80637fa4b09c1461040c57806387780df91461041f5780639b0a6fea146104325780639cc6b3541461044557600080fd5b80633bb8d1b4116101f357806357060016116101c257806372082971116101a757806372082971146103d357806378d60cd7146103e65780637cbf0ff6146103f957600080fd5b8063570600161461039b57806363bc7d32146103be57600080fd5b80633bb8d1b4146103285780633fe3347a1461035b578063484eb6521461036a5780634eb069f71461039057600080fd5b80630c8867e61161024a57806314a7737d1161022f57806314a7737d146102ed578063176de7a81461030057806330f49cac1461031557600080fd5b80630c8867e6146102bf578063115f574c146102d257600080fd5b806301dbf19f1461027c57806302d498f11461028657806303db98741461029957806306394c9b146102ac575b600080fd5b610284610576565b005b610284610294366004613269565b6105fa565b6102846102a7366004613269565b610649565b6102846102ba366004613269565b610695565b6102846102cd36600461362d565b610746565b6102da600581565b6040519081526020015b60405180910390f35b6102846102fb3660046133de565b610820565b610308610d83565b6040516102e49190613917565b610284610323366004613269565b610e09565b61034b610336366004613614565b60009081526005602052604090205460ff1690565b60405190151581526020016102e4565b60006040516102e491906138ef565b7f00000000000000000000000000000000000000000000000000000000000000006102da565b600f5460ff1661034b565b61034b6103a9366004613614565b60009081526004602052604090205460ff1690565b6103c6610e96565b6040516102e491906138dc565b6102846103e1366004613452565b610f13565b6102846103f4366004613337565b6119cc565b610284610407366004613614565b611afb565b61028461041a3660046136ee565b611b79565b6102da61042d366004613614565b611c5c565b610284610440366004613672565b611c94565b610284610453366004613269565b611d8c565b61034b610466366004613614565b60009081526009602052604090205460ff1690565b610284610489366004613269565b611dd8565b600c546102da565b60015461034b90600160a01b900460ff1681565b6102846104b8366004613286565b611e27565b6102846104cb3660046136c4565b611e93565b6104d8611f37565b60405160ff90911681526020016102e4565b610308611fb4565b610284611ff9565b61028461050836600461368d565b612071565b6008546102da565b600154610528906001600160a01b031681565b6040516001600160a01b0390911681526020016102e4565b6102da61054e36600461364f565b6121b1565b610284610561366004613286565b61223a565b600f54610100900460ff1661034b565b600b546001600160a01b031633146105a1576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926105f092900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610625576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610674576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146106c0576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b03828116911614156106ef576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600b546001600160a01b03163314610771576040516327e1f1e560e01b815260040160405180910390fd5b600561077e836001613a9e565b111561079d5760405163318c434560e21b815260040160405180910390fd5b80601083600581106107b1576107b1613c1e565b015414156107d157604051624a706760e31b815260040160405180910390fd5b80601083600581106107e5576107e5613c1e565b015560405181815282907f895ceb4e6bdfe0e87b20441d7685796eec44adefe1a4f88958ceceb891957f7b9060200160405180910390a25050565b600f54610100900460ff161580156108485750336000908152600d602052604090205460ff16155b15610866576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156108995760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806108d5575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610915576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b600854602082015161092d9063ffffffff1682613bd0565b15610968576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161090c565b60006109788284602001516121b1565b90506000836020015163ffffffff1667ffffffffffffffff81111561099f5761099f613c34565b6040519080825280602002602001820160405280156109c8578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610ac65760006109ed8287613a9e565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a3a5760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610a5157610a51613c1e565b602002602001018181525050806020015184610a6d9190613a9e565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610abe90613b91565b9150506109cf565b50846020015163ffffffff1660076000828254610ae39190613b29565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b1e919061388a565b6040516020818303038152906040528051906020012060001c610b419190613bd0565b905080866060015114610b97576040516314e8955b60e21b815260206004820152600860248201527f6c65616648617368000000000000000000000000000000000000000000000000604482015260640161090c565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610bd057610bd0613c1e565b602002602001018181525050866040015181600181518110610bf457610bf4613c1e565b6020026020010181815250508181600281518110610c1457610c14613c1e565b6020026020010181815250508481600381518110610c3457610c34613c1e565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c8c9190869060040161392a565b602060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cde91906132a3565b905080610d2e576040516314e8955b60e21b815260206004820152600560248201527f70726f6f66000000000000000000000000000000000000000000000000000000604482015260640161090c565b876020015163ffffffff1660086000828254610d4a9190613a9e565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d79846122ae565b5050505050505050565b601554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610dc857600080fd5b505afa158015610ddc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e0491908101906132c0565b905090565b600b546001600160a01b03163314610e34576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b6005811015610f0d5760108160058110610edc57610edc613c1e565b0154828281518110610ef057610ef0613c1e565b602090810291909101015280610f0581613b91565b915050610ec0565b50919050565b60026000541415610f665760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161090c565b60026000908155604083015151610f7c906122c8565b90506000610f8e8460e00151516122c8565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff1661100b576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e67746800000000000000000000000000000000000000000000604482015260640161090c565b8163ffffffff1684606001515114611066576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e67746800000000000000000000000000000000604482015260640161090c565b8063ffffffff1684610100015151146110c2576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e677468000000000000000000000000604482015260640161090c565b8063ffffffff16846101600151511461111e576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e6774680000000000000000604482015260640161090c565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546111569190613a9e565b6111609190613a9e565b111561117f57604051633b5ccb4360e21b815260040160405180910390fd5b61118832612348565b156111a657604051632e70c0b160e01b815260040160405180910390fd5b6111b4846101200151612348565b156111d257604051632e70c0b160e01b815260040160405180910390fd5b6111e3600563ffffffff8416613ade565b846101a00151511461120857604051633acf48bb60e21b815260040160405180910390fd5b6000611213856123e7565b905061121f8185612573565b6001600160a01b031660001b85608001511461127e576040516314e8955b60e21b815260206004820152600960248201527f7369676e61747572650000000000000000000000000000000000000000000000604482015260640161090c565b600061128b846002613afd565b63ffffffff16905060006112a0856002613afd565b6112ab906004613ab6565b63ffffffff16905060006112c0856002613afd565b6112d09063ffffffff1683613a9e565b9050600060056112e1886002613ab6565b63ffffffff166112f19190613ade565b6112fc836002613a9e565b6113069190613a9e565b67ffffffffffffffff81111561131e5761131e613c34565b604051908082528060200260200182016040528015611347578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff16611399576040516314e8955b60e21b815260040161090c906020808252600490820152631c9bdbdd60e21b604082015260600190565b8860200151816000815181106113b1576113b1613c1e565b602090810291909101015260006113c9886001613ab6565b63ffffffff16905060005b8863ffffffff168110156114d55760008b6040015182815181106113fa576113fa613c1e565b6020908102919091018101516000818152600590925260409091205490915060ff1615611453576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8084611460846001613a9e565b8151811061147057611470613c1e565b6020026020010181815250508b60600151828151811061149257611492613c1e565b60200260200101518484846114a79190613a9e565b815181106114b7576114b7613c1e565b602090810291909101015250806114cd81613b91565b9150506113d4565b5060808a0151826114e7876001613a9e565b815181106114f7576114f7613c1e565b602090810291909101015260a08a015182611513876002613a9e565b8151811061152357611523613c1e565b602090810291909101015260c08a01518261153f876003613a9e565b8151811061154f5761154f613c1e565b6020908102919091010152600061156c63ffffffff891686613a9e565b905060005b8863ffffffff168110156116e657600460008d60e00151838151811061159957611599613c1e565b60209081029190910181015182528101919091526040016000205460ff16156116055760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e7400000000000000000000000000000000000000000000604482015260640161090c565b600c548c6101000151828151811061161f5761161f613c1e565b602002602001015110156116465760405163784f02bd60e11b815260040160405180910390fd5b8b60e00151818151811061165c5761165c613c1e565b60200260200101518487836116719190613a9e565b8151811061168157611681613c1e565b6020026020010181815250508b610100015181815181106116a4576116a4613c1e565b60200260200101518483836116b99190613a9e565b815181106116c9576116c9613c1e565b6020908102919091010152806116de81613b91565b915050611571565b506116f28b8486612597565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c94176479161174791889060040161392a565b602060405180830381600087803b15801561176157600080fd5b505af1158015611775573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179991906132a3565b9050806117e9576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f66000000000000000000000000000000000000604482015260640161090c565b60005b8a63ffffffff168110156118a4576001600560008f60400151848151811061181657611816613c1e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c60400151818151811061185957611859613c1e565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061189c81613b91565b9150506117ec565b5060005b8963ffffffff16811015611975576001600460008f60e0015184815181106118d2576118d2613c1e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119638d60e00151828151811061191857611918613c1e565b60200260200101518e6101000151838151811061193757611937613c1e565b60200260200101518f6101600151848151811061195657611956613c1e565b60200260200101516127a4565b8061196d81613b91565b9150506118a8565b5060a08c015115611993576119938c61012001518d60a00151612843565b60c08c0151156119b0576119b08c61014001518d60c00151612843565b6119b98c61285a565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff166119fc5760405163f75e9fc760e01b815260040160405180910390fd5b600c5482606001511015611a235760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a549190613a9e565b10611a7257604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611aa85760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611adf9291906127a4565b604082015115611af757611af7818360400151612843565b5050565b600b546001600160a01b03163314611b26576040516327e1f1e560e01b815260040160405180910390fd5b80611b74576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c757046656500000000000000000000000000000000000000604482015260640161090c565b600c55565b600b546001600160a01b03163314611ba4576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611bc8576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611bec57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b60006005611c6b836001613a9e565b1115611c7957506000919050565b60108260058110611c8c57611c8c613c1e565b015492915050565b600b546001600160a01b03163314611cbf576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611ce3576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611cfd57506104008163ffffffff16115b15611d38576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161090c565b611d43600182613b40565b811663ffffffff16600014611d6b576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611db7576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611e03576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611e52576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610e8b565b600b546001600160a01b03163314611ebe576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611ee2576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611f0657604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6015546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015611f7c57600080fd5b505afa158015611f90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e049190613735565b601554604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610dc857600080fd5b600b546001600160a01b03163314612024576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916105f091600160a01b90910460ff161515815260200190565b600b546001600160a01b0316331461209c576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156120c0576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821615806120da57506104008263ffffffff16115b15612115576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161090c565b612120600183613b40565b821663ffffffff16600014612148576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106121d75760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106121fa5760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061221d5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061223357600183901c92505b5090919050565b600b546001600160a01b03163314612265576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610e8b90831515815260200190565b6015546122c5906001600160a01b03163383612967565b50565b600063ffffffff8211156123445760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161090c565b5090565b600154600090600160a01b900460ff1661236457506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156123a957600080fd5b505afa1580156123bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e191906132a3565b92915050565b610160810151516000906003811061241257604051633fb1945d60e11b815260040160405180910390fd5b606081612466576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061251e565b81600114156124ad5783610120015184610140015185610160015160008151811061249357612493613c1e565b6020026020010151604051602001612450939291906137e8565b8361012001518461014001518561016001516000815181106124d1576124d1613c1e565b60200260200101518661016001516001815181106124f1576124f1613c1e565b602002602001015160405160200161250c949392919061382e565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b600080600061258285856129d3565b9150915061258f81612a43565b509392505050565b6101808301516040805180820182526000808252602091820152815180830190925260ff83901c8083526001600160ff1b039093169082015283519091908490849081106125e7576125e7613c1e565b6020026020010181815250508060200151838360016126069190613a9e565b8151811061261657612616613c1e565b60200260200101818152505060005b60058110156127105760006126806010836005811061264657612646613c1e565b01546040805180820182526000808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b80519091508583612692876002613a9e565b61269c9190613a9e565b815181106126ac576126ac613c1e565b6020026020010181815250508060200151858360058760026126ce9190613a9e565b6126d89190613a9e565b6126e29190613a9e565b815181106126f2576126f2613c1e565b6020908102919091010152508061270881613b91565b915050612625565b5060005b846101a001515181101561279d57846101a00151818151811061273957612739613c1e565b60200260200101518482600560026127519190613ade565b61275c876002613a9e565b6127669190613a9e565b6127709190613a9e565b8151811061278057612780613c1e565b60209081029190910101528061279581613b91565b915050612714565b5050505050565b60006008546007546127b69190613a9e565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906127fa908490613a9e565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161283593929190613992565b60405180910390a250505050565b601554611af7906001600160a01b03168383612967565b60005b8160400151518163ffffffff161015611af75760005b60058163ffffffff1610156129545763ffffffff8116602083901b67ffffffff00000000168117907fedb645e89307a56926af6b5c96b775e8b9059fb011654e89088a416aa3b66b81908290601090600581106128d2576128d2613c1e565b0154866101a001518563ffffffff1660058863ffffffff166128f49190613ade565b6128fe9190613a9e565b8151811061290e5761290e613c1e565b6020908102919091018101516040805167ffffffffffffffff90951685529184019290925282015260600160405180910390a1508061294c81613bac565b915050612873565b508061295f81613bac565b91505061285d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526129ce908490612bfe565b505050565b600080825160411415612a0a5760208301516040840151606085015160001a6129fe87828585612ce3565b94509450505050612a3c565b825160401415612a345760208301516040840151612a29868383612dd0565b935093505050612a3c565b506000905060025b9250929050565b6000816004811115612a5757612a57613c08565b1415612a605750565b6001816004811115612a7457612a74613c08565b1415612ac25760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161090c565b6002816004811115612ad657612ad6613c08565b1415612b245760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161090c565b6003816004811115612b3857612b38613c08565b1415612b915760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161090c565b6004816004811115612ba557612ba5613c08565b14156122c55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161090c565b6000612c53826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612e099092919063ffffffff16565b8051909150156129ce5780806020019051810190612c7191906132a3565b6129ce5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161090c565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612d1a5750600090506003612dc7565b8460ff16601b14158015612d3257508460ff16601c14155b15612d435750600090506004612dc7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612d97573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612dc057600060019250925050612dc7565b9150600090505b94509492505050565b6000806001600160ff1b03831681612ded60ff86901c601b613a9e565b9050612dfb87828885612ce3565b935093505050935093915050565b6060612e188484600085612e22565b90505b9392505050565b606082471015612e9a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161090c565b6001600160a01b0385163b612ef15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161090c565b600080866001600160a01b03168587604051612f0d91906138c0565b60006040518083038185875af1925050503d8060008114612f4a576040519150601f19603f3d011682016040523d82523d6000602084013e612f4f565b606091505b5091509150612f5f828286612f6a565b979650505050505050565b60608315612f79575081612e1b565b825115612f895782518084602001fd5b8160405162461bcd60e51b815260040161090c9190613917565b8035612fae81613c4a565b919050565b600082601f830112612fc457600080fd5b81356020612fd9612fd483613a52565b613a21565b80838252828201915082860187848660051b8901011115612ff957600080fd5b6000805b8681101561303c57823567ffffffffffffffff81111561301b578283fd5b6130298b88838d010161310f565b8652509385019391850191600101612ffd565b509198975050505050505050565b600082601f83011261305b57600080fd5b6130636139b1565b80838560408601111561307557600080fd5b60005b6002811015613097578135845260209384019390910190600101613078565b509095945050505050565b600082601f8301126130b357600080fd5b813560206130c3612fd483613a52565b80838252828201915082860187848660051b89010111156130e357600080fd5b60005b85811015613102578135845292840192908401906001016130e6565b5090979650505050505050565b600082601f83011261312057600080fd5b813561312e612fd482613a76565b81815284602083860101111561314357600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561317257600080fd5b6040516040810181811067ffffffffffffffff8211171561319557613195613c34565b604052823581526020928301359281019290925250919050565b60008183036101008112156131c357600080fd5b6040516060810181811067ffffffffffffffff821117156131e6576131e6613c34565b6040529150816131f68585613160565b81526080603f198301121561320a57600080fd5b6132126139b1565b9150613221856040860161304a565b8252613230856080860161304a565b60208301528160208201526132488560c08601613160565b6040820152505092915050565b803563ffffffff81168114612fae57600080fd5b60006020828403121561327b57600080fd5b8135612e1b81613c4a565b60006020828403121561329857600080fd5b8135612e1b81613c5f565b6000602082840312156132b557600080fd5b8151612e1b81613c5f565b6000602082840312156132d257600080fd5b815167ffffffffffffffff8111156132e957600080fd5b8201601f810184136132fa57600080fd5b8051613308612fd482613a76565b81815285602083850101111561331d57600080fd5b61332e826020830160208601613b65565b95945050505050565b6000806040838503121561334a57600080fd5b823567ffffffffffffffff8082111561336257600080fd5b9084019060a0828703121561337657600080fd5b61337e6139da565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156133b257600080fd5b6133be8882860161310f565b60808301525093506133d591505060208401612fa3565b90509250929050565b600061016082840312156133f157600080fd5b6040516080810181811067ffffffffffffffff8211171561341457613414613c34565b60405261342184846131af565b81526134306101008401613255565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561346557600080fd5b823567ffffffffffffffff8082111561347d57600080fd5b908401906102a0828703121561349257600080fd5b61349a6139fd565b6134a487846131af565b815261010080840135602083015261012080850135848111156134c657600080fd5b6134d28a8288016130a2565b60408501525061014080860135858111156134ec57600080fd5b6134f88b8289016130a2565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561353557600080fd5b6135418e828c016130a2565b60e0890152506101e08901358881111561355a57600080fd5b6135668e828c016130a2565b87890152506135786102008a01612fa3565b858801526135896102208a01612fa3565b848801526102408901359550878611156135a257600080fd5b6135ae8d878b01612fb3565b83880152610260890135828801526102808901359550878611156135d157600080fd5b6135dd8d878b016130a2565b90870152509397505050506020860135925050808211156135fd57600080fd5b5061360a8582860161310f565b9150509250929050565b60006020828403121561362657600080fd5b5035919050565b6000806040838503121561364057600080fd5b50508035926020909101359150565b6000806040838503121561366257600080fd5b823591506133d560208401613255565b60006020828403121561368457600080fd5b612e1b82613255565b600080604083850312156136a057600080fd5b6136a983613255565b915060208301356136b981613c4a565b809150509250929050565b600080604083850312156136d757600080fd5b6136e083613255565b91506133d560208401613255565b60008060006060848603121561370357600080fd5b61370c84613255565b925061371a60208501613255565b9150604084013561372a81613c4a565b809150509250925092565b60006020828403121561374757600080fd5b815160ff81168114612e1b57600080fd5b8060005b600281101561377b57815184526020938401939091019060010161375c565b50505050565b600081518084526020808501945080840160005b838110156137b157815187529582019590820190600101613795565b509495945050505050565b600081518084526137d4816020860160208601613b65565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161381f816028850160208701613b65565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613865816028850160208801613b65565b83519083019061387c816028840160208801613b65565b016028019695505050505050565b815160009082906020808601845b838110156138b457815185529382019390820190600101613898565b50929695505050505050565b600082516138d2818460208701613b65565b9190910192915050565b602081526000612e1b6020830184613781565b602081016002831061391157634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612e1b60208301846137bc565b600061012061394483865180518252602090810151910152565b6020850151613957604085018251613758565b602001516139686080850182613758565b506040850151805160c08501526020015160e0840152610100830181905261332e81840185613781565b83815282602082015260606040820152600061332e60608301846137bc565b6040805190810167ffffffffffffffff811182821017156139d4576139d4613c34565b60405290565b60405160a0810167ffffffffffffffff811182821017156139d4576139d4613c34565b6040516101c0810167ffffffffffffffff811182821017156139d4576139d4613c34565b604051601f8201601f1916810167ffffffffffffffff81118282101715613a4a57613a4a613c34565b604052919050565b600067ffffffffffffffff821115613a6c57613a6c613c34565b5060051b60200190565b600067ffffffffffffffff821115613a9057613a90613c34565b50601f01601f191660200190565b60008219821115613ab157613ab1613bf2565b500190565b600063ffffffff808316818516808303821115613ad557613ad5613bf2565b01949350505050565b6000816000190483118215151615613af857613af8613bf2565b500290565b600063ffffffff80831681851681830481118215151615613b2057613b20613bf2565b02949350505050565b600082821015613b3b57613b3b613bf2565b500390565b600063ffffffff83811690831681811015613b5d57613b5d613bf2565b039392505050565b60005b83811015613b80578181015183820152602001613b68565b8381111561377b5750506000910152565b6000600019821415613ba557613ba5613bf2565b5060010190565b600063ffffffff80831681811415613bc657613bc6613bf2565b6001019392505050565b600082613bed57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146122c557600080fd5b80151581146122c557600080fdfea2646970667358221220ef11b38a6a3d88446544e4320524bb599158b07278ed46eadc3b88a5e715422564736f6c63430008070033";

type CommitmentPoolERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CommitmentPoolERC20";
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(
      _treeHeight,
      _token,
      overrides || {}
    ) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: "CommitmentPoolERC20";
  public readonly contractName: "CommitmentPoolERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
