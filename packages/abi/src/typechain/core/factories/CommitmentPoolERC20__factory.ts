/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorPublicKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'publicKey',
        type: 'uint256',
      },
    ],
    name: 'AuditorPublicKey',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'auditorPublicKey',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'id',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'publicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'note',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct CommitmentPool.AuditorNote[]',
        name: 'notes',
        type: 'tuple[]',
      },
    ],
    name: 'EncryptedAuditorNotes',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentQueuedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNullifierCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getQueuedCommitments',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'uint256',
            name: 'randomAuditingPublicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_publicKey',
        type: 'uint256',
      },
    ],
    name: 'updateAuditorPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb1790556000600781905560088190556009553480156200004757600080fd5b5060405162004618380380620046188339810160408190526200006a91620007cc565b6001600055808260ff81166200009357604051632c4f29b160e21b815260040160405180910390fd5b600c80546001600160a01b03191633179055600160ff82161b608052620000ba8162000103565b600b8190556000908152600a60205260409020805460ff1916600117905550601680546001600160a01b039092166001600160a01b0319909216919091179055506200081b9050565b600060ff82166200013557507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016957507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019d57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001d157507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff16600414156200020457507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023857507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026c57507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff1660071415620002a057507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002d457507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030857507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033c57507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200037057507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c1415620003a457507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d857507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040c57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200044057507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200047457507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a757507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004db57507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200050f57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200054357507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057757507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005ab57507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005df57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200061357507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064757507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067b57507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006af57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006e357507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071757507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074b57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200077f57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007b357507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007e057600080fd5b825160ff81168114620007f257600080fd5b60208401519092506001600160a01b03811681146200081057600080fd5b809150509250929050565b608051613dd362000845600039600081816103c8015281816111520152611a750152613dd36000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c80637cbf0ff611610186578063b3b75631116100e3578063deeff7cd11610097578063f2da1d4111610071578063f2da1d41146105bc578063f8f05388146105cf578063ffa89b88146105e257600080fd5b8063deeff7cd14610576578063e500f50414610589578063ec571c6a1461059157600080fd5b8063c2d41601116100c8578063c2d416011461054c578063c9230c5d14610566578063dd757c341461056e57600080fd5b8063b3b7563114610526578063c259e2e61461053957600080fd5b80639cc6b3541161013a578063a9b1d2961161011f578063a9b1d296146104f7578063b08892d01461050a578063b1c394221461051257600080fd5b80639cc6b354146104c1578063a6232a93146104d457600080fd5b8063866ac6581161016b578063866ac6581461049357806387780df91461049b5780639b0a6fea146104ae57600080fd5b80637cbf0ff61461046d5780637fa4b09c1461048057600080fd5b80633fe3347a1161023457806357060016116101e857806372082971116101cd578063720829711461043f57806378d60cd7146104525780637a5537441461046557600080fd5b8063570600161461040757806363bc7d321461042a57600080fd5b80634eb069f7116102195780634eb069f7146103ec578063555d75f0146103f75780635688881f146103ff57600080fd5b80633fe3347a146103b7578063484eb652146103c657600080fd5b8063115f574c1161028b578063176de7a811610270578063176de7a81461035c57806330f49cac146103715780633bb8d1b41461038457600080fd5b8063115f574c1461032e57806314a7737d1461034957600080fd5b806303db9874116102bc57806303db9874146102f557806306394c9b146103085780630c8867e61461031b57600080fd5b806301dbf19f146102d857806302d498f1146102e2575b600080fd5b6102e06105f2565b005b6102e06102f036600461332f565b610676565b6102e061030336600461332f565b6106c5565b6102e061031636600461332f565b610711565b6102e06103293660046136fa565b6107c2565b610336600581565b6040519081526020015b60405180910390f35b6102e06103573660046134ab565b610891565b610364610df4565b6040516103409190613a47565b6102e061037f36600461332f565b610e7a565b6103a76103923660046136e1565b60009081526005602052604090205460ff1690565b6040519015158152602001610340565b60006040516103409190613a1f565b7f0000000000000000000000000000000000000000000000000000000000000000610336565b60105460ff166103a7565b600754610336565b610336610f07565b6103a76104153660046136e1565b60009081526004602052604090205460ff1690565b610432610f19565b6040516103409190613a0c565b6102e061044d36600461351f565b610f96565b6102e0610460366004613404565b611a1c565b600954610336565b6102e061047b3660046136e1565b611b47565b6102e061048e3660046137bb565b611bc5565b610432611ca8565b6103366104a93660046136e1565b611d55565b6102e06104bc36600461373f565b611d93565b6102e06104cf36600461332f565b611e8b565b6103a76104e23660046136e1565b6000908152600a602052604090205460ff1690565b6102e061050536600461332f565b611ed7565b600d54610336565b6001546103a790600160a01b900460ff1681565b6102e0610534366004613353565b611f26565b6102e0610547366004613791565b611f92565b610554612036565b60405160ff9091168152602001610340565b6103646120b3565b6102e06120f8565b6102e061058436600461375a565b612170565b600854610336565b6001546105a4906001600160a01b031681565b6040516001600160a01b039091168152602001610340565b6103366105ca36600461371c565b6122b0565b6102e06105dd366004613353565b612339565b601054610100900460ff166103a7565b600c546001600160a01b0316331461061d576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261066c92900460ff161515815260200190565b60405180910390a1565b600c546001600160a01b031633146106a1576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600c546001600160a01b031633146106f0576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b600c546001600160a01b0316331461073c576040516327e1f1e560e01b815260040160405180910390fd5b600c546001600160a01b038281169116141561076b576040516336a1c33f60e01b815260040160405180910390fd5b600c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600c546001600160a01b031633146107ed576040516327e1f1e560e01b815260040160405180910390fd5b6005821061080e5760405163318c434560e21b815260040160405180910390fd5b806011836005811061082257610822613d4e565b0154141561084257604051624a706760e31b815260040160405180910390fd5b806011836005811061085657610856613d4e565b015560405181815282907f94adca83ce41447cfb8e07d1c9c4536a1b8afbff6c7c83c2d918214adc68102f9060200160405180910390a25050565b601054610100900460ff161580156108b95750336000908152600e602052604090205460ff16155b156108d7576040516321ce01f360e01b815260040160405180910390fd5b6040808201516000908152600a602052205460ff161561090a5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff161180610946575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610986576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b600854602082015161099e9063ffffffff1682613d00565b156109d9576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161097d565b60006109e98284602001516122b0565b90506000836020015163ffffffff1667ffffffffffffffff811115610a1057610a10613d64565b604051908082528060200260200182016040528015610a39578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610b37576000610a5e8287613bce565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610aab5760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610ac257610ac2613d4e565b602002602001018181525050806020015184610ade9190613bce565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610b2f90613cc1565b915050610a40565b50846020015163ffffffff1660076000828254610b549190613c59565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b8f9190613957565b6040516020818303038152906040528051906020012060001c610bb29190613d00565b905080866060015114610c08576040516314e8955b60e21b815260206004820152600860248201527f6c65616648617368000000000000000000000000000000000000000000000000604482015260640161097d565b60408051600480825260a0820190925260009160208201608080368337019050509050600b5481600081518110610c4157610c41613d4e565b602002602001018181525050866040015181600181518110610c6557610c65613d4e565b6020026020010181815250508181600281518110610c8557610c85613d4e565b6020026020010181815250508481600381518110610ca557610ca5613d4e565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610cfd91908690600401613a5a565b602060405180830381600087803b158015610d1757600080fd5b505af1158015610d2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4f9190613370565b905080610d9f576040516314e8955b60e21b815260206004820152600560248201527f70726f6f66000000000000000000000000000000000000000000000000000000604482015260640161097d565b876020015163ffffffff1660086000828254610dbb9190613bce565b9091555050604080890151600b8190556000908152600a60205220805460ff19166001179055610dea846123ad565b5050505050505050565b601654604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610e3957600080fd5b505afa158015610e4d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e75919081019061338d565b905090565b600c546001600160a01b03163314610ea5576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b6000600754600854610e759190613bce565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b6005811015610f905760118160058110610f5f57610f5f613d4e565b0154828281518110610f7357610f73613d4e565b602090810291909101015280610f8881613cc1565b915050610f43565b50919050565b610f9e6123c7565b6000610fae836040015151612421565b90506000610fc08460e0015151612421565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff1661103d576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e67746800000000000000000000000000000000000000000000604482015260640161097d565b8163ffffffff1684606001515114611098576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e67746800000000000000000000000000000000604482015260640161097d565b8063ffffffff1684610100015151146110f4576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e677468000000000000000000000000604482015260640161097d565b8063ffffffff168461016001515114611150576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e6774680000000000000000604482015260640161097d565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546111889190613bce565b6111929190613bce565b11156111b157604051633b5ccb4360e21b815260040160405180910390fd5b6111ba326124a1565b156111d857604051632e70c0b160e01b815260040160405180910390fd5b6111e68461012001516124a1565b1561120457604051632e70c0b160e01b815260040160405180910390fd5b611215600563ffffffff8416613c0e565b846101a00151511461123a57604051633acf48bb60e21b815260040160405180910390fd5b600061124585612540565b905061125181856126b7565b6001600160a01b031660001b8560800151146112b0576040516314e8955b60e21b815260206004820152600960248201527f7369676e61747572650000000000000000000000000000000000000000000000604482015260640161097d565b60006112bd846002613c2d565b63ffffffff16905060006112d2856002613c2d565b6112dd906004613be6565b63ffffffff16905060006112f2856002613c2d565b6113029063ffffffff1683613bce565b905060006005611313886002613be6565b63ffffffff166113239190613c0e565b61132e836002613bce565b6113389190613bce565b67ffffffffffffffff81111561135057611350613d64565b604051908082528060200260200182016040528015611379578160200160208202803683370190505b506020808b01516000908152600a909152604090205490915060ff166113cb576040516314e8955b60e21b815260040161097d906020808252600490820152631c9bdbdd60e21b604082015260600190565b8860200151816000815181106113e3576113e3613d4e565b602090810291909101015260006113fb886001613be6565b63ffffffff16905060005b8863ffffffff168110156115075760008b60400151828151811061142c5761142c613d4e565b6020908102919091018101516000818152600590925260409091205490915060ff1615611485576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8084611492846001613bce565b815181106114a2576114a2613d4e565b6020026020010181815250508b6060015182815181106114c4576114c4613d4e565b60200260200101518484846114d99190613bce565b815181106114e9576114e9613d4e565b602090810291909101015250806114ff81613cc1565b915050611406565b5060808a015182611519876001613bce565b8151811061152957611529613d4e565b602090810291909101015260a08a015182611545876002613bce565b8151811061155557611555613d4e565b602090810291909101015260c08a015182611571876003613bce565b8151811061158157611581613d4e565b6020908102919091010152600061159e63ffffffff891686613bce565b905060005b8863ffffffff1681101561171857600460008d60e0015183815181106115cb576115cb613d4e565b60209081029190910181015182528101919091526040016000205460ff16156116375760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e7400000000000000000000000000000000000000000000604482015260640161097d565b600d548c6101000151828151811061165157611651613d4e565b602002602001015110156116785760405163784f02bd60e11b815260040160405180910390fd5b8b60e00151818151811061168e5761168e613d4e565b60200260200101518487836116a39190613bce565b815181106116b3576116b3613d4e565b6020026020010181815250508b610100015181815181106116d6576116d6613d4e565b60200260200101518483836116eb9190613bce565b815181106116fb576116fb613d4e565b60209081029190910101528061171081613cc1565b9150506115a3565b506117248b84866126db565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c941764791611779918890600401613a5a565b602060405180830381600087803b15801561179357600080fd5b505af11580156117a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117cb9190613370565b90508061181b576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f66000000000000000000000000000000000000604482015260640161097d565b60005b8a63ffffffff168110156118ef576001600560008f60400151848151811061184857611848613d4e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600960008282546118889190613bce565b909155505060408d01518051829081106118a4576118a4613d4e565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806118e781613cc1565b91505061181e565b5060005b8963ffffffff168110156119c0576001600460008f60e00151848151811061191d5761191d613d4e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119ae8d60e00151828151811061196357611963613d4e565b60200260200101518e6101000151838151811061198257611982613d4e565b60200260200101518f610160015184815181106119a1576119a1613d4e565b60200260200101516128d2565b806119b881613cc1565b9150506118f3565b5060a08c0151156119de576119de8c61012001518d60a00151612971565b60c08c0151156119fb576119fb8c61014001518d60c00151612971565b611a048c612988565b50505050505050505050611a186001600055565b5050565b336000908152600f602052604090205460ff16611a4c5760405163f75e9fc760e01b815260040160405180910390fd5b600d5482606001511015611a735760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611aa49190613bce565b10611ac257604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611af85760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611b2f9291906128d2565b604082015115611a1857611a18818360400151612971565b600c546001600160a01b03163314611b72576040516327e1f1e560e01b815260040160405180910390fd5b80611bc0576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c757046656500000000000000000000000000000000000000604482015260640161097d565b600d55565b600c546001600160a01b03163314611bf0576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611c14576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611c3857604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b6060600060075467ffffffffffffffff811115611cc757611cc7613d64565b604051908082528060200260200182016040528015611cf0578160200160208202803683370190505b50905060005b600754811015610f9057600081600854611d109190613bce565b600081815260066020526040902054845191925090849084908110611d3757611d37613d4e565b60209081029190910101525080611d4d81613cc1565b915050611cf6565b600060058210611d785760405163318c434560e21b815260040160405180910390fd5b60118260058110611d8b57611d8b613d4e565b015492915050565b600c546001600160a01b03163314611dbe576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611de2576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611dfc57506104008163ffffffff16115b15611e37576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161097d565b611e42600182613c70565b811663ffffffff16600014611e6a576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600c546001600160a01b03163314611eb6576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600c546001600160a01b03163314611f02576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b600c546001600160a01b03163314611f51576040516327e1f1e560e01b815260040160405180910390fd5b6010805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610efc565b600c546001600160a01b03163314611fbd576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611fe1576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821661200557604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6016546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b15801561207b57600080fd5b505afa15801561208f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190613802565b601654604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610e3957600080fd5b600c546001600160a01b03163314612123576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161066c91600160a01b90910460ff161515815260200190565b600c546001600160a01b0316331461219b576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff16156121bf576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821615806121d957506104008263ffffffff16115b15612214576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b604482015260640161097d565b61221f600183613c70565b821663ffffffff16600014612247576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106122d65760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106122f95760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061231c5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061233257600183901c92505b5090919050565b600c546001600160a01b03163314612364576040516327e1f1e560e01b815260040160405180910390fd5b601080548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610efc90831515815260200190565b6016546123c4906001600160a01b03163383612b9d565b50565b6002600054141561241a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161097d565b6002600055565b600063ffffffff82111561249d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f3220626974730000000000000000000000000000000000000000000000000000606482015260840161097d565b5090565b600154600090600160a01b900460ff166124bd57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561250257600080fd5b505afa158015612516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253a9190613370565b92915050565b610160810151516000906003811061256b57604051633fb1945d60e11b815260040160405180910390fd5b6060816125bf576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612677565b8160011415612606578361012001518461014001518561016001516000815181106125ec576125ec613d4e565b60200260200101516040516020016125a9939291906138b5565b83610120015184610140015185610160015160008151811061262a5761262a613d4e565b602002602001015186610160015160018151811061264a5761264a613d4e565b602002602001015160405160200161266594939291906138fb565b60405160208183030381529060405290505b805160208201207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c90205b949350505050565b60008060006126c68585612c09565b915091506126d381612c4f565b509392505050565b6101808301516040805180820182526000808252602091820152815180830190925260ff83901c8083526001600160ff1b0390931690820152835190919084908490811061272b5761272b613d4e565b60200260200101818152505080602001518383600161274a9190613bce565b8151811061275a5761275a613d4e565b60209081029190910101526000612772836002613bce565b90506000612781600583613bce565b9050600061279160056002613c0e565b61279b9084613bce565b905060005b60058110156128675760006127fb601183600581106127c1576127c1613d4e565b01546040805180820182526000808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b80519091508861280b8488613bce565b8151811061281b5761281b613d4e565b60200260200101818152505080602001518883866128399190613bce565b8151811061284957612849613d4e565b6020908102919091010152508061285f81613cc1565b9150506127a0565b5060005b876101a0015151811015610dea57876101a00151818151811061289057612890613d4e565b60200260200101518782846128a59190613bce565b815181106128b5576128b5613d4e565b6020908102919091010152806128ca81613cc1565b91505061286b565b60006008546007546128e49190613bce565b604080518082018252868152602080820187815260008581526006909252928120915182559151600191820155600780549394509092909190612928908490613bce565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161296393929190613ac2565b60405180910390a250505050565b601654611a18906001600160a01b03168383612b9d565b6000600582604001515161299c9190613c0e565b905060008167ffffffffffffffff8111156129b9576129b9613d64565b604051908082528060200260200182016040528015612a1857816020015b612a056040518060600160405280600067ffffffffffffffff16815260200160008152602001600081525090565b8152602001906001900390816129d75790505b5090506000805b8460400151518163ffffffff161015612b5f5760005b60058163ffffffff161015612b4c578063ffffffff1660208363ffffffff1667ffffffffffffffff16901b17848481518110612a7357612a73613d4e565b602090810291909101015167ffffffffffffffff9091169052601163ffffffff821660058110612aa557612aa5613d4e565b0154848481518110612ab957612ab9613d4e565b60200260200101516020018181525050856101a001518163ffffffff1660058463ffffffff16612ae99190613c0e565b612af39190613bce565b81518110612b0357612b03613d4e565b6020026020010151848481518110612b1d57612b1d613d4e565b60209081029190910101516040015282612b3681613cc1565b9350508080612b4490613cdc565b915050612a35565b5080612b5781613cdc565b915050612a1f565b507f6af07ebcb33931abd348e785f70c6d259390cf799191f8c99124245b96e1a61382604051612b8f91906139a9565b60405180910390a150505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612c04908490612d9d565b505050565b600080825160411415612c405760208301516040840151606085015160001a612c3487828585612e85565b94509450505050612c48565b506000905060025b9250929050565b6000816004811115612c6357612c63613d38565b1415612c6c5750565b6001816004811115612c8057612c80613d38565b1415612cce5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161097d565b6002816004811115612ce257612ce2613d38565b1415612d305760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161097d565b6003816004811115612d4457612d44613d38565b14156123c45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161097d565b6000612df2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612f499092919063ffffffff16565b9050805160001480612e13575080806020019051810190612e139190613370565b612c045760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161097d565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612ebc5750600090506003612f40565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612f10573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612f3957600060019250925050612f40565b9150600090505b94509492505050565b60606126af848460008585600080866001600160a01b03168587604051612f70919061398d565b60006040518083038185875af1925050503d8060008114612fad576040519150601f19603f3d011682016040523d82523d6000602084013e612fb2565b606091505b5091509150612fc387838387612fce565b979650505050505050565b6060831561303a578251613033576001600160a01b0385163b6130335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161097d565b50816126af565b6126af838381511561304f5781518083602001fd5b8060405162461bcd60e51b815260040161097d9190613a47565b803561307481613d7a565b919050565b600082601f83011261308a57600080fd5b8135602061309f61309a83613b82565b613b51565b80838252828201915082860187848660051b89010111156130bf57600080fd5b6000805b8681101561310257823567ffffffffffffffff8111156130e1578283fd5b6130ef8b88838d01016131d5565b86525093850193918501916001016130c3565b509198975050505050505050565b600082601f83011261312157600080fd5b613129613ae1565b80838560408601111561313b57600080fd5b60005b600281101561315d57813584526020938401939091019060010161313e565b509095945050505050565b600082601f83011261317957600080fd5b8135602061318961309a83613b82565b80838252828201915082860187848660051b89010111156131a957600080fd5b60005b858110156131c8578135845292840192908401906001016131ac565b5090979650505050505050565b600082601f8301126131e657600080fd5b81356131f461309a82613ba6565b81815284602083860101111561320957600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561323857600080fd5b6040516040810181811067ffffffffffffffff8211171561325b5761325b613d64565b604052823581526020928301359281019290925250919050565b600081830361010081121561328957600080fd5b6040516060810181811067ffffffffffffffff821117156132ac576132ac613d64565b6040529150816132bc8585613226565b81526080603f19830112156132d057600080fd5b6132d8613ae1565b91506132e78560408601613110565b82526132f68560808601613110565b602083015281602082015261330e8560c08601613226565b6040820152505092915050565b803563ffffffff8116811461307457600080fd5b60006020828403121561334157600080fd5b813561334c81613d7a565b9392505050565b60006020828403121561336557600080fd5b813561334c81613d8f565b60006020828403121561338257600080fd5b815161334c81613d8f565b60006020828403121561339f57600080fd5b815167ffffffffffffffff8111156133b657600080fd5b8201601f810184136133c757600080fd5b80516133d561309a82613ba6565b8181528560208385010111156133ea57600080fd5b6133fb826020830160208601613c95565b95945050505050565b6000806040838503121561341757600080fd5b823567ffffffffffffffff8082111561342f57600080fd5b9084019060a0828703121561344357600080fd5b61344b613b0a565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561347f57600080fd5b61348b888286016131d5565b60808301525093506134a291505060208401613069565b90509250929050565b600061016082840312156134be57600080fd5b6040516080810181811067ffffffffffffffff821117156134e1576134e1613d64565b6040526134ee8484613275565b81526134fd610100840161331b565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561353257600080fd5b823567ffffffffffffffff8082111561354a57600080fd5b908401906102a0828703121561355f57600080fd5b613567613b2d565b6135718784613275565b8152610100808401356020830152610120808501358481111561359357600080fd5b61359f8a828801613168565b60408501525061014080860135858111156135b957600080fd5b6135c58b828901613168565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561360257600080fd5b61360e8e828c01613168565b60e0890152506101e08901358881111561362757600080fd5b6136338e828c01613168565b87890152506136456102008a01613069565b858801526136566102208a01613069565b8488015261024089013595508786111561366f57600080fd5b61367b8d878b01613079565b838801526102608901358288015261028089013595508786111561369e57600080fd5b6136aa8d878b01613168565b90870152509397505050506020860135925050808211156136ca57600080fd5b506136d7858286016131d5565b9150509250929050565b6000602082840312156136f357600080fd5b5035919050565b6000806040838503121561370d57600080fd5b50508035926020909101359150565b6000806040838503121561372f57600080fd5b823591506134a26020840161331b565b60006020828403121561375157600080fd5b61334c8261331b565b6000806040838503121561376d57600080fd5b6137768361331b565b9150602083013561378681613d7a565b809150509250929050565b600080604083850312156137a457600080fd5b6137ad8361331b565b91506134a26020840161331b565b6000806000606084860312156137d057600080fd5b6137d98461331b565b92506137e76020850161331b565b915060408401356137f781613d7a565b809150509250925092565b60006020828403121561381457600080fd5b815160ff8116811461334c57600080fd5b8060005b6002811015613848578151845260209384019390910190600101613829565b50505050565b600081518084526020808501945080840160005b8381101561387e57815187529582019590820190600101613862565b509495945050505050565b600081518084526138a1816020860160208601613c95565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b1660148401525082516138ec816028850160208701613c95565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613932816028850160208801613c95565b835190830190613949816028840160208801613c95565b016028019695505050505050565b815160009082906020808601845b8381101561398157815185529382019390820190600101613965565b50929695505050505050565b6000825161399f818460208701613c95565b9190910192915050565b602080825282518282018190526000919060409081850190868401855b828110156139ff578151805167ffffffffffffffff168552868101518786015285015185850152606090930192908501906001016139c6565b5091979650505050505050565b60208152600061334c602083018461384e565b6020810160028310613a4157634e487b7160e01b600052602160045260246000fd5b91905290565b60208152600061334c6020830184613889565b6000610120613a7483865180518252602090810151910152565b6020850151613a87604085018251613825565b60200151613a986080850182613825565b506040850151805160c08501526020015160e084015261010083018190526133fb8184018561384e565b8381528260208201526060604082015260006133fb6060830184613889565b6040805190810167ffffffffffffffff81118282101715613b0457613b04613d64565b60405290565b60405160a0810167ffffffffffffffff81118282101715613b0457613b04613d64565b6040516101c0810167ffffffffffffffff81118282101715613b0457613b04613d64565b604051601f8201601f1916810167ffffffffffffffff81118282101715613b7a57613b7a613d64565b604052919050565b600067ffffffffffffffff821115613b9c57613b9c613d64565b5060051b60200190565b600067ffffffffffffffff821115613bc057613bc0613d64565b50601f01601f191660200190565b60008219821115613be157613be1613d22565b500190565b600063ffffffff808316818516808303821115613c0557613c05613d22565b01949350505050565b6000816000190483118215151615613c2857613c28613d22565b500290565b600063ffffffff80831681851681830481118215151615613c5057613c50613d22565b02949350505050565b600082821015613c6b57613c6b613d22565b500390565b600063ffffffff83811690831681811015613c8d57613c8d613d22565b039392505050565b60005b83811015613cb0578181015183820152602001613c98565b838111156138485750506000910152565b6000600019821415613cd557613cd5613d22565b5060010190565b600063ffffffff80831681811415613cf657613cf6613d22565b6001019392505050565b600082613d1d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146123c457600080fd5b80151581146123c457600080fdfea26469706673582212207eba18e0be029b4411598bb123e27a9780cc72777798b830f61a643bba2c965a64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
