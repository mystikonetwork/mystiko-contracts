/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolERC20, CommitmentPoolERC20Interface } from '../CommitmentPoolERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorPublicKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'publicKey',
        type: 'uint256',
      },
    ],
    name: 'AuditorPublicKey',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'auditorPublicKey',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'id',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'publicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'note',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct CommitmentPool.AuditorNote[]',
        name: 'notes',
        type: 'tuple[]',
      },
    ],
    name: 'EncryptedAuditorNotes',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'uint256',
            name: 'randomAuditingPublicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_publicKey',
        type: 'uint256',
      },
    ],
    name: 'updateAuditorPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b5060405162004633380380620046338339810160408190526200006591620007c7565b6001600055808260ff81166200008e57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b581620000fe565b600a8190556000908152600960205260409020805460ff1916600117905550601580546001600160a01b039092166001600160a01b031990921691909117905550620008169050565b600060ff82166200013057507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200016457507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200019857507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001cc57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001ff57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200023357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200026757507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200029b57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002cf57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff16600914156200030357507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200033757507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200036b57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200039f57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003d357507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e14156200040757507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200043b57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200046f57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff1660111415620004a257507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004d657507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff16601314156200050a57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200053e57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200057257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff1660161415620005a657507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005da57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff16601814156200060e57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200064257507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200067657507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b1415620006aa57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006de57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d14156200071257507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200074657507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200077a57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff1660201415620007ae57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b60008060408385031215620007db57600080fd5b825160ff81168114620007ed57600080fd5b60208401519092506001600160a01b03811681146200080b57600080fd5b809150509250929050565b608051613df3620008406000396000818161036c015281816111150152611a1a0152613df36000f3fe608060405234801561001057600080fd5b50600436106102775760003560e01c80637fa4b09c11610160578063c259e2e6116100d8578063e500f5041161008c578063f2da1d4111610071578063f2da1d4114610540578063f8f0538814610553578063ffa89b881461056657600080fd5b8063e500f5041461050d578063ec571c6a1461051557600080fd5b8063c9230c5d116100bd578063c9230c5d146104ea578063dd757c34146104f2578063deeff7cd146104fa57600080fd5b8063c259e2e6146104bd578063c2d41601146104d057600080fd5b8063a6232a931161012f578063b08892d011610114578063b08892d01461048e578063b1c3942214610496578063b3b75631146104aa57600080fd5b8063a6232a9314610458578063a9b1d2961461047b57600080fd5b80637fa4b09c1461040c57806387780df91461041f5780639b0a6fea146104325780639cc6b3541461044557600080fd5b80633bb8d1b4116101f357806357060016116101c257806372082971116101a757806372082971146103d357806378d60cd7146103e65780637cbf0ff6146103f957600080fd5b8063570600161461039b57806363bc7d32146103be57600080fd5b80633bb8d1b4146103285780633fe3347a1461035b578063484eb6521461036a5780634eb069f71461039057600080fd5b80630c8867e61161024a57806314a7737d1161022f57806314a7737d146102ed578063176de7a81461030057806330f49cac1461031557600080fd5b80630c8867e6146102bf578063115f574c146102d257600080fd5b806301dbf19f1461027c57806302d498f11461028657806303db98741461029957806306394c9b146102ac575b600080fd5b610284610576565b005b610284610294366004613356565b6105fa565b6102846102a7366004613356565b610649565b6102846102ba366004613356565b610695565b6102846102cd36600461371a565b610746565b6102da600581565b6040519081526020015b60405180910390f35b6102846102fb3660046134cb565b610815565b610308610d78565b6040516102e49190613a67565b610284610323366004613356565b610dfe565b61034b610336366004613701565b60009081526005602052604090205460ff1690565b60405190151581526020016102e4565b60006040516102e49190613a3f565b7f00000000000000000000000000000000000000000000000000000000000000006102da565b600f5460ff1661034b565b61034b6103a9366004613701565b60009081526004602052604090205460ff1690565b6103c6610e8b565b6040516102e49190613a2c565b6102846103e136600461353f565b610f08565b6102846103f4366004613424565b6119c1565b610284610407366004613701565b611af0565b61028461041a3660046137db565b611b6e565b6102da61042d366004613701565b611c51565b61028461044036600461375f565b611c8f565b610284610453366004613356565b611d87565b61034b610466366004613701565b60009081526009602052604090205460ff1690565b610284610489366004613356565b611dd3565b600c546102da565b60015461034b90600160a01b900460ff1681565b6102846104b8366004613373565b611e22565b6102846104cb3660046137b1565b611e8e565b6104d8611f32565b60405160ff90911681526020016102e4565b610308611faf565b610284611ff4565b61028461050836600461377a565b61206c565b6008546102da565b600154610528906001600160a01b031681565b6040516001600160a01b0390911681526020016102e4565b6102da61054e36600461373c565b6121ac565b610284610561366004613373565b612235565b600f54610100900460ff1661034b565b600b546001600160a01b031633146105a1576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926105f092900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610625576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b03163314610674576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146106c0576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b03828116911614156106ef576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600b546001600160a01b03163314610771576040516327e1f1e560e01b815260040160405180910390fd5b600582106107925760405163318c434560e21b815260040160405180910390fd5b80601083600581106107a6576107a6613d6e565b015414156107c657604051624a706760e31b815260040160405180910390fd5b80601083600581106107da576107da613d6e565b015560405181815282907f94adca83ce41447cfb8e07d1c9c4536a1b8afbff6c7c83c2d918214adc68102f9060200160405180910390a25050565b600f54610100900460ff1615801561083d5750336000908152600d602052604090205460ff16155b1561085b576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff161561088e5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806108ca575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b1561090a576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b60085460208201516109229063ffffffff1682613d20565b1561095d576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610901565b600061096d8284602001516121ac565b90506000836020015163ffffffff1667ffffffffffffffff81111561099457610994613d84565b6040519080825280602002602001820160405280156109bd578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610abb5760006109e28287613bee565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610a2f5760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610a4657610a46613d6e565b602002602001018181525050806020015184610a629190613bee565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610ab390613ce1565b9150506109c4565b50846020015163ffffffff1660076000828254610ad89190613c79565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610b139190613977565b6040516020818303038152906040528051906020012060001c610b369190613d20565b905080866060015114610b8c576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610901565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610bc557610bc5613d6e565b602002602001018181525050866040015181600181518110610be957610be9613d6e565b6020026020010181815250508181600281518110610c0957610c09613d6e565b6020026020010181815250508481600381518110610c2957610c29613d6e565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610c8191908690600401613a7a565b602060405180830381600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd39190613390565b905080610d23576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610901565b876020015163ffffffff1660086000828254610d3f9190613bee565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610d6e846122a9565b5050505050505050565b601554604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301926000929190829003018186803b158015610dbd57600080fd5b505afa158015610dd1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610df991908101906133ad565b905090565b600b546001600160a01b03163314610e29576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b6005811015610f025760108160058110610ed157610ed1613d6e565b0154828281518110610ee557610ee5613d6e565b602090810291909101015280610efa81613ce1565b915050610eb5565b50919050565b60026000541415610f5b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610901565b60026000908155604083015151610f71906122c3565b90506000610f838460e00151516122c3565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16611000576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610901565b8163ffffffff168460600151511461105b576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610901565b8063ffffffff1684610100015151146110b7576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610901565b8063ffffffff168461016001515114611113576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610901565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660075460085461114b9190613bee565b6111559190613bee565b111561117457604051633b5ccb4360e21b815260040160405180910390fd5b61117d32612343565b1561119b57604051632e70c0b160e01b815260040160405180910390fd5b6111a9846101200151612343565b156111c757604051632e70c0b160e01b815260040160405180910390fd5b6111d8600563ffffffff8416613c2e565b846101a0015151146111fd57604051633acf48bb60e21b815260040160405180910390fd5b6000611208856123e2565b9050611214818561256e565b6001600160a01b031660001b856080015114611273576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610901565b6000611280846002613c4d565b63ffffffff1690506000611295856002613c4d565b6112a0906004613c06565b63ffffffff16905060006112b5856002613c4d565b6112c59063ffffffff1683613bee565b9050600060056112d6886002613c06565b63ffffffff166112e69190613c2e565b6112f1836002613bee565b6112fb9190613bee565b67ffffffffffffffff81111561131357611313613d84565b60405190808252806020026020018201604052801561133c578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff1661138e576040516314e8955b60e21b8152600401610901906020808252600490820152631c9bdbdd60e21b604082015260600190565b8860200151816000815181106113a6576113a6613d6e565b602090810291909101015260006113be886001613c06565b63ffffffff16905060005b8863ffffffff168110156114ca5760008b6040015182815181106113ef576113ef613d6e565b6020908102919091018101516000818152600590925260409091205490915060ff1615611448576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8084611455846001613bee565b8151811061146557611465613d6e565b6020026020010181815250508b60600151828151811061148757611487613d6e565b602002602001015184848461149c9190613bee565b815181106114ac576114ac613d6e565b602090810291909101015250806114c281613ce1565b9150506113c9565b5060808a0151826114dc876001613bee565b815181106114ec576114ec613d6e565b602090810291909101015260a08a015182611508876002613bee565b8151811061151857611518613d6e565b602090810291909101015260c08a015182611534876003613bee565b8151811061154457611544613d6e565b6020908102919091010152600061156163ffffffff891686613bee565b905060005b8863ffffffff168110156116db57600460008d60e00151838151811061158e5761158e613d6e565b60209081029190910181015182528101919091526040016000205460ff16156115fa5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610901565b600c548c6101000151828151811061161457611614613d6e565b6020026020010151101561163b5760405163784f02bd60e11b815260040160405180910390fd5b8b60e00151818151811061165157611651613d6e565b60200260200101518487836116669190613bee565b8151811061167657611676613d6e565b6020026020010181815250508b6101000151818151811061169957611699613d6e565b60200260200101518483836116ae9190613bee565b815181106116be576116be613d6e565b6020908102919091010152806116d381613ce1565b915050611566565b506116e78b8486612592565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c94176479161173c918890600401613a7a565b602060405180830381600087803b15801561175657600080fd5b505af115801561176a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178e9190613390565b9050806117de576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610901565b60005b8a63ffffffff16811015611899576001600560008f60400151848151811061180b5761180b613d6e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c60400151818151811061184e5761184e613d6e565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061189181613ce1565b9150506117e1565b5060005b8963ffffffff1681101561196a576001600460008f60e0015184815181106118c7576118c7613d6e565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055506119588d60e00151828151811061190d5761190d613d6e565b60200260200101518e6101000151838151811061192c5761192c613d6e565b60200260200101518f6101600151848151811061194b5761194b613d6e565b6020026020010151612789565b8061196281613ce1565b91505061189d565b5060a08c015115611988576119888c61012001518d60a00151612828565b60c08c0151156119a5576119a58c61014001518d60c00151612828565b6119ae8c61283f565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff166119f15760405163f75e9fc760e01b815260040160405180910390fd5b600c5482606001511015611a185760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611a499190613bee565b10611a6757604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611a9d5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611ad4929190612789565b604082015115611aec57611aec818360400151612828565b5050565b600b546001600160a01b03163314611b1b576040516327e1f1e560e01b815260040160405180910390fd5b80611b69576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610901565b600c55565b600b546001600160a01b03163314611b99576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611bbd576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611be157604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600060058210611c745760405163318c434560e21b815260040160405180910390fd5b60108260058110611c8757611c87613d6e565b015492915050565b600b546001600160a01b03163314611cba576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611cde576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611cf857506104008163ffffffff16115b15611d33576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610901565b611d3e600182613c90565b811663ffffffff16600014611d66576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611db2576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611dfe576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611e4d576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610e80565b600b546001600160a01b03163314611eb9576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611edd576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611f0157604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b6015546040805163313ce56760e01b815290516000926001600160a01b03169163313ce567916004808301926020929190829003018186803b158015611f7757600080fd5b505afa158015611f8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df99190613822565b601554604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301926000929190829003018186803b158015610dbd57600080fd5b600b546001600160a01b0316331461201f576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916105f091600160a01b90910460ff161515815260200190565b600b546001600160a01b03163314612097576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156120bb576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821615806120d557506104008263ffffffff16115b15612110576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610901565b61211b600183613c90565b821663ffffffff16600014612143576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106121d25760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106121f55760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106122185760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061222e57600183901c92505b5090919050565b600b546001600160a01b03163314612260576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610e8090831515815260200190565b6015546122c0906001600160a01b03163383612a54565b50565b600063ffffffff82111561233f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610901565b5090565b600154600090600160a01b900460ff1661235f57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156123a457600080fd5b505afa1580156123b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123dc9190613390565b92915050565b610160810151516000906003811061240d57604051633fb1945d60e11b815260040160405180910390fd5b606081612461576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612519565b81600114156124a85783610120015184610140015185610160015160008151811061248e5761248e613d6e565b602002602001015160405160200161244b939291906138d5565b8361012001518461014001518561016001516000815181106124cc576124cc613d6e565b60200260200101518661016001516001815181106124ec576124ec613d6e565b6020026020010151604051602001612507949392919061391b565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b600080600061257d8585612ac0565b9150915061258a81612b30565b509392505050565b6101808301516040805180820182526000808252602091820152815180830190925260ff83901c8083526001600160ff1b039093169082015283519091908490849081106125e2576125e2613d6e565b6020026020010181815250508060200151838360016126019190613bee565b8151811061261157612611613d6e565b60209081029190910101526000612629836002613bee565b90506000612638600583613bee565b9050600061264860056002613c2e565b6126529084613bee565b905060005b600581101561271e5760006126b26010836005811061267857612678613d6e565b01546040805180820182526000808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b8051909150886126c28488613bee565b815181106126d2576126d2613d6e565b60200260200101818152505080602001518883866126f09190613bee565b8151811061270057612700613d6e565b6020908102919091010152508061271681613ce1565b915050612657565b5060005b876101a0015151811015610d6e57876101a00151818151811061274757612747613d6e565b602002602001015187828461275c9190613bee565b8151811061276c5761276c613d6e565b60209081029190910101528061278181613ce1565b915050612722565b600060085460075461279b9190613bee565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906127df908490613bee565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf984838560405161281a93929190613ae2565b60405180910390a250505050565b601554611aec906001600160a01b03168383612a54565b600060058260400151516128539190613c2e565b905060008167ffffffffffffffff81111561287057612870613d84565b6040519080825280602002602001820160405280156128cf57816020015b6128bc6040518060600160405280600067ffffffffffffffff16815260200160008152602001600081525090565b81526020019060019003908161288e5790505b5090506000805b8460400151518163ffffffff161015612a165760005b60058163ffffffff161015612a03578063ffffffff1660208363ffffffff1667ffffffffffffffff16901b1784848151811061292a5761292a613d6e565b602090810291909101015167ffffffffffffffff9091169052601063ffffffff82166005811061295c5761295c613d6e565b015484848151811061297057612970613d6e565b60200260200101516020018181525050856101a001518163ffffffff1660058463ffffffff166129a09190613c2e565b6129aa9190613bee565b815181106129ba576129ba613d6e565b60200260200101518484815181106129d4576129d4613d6e565b602090810291909101015160400152826129ed81613ce1565b93505080806129fb90613cfc565b9150506128ec565b5080612a0e81613cfc565b9150506128d6565b507f6af07ebcb33931abd348e785f70c6d259390cf799191f8c99124245b96e1a61382604051612a4691906139c9565b60405180910390a150505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052612abb908490612ceb565b505050565b600080825160411415612af75760208301516040840151606085015160001a612aeb87828585612dd0565b94509450505050612b29565b825160401415612b215760208301516040840151612b16868383612ebd565b935093505050612b29565b506000905060025b9250929050565b6000816004811115612b4457612b44613d58565b1415612b4d5750565b6001816004811115612b6157612b61613d58565b1415612baf5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610901565b6002816004811115612bc357612bc3613d58565b1415612c115760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610901565b6003816004811115612c2557612c25613d58565b1415612c7e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610901565b6004816004811115612c9257612c92613d58565b14156122c05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610901565b6000612d40826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ef69092919063ffffffff16565b805190915015612abb5780806020019051810190612d5e9190613390565b612abb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610901565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612e075750600090506003612eb4565b8460ff16601b14158015612e1f57508460ff16601c14155b15612e305750600090506004612eb4565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612e84573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612ead57600060019250925050612eb4565b9150600090505b94509492505050565b6000806001600160ff1b03831681612eda60ff86901c601b613bee565b9050612ee887828885612dd0565b935093505050935093915050565b6060612f058484600085612f0f565b90505b9392505050565b606082471015612f875760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610901565b6001600160a01b0385163b612fde5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610901565b600080866001600160a01b03168587604051612ffa91906139ad565b60006040518083038185875af1925050503d8060008114613037576040519150601f19603f3d011682016040523d82523d6000602084013e61303c565b606091505b509150915061304c828286613057565b979650505050505050565b60608315613066575081612f08565b8251156130765782518084602001fd5b8160405162461bcd60e51b81526004016109019190613a67565b803561309b81613d9a565b919050565b600082601f8301126130b157600080fd5b813560206130c66130c183613ba2565b613b71565b80838252828201915082860187848660051b89010111156130e657600080fd5b6000805b8681101561312957823567ffffffffffffffff811115613108578283fd5b6131168b88838d01016131fc565b86525093850193918501916001016130ea565b509198975050505050505050565b600082601f83011261314857600080fd5b613150613b01565b80838560408601111561316257600080fd5b60005b6002811015613184578135845260209384019390910190600101613165565b509095945050505050565b600082601f8301126131a057600080fd5b813560206131b06130c183613ba2565b80838252828201915082860187848660051b89010111156131d057600080fd5b60005b858110156131ef578135845292840192908401906001016131d3565b5090979650505050505050565b600082601f83011261320d57600080fd5b813561321b6130c182613bc6565b81815284602083860101111561323057600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561325f57600080fd5b6040516040810181811067ffffffffffffffff8211171561328257613282613d84565b604052823581526020928301359281019290925250919050565b60008183036101008112156132b057600080fd5b6040516060810181811067ffffffffffffffff821117156132d3576132d3613d84565b6040529150816132e3858561324d565b81526080603f19830112156132f757600080fd5b6132ff613b01565b915061330e8560408601613137565b825261331d8560808601613137565b60208301528160208201526133358560c0860161324d565b6040820152505092915050565b803563ffffffff8116811461309b57600080fd5b60006020828403121561336857600080fd5b8135612f0881613d9a565b60006020828403121561338557600080fd5b8135612f0881613daf565b6000602082840312156133a257600080fd5b8151612f0881613daf565b6000602082840312156133bf57600080fd5b815167ffffffffffffffff8111156133d657600080fd5b8201601f810184136133e757600080fd5b80516133f56130c182613bc6565b81815285602083850101111561340a57600080fd5b61341b826020830160208601613cb5565b95945050505050565b6000806040838503121561343757600080fd5b823567ffffffffffffffff8082111561344f57600080fd5b9084019060a0828703121561346357600080fd5b61346b613b2a565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561349f57600080fd5b6134ab888286016131fc565b60808301525093506134c291505060208401613090565b90509250929050565b600061016082840312156134de57600080fd5b6040516080810181811067ffffffffffffffff8211171561350157613501613d84565b60405261350e848461329c565b815261351d6101008401613342565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561355257600080fd5b823567ffffffffffffffff8082111561356a57600080fd5b908401906102a0828703121561357f57600080fd5b613587613b4d565b613591878461329c565b815261010080840135602083015261012080850135848111156135b357600080fd5b6135bf8a82880161318f565b60408501525061014080860135858111156135d957600080fd5b6135e58b82890161318f565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561362257600080fd5b61362e8e828c0161318f565b60e0890152506101e08901358881111561364757600080fd5b6136538e828c0161318f565b87890152506136656102008a01613090565b858801526136766102208a01613090565b8488015261024089013595508786111561368f57600080fd5b61369b8d878b016130a0565b83880152610260890135828801526102808901359550878611156136be57600080fd5b6136ca8d878b0161318f565b90870152509397505050506020860135925050808211156136ea57600080fd5b506136f7858286016131fc565b9150509250929050565b60006020828403121561371357600080fd5b5035919050565b6000806040838503121561372d57600080fd5b50508035926020909101359150565b6000806040838503121561374f57600080fd5b823591506134c260208401613342565b60006020828403121561377157600080fd5b612f0882613342565b6000806040838503121561378d57600080fd5b61379683613342565b915060208301356137a681613d9a565b809150509250929050565b600080604083850312156137c457600080fd5b6137cd83613342565b91506134c260208401613342565b6000806000606084860312156137f057600080fd5b6137f984613342565b925061380760208501613342565b9150604084013561381781613d9a565b809150509250925092565b60006020828403121561383457600080fd5b815160ff81168114612f0857600080fd5b8060005b6002811015613868578151845260209384019390910190600101613849565b50505050565b600081518084526020808501945080840160005b8381101561389e57815187529582019590820190600101613882565b509495945050505050565b600081518084526138c1816020860160208601613cb5565b601f01601f19169290920160200192915050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161390c816028850160208701613cb5565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613952816028850160208801613cb5565b835190830190613969816028840160208801613cb5565b016028019695505050505050565b815160009082906020808601845b838110156139a157815185529382019390820190600101613985565b50929695505050505050565b600082516139bf818460208701613cb5565b9190910192915050565b602080825282518282018190526000919060409081850190868401855b82811015613a1f578151805167ffffffffffffffff168552868101518786015285015185850152606090930192908501906001016139e6565b5091979650505050505050565b602081526000612f08602083018461386e565b6020810160028310613a6157634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000612f0860208301846138a9565b6000610120613a9483865180518252602090810151910152565b6020850151613aa7604085018251613845565b60200151613ab86080850182613845565b506040850151805160c08501526020015160e0840152610100830181905261341b8184018561386e565b83815282602082015260606040820152600061341b60608301846138a9565b6040805190810167ffffffffffffffff81118282101715613b2457613b24613d84565b60405290565b60405160a0810167ffffffffffffffff81118282101715613b2457613b24613d84565b6040516101c0810167ffffffffffffffff81118282101715613b2457613b24613d84565b604051601f8201601f1916810167ffffffffffffffff81118282101715613b9a57613b9a613d84565b604052919050565b600067ffffffffffffffff821115613bbc57613bbc613d84565b5060051b60200190565b600067ffffffffffffffff821115613be057613be0613d84565b50601f01601f191660200190565b60008219821115613c0157613c01613d42565b500190565b600063ffffffff808316818516808303821115613c2557613c25613d42565b01949350505050565b6000816000190483118215151615613c4857613c48613d42565b500290565b600063ffffffff80831681851681830481118215151615613c7057613c70613d42565b02949350505050565b600082821015613c8b57613c8b613d42565b500390565b600063ffffffff83811690831681811015613cad57613cad613d42565b039392505050565b60005b83811015613cd0578181015183820152602001613cb8565b838111156138685750506000910152565b6000600019821415613cf557613cf5613d42565b5060010190565b600063ffffffff80831681811415613d1657613d16613d42565b6001019392505050565b600082613d3d57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146122c057600080fd5b80151581146122c057600080fdfea26469706673582212200ce268fdc65306c1b6ab92beae651d30a58cd590f6f6d2fc0efd870dd4082aaa64736f6c63430008070033';

type CommitmentPoolERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolERC20__factory extends ContractFactory {
  constructor(...args: CommitmentPoolERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolERC20';
  }

  deploy(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolERC20> {
    return super.deploy(_treeHeight, _token, overrides || {}) as Promise<CommitmentPoolERC20>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _token, overrides || {});
  }
  attach(address: string): CommitmentPoolERC20 {
    return super.attach(address) as CommitmentPoolERC20;
  }
  connect(signer: Signer): CommitmentPoolERC20__factory {
    return super.connect(signer) as CommitmentPoolERC20__factory;
  }
  static readonly contractName: 'CommitmentPoolERC20';
  public readonly contractName: 'CommitmentPoolERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolERC20Interface {
    return new utils.Interface(_abi) as CommitmentPoolERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolERC20 {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolERC20;
  }
}
