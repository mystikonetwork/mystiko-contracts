/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockAxelarGasService, MockAxelarGasServiceInterface } from '../MockAxelarGasService';

const _abi = [
  {
    inputs: [],
    name: 'NothingReceived',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'collectFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractId',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'refund',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b50610ec3806100206000396000f3fe6080604052600436106100705760003560e01c8063c62c20021161004e578063c62c2002146100ea578063da854d75146100fd578063edb6b3a51461011d578063fd09e3bd1461013d57600080fd5b80630c93e3bb146100755780638291286c1461008a57806382ad6f35146100ca575b600080fd5b6100886100833660046106d5565b61015d565b005b34801561009657600080fd5b507ffaa2f015f2ce5aee225904728de2def86eb8837491efd21f1a04fc20d8e923f660405190815260200160405180910390f35b3480156100d657600080fd5b506100886100e5366004610795565b6101eb565b6100886100f83660046107d6565b610245565b34801561010957600080fd5b506100886101183660046108c9565b6102dc565b34801561012957600080fd5b506100886101383660046109f4565b6103e8565b34801561014957600080fd5b50610088610158366004610b12565b61046a565b3460000361017e5760405163b5c74a2760e01b815260040160405180910390fd5b828260405161018e929190610bea565b6040518091039020886001600160a01b03167f617332c1832058df6ee45fcbdf471251474c9945a8e5d229287a21a5f67ccf0a8989898934886040516101d996959493929190610c23565b60405180910390a35050505050505050565b6001600160a01b038216610235576040516001600160a01b0384169082156108fc029083906000818181858888f1935050505015801561022f573d6000803e3d6000fd5b50505050565b6102408284836104e6565b505050565b346000036102665760405163b5c74a2760e01b815260040160405180910390fd5b8585604051610276929190610bea565b60405180910390208b6001600160a01b03167f999d431b58761213cf53af96262b67a069cbd963499fd8effd1e21556217b8418c8c8c8c8a8a8a348b6040516102c799989796959493929190610c6d565b60405180910390a35050505050505050505050565b60005b8181101561022f5760008383838181106102fb576102fb610cd4565b90506020020160208101906103109190610cea565b90506001600160a01b03811661035b576040516001600160a01b038616904780156108fc02916000818181858888f19350505050158015610355573d6000803e3d6000fd5b506103d5565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c69190610d0e565b90506103d38287836104e6565b505b50806103e081610d27565b9150506102df565b6103f383338461062b565b8686604051610403929190610bea565b60405180910390208c6001600160a01b03167f8875f9764f28fa82d3e7ff1b80bd5c8f665e1f42fcd8c2faebc7c400a4ba1bbd8d8d8d8d8b8b8b8b8b60405161045499989796959493929190610d72565b60405180910390a3505050505050505050505050565b61047583338461062b565b8484604051610485929190610bea565b60405180910390208a6001600160a01b03167f99206760f0be19dd093729bd35e5924daff5e217bcedc5223ed067b60008cf8a8b8b8b8b8989896040516104d29796959493929190610dfb565b60405180910390a350505050505050505050565b6040516001600160a01b03838116602483015260448201839052600091829186169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516105809190610e4f565b6000604051808303816000865af19150503d80600081146105bd576040519150601f19603f3d011682016040523d82523d6000602084013e6105c2565b606091505b509150915060008280156105ee5750815115806105ee5750818060200190518101906105ee9190610e6b565b905080158061060557506001600160a01b0386163b155b15610623576040516312171d8360e31b815260040160405180910390fd5b505050505050565b6040516001600160a01b0383811660248301523060448301526064820183905260009182918616906323b872dd60e01b90608401610515565b6001600160a01b038116811461067957600080fd5b50565b803561068781610664565b919050565b60008083601f84011261069e57600080fd5b50813567ffffffffffffffff8111156106b657600080fd5b6020830191508360208285010111156106ce57600080fd5b9250929050565b60008060008060008060008060a0898b0312156106f157600080fd5b88356106fc81610664565b9750602089013567ffffffffffffffff8082111561071957600080fd5b6107258c838d0161068c565b909950975060408b013591508082111561073e57600080fd5b61074a8c838d0161068c565b909750955060608b013591508082111561076357600080fd5b506107708b828c0161068c565b909450925050608089013561078481610664565b809150509295985092959890939650565b6000806000606084860312156107aa57600080fd5b83356107b581610664565b925060208401356107c581610664565b929592945050506040919091013590565b600080600080600080600080600080600060e08c8e0312156107f757600080fd5b6108008c61067c565b9a5067ffffffffffffffff8060208e0135111561081c57600080fd5b61082c8e60208f01358f0161068c565b909b50995060408d013581101561084257600080fd5b6108528e60408f01358f0161068c565b909950975060608d013581101561086857600080fd5b6108788e60608f01358f0161068c565b909750955060808d013581101561088e57600080fd5b5061089f8d60808e01358e0161068c565b909450925060a08c013591506108b760c08d0161067c565b90509295989b509295989b9093969950565b6000806000604084860312156108de57600080fd5b83356108e981610664565b9250602084013567ffffffffffffffff8082111561090657600080fd5b818601915086601f83011261091a57600080fd5b81358181111561092957600080fd5b8760208260051b850101111561093e57600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261097857600080fd5b813567ffffffffffffffff8082111561099357610993610951565b604051601f8301601f19908116603f011681019082821181831017156109bb576109bb610951565b816040528381528660208588010111156109d457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806000806000806000806000806101208d8f031215610a1757600080fd5b610a208d61067c565b9b5067ffffffffffffffff60208e01351115610a3b57600080fd5b610a4b8e60208f01358f0161068c565b909b50995067ffffffffffffffff60408e01351115610a6957600080fd5b610a798e60408f01358f0161068c565b909950975067ffffffffffffffff60608e01351115610a9757600080fd5b610aa78e60608f01358f0161068c565b909750955067ffffffffffffffff60808e01351115610ac557600080fd5b610ad58e60808f01358f01610967565b945060a08d01359350610aea60c08e0161067c565b925060e08d01359150610b006101008e0161067c565b90509295989b509295989b509295989b565b60008060008060008060008060008060e08b8d031215610b3157600080fd5b8a35610b3c81610664565b995060208b013567ffffffffffffffff80821115610b5957600080fd5b610b658e838f0161068c565b909b50995060408d0135915080821115610b7e57600080fd5b610b8a8e838f0161068c565b909950975060608d0135915080821115610ba357600080fd5b50610bb08d828e0161068c565b90965094505060808b0135610bc481610664565b925060a08b01359150610bd960c08c0161067c565b90509295989b9194979a5092959850565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b608081526000610c3760808301888a610bfa565b8281036020840152610c4a818789610bfa565b9150508360408301526001600160a01b0383166060830152979650505050505050565b60c081526000610c8160c083018b8d610bfa565b8281036020840152610c94818a8c610bfa565b90508281036040840152610ca981888a610bfa565b6060840196909652505060808101929092526001600160a01b031660a0909101529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610cfc57600080fd5b8135610d0781610664565b9392505050565b600060208284031215610d2057600080fd5b5051919050565b600060018201610d4757634e487b7160e01b600052601160045260246000fd5b5060010190565b60005b83811015610d69578181015183820152602001610d51565b50506000910152565b60e081526000610d8660e083018b8d610bfa565b8281036020840152610d99818a8c610bfa565b905082810360408401528751808252610db9816020840160208c01610d4e565b60608401979097526001600160a01b03958616608084015260a083019490945250921660c0909201919091526020601f909201601f1916010195945050505050565b60a081526000610e0f60a08301898b610bfa565b8281036020840152610e2281888a610bfa565b6001600160a01b039687166040850152606084019590955250509216608090920191909152949350505050565b60008251610e61818460208701610d4e565b9190910192915050565b600060208284031215610e7d57600080fd5b81518015158114610d0757600080fdfea2646970667358221220403412cd164221398b97f470c19675f69cb88e9f62fb38a302b1710c4d992b0864736f6c63430008140033';

type MockAxelarGasServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAxelarGasServiceConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAxelarGasService__factory extends ContractFactory {
  constructor(...args: MockAxelarGasServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MockAxelarGasService';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockAxelarGasService> {
    return super.deploy(overrides || {}) as Promise<MockAxelarGasService>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockAxelarGasService {
    return super.attach(address) as MockAxelarGasService;
  }
  connect(signer: Signer): MockAxelarGasService__factory {
    return super.connect(signer) as MockAxelarGasService__factory;
  }
  static readonly contractName: 'MockAxelarGasService';
  public readonly contractName: 'MockAxelarGasService';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAxelarGasServiceInterface {
    return new utils.Interface(_abi) as MockAxelarGasServiceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockAxelarGasService {
    return new Contract(address, _abi, signerOrProvider) as MockAxelarGasService;
  }
}
