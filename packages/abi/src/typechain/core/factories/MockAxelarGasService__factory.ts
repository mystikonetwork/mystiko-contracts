/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockAxelarGasService, MockAxelarGasServiceInterface } from '../MockAxelarGasService';

const _abi = [
  {
    inputs: [],
    name: 'NothingReceived',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'collectFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractId',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'refund',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052348015600f57600080fd5b50610ec88061001f6000396000f3fe6080604052600436106100705760003560e01c8063c62c20021161004e578063c62c2002146100ea578063da854d75146100fd578063edb6b3a51461011d578063fd09e3bd1461013d57600080fd5b80630c93e3bb146100755780638291286c1461008a57806382ad6f35146100ca575b600080fd5b6100886100833660046106cb565b61015d565b005b34801561009657600080fd5b507ffaa2f015f2ce5aee225904728de2def86eb8837491efd21f1a04fc20d8e923f660405190815260200160405180910390f35b3480156100d657600080fd5b506100886100e5366004610797565b6101eb565b6100886100f83660046107d8565b610245565b34801561010957600080fd5b506100886101183660046108d9565b6102dc565b34801561012957600080fd5b50610088610138366004610a08565b6103de565b34801561014957600080fd5b50610088610158366004610b26565b610460565b3460000361017e5760405163b5c74a2760e01b815260040160405180910390fd5b828260405161018e929190610c09565b6040518091039020886001600160a01b03167f617332c1832058df6ee45fcbdf471251474c9945a8e5d229287a21a5f67ccf0a8989898934886040516101d996959493929190610c42565b60405180910390a35050505050505050565b6001600160a01b038216610235576040516001600160a01b0384169082156108fc029083906000818181858888f1935050505015801561022f573d6000803e3d6000fd5b50505050565b6102408284836104dc565b505050565b346000036102665760405163b5c74a2760e01b815260040160405180910390fd5b8585604051610276929190610c09565b60405180910390208b6001600160a01b03167f999d431b58761213cf53af96262b67a069cbd963499fd8effd1e21556217b8418c8c8c8c8a8a8a348b6040516102c799989796959493929190610c8c565b60405180910390a35050505050505050505050565b60005b8181101561022f5760008383838181106102fb576102fb610cf3565b90506020020160208101906103109190610d09565b90506001600160a01b03811661035b576040516001600160a01b038616904780156108fc02916000818181858888f19350505050158015610355573d6000803e3d6000fd5b506103d5565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c69190610d2d565b90506103d38287836104dc565b505b506001016102df565b6103e9833384610621565b86866040516103f9929190610c09565b60405180910390208c6001600160a01b03167f8875f9764f28fa82d3e7ff1b80bd5c8f665e1f42fcd8c2faebc7c400a4ba1bbd8d8d8d8d8b8b8b8b8b60405161044a99989796959493929190610d6a565b60405180910390a3505050505050505050505050565b61046b833384610621565b848460405161047b929190610c09565b60405180910390208a6001600160a01b03167f99206760f0be19dd093729bd35e5924daff5e217bcedc5223ed067b60008cf8a8b8b8b8b8989896040516104c89796959493929190610dfa565b60405180910390a350505050505050505050565b6040516001600160a01b03838116602483015260448201839052600091829186169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516105769190610e54565b6000604051808303816000865af19150503d80600081146105b3576040519150601f19603f3d011682016040523d82523d6000602084013e6105b8565b606091505b509150915060008280156105e45750815115806105e45750818060200190518101906105e49190610e70565b90508015806105fb57506001600160a01b0386163b155b15610619576040516312171d8360e31b815260040160405180910390fd5b505050505050565b6040516001600160a01b0383811660248301523060448301526064820183905260009182918616906323b872dd60e01b9060840161050b565b6001600160a01b038116811461066f57600080fd5b50565b803561067d8161065a565b919050565b60008083601f84011261069457600080fd5b50813567ffffffffffffffff8111156106ac57600080fd5b6020830191508360208285010111156106c457600080fd5b9250929050565b60008060008060008060008060a0898b0312156106e757600080fd5b88356106f28161065a565b9750602089013567ffffffffffffffff81111561070e57600080fd5b61071a8b828c01610682565b909850965050604089013567ffffffffffffffff81111561073a57600080fd5b6107468b828c01610682565b909650945050606089013567ffffffffffffffff81111561076657600080fd5b6107728b828c01610682565b90945092505060808901356107868161065a565b809150509295985092959890939650565b6000806000606084860312156107ac57600080fd5b83356107b78161065a565b925060208401356107c78161065a565b929592945050506040919091013590565b600080600080600080600080600080600060e08c8e0312156107f957600080fd5b6108028c610672565b9a5060208c013567ffffffffffffffff81111561081e57600080fd5b61082a8e828f01610682565b909b5099505060408c013567ffffffffffffffff81111561084a57600080fd5b6108568e828f01610682565b90995097505060608c013567ffffffffffffffff81111561087657600080fd5b6108828e828f01610682565b90975095505060808c013567ffffffffffffffff8111156108a257600080fd5b6108ae8e828f01610682565b90955093505060a08c013591506108c760c08d01610672565b90509295989b509295989b9093969950565b6000806000604084860312156108ee57600080fd5b83356108f98161065a565b9250602084013567ffffffffffffffff81111561091557600080fd5b8401601f8101861361092657600080fd5b803567ffffffffffffffff81111561093d57600080fd5b8660208260051b840101111561095257600080fd5b939660209190910195509293505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261098a57600080fd5b813567ffffffffffffffff8111156109a4576109a4610963565b604051601f8201601f19908116603f0116810167ffffffffffffffff811182821017156109d3576109d3610963565b6040528181528382016020018510156109eb57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806000806000806000806000806101208d8f031215610a2b57600080fd5b610a348d610672565b9b5067ffffffffffffffff60208e01351115610a4f57600080fd5b610a5f8e60208f01358f01610682565b909b50995067ffffffffffffffff60408e01351115610a7d57600080fd5b610a8d8e60408f01358f01610682565b909950975067ffffffffffffffff60608e01351115610aab57600080fd5b610abb8e60608f01358f01610682565b909750955067ffffffffffffffff60808e01351115610ad957600080fd5b610ae98e60808f01358f01610979565b945060a08d01359350610afe60c08e01610672565b925060e08d01359150610b146101008e01610672565b90509295989b509295989b509295989b565b60008060008060008060008060008060e08b8d031215610b4557600080fd5b8a35610b508161065a565b995060208b013567ffffffffffffffff811115610b6c57600080fd5b610b788d828e01610682565b909a5098505060408b013567ffffffffffffffff811115610b9857600080fd5b610ba48d828e01610682565b90985096505060608b013567ffffffffffffffff811115610bc457600080fd5b610bd08d828e01610682565b9096509450610be3905060808c01610672565b925060a08b01359150610bf860c08c01610672565b90509295989b9194979a5092959850565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b608081526000610c5660808301888a610c19565b8281036020840152610c69818789610c19565b9150508360408301526001600160a01b0383166060830152979650505050505050565b60c081526000610ca060c083018b8d610c19565b8281036020840152610cb3818a8c610c19565b90508281036040840152610cc881888a610c19565b6060840196909652505060808101929092526001600160a01b031660a0909101529695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d1b57600080fd5b8135610d268161065a565b9392505050565b600060208284031215610d3f57600080fd5b5051919050565b60005b83811015610d61578181015183820152602001610d49565b50506000910152565b60e081526000610d7e60e083018b8d610c19565b8281036020840152610d91818a8c610c19565b905082810360408401528751808252610db1816020840160208c01610d46565b6020601f19601f830116830101925050508560608301526001600160a01b03851660808301528360a08301526001600160a01b03831660c08301529a9950505050505050505050565b60a081526000610e0e60a08301898b610c19565b8281036020840152610e2181888a610c19565b9150506001600160a01b03851660408301528360608301526001600160a01b038316608083015298975050505050505050565b60008251610e66818460208701610d46565b9190910192915050565b600060208284031215610e8257600080fd5b81518015158114610d2657600080fdfea26469706673582212206597a3595f567cc9d8d8aa132f42f0c064b04f36bc4e9488fd36bd8da4360d9c64736f6c634300081a0033';

type MockAxelarGasServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockAxelarGasServiceConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockAxelarGasService__factory extends ContractFactory {
  constructor(...args: MockAxelarGasServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MockAxelarGasService';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockAxelarGasService> {
    return super.deploy(overrides || {}) as Promise<MockAxelarGasService>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockAxelarGasService {
    return super.attach(address) as MockAxelarGasService;
  }
  connect(signer: Signer): MockAxelarGasService__factory {
    return super.connect(signer) as MockAxelarGasService__factory;
  }
  static readonly contractName: 'MockAxelarGasService';
  public readonly contractName: 'MockAxelarGasService';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockAxelarGasServiceInterface {
    return new utils.Interface(_abi) as MockAxelarGasServiceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockAxelarGasService {
    return new Contract(address, _abi, signerOrProvider) as MockAxelarGasService;
  }
}
