/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopMain, MystikoV2LoopMainInterface, IMystikoLoop } from '../MystikoV2LoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.LoopLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.LoopDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.LoopDepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052346100fb57604051610d2c38819003601f8101601f191683016001600160401b038111848210176100e55783928291604052833981010390608082126100fb5780516001600160a01b03811691908290036100fb5760208101516001600160a01b03811693908490036100fb57604090603f1901126100fb576040805190810192906001600160401b038411818510176100e55760209360405260606040840151938483520151938491015260018060a01b0319600054161760005560015560025560018060a01b03196003541617600355604051610c2b90816101018239f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80630ba95909146108ad5780631ba46cfd146108915780632421e155146108455780633c245a6f146102455780633fe3347a14610229578063bc587706146101db578063cfc7e2da146101b8578063ddac5dc11461018c578063e06174e414610165578063ed6ea33a146100d85763f6afe88f1461009657600080fd5b60203660031901126100d55760043567ffffffffffffffff81116100d157906100c4600492369084016109a9565b5063e7a24ff960e01b8152fd5b5080fd5b80fd5b50346100d557806003193601126100d557602460206001600160a01b03600354166040519283809263bb07320560e01b82523060048301525afa90811561015a576020929161012d575b506040519015158152f35b61014d9150823d8411610153575b6101458183610909565b810190610ac8565b38610122565b503d61013b565b6040513d84823e3d90fd5b50346100d557806003193601126100d55760206001600160a01b0360035416604051908152f35b50346100d557806003193601126100d55760206101a7610b57565b6001600160a01b0360405191168152f35b50346100d557806003193601126100d55760206101d3610ae0565b604051908152f35b50346100d557806003193601126100d557600460206001600160a01b036003541660405192838092635e2c3b8360e11b82525afa90811561015a576020929161012d57506040519015158152f35b50346100d557806003193601126100d557602060405160018152f35b5060603660031901126100d55760043567ffffffffffffffff81116100d1576102729036906004016109a9565b9060443567ffffffffffffffff81116100d15761029390369060040161095d565b916001600160a01b03600354169260405163bb07320560e01b8152306004820152602081602481885afa90811561080c578491610826575b5061081757604051635e2c3b8360e11b8152602081600481885afa90811561080c5784916107ed575b50610707575b508051610305610ae0565b116106f8578051610314610a42565b106106e95760408101519281516fffffffffffffffffffffffffffffffff6060840151167f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018610156106da577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018110156106cb576001600160a01b0385541691604051966060880188811067ffffffffffffffff8211176106b75760405287526020870152604086015260405180956304b98e1d60e31b82526004820186905b6003821061069d575050506064816020935afa93841561064b578394610665575b5060208201938451036106565760206024916040519283809263df592f7d60e01b82523260048301525afa90811561064b57839161062c575b5061061d578051925191608060a0830151920151926040519360a0850185811067ffffffffffffffff8211176106095760405285855260208501918252604085019083825260608601928584526080870191825261048a610b57565b966001600160a01b03881692833b156106055786949392916104ec8692604051988997889687956378d60cd760e01b8752604060048801525160448701525160648601525160848501525160a48401525160a060c484015260e48301906108c8565b82602483015203925af1801561015a576105f5575b509083018093116105e157806105e1575081340361059c57600080809381935af13d15610597573d61053281610941565b906105406040519283610909565b8152600060203d92013e5b1561055257005b60405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606490fd5b61054b565b60405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e00000000000000000000000000006044820152606490fd5b634e487b7160e01b81526011600452602490fd5b816105ff91610909565b38610501565b8680fd5b634e487b7160e01b84526041600452602484fd5b632e70c0b160e01b8252600482fd5b610645915060203d602011610153576101458183610909565b3861042e565b6040513d85823e3d90fd5b6301bfaa2560e51b8352600483fd5b9093506020813d602011610695575b8161068160209383610909565b81010312610691575192386103f5565b8280fd5b3d9150610674565b8293506020809160019394518152019301910187926103d4565b634e487b7160e01b88526041600452602488fd5b633bbde0bf60e21b8552600485fd5b63805f2a4960e01b8552600485fd5b630625040160e01b8252600482fd5b63617ab12d60e11b8252600482fd5b6040516080810181811067ffffffffffffffff8211176107d9576020916001600160a01b039160405232815261078c838201948786526040830160243581526060840191825284604051978896879663849e8b9f60e01b88528960048901525116602487015251166044850152516064840152516080608484015260a48301906108c8565b0381875afa90811561064b5783916107ba575b50156107ab57386102fa565b633042041f60e21b8252600482fd5b6107d3915060203d602011610153576101458183610909565b3861079f565b634e487b7160e01b85526041600452602485fd5b610806915060203d602011610153576101458183610909565b386102f4565b6040513d86823e3d90fd5b630e2f42c960e31b8352600483fd5b61083f915060203d602011610153576101458183610909565b386102cb565b50346100d557806003193601126100d5575061088d604051610868604082610909565b600481526306c6f6f760e41b60208201526040519182916020835260208301906108c8565b0390f35b50346100d557806003193601126100d557602090604051908152f35b50346100d557806003193601126100d55760206101d3610a42565b919082519283825260005b8481106108f4575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016108d3565b90601f8019910116810190811067ffffffffffffffff82111761092b57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161092b57601f01601f191660200190565b81601f820112156109a45780359061097482610941565b926109826040519485610909565b828452602083830101116109a457816000926020809301838601378301015290565b600080fd5b91909160c0818403126109a4576040519060c0820182811067ffffffffffffffff82111761092b57604052819381358352602082013560208401526040820135604084015260608201356fffffffffffffffffffffffffffffffff811681036109a457606084015260808201359167ffffffffffffffff83116109a457610a3660a093928493830161095d565b60808501520135910152565b602460206001600160a01b03600354166040519283809263473a063160e01b82523060048301525afa908115610abc57600091610a8a575b5080610a87575060025490565b90565b906020823d602011610ab4575b81610aa460209383610909565b810103126100d557505138610a7a565b3d9150610a97565b6040513d6000823e3d90fd5b908160209103126109a4575180151581036109a45790565b602460206001600160a01b036003541660405192838092635525984960e01b82523060048301525afa908115610abc57600091610b25575b5080610a87575060015490565b906020823d602011610b4f575b81610b3f60209383610909565b810103126100d557505138610b18565b3d9150610b32565b602460206001600160a01b0360035416604051928380926341fb697960e01b82523060048301525afa908115610abc57600091610bb3575b506001600160a01b03811615610ba25790565b6306f3d63360e51b60005260046000fd5b6020813d602011610bed575b81610bcc60209383610909565b810103126100d15751906001600160a01b03821682036100d5575038610b8f565b3d9150610bbf56fea2646970667358221220457707b850fd94d248edd883916106462d2d92e727dc8ffce0c9e42729200aa164736f6c634300081a0033';

type MystikoV2LoopMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopMain';
  }

  deploy(
    _hasher3: string,
    _settingsCenter: string,
    _localConfig: IMystikoLoop.LoopLocalConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopMain> {
    return super.deploy(
      _hasher3,
      _settingsCenter,
      _localConfig,
      overrides || {},
    ) as Promise<MystikoV2LoopMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _settingsCenter: string,
    _localConfig: IMystikoLoop.LoopLocalConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _settingsCenter, _localConfig, overrides || {});
  }
  attach(address: string): MystikoV2LoopMain {
    return super.attach(address) as MystikoV2LoopMain;
  }
  connect(signer: Signer): MystikoV2LoopMain__factory {
    return super.connect(signer) as MystikoV2LoopMain__factory;
  }
  static readonly contractName: 'MystikoV2LoopMain';
  public readonly contractName: 'MystikoV2LoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2LoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopMain;
  }
}
