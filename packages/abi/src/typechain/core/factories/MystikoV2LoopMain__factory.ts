/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopMain, MystikoV2LoopMainInterface } from '../MystikoV2LoopMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ServiceFeeBaseTooSmall',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'DepositAmountLimits',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeBase',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeBaseChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'feePool',
        type: 'address',
      },
    ],
    name: 'ServiceFeePoolChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'feeRate',
        type: 'uint256',
      },
    ],
    name: 'ServiceFeeRateChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newServiceFeePool',
        type: 'address',
      },
    ],
    name: 'changeServiceFeePool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeBase',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeePool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getServiceFeeRate',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeBase',
        type: 'uint256',
      },
    ],
    name: 'setServiceFeeBase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_newServiceFeeRate',
        type: 'uint256',
      },
    ],
    name: 'setServiceFeeRate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'updateDepositAmountLimits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052600080546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801561003757600080fd5b506040516113b13803806113b183398101604081905261005691610094565b600580546001600160a01b03199081163317909155600180546001600160a01b0390931692909116919091179055600a6007556127106008556100c4565b6000602082840312156100a657600080fd5b81516001600160a01b03811681146100bd57600080fd5b9392505050565b6112de806100d36000396000f3fe6080604052600436106101755760003560e01c8063bc3cde60116100cb578063e8183c441161007f578063ed6ea33a11610059578063ed6ea33a146103d9578063f6afe88f146103f1578063ff5ab1211461040457600080fd5b8063e8183c4414610379578063ea0cde8514610399578063ec571c6a146103b957600080fd5b8063dd757c34116100b0578063dd757c3414610326578063ddac5dc11461033b578063e19abef81461035957600080fd5b8063bc3cde60146102df578063cfc7e2da1461031157600080fd5b80633fe3347a1161012d5780639b1d3091116101075780639b1d309114610279578063a599cffe14610299578063b1c39422146102ae57600080fd5b80633fe3347a1461022857806363ddbb00146102445780637a3d50281461025957600080fd5b80630ba959091161015e5780630ba95909146101b15780632421e155146101d557806330f49cac1461020857600080fd5b806301dbf19f1461017a57806306394c9b14610191575b600080fd5b34801561018657600080fd5b5061018f610424565b005b34801561019d57600080fd5b5061018f6101ac366004610f53565b6104a8565b3480156101bd57600080fd5b506004545b6040519081526020015b60405180910390f35b3480156101e157600080fd5b50604080518082018252600481526306c6f6f760e41b602082015290516101cc9190611164565b34801561021457600080fd5b5061018f610223366004610f53565b61054c565b34801561023457600080fd5b5060016040516101cc919061113c565b34801561025057600080fd5b506008546101c2565b34801561026557600080fd5b5061018f61027436600461106a565b6105cc565b34801561028557600080fd5b5061018f61029436600461106a565b61066d565b3480156102a557600080fd5b506007546101c2565b3480156102ba57600080fd5b506000546102cf90600160a01b900460ff1681565b60405190151581526020016101cc565b3480156102eb57600080fd5b506006546001600160a01b03165b6040516001600160a01b0390911681526020016101cc565b34801561031d57600080fd5b506003546101c2565b34801561033257600080fd5b5061018f6106f0565b34801561034757600080fd5b506002546001600160a01b03166102f9565b34801561036557600080fd5b5061018f610374366004610f53565b610768565b34801561038557600080fd5b5061018f61039436600461109c565b6107b5565b3480156103a557600080fd5b5061018f6103b4366004610f70565b610848565b3480156103c557600080fd5b506000546102f9906001600160a01b031681565b3480156103e557600080fd5b5060095460ff166102cf565b61018f6103ff366004610faa565b6108b4565b34801561041057600080fd5b5061018f61041f366004610f53565b6109a6565b6005546001600160a01b0316331461044f576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261049e92900460ff161515815260200190565b60405180910390a1565b6005546001600160a01b031633146104d3576040516327e1f1e560e01b815260040160405180910390fd5b6005546001600160a01b0382811691161415610502576040516336a1c33f60e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b6005546001600160a01b03163314610577576040516327e1f1e560e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b6005546001600160a01b031633146105f7576040516327e1f1e560e01b815260040160405180910390fd5b80600854141561061a576040516336a1c33f60e01b815260040160405180910390fd5b806106385760405163820fa07f60e01b815260040160405180910390fd5b60088190556040518181527fc66503e1f501c3fca1f778babea7a5825e06ae731a56472628792ce565789f2e906020016105c1565b6005546001600160a01b03163314610698576040516327e1f1e560e01b815260040160405180910390fd5b8060075414156106bb576040516336a1c33f60e01b815260040160405180910390fd5b60078190556040518181527fa363b9d21281c726ce6a6baef6ae70602135ee54a7f82a79420f8f6c5d1f683c906020016105c1565b6005546001600160a01b0316331461071b576040516327e1f1e560e01b815260040160405180910390fd5b6000805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161049e91600160a01b90910460ff161515815260200190565b6005546001600160a01b03163314610793576040516327e1f1e560e01b815260040160405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6005546001600160a01b031633146107e0576040516327e1f1e560e01b815260040160405180910390fd5b8181111561080157604051636003e82160e11b815260040160405180910390fd5b6004829055600381905560408051838152602081018390527f7633004c7a229869aeea10db4ff3e57e3b1534aeb2c9e72c5db25f965895c330910160405180910390a15050565b6005546001600160a01b03163314610873576040516327e1f1e560e01b815260040160405180910390fd5b6009805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e09906020016105c1565b60095460ff16156108d857604051630e2f42c960e31b815260040160405180910390fd5b600354815110156108fc5760405163617ab12d60e11b815260040160405180910390fd5b6004548151111561092057604051630625040160e01b815260040160405180910390fd5b6000610939826040015183600001518460600151610a4a565b90508082602001511461095f576040516301bfaa2560e51b815260040160405180910390fd5b61096833610b70565b1561098657604051632e70c0b160e01b815260040160405180910390fd5b6109a2826000015183602001518460a001518560800151610c0d565b5050565b6005546001600160a01b031633146109d1576040516327e1f1e560e01b815260040160405180910390fd5b6006546001600160a01b0382811691161415610a00576040516336a1c33f60e01b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517ff6fa36147275e67dbc6b9b8a82ee8dab1b3f7dec2b2ce2451decc3446a38d44f90600090a250565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610a8d5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610abf57604051633bbde0bf60e21b815260040160405180910390fd5b60015460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610b179160040161110b565b60206040518083038186803b158015610b2f57600080fd5b505afa158015610b43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b679190611083565b95945050505050565b60008054600160a01b900460ff16610b8a57506000919050565b60005460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b158015610bcf57600080fd5b505afa158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190610f8d565b92915050565b6040805160a081018252858152602081018590526000818301819052606082018590526080820184905260025492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610c6791859190600401611177565b600060405180830381600087803b158015610c8157600080fd5b505af1158015610c95573d6000803e3d6000fd5b5050600254600654610ce293506001600160a01b03918216925016610cba86896111fd565b610cdb600854610cd58b600754610ce990919063ffffffff16565b90610cfc565b6000610d08565b5050505050565b6000610cf58284611237565b9392505050565b6000610cf58284611215565b81610d1382856111fd565b610d1d91906111fd565b3414610d705760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064015b60405180910390fd5b6000856001600160a01b03168460405160006040518083038185875af1925050503d8060008114610dbd576040519150601f19603f3d011682016040523d82523d6000602084013e610dc2565b606091505b5050905080610e135760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606401610d67565b8215610ebe576000856001600160a01b03168460405160006040518083038185875af1925050503d8060008114610e66576040519150601f19603f3d011682016040523d82523d6000602084013e610e6b565b606091505b5050905080610ebc5760405162461bcd60e51b815260206004820152601b60248201527f7365727669636520666565207472616e73666572206661696c656400000000006044820152606401610d67565b505b505050505050565b600082601f830112610ed757600080fd5b813567ffffffffffffffff80821115610ef257610ef261126c565b604051601f8301601f19908116603f01168101908282118183101715610f1a57610f1a61126c565b81604052838152866020858801011115610f3357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610f6557600080fd5b8135610cf581611282565b600060208284031215610f8257600080fd5b8135610cf58161129a565b600060208284031215610f9f57600080fd5b8151610cf58161129a565b600060208284031215610fbc57600080fd5b813567ffffffffffffffff80821115610fd457600080fd5b9083019060c08286031215610fe857600080fd5b610ff06111d4565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff8116811461102b57600080fd5b606082015260808301358281111561104257600080fd5b61104e87828601610ec6565b60808301525060a083013560a082015280935050505092915050565b60006020828403121561107c57600080fd5b5035919050565b60006020828403121561109557600080fd5b5051919050565b600080604083850312156110af57600080fd5b50508035926020909101359150565b6000815180845260005b818110156110e4576020818501810151868301820152016110c8565b818111156110f6576000602083870101525b50601f01601f19169290920160200192915050565b60608101818360005b6003811015611133578151835260209283019290910190600101611114565b50505092915050565b602081016002831061115e57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000610cf560208301846110be565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526111bb60e08401826110be565b9150506001600160a01b03831660208301529392505050565b60405160c0810167ffffffffffffffff811182821017156111f7576111f761126c565b60405290565b6000821982111561121057611210611256565b500190565b60008261123257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561125157611251611256565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461129757600080fd5b50565b801515811461129757600080fdfea2646970667358221220d203905d4992e1f1b8a7bbc4ff5a9b4b05a015e4ae7afabfcf704693b3ea516964736f6c63430008070033';

type MystikoV2LoopMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopMain__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopMain';
  }

  deploy(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopMain> {
    return super.deploy(_hasher3, overrides || {}) as Promise<MystikoV2LoopMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, overrides || {});
  }
  attach(address: string): MystikoV2LoopMain {
    return super.attach(address) as MystikoV2LoopMain;
  }
  connect(signer: Signer): MystikoV2LoopMain__factory {
    return super.connect(signer) as MystikoV2LoopMain__factory;
  }
  static readonly contractName: 'MystikoV2LoopMain';
  public readonly contractName: 'MystikoV2LoopMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopMainInterface {
    return new utils.Interface(_abi) as MystikoV2LoopMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopMain;
  }
}
