/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockLZEndpoint, MockLZEndpointInterface } from '../MockLZEndpoint';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_chainId',
        type: 'uint16',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'srcChainId',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'srcAddress',
        type: 'bytes',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'dstAddress',
        type: 'address',
      },
    ],
    name: 'PayloadCleared',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'srcChainId',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'srcAddress',
        type: 'bytes',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'dstAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'reason',
        type: 'bytes',
      },
    ],
    name: 'PayloadStored',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint16',
        name: 'chainId',
        type: 'uint16',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'srcAddress',
        type: 'bytes',
      },
    ],
    name: 'UaForceResumeReceive',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_a',
        type: 'address',
      },
    ],
    name: 'addrToPackedBytes',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'blockNextMsg',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_payload',
        type: 'bytes',
      },
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'estimateFees',
    outputs: [
      {
        internalType: 'uint256',
        name: '_nativeFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_zroFee',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_srcChainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_srcAddress',
        type: 'bytes',
      },
    ],
    name: 'forceResumeReceive',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getChainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'getConfig',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_chainID',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_srcAddress',
        type: 'bytes',
      },
    ],
    name: 'getInboundNonce',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_srcChainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_srcAddress',
        type: 'bytes',
      },
    ],
    name: 'getLengthOfQueue',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_chainID',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: '_srcAddress',
        type: 'address',
      },
    ],
    name: 'getOutboundNonce',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'getReceiveLibraryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'getReceiveVersion',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'getSendLibraryAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'getSendVersion',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_srcChainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_srcAddress',
        type: 'bytes',
      },
    ],
    name: 'hasStoredPayload',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'inboundNonce',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isReceivingPayload',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isSendingPayload',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'lzEndpointLookup',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockBlockConfirmations',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockChainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockLayerZeroVersion',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockLibraryVersion',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockOracle',
    outputs: [
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockRelayer',
    outputs: [
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'mockStaticNativeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'msgsToDeliver',
    outputs: [
      {
        internalType: 'address',
        name: 'dstAddress',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: 'nonce',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nativeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'outboundNonce',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_b',
        type: 'bytes',
      },
    ],
    name: 'packedBytesToAddr',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_srcChainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_srcAddress',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_dstAddress',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_nonce',
        type: 'uint64',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_payload',
        type: 'bytes',
      },
    ],
    name: 'receivePayload',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_srcChainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_srcAddress',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_payload',
        type: 'bytes',
      },
    ],
    name: 'retryPayload',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_chainId',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '_destination',
        type: 'bytes',
      },
      {
        internalType: 'bytes',
        name: '_payload',
        type: 'bytes',
      },
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_adapterParams',
        type: 'bytes',
      },
    ],
    name: 'send',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'setConfig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'destAddr',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'lzEndpointAddr',
        type: 'address',
      },
    ],
    name: 'setDestLzEndpoint',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_nativeFee',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_zroFee',
        type: 'uint256',
      },
    ],
    name: 'setEstimatedFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    name: 'setReceiveVersion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    name: 'setSendVersion',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    name: 'storedPayload',
    outputs: [
      {
        internalType: 'uint64',
        name: 'payloadLength',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: 'dstAddress',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'zroFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561001057600080fd5b5060405162002516380380620025168339810160408190526100319161005d565b602a60055560068054600161ffff19918216811790925581541661ffff92909216919091179055610088565b60006020828403121561006f57600080fd5b815161ffff8116811461008157600080fd5b9392505050565b61247e80620000986000396000f3fe6080604052600436106102a05760003560e01c8063996f79c01161016e578063ca066b35116100cb578063db14f3051161007f578063e97a448a11610064578063e97a448a146107e9578063f5ecbdbc14610894578063fdc07c70146108c657600080fd5b8063db14f30514610863578063e961a9521461087e57600080fd5b8063d23104f1116100b0578063d23104f11461081e578063da1a7c9a146102f8578063dab312771461083d57600080fd5b8063ca066b35146107e9578063cbed8b9c146107fd57600080fd5b8063b208649911610122578063c2fa481311610107578063c2fa481314610780578063c5803100146107a0578063c81b383a146107b357600080fd5b8063b2086499146106e8578063c08f15a11461072a57600080fd5b8063aaff5f1611610153578063aaff5f1614610697578063af406aa5146106b7578063b1210770146106cd57600080fd5b8063996f79c0146106815780639c729da1146104e257600080fd5b806340a7bb101161021c57806371ba2fd6116101d05780637a145748116101b55780637a145748146105a25780637f6df8e61461060e5780639924d33b1461062e57600080fd5b806371ba2fd6146104e257806376a386dc1461050257600080fd5b80634f055b04116102015780634f055b04146104445780635952c4ec146104645780635b3011351461048857600080fd5b806340a7bb10146103ef57806342d65a8d1461042457600080fd5b80630eaf6ea61161027357806312a9ee6b1161025857806312a9ee6b146103815780632646af08146103b05780633408e470146103d657600080fd5b80630eaf6ea61461035157806310ddb137146102d857600080fd5b806305bc710f146102a557806307e0db17146102d8578063096568f6146102f857806309eddf5414610319575b600080fd5b3480156102b157600080fd5b506004546102c09061ffff1681565b60405161ffff90911681526020015b60405180910390f35b3480156102e457600080fd5b506102f66102f3366004611874565b50565b005b34801561030457600080fd5b506102c06103133660046118ab565b50600190565b34801561032557600080fd5b50610339610334366004611911565b6108e6565b6040516001600160a01b0390911681526020016102cf565b34801561035d57600080fd5b5061037161036c366004611953565b610905565b60405190151581526020016102cf565b34801561038d57600080fd5b506103a161039c366004611a49565b61094a565b6040516102cf93929190611ae6565b3480156103bc57600080fd5b506102f66103cb366004611b21565b600791909155600855565b3480156103e257600080fd5b5060015461ffff166102c0565b3480156103fb57600080fd5b5061040f61040a366004611b43565b610a48565b604080519283526020830191909152016102cf565b34801561043057600080fd5b506102f661043f366004611953565b610a6b565b34801561045057600080fd5b50600254610339906001600160a01b031681565b34801561047057600080fd5b5061047a60035481565b6040519081526020016102cf565b34801561049457600080fd5b506104d56104a33660046118ab565b6040805160609290921b6bffffffffffffffffffffffff19166020830152805180830360140181526034909201905290565b6040516102cf9190611be4565b3480156104ee57600080fd5b506103396104fd3660046118ab565b503090565b34801561050e57600080fd5b5061057461051d366004611bf7565b600c60209081526000928352604090922081518083018401805192815290840192909301919091209152805460019091015467ffffffffffffffff8216916801000000000000000090046001600160a01b03169083565b6040805167ffffffffffffffff90941684526001600160a01b039092166020840152908201526060016102cf565b3480156105ae57600080fd5b506105f56105bd366004611c45565b61ffff82166000908152600b602090815260408083206001600160a01b038516845290915290205467ffffffffffffffff1692915050565b60405167ffffffffffffffff90911681526020016102cf565b34801561061a57600080fd5b5061047a610629366004611953565b610bb7565b34801561063a57600080fd5b506105f5610649366004611bf7565b600a602090815260009283526040909220815180830184018051928152908401929093019190912091525467ffffffffffffffff1681565b34801561068d57600080fd5b5061047a60075481565b3480156106a357600080fd5b506102f66106b2366004611c7c565b610bf3565b3480156106c357600080fd5b5061047a60085481565b3480156106d957600080fd5b506006546102c09061ffff1681565b3480156106f457600080fd5b506105f5610703366004611c45565b600b60209081526000928352604080842090915290825290205467ffffffffffffffff1681565b34801561073657600080fd5b506102f6610745366004611cfd565b6001600160a01b039182166000908152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff191691909216179055565b34801561078c57600080fd5b506102f661079b366004611d1b565b610e10565b6102f66107ae366004611dd3565b61139f565b3480156107bf57600080fd5b506103396107ce3660046118ab565b6000602081905290815260409020546001600160a01b031681565b3480156107f557600080fd5b506000610371565b34801561080957600080fd5b506102f6610818366004611ea0565b50505050565b34801561082a57600080fd5b506102f66009805460ff19166001179055565b34801561084957600080fd5b50600154610339906201000090046001600160a01b031681565b34801561086f57600080fd5b506001546102c09061ffff1681565b34801561088a57600080fd5b5061047a60055481565b3480156108a057600080fd5b506104d56108af366004611f08565b604080516020810190915260008152949350505050565b3480156108d257600080fd5b506105f56108e1366004611953565b6115d1565b6000806040516002840160028603823760091901519150505b92915050565b61ffff83166000908152600c6020526040808220905182919061092b9086908690611f55565b9081526040519081900360200190206001015415159150509392505050565b600d602090815260008481526040902083518085018301805192815290830192850192909220915280548290811061098157600080fd5b6000918252602090912060029091020180546001820180546001600160a01b0383169650600160a01b90920467ffffffffffffffff1694509192506109c590611f65565b80601f01602080910402602001604051908101604052809291908181526020018280546109f190611f65565b8015610a3e5780601f10610a1357610100808354040283529160200191610a3e565b820191906000526020600020905b815481529060010190602001808311610a2157829003601f168201915b5050505050905083565b6000808451600754610a5a9190611fb5565b915060085490509550959350505050565b61ffff83166000908152600c60205260408082209051610a8e9085908590611f55565b9081526040519081900360200190206001810154909150610af65760405162461bcd60e51b815260206004820152601c60248201527f4c617965725a65726f3a206e6f2073746f726564207061796c6f61640000000060448201526064015b60405180910390fd5b80546801000000000000000090046001600160a01b03163314610b5b5760405162461bcd60e51b815260206004820152601960248201527f4c617965725a65726f3a20696e76616c69642063616c6c6572000000000000006044820152606401610aed565b80546001600160e01b0319168155600060018201556040517f23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f9890610ba490869086908690611ff5565b60405180910390a1610818848484611617565b61ffff83166000908152600d60205260408082209051610bda9085908590611f55565b9081526040519081900360200190205490509392505050565b61ffff85166000908152600c60205260408082209051610c169087908790611f55565b9081526040519081900360200190206001810154909150610c795760405162461bcd60e51b815260206004820152601c60248201527f4c617965725a65726f3a206e6f2073746f726564207061796c6f6164000000006044820152606401610aed565b805467ffffffffffffffff1682148015610cad575080600101548383604051610ca3929190611f55565b6040518091039020145b610cf95760405162461bcd60e51b815260206004820152601a60248201527f4c617965725a65726f3a20696e76616c6964207061796c6f61640000000000006044820152606401610aed565b80546001600160e01b03198116825560006001830181905561ffff88168152600a60205260408082209051680100000000000000009093046001600160a01b031692610d489089908990611f55565b90815260405190819003602001812054621d356760e01b825267ffffffffffffffff1691506001600160a01b03831690621d356790610d95908b908b908b9087908c908c90600401612013565b600060405180830381600087803b158015610daf57600080fd5b505af1158015610dc3573d6000803e3d6000fd5b505050507f612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d8888888486604051610dfe959493929190612061565b60405180910390a15050505050505050565b61ffff88166000908152600c60205260408082209051610e33908a908a90611f55565b90815260200160405180910390209050600a60008a61ffff1661ffff1681526020019081526020016000208888604051610e6e929190611f55565b9081526040519081900360200190208054600090610e959067ffffffffffffffff166120aa565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905567ffffffffffffffff168567ffffffffffffffff1614610f1c5760405162461bcd60e51b815260206004820152601660248201527f4c617965725a65726f3a2077726f6e67206e6f6e6365000000000000000000006044820152606401610aed565b6001810154156112005761ffff89166000908152600d60205260408082209051610f49908b908b90611f55565b9081526020016040518091039020905060006040518060600160405280896001600160a01b031681526020018867ffffffffffffffff16815260200186868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050915250825490915015611190578154600181810184556000848152602090819020845160029094020180549185015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b0390941693909317178255604083015183929182019061102c9082612120565b50505060005b8254611040906001906121e0565b81101561111457828181548110611059576110596121f3565b9060005260206000209060020201838260016110759190612209565b81548110611085576110856121f3565b60009182526020909120825460029092020180546001600160a01b0390921673ffffffffffffffffffffffffffffffffffffffff1983168117825583546001600160e01b031990931617600160a01b9283900467ffffffffffffffff169092029190911781556001808201906110fd9084018261221c565b50905050808061110c906122f7565b915050611032565b508082600081548110611129576111296121f3565b6000918252602091829020835160029092020180549284015167ffffffffffffffff16600160a01b026001600160e01b03199093166001600160a01b0390921691909117919091178155604082015160018201906111879082612120565b509050506111f9565b8154600181810184556000848152602090819020845160029094020180549185015167ffffffffffffffff16600160a01b026001600160e01b03199092166001600160a01b039094169390931717825560408301518392918201906111f59082612120565b5050505b5050611394565b60095460ff161561132d5760405180606001604052808484905067ffffffffffffffff168152602001876001600160a01b031681526020018484604051611248929190611f55565b604080519182900390912090915261ffff8b166000908152600c6020528190209051611277908b908b90611f55565b90815260408051918290036020908101832084518154868401516001600160a01b031668010000000000000000026001600160e01b031990911667ffffffffffffffff909216919091171781559382015160019094019390935591810182526000815290517f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db91611316918c918c918c918c918c918b918b9190612310565b60405180910390a16009805460ff19169055611394565b604051621d356760e01b81526001600160a01b03871690621d356790611361908c908c908c908b908a908a90600401612013565b600060405180830381600087803b15801561137b57600080fd5b505af115801561138f573d6000803e3d6000fd5b505050505b505050505050505050565b60006113ab88886108e6565b6001600160a01b03808216600090815260208190526040902054919250168061143c5760405162461bcd60e51b815260206004820152603760248201527f4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c6179657260448201527f5a65726f20456e64706f696e74206e6f7420666f756e640000000000000000006064820152608401610aed565b60075461144a908790611fb5565b3410156114bf5760405162461bcd60e51b815260206004820152602960248201527f4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766560448201527f20666f72206665657300000000000000000000000000000000000000000000006064820152608401610aed565b61ffff8a166000908152600b602090815260408083203384529091528120805482906114f49067ffffffffffffffff166120aa565b825467ffffffffffffffff8281166101009490940a9384029302191691909117909155604080516bffffffffffffffffffffffff193360601b166020820152815160148183030181526034909101909152909150826001600160a01b031663c2fa4813600160009054906101000a900461ffff1683878660008f8f6040518863ffffffff1660e01b81526004016115919796959493929190612383565b600060405180830381600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b50505050505050505050505050505050565b61ffff83166000908152600a602052604080822090516115f49085908590611f55565b9081526040519081900360200190205467ffffffffffffffff1690509392505050565b61ffff83166000908152600d6020526040808220905161163a9085908590611f55565b908152602001604051809103902090505b8054156108185780546000908290611665906001906121e0565b81548110611675576116756121f3565b600091825260209182902060408051606081018252600290930290910180546001600160a01b038116845267ffffffffffffffff600160a01b9091041693830193909352600183018054929392918401916116cf90611f65565b80601f01602080910402602001604051908101604052809291908181526020018280546116fb90611f65565b80156117485780601f1061171d57610100808354040283529160200191611748565b820191906000526020600020905b81548152906001019060200180831161172b57829003601f168201915b505050505081525050905080600001516001600160a01b0316621d3567868686856020015186604001516040518663ffffffff1660e01b81526004016117929594939291906123e6565b600060405180830381600087803b1580156117ac57600080fd5b505af11580156117c0573d6000803e3d6000fd5b50505050818054806117d4576117d4612432565b60008281526020812060026000199093019283020180546001600160e01b031916815590611805600183018261180f565b505090555061164b565b50805461181b90611f65565b6000825580601f1061182b575050565b601f0160209004906000526020600020908101906102f391905b808211156118595760008155600101611845565b5090565b803561ffff8116811461186f57600080fd5b919050565b60006020828403121561188657600080fd5b61188f8261185d565b9392505050565b6001600160a01b03811681146102f357600080fd5b6000602082840312156118bd57600080fd5b813561188f81611896565b60008083601f8401126118da57600080fd5b50813567ffffffffffffffff8111156118f257600080fd5b60208301915083602082850101111561190a57600080fd5b9250929050565b6000806020838503121561192457600080fd5b823567ffffffffffffffff81111561193b57600080fd5b611947858286016118c8565b90969095509350505050565b60008060006040848603121561196857600080fd5b6119718461185d565b9250602084013567ffffffffffffffff81111561198d57600080fd5b611999868287016118c8565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126119cd57600080fd5b813567ffffffffffffffff808211156119e8576119e86119a6565b604051601f8301601f19908116603f01168101908282118183101715611a1057611a106119a6565b81604052838152866020858801011115611a2957600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611a5e57600080fd5b611a678461185d565b9250602084013567ffffffffffffffff811115611a8357600080fd5b611a8f868287016119bc565b925050604084013590509250925092565b6000815180845260005b81811015611ac657602081850181015186830182015201611aaa565b506000602082860101526020601f19601f83011685010191505092915050565b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201526000611b186060830184611aa0565b95945050505050565b60008060408385031215611b3457600080fd5b50508035926020909101359150565b600080600080600060a08688031215611b5b57600080fd5b611b648661185d565b94506020860135611b7481611896565b9350604086013567ffffffffffffffff80821115611b9157600080fd5b611b9d89838a016119bc565b9450606088013591508115158214611bb457600080fd5b90925060808701359080821115611bca57600080fd5b50611bd7888289016119bc565b9150509295509295909350565b60208152600061188f6020830184611aa0565b60008060408385031215611c0a57600080fd5b611c138361185d565b9150602083013567ffffffffffffffff811115611c2f57600080fd5b611c3b858286016119bc565b9150509250929050565b60008060408385031215611c5857600080fd5b611c618361185d565b91506020830135611c7181611896565b809150509250929050565b600080600080600060608688031215611c9457600080fd5b611c9d8661185d565b9450602086013567ffffffffffffffff80821115611cba57600080fd5b611cc689838a016118c8565b90965094506040880135915080821115611cdf57600080fd5b50611cec888289016118c8565b969995985093965092949392505050565b60008060408385031215611d1057600080fd5b8235611c6181611896565b60008060008060008060008060c0898b031215611d3757600080fd5b611d408961185d565b9750602089013567ffffffffffffffff80821115611d5d57600080fd5b611d698c838d016118c8565b909950975060408b01359150611d7e82611896565b90955060608a0135908082168214611d9557600080fd5b90945060808a0135935060a08a01359080821115611db257600080fd5b50611dbf8b828c016118c8565b999c989b5096995094979396929594505050565b60008060008060008060008060c0898b031215611def57600080fd5b611df88961185d565b9750602089013567ffffffffffffffff80821115611e1557600080fd5b611e218c838d016118c8565b909950975060408b0135915080821115611e3a57600080fd5b611e468c838d016118c8565b909750955060608b01359150611e5b82611896565b90935060808a013590611e6d82611896565b90925060a08a01359080821115611e8357600080fd5b50611e908b828c016119bc565b9150509295985092959890939650565b60008060008060808587031215611eb657600080fd5b611ebf8561185d565b9350611ecd6020860161185d565b925060408501359150606085013567ffffffffffffffff811115611ef057600080fd5b611efc878288016119bc565b91505092959194509250565b60008060008060808587031215611f1e57600080fd5b611f278561185d565b9350611f356020860161185d565b92506040850135611f4581611896565b9396929550929360600135925050565b8183823760009101908152919050565b600181811c90821680611f7957607f821691505b602082108103611f9957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108ff576108ff611f9f565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b61ffff84168152604060208201526000611b18604083018486611fcc565b61ffff87168152608060208201526000612031608083018789611fcc565b67ffffffffffffffff861660408401528281036060840152612054818587611fcc565b9998505050505050505050565b61ffff8616815260806020820152600061207f608083018688611fcc565b905067ffffffffffffffff841660408301526001600160a01b03831660608301529695505050505050565b600067ffffffffffffffff8083168181036120c7576120c7611f9f565b6001019392505050565b601f82111561211b57600081815260208120601f850160051c810160208610156120f85750805b601f850160051c820191505b8181101561211757828155600101612104565b5050505b505050565b815167ffffffffffffffff81111561213a5761213a6119a6565b61214e816121488454611f65565b846120d1565b602080601f831160018114612183576000841561216b5750858301515b600019600386901b1c1916600185901b178555612117565b600085815260208120601f198616915b828110156121b257888601518255948401946001909101908401612193565b50858210156121d05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156108ff576108ff611f9f565b634e487b7160e01b600052603260045260246000fd5b808201808211156108ff576108ff611f9f565b818103612227575050565b6122318254611f65565b67ffffffffffffffff811115612249576122496119a6565b612257816121488454611f65565b6000601f82116001811461228b57600083156122735750848201545b600019600385901b1c1916600184901b1784556122f0565b600085815260209020601f19841690600086815260209020845b838110156122c557828601548255600195860195909101906020016122a5565b50858310156122e35781850154600019600388901b60f8161c191681555b50505060018360011b0184555b5050505050565b60006001820161230957612309611f9f565b5060010190565b61ffff8916815260c06020820152600061232e60c08301898b611fcc565b6001600160a01b038816604084015267ffffffffffffffff871660608401528281036080840152612360818688611fcc565b905082810360a08401526123748185611aa0565b9b9a5050505050505050505050565b61ffff8816815260c0602082015260006123a060c0830189611aa0565b6001600160a01b038816604084015267ffffffffffffffff8716606084015285608084015282810360a08401526123d8818587611fcc565b9a9950505050505050505050565b61ffff86168152608060208201526000612404608083018688611fcc565b67ffffffffffffffff8516604084015282810360608401526124268185611aa0565b98975050505050505050565b634e487b7160e01b600052603160045260246000fdfea264697066735822122019ec7763e44867706a335d22109ebdbbbc84cf73a2ed92e324f1d5b759a1d0a964736f6c63430008140033';

type MockLZEndpointConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLZEndpointConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLZEndpoint__factory extends ContractFactory {
  constructor(...args: MockLZEndpointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MockLZEndpoint';
  }

  deploy(
    _chainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MockLZEndpoint> {
    return super.deploy(_chainId, overrides || {}) as Promise<MockLZEndpoint>;
  }
  getDeployTransaction(
    _chainId: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_chainId, overrides || {});
  }
  attach(address: string): MockLZEndpoint {
    return super.attach(address) as MockLZEndpoint;
  }
  connect(signer: Signer): MockLZEndpoint__factory {
    return super.connect(signer) as MockLZEndpoint__factory;
  }
  static readonly contractName: 'MockLZEndpoint';
  public readonly contractName: 'MockLZEndpoint';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLZEndpointInterface {
    return new utils.Interface(_abi) as MockLZEndpointInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockLZEndpoint {
    return new Contract(address, _abi, signerOrProvider) as MockLZEndpoint;
  }
}
