/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2TBridgeMain,
  MystikoV2TBridgeMainInterface,
  IMystikoBridge,
} from '../MystikoV2TBridgeMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.LocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'depositWithCertificate',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settingsCenter',
    outputs: [
      {
        internalType: 'contract MystikoSettingsCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b191690553480156200001e57600080fd5b506040516200255738038062002557833981016040819052620000419162000126565b600080546001600160a01b039687166001600160a01b031991821617909155600880549587169582169590951790945581516003556020808301516004556040909201516005558051600655015160075560098054919093169116179055620001ec565b6001600160a01b0381168114620000bb57600080fd5b50565b604051606081016001600160401b0381118282101715620000ef57634e487b7160e01b600052604160045260246000fd5b60405290565b604080519081016001600160401b0381118282101715620000ef57634e487b7160e01b600052604160045260246000fd5b60008060008060008587036101008112156200014157600080fd5b86516200014e81620000a5565b60208801519096506200016181620000a5565b60408801519095506200017481620000a5565b93506060605f19820112156200018957600080fd5b62000193620000be565b606088015181526080880151602082015260a0880151604082015280935050604060bf1982011215620001c557600080fd5b50620001d0620000f5565b60c0870151815260e09096015160208701525092959194509290565b61235b80620001fc6000396000f3fe60806040526004361061018b5760003560e01c8063825b5f8d116100d6578063cfc7e2da1161007f578063ed6ea33a11610059578063ed6ea33a14610425578063efbfb2ae1461043a578063fb3e3d731461044f57600080fd5b8063cfc7e2da146103e5578063d0b436bd146103fa578063ddac5dc11461041057600080fd5b8063abc1bd22116100b0578063abc1bd221461036e578063cbe342851461038e578063cdfceeba146103a457600080fd5b8063825b5f8d1461031657806382d21cd81461032b5780639a03636c1461035b57600080fd5b80633fe3347a116101385780634e3c10b7116101125780634e3c10b7146102d65780635898a0a8146102eb578063640c0b361461030057600080fd5b80633fe3347a14610284578063422e0028146102a05780634dde6fbc146102c057600080fd5b80632421e155116101695780632421e155146102005780632cd26d451461024f5780632dd654611461026f57600080fd5b80630ba95909146101905780631ba46cfd146101b857806321e32d55146101e0575b600080fd5b34801561019c57600080fd5b506101a5610465565b6040519081526020015b60405180910390f35b3480156101c457600080fd5b5060005b6040516001600160a01b0390911681526020016101af565b3480156101ec57600080fd5b506002546101c8906001600160a01b031681565b34801561020c57600080fd5b5060408051808201909152600781527f746272696467650000000000000000000000000000000000000000000000000060208201525b6040516101af9190611be9565b34801561025b57600080fd5b506008546101c8906001600160a01b031681565b61028261027d366004611db2565b6104ee565b005b34801561029057600080fd5b5060016040516101af9190611e1f565b3480156102ac57600080fd5b506102826102bb366004611e77565b610507565b3480156102cc57600080fd5b506101a560055481565b3480156102e257600080fd5b506102426105f4565b3480156102f757600080fd5b506101a5610682565b34801561030c57600080fd5b506101a560065481565b34801561032257600080fd5b506101a5610709565b34801561033757600080fd5b5061034b610346366004611f21565b610790565b60405190151581526020016101af565b610282610369366004611fcc565b61081a565b34801561037a57600080fd5b506009546101c8906001600160a01b031681565b34801561039a57600080fd5b506101a560075481565b3480156103b057600080fd5b506000546103cc90600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101af565b3480156103f157600080fd5b506101a5610aff565b34801561040657600080fd5b506101a560045481565b34801561041c57600080fd5b506101c8610b86565b34801561043157600080fd5b5061034b610c25565b34801561044657600080fd5b506101a5610c97565b34801561045b57600080fd5b506101a560035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa1580156104b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d69190612009565b905080156104e457806104e8565b6004545b91505090565b60405163e7a24ff960e01b815260040160405180910390fd5b600054600160a01b900460ff161561053257604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff909216919091179055602081015160019061058690826120ab565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b6001805461060190612022565b80601f016020809104026020016040519081016040528092919081815260200182805461062d90612022565b801561067a5780601f1061064f5761010080835404028352916020019161067a565b820191906000526020600020905b81548152906001019060200180831161065d57829003601f168201915b505050505081565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa1580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190612009565b9050801561070157806104e8565b505060065490565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190612009565b9050801561078857806104e8565b505060075490565b6008546000906001600160a01b031633146107be57604051633dca01cf60e11b815260040160405180910390fd5b60006107ff85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d1e92505050565b905061080d87878584610de6565b5060019695505050505050565b6009546040516355f0ba2960e01b81523060048201526001600160a01b03909116906355f0ba2990602401602060405180830381865afa158015610862573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610886919061216b565b156108a457604051630e2f42c960e31b815260040160405180910390fd5b6108ac610aff565b815110156108cd5760405163617ab12d60e11b815260040160405180910390fd5b6108d5610465565b815111156108f657604051630625040160e01b815260040160405180910390fd5b6108fe610c97565b8160a0015110156109225760405163c4d8d00d60e01b815260040160405180910390fd5b61092a610682565b8160c00151101561094e576040516355a6d6a160e11b815260040160405180910390fd5b610956610709565b8160e00151101561097a5760405163784f02bd60e11b815260040160405180910390fd5b6000610993826040015183600001518460600151610ed9565b9050808260200151146109b9576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a25919061216b565b15610a4357604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610a8682610ff0565b9050610a968460a001518261105f565b610acb610aa1610b86565b60e086015160c08701518751610ab7919061218d565b610ac1919061218d565b8660a001516110e5565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa158015610b4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b709190612009565b90508015610b7e57806104e8565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa158015610bd3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf791906121ae565b90506001600160a01b038116610c20576040516306f3d63360e51b815260040160405180910390fd5b919050565b6009546040516355f0ba2960e01b81523060048201526000916001600160a01b0316906355f0ba2990602401602060405180830381865afa158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c92919061216b565b905090565b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa158015610ce4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d089190612009565b90508015610d1657806104e8565b505060055490565b610d506040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b610d826040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000610d8e84826111eb565b9083529050610d9d84826111eb565b60208401919091529050610db184826111eb565b60408401919091529050610dc584826111eb565b60608401919091529050610dd9848261131c565b5060808301525092915050565b6002546001600160a01b03848116911614610e1457604051631440e07960e11b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b9092041614610e4a57604051633876304f60e21b815260040160405180910390fd5b8051600003610e6c5760405163820bf1e560e01b815260040160405180910390fd5b610e74610b86565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b8152600401610ea19291906121cb565b600060405180830381600087803b158015610ebb57600080fd5b505af1158015610ecf573d6000803e3d6000fd5b5050505050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610f1c5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610f4e57604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610fa691600401612228565b602060405180830381865afa158015610fc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe79190612009565b95945050505050565b6060806110008360000151611429565b61100d8460200151611429565b61101a8560400151611429565b6110278660600151611429565b61103487608001516114c1565b604051602001611048959493929190612259565b60408051601f198184030181529190529392505050565b60085460025460005460405163c81739cd60e01b81526001600160a01b039384169363c81739cd9387936110af93919092169167ffffffffffffffff600160a81b909104169087906004016122c4565b6000604051808303818588803b1580156110c857600080fd5b505af11580156110dc573d6000803e3d6000fd5b50505050505050565b6110ef818361218d565b34146111425760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064015b60405180910390fd5b6000836001600160a01b03168360405160006040518083038185875af1925050503d806000811461118f576040519150601f19603f3d011682016040523d82523d6000602084013e611194565b606091505b50509050806111e55760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606401611139565b50505050565b60008083518360206111fd919061218d565b11158015611214575061121183602061218d565b83105b61126c5760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608401611139565b600060405160206000600182038760208a0101515b838310156112a15780821a83860153600183019250600182039150611281565b50505081016040525190506001600160ff1b038111156113035760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606401611139565b8061130f85602061218d565b92509250505b9250929050565b606060008061132b85856114f8565b865190955090915061133d828661218d565b111580156113535750611350818561218d565b84105b6113ab5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608401611139565b6060811580156113c657604051915060208201604052611410565b6040519150601f8316801560200281840101848101888315602002848c0101015b818310156113ff5780518352602092830192016113e7565b5050848452601f01601f1916604052505b508061141c838761218d565b9350935050509250929050565b60606001600160ff1b038211156114825760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606401611139565b60405160208082526000601f5b828210156114b15785811a82602086010153600191909101906000190161148f565b5050506040818101905292915050565b80516060906114cf816116fc565b836040516020016114e19291906122f6565b604051602081830303815290604052915050919050565b600080600061150785856117c6565b9450905060006001600160f81b0319821660fd60f81b0361159f5761152c868661184e565b955061ffff16905060fd8110801590611547575061ffff8111155b6115935760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606401611139565b92508391506113159050565b6001600160f81b03198216607f60f91b03611629576115be8686611907565b955063ffffffff16905061ffff811180156115dd575063ffffffff8111155b6115935760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401611139565b6001600160f81b031980831690036116a65761164586866119d8565b955067ffffffffffffffff16905063ffffffff81116115935760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401611139565b5060f881901c60fd81106115935760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401611139565b606060fd8267ffffffffffffffff16101561173157604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff16116117815761175160fd60f81b611aa9565b61175a83611ad0565b60405160200161176b9291906122f6565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116117ac576117a3607f60f91b611aa9565b61175a83611b13565b6117bd6001600160f81b0319611aa9565b61175a83611b56565b60008083518360016117d8919061218d565b111580156117ef57506117ec83600161218d565b83105b61183b5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152606401611139565b838301602001518061130f85600161218d565b6000808351836002611860919061218d565b11158015611877575061187483600261218d565b83105b6118ce5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401611139565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e8103519150508084600261130f919061218d565b6000808351836004611919919061218d565b11158015611930575061192d83600461218d565b83105b6119875760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401611139565b600060405160046000600182038760208a0101515b838310156119bc5780821a8386015360018301925060018203915061199c565b505050016040819052601f19015190508061130f85600461218d565b60008083518360086119ea919061218d565b11158015611a0157506119fe83600861218d565b83105b611a585760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401611139565b600060405160086000600182038760208a0101515b83831015611a8d5780821a83860153600183019250600182039150611a6d565b505050016040819052601f19015190508061130f85600861218d565b60408051600181526001600160f81b0319831660208201526021810190915260609061172b565b6040516002808252606091906000601f5b82821015611b035785811a826020860101536001919091019060001901611ae1565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611b465785811a826020860101536001919091019060001901611b24565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611b895785811a826020860101536001919091019060001901611b67565b5050506028810160405292915050565b60005b83811015611bb4578181015183820152602001611b9c565b50506000910152565b60008151808452611bd5816020860160208601611b99565b601f01601f19169290920160200192915050565b602081526000611bfc6020830184611bbd565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611c3d57611c3d611c03565b60405290565b6040516060810167ffffffffffffffff81118282101715611c3d57611c3d611c03565b80356fffffffffffffffffffffffffffffffff81168114610c2057600080fd5b600067ffffffffffffffff80841115611ca157611ca1611c03565b604051601f8501601f19908116603f01168101908282118183101715611cc957611cc9611c03565b81604052809350858152868686011115611ce257600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d0d57600080fd5b611bfc83833560208501611c86565b60006101008284031215611d2f57600080fd5b611d37611c19565b9050813581526020820135602082015260408201356040820152611d5d60608301611c66565b6060820152608082013567ffffffffffffffff811115611d7c57600080fd5b611d8884828501611cfc565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b600080600060608486031215611dc757600080fd5b833567ffffffffffffffff80821115611ddf57600080fd5b611deb87838801611d1c565b9450602086013593506040860135915080821115611e0857600080fd5b50611e1586828701611cfc565b9150509250925092565b6020810160028310611e4157634e487b7160e01b600052602160045260246000fd5b91905290565b803567ffffffffffffffff81168114610c2057600080fd5b6001600160a01b0381168114611e7457600080fd5b50565b600060208284031215611e8957600080fd5b813567ffffffffffffffff80821115611ea157600080fd5b9083019060608286031215611eb557600080fd5b611ebd611c43565b611ec683611e47565b8152602083013582811115611eda57600080fd5b83019150601f82018613611eed57600080fd5b611efc86833560208501611c86565b602082015260408301359250611f1183611e5f565b6040810192909252509392505050565b600080600080600060808688031215611f3957600080fd5b611f4286611e47565b94506020860135611f5281611e5f565b9350604086013567ffffffffffffffff80821115611f6f57600080fd5b818801915088601f830112611f8357600080fd5b813581811115611f9257600080fd5b896020828501011115611fa457600080fd5b6020830195508094505050506060860135611fbe81611e5f565b809150509295509295909350565b600060208284031215611fde57600080fd5b813567ffffffffffffffff811115611ff557600080fd5b61200184828501611d1c565b949350505050565b60006020828403121561201b57600080fd5b5051919050565b600181811c9082168061203657607f821691505b60208210810361205657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156120a657600081815260208120601f850160051c810160208610156120835750805b601f850160051c820191505b818110156120a25782815560010161208f565b5050505b505050565b815167ffffffffffffffff8111156120c5576120c5611c03565b6120d9816120d38454612022565b8461205c565b602080601f83116001811461210e57600084156120f65750858301515b600019600386901b1c1916600185901b1785556120a2565b600085815260208120601f198616915b8281101561213d5788860151825594840194600190910190840161211e565b508582101561215b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561217d57600080fd5b81518015158114611bfc57600080fd5b8082018082111561172b57634e487b7160e01b600052601160045260246000fd5b6000602082840312156121c057600080fd5b8151611bfc81611e5f565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261220f60e0840182611bbd565b9150506001600160a01b03831660208301529392505050565b60608101818360005b6003811015612250578151835260209283019290910190600101612231565b50505092915050565b6000865161226b818460208b01611b99565b86519083019061227f818360208b01611b99565b8651910190612292818360208a01611b99565b85519101906122a5818360208901611b99565b84519101906122b8818360208801611b99565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201526000610fe76060830184611bbd565b60008351612308818460208801611b99565b83519083019061231c818360208801611b99565b0194935050505056fea26469706673582212200509ba13de3ddd8275ac5775ab762eea29c69de452fe583d7a31e3be234de1d164736f6c63430008140033';

type MystikoV2TBridgeMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2TBridgeMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2TBridgeMain__factory extends ContractFactory {
  constructor(...args: MystikoV2TBridgeMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2TBridgeMain';
  }

  deploy(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2TBridgeMain> {
    return super.deploy(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2TBridgeMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2TBridgeMain {
    return super.attach(address) as MystikoV2TBridgeMain;
  }
  connect(signer: Signer): MystikoV2TBridgeMain__factory {
    return super.connect(signer) as MystikoV2TBridgeMain__factory;
  }
  static readonly contractName: 'MystikoV2TBridgeMain';
  public readonly contractName: 'MystikoV2TBridgeMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2TBridgeMainInterface {
    return new utils.Interface(_abi) as MystikoV2TBridgeMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2TBridgeMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2TBridgeMain;
  }
}
