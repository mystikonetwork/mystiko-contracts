/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2TBridgeMain,
  MystikoV2TBridgeMainInterface,
  IMystikoBridge,
} from '../MystikoV2TBridgeMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052346101715760405161245e38819003601f8101601f191683016001600160401b0381118482101761015b578392829160405283398101039061010082126101715780516001600160a01b03811691908290036101715761006660208201610176565b9261007360408301610176565b936060605f1983011261017157604051606081016001600160401b0381118282101761015b576040526060840151815260808401519160208201928352604060a08601519481840195865260bf190112610171576040805190810196906001600160401b0388118189101761015b5760209760405260e060c0880151978883520151978891015260018060a81b0319600054161760005560018060a01b031660018060a01b0319600854161760085551600355516004555160055560065560075560018060a01b031660018060a01b031960095416176009556040516122d3908161018b8239f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101715756fe6080604052600436101561001257600080fd5b60003560e01c80630ba95909146101b75780631ba46cfd146101b257806321e32d55146101ad5780632421e155146101a85780632cd26d45146101a35780633fe3347a1461019e578063422e0028146101995780634dde6fbc146101945780634e3c10b71461018f578063640c0b361461018a578063825b5f8d1461018557806382d21cd8146101805780639a03636c1461017b578063bc58770614610176578063cb5c029a14610171578063cbe342851461016c578063cdfceeba14610167578063cfc7e2da14610162578063d0b436bd1461015d578063ddac5dc114610158578063e06174e414610153578063ed6ea33a1461014e578063efbfb2ae14610149578063f4ad17c614610144578063fa750f561461013f5763fb3e3d731461013a57600080fd5b610dd1565b610dab565b610d90565b610d75565b610cf7565b610cd0565b610ca4565b610c86565b610c6b565b610c40565b610c22565b610881565b6107fc565b6107be565b610675565b61065a565b61063c565b610562565b61050a565b610468565b610318565b6102f1565b61028e565b61020b565b6101ef565b6101cc565b60009103126101c757565b600080fd5b346101c75760003660031901126101c75760206101e7610e0a565b604051908152f35b346101c75760003660031901126101c757602060405160008152f35b346101c75760003660031901126101c75760206001600160a01b0360025416604051908152f35b60005b8381106102455750506000910152565b8181015183820152602001610235565b9060209161026e81518092818552858086019101610232565b601f01601f1916010190565b90602061028b928181520190610255565b90565b346101c75760003660031901126101c7576102ed60408051906102b1818361036b565b600782527f7462726964676500000000000000000000000000000000000000000000000000602083015251918291602083526020830190610255565b0390f35b346101c75760003660031901126101c75760206001600160a01b0360085416604051908152f35b346101c75760003660031901126101c757602060405160018152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761036657604052565b610334565b90601f8019910116810190811067ffffffffffffffff82111761036657604052565b6040519061039d6101008361036b565b565b6040519061039d60808361036b565b6040519061039d60a08361036b565b9061039d604051928361036b565b6004359067ffffffffffffffff821682036101c757565b359067ffffffffffffffff821682036101c757565b67ffffffffffffffff811161036657601f01601f191660200190565b92919261041f826103f7565b9161042d604051938461036b565b8294818452818301116101c7578281602093846000960137010152565b6001600160a01b038116036101c757565b6064359061039d8261044a565b346101c75760203660031901126101c75760043567ffffffffffffffff81116101c757606060031982360301126101c7576040516104a58161034a565b6104b1826004016103e2565b8152602482013567ffffffffffffffff81116101c7578201366023820112156101c757610508926104ee6044923690602460048201359101610413565b602084015201356104fe8161044a565b6040820152610e81565b005b346101c75760003660031901126101c7576020600554604051908152f35b90600182811c92168015610558575b602083101461054257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610537565b346101c75760003660031901126101c757604051600060015461058481610528565b808452906001811690811561061857506001146105b8575b6102ed836105ac8185038261036b565b6040519182918261027a565b91905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6916000905b8082106105fe575090915081016020016105ac61059c565b9192600181602092548385880101520191019092916105e6565b60ff191660208086019190915291151560051b840190910191506105ac905061059c565b346101c75760003660031901126101c7576020600654604051908152f35b346101c75760003660031901126101c75760206101e76110c8565b346101c75760803660031901126101c75761068e6103cb565b60243561069a8161044a565b60443567ffffffffffffffff81116101c757366023820112156101c757806004013567ffffffffffffffff81116101c75736602482840101116101c7576102ed936106f19360246106e961045b565b94019161112f565b60405190151581529081906020820190565b35906fffffffffffffffffffffffffffffffff821682036101c757565b9080601f830112156101c75781602061028b93359101610413565b9190610100838203126101c75761075061038d565b9280358452602081013560208501526040810135604085015261077560608201610703565b6060850152608081013567ffffffffffffffff81116101c75760e09261079c918301610720565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126101c75760043567ffffffffffffffff81116101c7576107ea90369060040161073b565b5063e7a24ff960e01b60005260046000fd5b346101c75760003660031901126101c757600460206001600160a01b036009541660405192838092635e2c3b8360e11b82525afa90811561087c5760009161084d575b506040519015158152602090f35b61086f915060203d602011610875575b610867818361036b565b810190611272565b3861083f565b503d61085d565b610dfe565b60603660031901126101c75760043567ffffffffffffffff81116101c7576108ad90369060040161073b565b6024359060443567ffffffffffffffff81116101c7576108d1903690600401610720565b916108f36108e76009546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa90811561087c57600091610c03575b50610bf257604051635e2c3b8360e11b8152602081600481885afa90811561087c57600091610bd3575b50610b45575b5050805161095d61132d565b11610b3457805161096c610e0a565b10610b235760a08101805161097f611437565b11610b125760c0820191825161099361149e565b11610b015760e0810180516109a66110c8565b11610af0576109d8604083015183516109d260608601516fffffffffffffffffffffffffffffffff1690565b916116c0565b946020830195865103610adf5760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561087c57600091610ac0575b50610aaf57610a6f610a7791610a67610a8796610a5d86518a51835186519060808b015192610a416103ae565b94855260208501526040840152606083015260808201526117db565b9551905190611320565b905190611320565b9183516118a0565b610a7f6113a9565b915191611910565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610ad9915060203d60201161087557610867818361036b565b38610a14565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610b8291602091610b5461039f565b32815291600084840152604083015260608201526040518093819263849e8b9f60e01b83526004830161128a565b0381865afa90811561087c57600091610bb4575b5015610ba3573880610951565b633042041f60e21b60005260046000fd5b610bcd915060203d60201161087557610867818361036b565b38610b96565b610bec915060203d60201161087557610867818361036b565b3861094b565b630e2f42c960e31b60005260046000fd5b610c1c915060203d60201161087557610867818361036b565b38610921565b346101c75760003660031901126101c7576020600754604051908152f35b346101c75760003660031901126101c757602067ffffffffffffffff60005460a81c16604051908152f35b346101c75760003660031901126101c75760206101e761132d565b346101c75760003660031901126101c7576020600454604051908152f35b346101c75760003660031901126101c7576020610cbf6113a9565b6001600160a01b0360405191168152f35b346101c75760003660031901126101c75760206001600160a01b0360095416604051908152f35b346101c75760003660031901126101c757602460206001600160a01b03600954166040519283809263bb07320560e01b82523060048301525afa801561087c576102ed91600091610d56575b5060405190151581529081906020820190565b610d6f915060203d60201161087557610867818361036b565b38610d43565b346101c75760003660031901126101c75760206101e7611437565b346101c75760003660031901126101c75760206101e761149e565b346101c75760003660031901126101c757602060ff60005460a01c166040519015158152f35b346101c75760003660031901126101c7576020600354604051908152f35b908160209103126101c7575190565b6040513d6000823e3d90fd5b60095460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087c57600091610e52575b508061028b575060045490565b610e74915060203d602011610e7a575b610e6c818361036b565b810190610def565b38610e45565b503d610e62565b60005460ff8160a01c16611064577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff821161036657610f0582610f00600154610528565b611075565b602090601f8311600114610fd55792610f4083610f5294604094610f8697600092610fca575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b61039d740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b015190503880610f2b565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b81811061104c575093604093610f86969360019383610f529810611033575b505050811b01600155610f44565b015160001960f88460031b161c19169055388080611025565b92936020600181928786015181550195019301611006565b636d8f115160e11b60005260046000fd5b601f8111611081575050565b60016000526020600020906020601f840160051c830193106110be575b601f0160051c01905b8181106110b2575050565b600081556001016110a7565b909150819061109e565b6009546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa90811561087c57600091611110575b508061028b575060075490565b611129915060203d602011610e7a57610e6c818361036b565b38611103565b92909493916001600160a01b0360085416330361126157611151913691610413565b9361115a611505565b50611163611505565b926111a661119a61118e6111826111798a611a8e565b9089528a611b0f565b90602089015289611b0f565b90604088015288611b0f565b90606087015287611d18565b90966111b28883611320565b815110158061124a575b6111c590611b9b565b876111f357506111e36111ee96976040519260208401604052611320565b506080850152611599565b600190565b9660405191601f821698818a1560051b808c8701019b858d0193010101905b808b10611237575050906111e3916111ee9899828552601f8019910116604052611320565b9099602080918c518152019a0190611212565b506111c56112588984611320565b831090506111bc565b633dca01cf60e11b60005260046000fd5b908160209103126101c7575180151581036101c75790565b60a0606061028b93602084526001600160a01b0381511660208501526001600160a01b0360208201511660408501526040810151828501520151916080808201520190610255565b90602082018092116112e057565b634e487b7160e01b600052601160045260246000fd5b90600882018092116112e057565b90600482018092116112e057565b90600282018092116112e057565b919082018092116112e057565b600954604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087c57600091611375575b508061028b575060035490565b61138e915060203d602011610e7a57610e6c818361036b565b38611368565b908160209103126101c7575161028b8161044a565b6009546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087c57600091611408575b506001600160a01b038116156113f75790565b6306f3d63360e51b60005260046000fd5b61142a915060203d602011611430575b611422818361036b565b810190611394565b386113e4565b503d611418565b600954604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087c5760009161147f575b508061028b575060055490565b611498915060203d602011610e7a57610e6c818361036b565b38611472565b600954604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa90811561087c576000916114e6575b508061028b575060065490565b6114ff915060203d602011610e7a57610e6c818361036b565b386114d9565b6040519060a0820182811067ffffffffffffffff8211176103665760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b0361159260806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e0850190610255565b9416910152565b909291926001600160a01b036115ba6108e76002546001600160a01b031690565b9116036116815767ffffffffffffffff6115f16115e460005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b9116036116705780511561165f5761160d6108e76108e76113a9565b91823b156101c75761163992600092836040518096819582946378d60cd760e01b845260048401611544565b03925af1801561087c5761164a5750565b80611659600061039d9361036b565b806101bc565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b919060608301926000905b600382106116aa57505050565b602080600192855181520193019101909161169d565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210156117b3576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210156117a257611773926020926117416108e76000546001600160a01b031690565b9161174c60606103bd565b93845284840152604083015260405180809581946304b98e1d60e31b835260048301611692565b03915afa90811561087c57600091611789575090565b61028b915060203d602011610e7a57610e6c818361036b565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b906117d760209282815194859201610232565b0190565b61028b61188c916118926117ef8251611bf3565b9161188c6118006020830151611bf3565b9161188c6118116040830151611bf3565b61188c60806118236060860151611bf3565b9401519561187c61183e67ffffffffffffffff895116611e25565b602060405199826118588c94518092858088019101610232565b830161186c82518093858085019101610232565b010103601f19810189528861036b565b6040519a8b9960208b01906117c4565b906117c4565b03601f19810183528261036b565b6001600160a01b03600854166001600160a01b03600254169067ffffffffffffffff60005460a81c16813b156101c75760009367ffffffffffffffff936116396040519788968795869463c81739cd60e01b86526004860152166024840152606060448401526064830190610255565b909161191c9083611320565b34036119a557600080809381935af13d156119a0573d61193b816103f7565b90611949604051928361036b565b8152600060203d92013e5b1561195b57565b60405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606490fd5b611954565b60405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e00000000000000000000000000006044820152606490fd5b156119f157565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b15611a4957565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b80516020111580611af8575b611aa3906119ea565b604051602090910151601f60005b60208110611ae257505050602081016040525190611ad86001600160ff1b03831115611a42565b61028b60006112d2565b60019083831a8186015301906000190190611ab1565b50611aa3611b0660006112d2565b15159050611a9a565b919091602083018084116112e0578151101580611b85575b611b30906119ea565b60405190830160200151601f60005b60208110611b6f5750505080602061028b92016040525192611b6a6001600160ff1b03851115611a42565b6112d2565b60019083831a8186015301906000190190611b3f565b50611b30611b92846112d2565b84109050611b27565b15611ba257565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b6001600160ff1b038111611c3c576040516020815290601f60005b60208110611c23575050506040810160405290565b60019083831a6020828701015301906000190190611c0e565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b15611c8857565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b15611cd357565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b9190611d249083611f1f565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b8103611d8957505061ffff92611d6391612144565b921660fd81101580611d7d575b611d7990611ccc565b9190565b5061ffff811115611d70565b607f60f91b8103611dc957505063ffffffff92611da5916120c7565b921661ffff811180611dbb575b611d7990611c81565b5063ffffffff811115611db2565b7fff0000000000000000000000000000000000000000000000000000000000000003611e14575067ffffffffffffffff92611e0391611ff3565b9216611d7963ffffffff8211611c81565b905060f81c611d7960fd8210611c81565b67ffffffffffffffff811660fd811015611e5b575060ff61028b9116604051906001825260f81b60208201526021810160405290565b61ffff8111611eab575061028b61188c91611892611e9b61ffff611e9460fd604051906001825260f81b60208201526021810160405290565b9316612262565b60405194859360208501906117c4565b63ffffffff10611eed5761028b61188c91611892611e9b63ffffffff611ee660fe604051906001825260f81b60208201526021810160405290565b9316612227565b61028b61188c91611892611e9b611f1960ff604051906001825260f81b60208201526021810160405290565b926121ec565b919060018101928382116112e057805184111580611f93575b15611f4f57602082859201015191116112e0579190565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b50838210611f38565b15611fa357565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600883018084116112e057815110158061205a575b61201490611f9c565b60405190830160200151600760005b60088110612044575050506008810160405260171901519161028b906112f6565b60019083831a8186015301906000190190612023565b50612014612067846112f6565b8410905061200b565b1561207757565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600483018084116112e057815110158061212e575b6120e890612070565b60405190830160200151600360005b600481106121185750505060048101604052601b1901519161028b90611304565b60019083831a81860153019060001901906120f7565b506120e861213b84611304565b841090506120df565b919091600283018084116112e057815181111590816121e2575b50156121925761028b90602084604051920101518060011a825360001a600182015360028101604052601d19015192611312565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b905083103861215e565b6040516008815290601f60005b6008811061220e575050506028810160405290565b60019083831a60208287010153019060001901906121f9565b6040516004815290601f60005b60048110612249575050506024810160405290565b60019083831a6020828701015301906000190190612234565b6040516002815290601f60005b60028110612284575050506022810160405290565b60019083831a602082870101530190600019019061226f56fea2646970667358221220286990ecd18266227846acd8339652b2d92efde84cd74dc58568f0efc0b0116464736f6c634300081a0033';

type MystikoV2TBridgeMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2TBridgeMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2TBridgeMain__factory extends ContractFactory {
  constructor(...args: MystikoV2TBridgeMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2TBridgeMain';
  }

  deploy(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2TBridgeMain> {
    return super.deploy(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2TBridgeMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2TBridgeMain {
    return super.attach(address) as MystikoV2TBridgeMain;
  }
  connect(signer: Signer): MystikoV2TBridgeMain__factory {
    return super.connect(signer) as MystikoV2TBridgeMain__factory;
  }
  static readonly contractName: 'MystikoV2TBridgeMain';
  public readonly contractName: 'MystikoV2TBridgeMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2TBridgeMainInterface {
    return new utils.Interface(_abi) as MystikoV2TBridgeMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2TBridgeMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2TBridgeMain;
  }
}
