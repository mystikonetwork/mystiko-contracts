/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2TBridgeERC20,
  MystikoV2TBridgeERC20Interface,
  IMystikoBridge,
} from '../MystikoV2TBridgeERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.LocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'depositWithCertificate',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settingsCenter',
    outputs: [
      {
        internalType: 'contract MystikoSettingsCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b191690553480156200001e57600080fd5b5060405162002a5938038062002a5983398101604081905262000041916200012b565b600080546001600160a01b03199081166001600160a01b039889161790915560088054821695881695909517909455815160035560208083015160045560409092015160055580516006550151600755600980548316918516919091179055600a80549091169190921617905562000210565b6001600160a01b0381168114620000ca57600080fd5b50565b600060408284031215620000e057600080fd5b604080519081016001600160401b03811182821017156200011157634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6000806000806000808688036101208112156200014757600080fd5b87516200015481620000b4565b60208901519097506200016781620000b4565b60408901519096506200017a81620000b4565b60608901519095506200018d81620000b4565b93506060607f1982011215620001a257600080fd5b50604051606081016001600160401b0381118282101715620001d457634e487b7160e01b600052604160045260246000fd5b60409081526080890151825260a0890151602083015260c0890151908201529150620002048860e08901620000cd565b90509295509295509295565b61283980620002206000396000f3fe6080604052600436106101ac5760003560e01c8063825b5f8d116100ec578063cdfceeba1161008a578063ddac5dc111610064578063ddac5dc114610490578063ed6ea33a146104a5578063efbfb2ae146104ba578063fb3e3d73146104cf57600080fd5b8063cdfceeba14610424578063cfc7e2da14610465578063d0b436bd1461047a57600080fd5b8063abc1bd22116100c6578063abc1bd22146103b2578063c2d41601146103d2578063c9230c5d146103f9578063cbe342851461040e57600080fd5b8063825b5f8d1461035a57806382d21cd81461036f5780639a03636c1461039f57600080fd5b80632dd65461116101595780634dde6fbc116101335780634dde6fbc146103045780634e3c10b71461031a5780635898a0a81461032f578063640c0b361461034457600080fd5b80632dd65461146102b35780633fe3347a146102c8578063422e0028146102e457600080fd5b806321e32d551161018a57806321e32d551461022d5780632421e1551461024d5780632cd26d451461029357600080fd5b80630ba95909146101b1578063176de7a8146101d95780631ba46cfd146101fb575b600080fd5b3480156101bd57600080fd5b506101c66104e5565b6040519081526020015b60405180910390f35b3480156101e557600080fd5b506101ee61056e565b6040516101d09190612002565b34801561020757600080fd5b50600a546001600160a01b03165b6040516001600160a01b0390911681526020016101d0565b34801561023957600080fd5b50600254610215906001600160a01b031681565b34801561025957600080fd5b5060408051808201909152600781527f746272696467650000000000000000000000000000000000000000000000000060208201526101ee565b34801561029f57600080fd5b50600854610215906001600160a01b031681565b6102c66102c13660046121ec565b6105e5565b005b3480156102d457600080fd5b5060006040516101d09190612259565b3480156102f057600080fd5b506102c66102ff3660046122b1565b6105fe565b34801561031057600080fd5b506101c660055481565b34801561032657600080fd5b506101ee6106eb565b34801561033b57600080fd5b506101c6610779565b34801561035057600080fd5b506101c660065481565b34801561036657600080fd5b506101c6610800565b34801561037b57600080fd5b5061038f61038a36600461235b565b610887565b60405190151581526020016101d0565b6102c66103ad366004612406565b610911565b3480156103be57600080fd5b50600954610215906001600160a01b031681565b3480156103de57600080fd5b506103e7610bf6565b60405160ff90911681526020016101d0565b34801561040557600080fd5b506101ee610c64565b34801561041a57600080fd5b506101c660075481565b34801561043057600080fd5b5060005461044c90600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101d0565b34801561047157600080fd5b506101c6610cae565b34801561048657600080fd5b506101c660045481565b34801561049c57600080fd5b50610215610d35565b3480156104b157600080fd5b5061038f610dd4565b3480156104c657600080fd5b506101c6610e41565b3480156104db57600080fd5b506101c660035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610556919061243b565b905080156105645780610568565b6004545b91505090565b600a54604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156105b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e09190810190612454565b905090565b60405163e7a24ff960e01b815260040160405180910390fd5b600054600160a01b900460ff161561062957604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff909216919091179055602081015160019061067d908261254a565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b600180546106f8906124c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610724906124c2565b80156107715780601f1061074657610100808354040283529160200191610771565b820191906000526020600020905b81548152906001019060200180831161075457829003601f168201915b505050505081565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa1580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea919061243b565b905080156107f85780610568565b505060065490565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610871919061243b565b9050801561087f5780610568565b505060075490565b6008546000906001600160a01b031633146108b557604051633dca01cf60e11b815260040160405180910390fd5b60006108f685858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ec892505050565b905061090487878584610f90565b5060019695505050505050565b6009546040516355f0ba2960e01b81523060048201526001600160a01b03909116906355f0ba2990602401602060405180830381865afa158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d919061260a565b1561099b57604051630e2f42c960e31b815260040160405180910390fd5b6109a3610cae565b815110156109c45760405163617ab12d60e11b815260040160405180910390fd5b6109cc6104e5565b815111156109ed57604051630625040160e01b815260040160405180910390fd5b6109f5610e41565b8160a001511015610a195760405163c4d8d00d60e01b815260040160405180910390fd5b610a21610779565b8160c001511015610a45576040516355a6d6a160e11b815260040160405180910390fd5b610a4d610800565b8160e001511015610a715760405163784f02bd60e11b815260040160405180910390fd5b6000610a8a826040015183600001518460600151611083565b905080826020015114610ab0576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c919061260a565b15610b3a57604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201526000610b7d8261119a565b9050610b8d8460a0015182611209565b610bc2610b98610d35565b60e086015160c08701518751610bae919061262c565b610bb8919061262c565b8660a0015161128f565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b600a546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015610c40573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e0919061264d565b600a54604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa1580156105b8573d6000803e3d6000fd5b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1f919061243b565b90508015610d2d5780610568565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa158015610d82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da69190612670565b90506001600160a01b038116610dcf576040516306f3d63360e51b815260040160405180910390fd5b919050565b6009546040516355f0ba2960e01b81523060048201526000916001600160a01b0316906355f0ba2990602401602060405180830381865afa158015610e1d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e0919061260a565b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa158015610e8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb2919061243b565b90508015610ec05780610568565b505060055490565b610efa6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b610f2c6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6000610f388482611300565b9083529050610f478482611300565b60208401919091529050610f5b8482611300565b60408401919091529050610f6f8482611300565b60608401919091529050610f838482611431565b5060808301525092915050565b6002546001600160a01b03848116911614610fbe57604051631440e07960e11b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b9092041614610ff457604051633876304f60e21b815260040160405180910390fd5b80516000036110165760405163820bf1e560e01b815260040160405180910390fd5b61101e610d35565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b815260040161104b92919061268d565b600060405180830381600087803b15801561106557600080fd5b505af1158015611079573d6000803e3d6000fd5b5050505050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018085106110c65760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff16106110f857604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891611150916004016126ea565b602060405180830381865afa15801561116d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611191919061243b565b95945050505050565b6060806111aa836000015161153e565b6111b7846020015161153e565b6111c4856040015161153e565b6111d1866060015161153e565b6111de87608001516115d6565b6040516020016111f295949392919061271b565b60408051601f198184030181529190529392505050565b60085460025460005460405163c81739cd60e01b81526001600160a01b039384169363c81739cd93879361125993919092169167ffffffffffffffff600160a81b90910416908790600401612786565b6000604051808303818588803b15801561127257600080fd5b505af1158015611286573d6000803e3d6000fd5b50505050505050565b8034146112e35760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600a546112fb906001600160a01b031633858561160d565b505050565b6000808351836020611312919061262c565b11158015611329575061132683602061262c565b83105b6113815760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016112da565b600060405160206000600182038760208a0101515b838310156113b65780821a83860153600183019250600182039150611396565b50505081016040525190506001600160ff1b038111156114185760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016112da565b8061142485602061262c565b92509250505b9250929050565b60606000806114408585611682565b8651909550909150611452828661262c565b111580156114685750611465818561262c565b84105b6114c05760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016112da565b6060811580156114db57604051915060208201604052611525565b6040519150601f8316801560200281840101848101888315602002848c0101015b818310156115145780518352602092830192016114fc565b5050848452601f01601f1916604052505b5080611531838761262c565b9350935050509250929050565b60606001600160ff1b038211156115975760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016112da565b60405160208082526000601f5b828210156115c65785811a8260208601015360019190910190600019016115a4565b5050506040818101905292915050565b80516060906115e481611886565b836040516020016115f69291906127b8565b604051602081830303815290604052915050919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905261167c908590611950565b50505050565b60008060006116918585611a38565b9450905060006001600160f81b0319821660fd60f81b03611729576116b68686611ac0565b955061ffff16905060fd81108015906116d1575061ffff8111155b61171d5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016112da565b925083915061142a9050565b6001600160f81b03198216607f60f91b036117b3576117488686611b79565b955063ffffffff16905061ffff81118015611767575063ffffffff8111155b61171d5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016112da565b6001600160f81b03198083169003611830576117cf8686611c4a565b955067ffffffffffffffff16905063ffffffff811161171d5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016112da565b5060f881901c60fd811061171d5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016112da565b606060fd8267ffffffffffffffff1610156118bb57604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff161161190b576118db60fd60f81b611d1b565b6118e483611d42565b6040516020016118f59291906127b8565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116119365761192d607f60f91b611d1b565b6118e483611d85565b6119476001600160f81b0319611d1b565b6118e483611dc8565b60006119a5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611e0b9092919063ffffffff16565b90508051600014806119c65750808060200190518101906119c6919061260a565b6112fb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016112da565b6000808351836001611a4a919061262c565b11158015611a615750611a5e83600161262c565b83105b611aad5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016112da565b838301602001518061142485600161262c565b6000808351836002611ad2919061262c565b11158015611ae95750611ae683600261262c565b83105b611b405760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016112da565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e81035191505080846002611424919061262c565b6000808351836004611b8b919061262c565b11158015611ba25750611b9f83600461262c565b83105b611bf95760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016112da565b600060405160046000600182038760208a0101515b83831015611c2e5780821a83860153600183019250600182039150611c0e565b505050016040819052601f19015190508061142485600461262c565b6000808351836008611c5c919061262c565b11158015611c735750611c7083600861262c565b83105b611cca5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016112da565b600060405160086000600182038760208a0101515b83831015611cff5780821a83860153600183019250600182039150611cdf565b505050016040819052601f19015190508061142485600861262c565b60408051600181526001600160f81b031983166020820152602181019091526060906118b5565b6040516002808252606091906000601f5b82821015611d755785811a826020860101536001919091019060001901611d53565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611db85785811a826020860101536001919091019060001901611d96565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611dfb5785811a826020860101536001919091019060001901611dd9565b5050506028810160405292915050565b6060611e1a8484600085611e22565b949350505050565b606082471015611e9a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016112da565b600080866001600160a01b03168587604051611eb691906127e7565b60006040518083038185875af1925050503d8060008114611ef3576040519150601f19603f3d011682016040523d82523d6000602084013e611ef8565b606091505b5091509150611f0987838387611f14565b979650505050505050565b60608315611f83578251600003611f7c576001600160a01b0385163b611f7c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016112da565b5081611e1a565b611e1a8383815115611f985781518083602001fd5b8060405162461bcd60e51b81526004016112da9190612002565b60005b83811015611fcd578181015183820152602001611fb5565b50506000910152565b60008151808452611fee816020860160208601611fb2565b601f01601f19169290920160200192915050565b6020815260006120156020830184611fd6565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156120565761205661201c565b60405290565b6040516060810167ffffffffffffffff811182821017156120565761205661201c565b604051601f8201601f1916810167ffffffffffffffff811182821017156120a8576120a861201c565b604052919050565b80356fffffffffffffffffffffffffffffffff81168114610dcf57600080fd5b600067ffffffffffffffff8211156120ea576120ea61201c565b50601f01601f191660200190565b600061210b612106846120d0565b61207f565b905082815283838301111561211f57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261214757600080fd5b612015838335602085016120f8565b6000610100828403121561216957600080fd5b612171612032565b9050813581526020820135602082015260408201356040820152612197606083016120b0565b6060820152608082013567ffffffffffffffff8111156121b657600080fd5b6121c284828501612136565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b60008060006060848603121561220157600080fd5b833567ffffffffffffffff8082111561221957600080fd5b61222587838801612156565b945060208601359350604086013591508082111561224257600080fd5b5061224f86828701612136565b9150509250925092565b602081016002831061227b57634e487b7160e01b600052602160045260246000fd5b91905290565b803567ffffffffffffffff81168114610dcf57600080fd5b6001600160a01b03811681146122ae57600080fd5b50565b6000602082840312156122c357600080fd5b813567ffffffffffffffff808211156122db57600080fd5b90830190606082860312156122ef57600080fd5b6122f761205c565b61230083612281565b815260208301358281111561231457600080fd5b83019150601f8201861361232757600080fd5b612336868335602085016120f8565b60208201526040830135925061234b83612299565b6040810192909252509392505050565b60008060008060006080868803121561237357600080fd5b61237c86612281565b9450602086013561238c81612299565b9350604086013567ffffffffffffffff808211156123a957600080fd5b818801915088601f8301126123bd57600080fd5b8135818111156123cc57600080fd5b8960208285010111156123de57600080fd5b60208301955080945050505060608601356123f881612299565b809150509295509295909350565b60006020828403121561241857600080fd5b813567ffffffffffffffff81111561242f57600080fd5b611e1a84828501612156565b60006020828403121561244d57600080fd5b5051919050565b60006020828403121561246657600080fd5b815167ffffffffffffffff81111561247d57600080fd5b8201601f8101841361248e57600080fd5b805161249c612106826120d0565b8181528560208385010111156124b157600080fd5b611191826020830160208601611fb2565b600181811c908216806124d657607f821691505b6020821081036124f657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156112fb57600081815260208120601f850160051c810160208610156125235750805b601f850160051c820191505b818110156125425782815560010161252f565b505050505050565b815167ffffffffffffffff8111156125645761256461201c565b6125788161257284546124c2565b846124fc565b602080601f8311600181146125ad57600084156125955750858301515b600019600386901b1c1916600185901b178555612542565b600085815260208120601f198616915b828110156125dc578886015182559484019460019091019084016125bd565b50858210156125fa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561261c57600080fd5b8151801515811461201557600080fd5b808201808211156118b557634e487b7160e01b600052601160045260246000fd5b60006020828403121561265f57600080fd5b815160ff8116811461201557600080fd5b60006020828403121561268257600080fd5b815161201581612299565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526126d160e0840182611fd6565b9150506001600160a01b03831660208301529392505050565b60608101818360005b60038110156127125781518352602092830192909101906001016126f3565b50505092915050565b6000865161272d818460208b01611fb2565b865190830190612741818360208b01611fb2565b8651910190612754818360208a01611fb2565b8551910190612767818360208901611fb2565b845191019061277a818360208801611fb2565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006111916060830184611fd6565b600083516127ca818460208801611fb2565b8351908301906127de818360208801611fb2565b01949350505050565b600082516127f9818460208701611fb2565b919091019291505056fea264697066735822122055826c3c66dc6047935f2cfb161ee58e52d5c325d7480e1f9e7a4436a28769a564736f6c63430008140033';

type MystikoV2TBridgeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2TBridgeERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2TBridgeERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2TBridgeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2TBridgeERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2TBridgeERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2TBridgeERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2TBridgeERC20 {
    return super.attach(address) as MystikoV2TBridgeERC20;
  }
  connect(signer: Signer): MystikoV2TBridgeERC20__factory {
    return super.connect(signer) as MystikoV2TBridgeERC20__factory;
  }
  static readonly contractName: 'MystikoV2TBridgeERC20';
  public readonly contractName: 'MystikoV2TBridgeERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2TBridgeERC20Interface {
    return new utils.Interface(_abi) as MystikoV2TBridgeERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2TBridgeERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2TBridgeERC20;
  }
}
