/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2TBridgeERC20,
  MystikoV2TBridgeERC20Interface,
  IMystikoBridge,
} from '../MystikoV2TBridgeERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.LocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_fromChainId',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: '_fromContract',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'crossChainSyncTx',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settingsCenter',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b191690553480156200001e57600080fd5b5060405162002ad638038062002ad683398101604081905262000041916200012b565b600080546001600160a01b03199081166001600160a01b039889161790915560088054821695881695909517909455815160035560208083015160045560409092015160055580516006550151600755600980548316918516919091179055600a80549091169190921617905562000210565b6001600160a01b0381168114620000ca57600080fd5b50565b600060408284031215620000e057600080fd5b604080519081016001600160401b03811182821017156200011157634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6000806000806000808688036101208112156200014757600080fd5b87516200015481620000b4565b60208901519097506200016781620000b4565b60408901519096506200017a81620000b4565b60608901519095506200018d81620000b4565b93506060607f1982011215620001a257600080fd5b50604051606081016001600160401b0381118282101715620001d457634e487b7160e01b600052604160045260246000fd5b60409081526080890151825260a0890151602083015260c0890151908201529150620002048860e08901620000cd565b90509295509295509295565b6128b680620002206000396000f3fe6080604052600436106101ac5760003560e01c806382d21cd8116100ec578063cdfceeba1161008a578063ddac5dc111610064578063ddac5dc114610490578063ed6ea33a146104a5578063efbfb2ae146104ba578063fb3e3d73146104cf57600080fd5b8063cdfceeba14610424578063cfc7e2da14610465578063d0b436bd1461047a57600080fd5b8063c2d41601116100c6578063c2d41601146103bf578063c9230c5d146103e6578063cb5c029a146103fb578063cbe342851461040e57600080fd5b806382d21cd81461035c5780639a03636c1461038c578063abc1bd221461039f57600080fd5b80633fe3347a116101595780634e3c10b7116101335780634e3c10b7146103075780635898a0a81461031c578063640c0b3614610331578063825b5f8d1461034757600080fd5b80633fe3347a146102b3578063422e0028146102cf5780634dde6fbc146102f157600080fd5b806321e32d551161018a57806321e32d551461022d5780632421e1551461024d5780632cd26d451461029357600080fd5b80630ba95909146101b1578063176de7a8146101d95780631ba46cfd146101fb575b600080fd5b3480156101bd57600080fd5b506101c66104e5565b6040519081526020015b60405180910390f35b3480156101e557600080fd5b506101ee61056e565b6040516101d09190612032565b34801561020757600080fd5b50600a546001600160a01b03165b6040516001600160a01b0390911681526020016101d0565b34801561023957600080fd5b50600254610215906001600160a01b031681565b34801561025957600080fd5b5060408051808201909152600781527f746272696467650000000000000000000000000000000000000000000000000060208201526101ee565b34801561029f57600080fd5b50600854610215906001600160a01b031681565b3480156102bf57600080fd5b5060006040516101d09190612045565b3480156102db57600080fd5b506102ef6102ea366004612194565b6105e5565b005b3480156102fd57600080fd5b506101c660055481565b34801561031357600080fd5b506101ee6106d2565b34801561032857600080fd5b506101c6610760565b34801561033d57600080fd5b506101c660065481565b34801561035357600080fd5b506101c66107e7565b34801561036857600080fd5b5061037c61037736600461223e565b61086e565b60405190151581526020016101d0565b6102ef61039a3660046123bf565b6108f8565b3480156103ab57600080fd5b50600954610215906001600160a01b031681565b3480156103cb57600080fd5b506103d4610911565b60405160ff90911681526020016101d0565b3480156103f257600080fd5b506101ee61097f565b6102ef6104093660046123fc565b6109c9565b34801561041a57600080fd5b506101c660075481565b34801561043057600080fd5b5060005461044c90600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101d0565b34801561047157600080fd5b506101c6610dfe565b34801561048657600080fd5b506101c660045481565b34801561049c57600080fd5b50610215610e85565b3480156104b157600080fd5b5061037c610f24565b3480156104c657600080fd5b506101c6610f91565b3480156104db57600080fd5b506101c660035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190612469565b905080156105645780610568565b6004545b91505090565b600a54604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa1580156105b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e09190810190612482565b905090565b600054600160a01b900460ff161561061057604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff90921691909117905560208101516001906106649082612581565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b600180546106df906124f9565b80601f016020809104026020016040519081016040528092919081815260200182805461070b906124f9565b80156107585780601f1061072d57610100808354040283529160200191610758565b820191906000526020600020905b81548152906001019060200180831161073b57829003601f168201915b505050505081565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa1580156107ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d19190612469565b905080156107df5780610568565b505060065490565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108589190612469565b905080156108665780610568565b505060075490565b6008546000906001600160a01b0316331461089c57604051633dca01cf60e11b815260040160405180910390fd5b60006108dd85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061101892505050565b90506108eb878785846110e0565b5060019695505050505050565b60405163e7a24ff960e01b815260040160405180910390fd5b600a546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa15801561095b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190612641565b600a54604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa1580156105b8573d6000803e3d6000fd5b6009546040516355f0ba2960e01b81523060048201526001600160a01b03909116906355f0ba2990602401602060405180830381865afa158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190612664565b15610a5357604051630e2f42c960e31b815260040160405180910390fd5b600960009054906101000a90046001600160a01b03166001600160a01b031663dc7f01246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aca9190612664565b15610ba15760006040518060800160405280326001600160a01b03168152602001610afd600a546001600160a01b031690565b6001600160a01b039081168252602082018690526040918201859052600954915163849e8b9f60e01b8152929350169063849e8b9f90610b41908490600401612686565b602060405180830381865afa158015610b5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b829190612664565b610b9f57604051633042041f60e21b815260040160405180910390fd5b505b610ba9610dfe565b83511015610bca5760405163617ab12d60e11b815260040160405180910390fd5b610bd26104e5565b83511115610bf357604051630625040160e01b815260040160405180910390fd5b610bfb610f91565b8360a001511015610c1f5760405163c4d8d00d60e01b815260040160405180910390fd5b610c27610760565b8360c001511015610c4b576040516355a6d6a160e11b815260040160405180910390fd5b610c536107e7565b8360e001511015610c775760405163784f02bd60e11b815260040160405180910390fd5b6000610c908460400151856000015186606001516111d3565b905080846020015114610cb6576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa158015610cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d229190612664565b15610d4057604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252855181526020808701519082015260c08601519181019190915260e08501516060820152608080860151908201526000610d83826112ec565b9050610d938660a001518261135b565b610dc8610d9e610e85565b60e088015160c08901518951610db491906126cc565b610dbe91906126cc565b8860a001516113e1565b60208601516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a2505050505050565b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6f9190612469565b90508015610e7d5780610568565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef691906126ed565b90506001600160a01b038116610f1f576040516306f3d63360e51b815260040160405180910390fd5b919050565b6009546040516355f0ba2960e01b81523060048201526000916001600160a01b0316906355f0ba2990602401602060405180830381865afa158015610f6d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190612664565b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190612469565b905080156110105780610568565b505060055490565b61104a6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b61107c6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b60006110888482611452565b90835290506110978482611452565b602084019190915290506110ab8482611452565b604084019190915290506110bf8482611452565b606084019190915290506110d38482611583565b5060808301525092915050565b6002546001600160a01b0384811691161461110e57604051631440e07960e11b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b909204161461114457604051633876304f60e21b815260040160405180910390fd5b80516000036111665760405163820bf1e560e01b815260040160405180910390fd5b61116e610e85565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b815260040161119b92919061270a565b600060405180830381600087803b1580156111b557600080fd5b505af11580156111c9573d6000803e3d6000fd5b5050505050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018085106112165760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff161061124857604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e8916112a091600401612767565b602060405180830381865afa1580156112bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190612469565b9150505b9392505050565b6060806112fc8360000151611690565b6113098460200151611690565b6113168560400151611690565b6113238660600151611690565b6113308760800151611728565b604051602001611344959493929190612798565b60408051601f198184030181529190529392505050565b60085460025460005460405163c81739cd60e01b81526001600160a01b039384169363c81739cd9387936113ab93919092169167ffffffffffffffff600160a81b90910416908790600401612803565b6000604051808303818588803b1580156113c457600080fd5b505af11580156113d8573d6000803e3d6000fd5b50505050505050565b8034146114355760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600a5461144d906001600160a01b031633858561175f565b505050565b600080835183602061146491906126cc565b1115801561147b57506114788360206126cc565b83105b6114d35760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b606482015260840161142c565b600060405160206000600182038760208a0101515b838310156115085780821a838601536001830192506001820391506114e8565b50505081016040525190506001600160ff1b0381111561156a5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e6765000000000000000000604482015260640161142c565b806115768560206126cc565b92509250505b9250929050565b606060008061159285856117d4565b86519095509091506115a482866126cc565b111580156115ba57506115b781856126cc565b84105b6116125760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b606482015260840161142c565b60608115801561162d57604051915060208201604052611677565b6040519150601f8316801560200281840101848101888315602002848c0101015b8183101561166657805183526020928301920161164e565b5050848452601f01601f1916604052505b508061168383876126cc565b9350935050509250929050565b60606001600160ff1b038211156116e95760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e67650000000000604482015260640161142c565b60405160208082526000601f5b828210156117185785811a8260208601015360019190910190600019016116f6565b5050506040818101905292915050565b8051606090611736816119d8565b83604051602001611748929190612835565b604051602081830303815290604052915050919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526117ce908590611aa2565b50505050565b60008060006117e38585611b05565b9450905060006001600160f81b0319821660fd60f81b0361187b576118088686611b8d565b955061ffff16905060fd8110801590611823575061ffff8111155b61186f5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e676500604482015260640161142c565b925083915061157c9050565b6001600160f81b03198216607f60f91b036119055761189a8686611c46565b955063ffffffff16905061ffff811180156118b9575063ffffffff8111155b61186f5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161142c565b6001600160f81b03198083169003611982576119218686611d17565b955067ffffffffffffffff16905063ffffffff811161186f5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161142c565b5060f881901c60fd811061186f5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161142c565b606060fd8267ffffffffffffffff161015611a0d57604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff1611611a5d57611a2d60fd60f81b611de8565b611a3683611e0f565b604051602001611a47929190612835565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff1611611a8857611a7f607f60f91b611de8565b611a3683611e52565b611a996001600160f81b0319611de8565b611a3683611e95565b6000611ab76001600160a01b03841683611ed8565b90508051600014158015611adc575080806020019051810190611ada9190612664565b155b1561144d57604051635274afe760e01b81526001600160a01b038416600482015260240161142c565b6000808351836001611b1791906126cc565b11158015611b2e5750611b2b8360016126cc565b83105b611b7a5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d604482015260640161142c565b83830160200151806115768560016126cc565b6000808351836002611b9f91906126cc565b11158015611bb65750611bb38360026126cc565b83105b611c0d5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161142c565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e8103519150508084600261157691906126cc565b6000808351836004611c5891906126cc565b11158015611c6f5750611c6c8360046126cc565b83105b611cc65760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161142c565b600060405160046000600182038760208a0101515b83831015611cfb5780821a83860153600183019250600182039150611cdb565b505050016040819052601f1901519050806115768560046126cc565b6000808351836008611d2991906126cc565b11158015611d405750611d3d8360086126cc565b83105b611d975760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161142c565b600060405160086000600182038760208a0101515b83831015611dcc5780821a83860153600183019250600182039150611dac565b505050016040819052601f1901519050806115768560086126cc565b60408051600181526001600160f81b03198316602082015260218101909152606090611a07565b6040516002808252606091906000601f5b82821015611e425785811a826020860101536001919091019060001901611e20565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611e855785811a826020860101536001919091019060001901611e63565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611ec85785811a826020860101536001919091019060001901611ea6565b5050506028810160405292915050565b60606112e58383600084600080856001600160a01b03168486604051611efe9190612864565b60006040518083038185875af1925050503d8060008114611f3b576040519150601f19603f3d011682016040523d82523d6000602084013e611f40565b606091505b5091509150611f50868383611f5a565b9695505050505050565b606082611f6f57611f6a82611fb6565b6112e5565b8151158015611f8657506001600160a01b0384163b155b15611faf57604051639996b31560e01b81526001600160a01b038516600482015260240161142c565b50806112e5565b805115611fc65780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60005b83811015611ffd578181015183820152602001611fe5565b50506000910152565b6000815180845261201e816020860160208601611fe2565b601f01601f19169290920160200192915050565b6020815260006112e56020830184612006565b602081016002831061206757634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156120a6576120a661206d565b60405290565b604051610100810167ffffffffffffffff811182821017156120a6576120a661206d565b604051601f8201601f1916810167ffffffffffffffff811182821017156120f9576120f961206d565b604052919050565b803567ffffffffffffffff81168114610f1f57600080fd5b600067ffffffffffffffff8211156121335761213361206d565b50601f01601f191660200190565b600061215461214f84612119565b6120d0565b905082815283838301111561216857600080fd5b828260208301376000602084830101529392505050565b6001600160a01b0381168114611fdf57600080fd5b6000602082840312156121a657600080fd5b813567ffffffffffffffff808211156121be57600080fd5b90830190606082860312156121d257600080fd5b6121da612083565b6121e383612101565b81526020830135828111156121f757600080fd5b83019150601f8201861361220a57600080fd5b61221986833560208501612141565b60208201526040830135925061222e8361217f565b6040810192909252509392505050565b60008060008060006080868803121561225657600080fd5b61225f86612101565b9450602086013561226f8161217f565b9350604086013567ffffffffffffffff8082111561228c57600080fd5b818801915088601f8301126122a057600080fd5b8135818111156122af57600080fd5b8960208285010111156122c157600080fd5b60208301955080945050505060608601356122db8161217f565b809150509295509295909350565b80356fffffffffffffffffffffffffffffffff81168114610f1f57600080fd5b600082601f83011261231a57600080fd5b6112e583833560208501612141565b6000610100828403121561233c57600080fd5b6123446120ac565b905081358152602082013560208201526040820135604082015261236a606083016122e9565b6060820152608082013567ffffffffffffffff81111561238957600080fd5b61239584828501612309565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b6000602082840312156123d157600080fd5b813567ffffffffffffffff8111156123e857600080fd5b6123f484828501612329565b949350505050565b60008060006060848603121561241157600080fd5b833567ffffffffffffffff8082111561242957600080fd5b61243587838801612329565b945060208601359350604086013591508082111561245257600080fd5b5061245f86828701612309565b9150509250925092565b60006020828403121561247b57600080fd5b5051919050565b60006020828403121561249457600080fd5b815167ffffffffffffffff8111156124ab57600080fd5b8201601f810184136124bc57600080fd5b80516124ca61214f82612119565b8181528560208385010111156124df57600080fd5b6124f0826020830160208601611fe2565b95945050505050565b600181811c9082168061250d57607f821691505b60208210810361252d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561144d57600081815260208120601f850160051c8101602086101561255a5750805b601f850160051c820191505b8181101561257957828155600101612566565b505050505050565b815167ffffffffffffffff81111561259b5761259b61206d565b6125af816125a984546124f9565b84612533565b602080601f8311600181146125e457600084156125cc5750858301515b600019600386901b1c1916600185901b178555612579565b600085815260208120601f198616915b82811015612613578886015182559484019460019091019084016125f4565b50858210156126315787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561265357600080fd5b815160ff811681146112e557600080fd5b60006020828403121561267657600080fd5b815180151581146112e557600080fd5b6020815260006001600160a01b03808451166020840152806020850151166040840152506040830151606083015260608301516080808401526123f460a0840182612006565b80820180821115611a0757634e487b7160e01b600052601160045260246000fd5b6000602082840312156126ff57600080fd5b81516112e58161217f565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261274e60e0840182612006565b9150506001600160a01b03831660208301529392505050565b60608101818360005b600381101561278f578151835260209283019290910190600101612770565b50505092915050565b600086516127aa818460208b01611fe2565b8651908301906127be818360208b01611fe2565b86519101906127d1818360208a01611fe2565b85519101906127e4818360208901611fe2565b84519101906127f7818360208801611fe2565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff831660208201526060604082015260006124f06060830184612006565b60008351612847818460208801611fe2565b83519083019061285b818360208801611fe2565b01949350505050565b60008251612876818460208701611fe2565b919091019291505056fea26469706673582212204d369a564ff1e4001728559d5fb730330d62b298349a2d0f5dc0b6f2a973770764736f6c63430008140033';

type MystikoV2TBridgeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2TBridgeERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2TBridgeERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2TBridgeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2TBridgeERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2TBridgeERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2TBridgeERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2TBridgeERC20 {
    return super.attach(address) as MystikoV2TBridgeERC20;
  }
  connect(signer: Signer): MystikoV2TBridgeERC20__factory {
    return super.connect(signer) as MystikoV2TBridgeERC20__factory;
  }
  static readonly contractName: 'MystikoV2TBridgeERC20';
  public readonly contractName: 'MystikoV2TBridgeERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2TBridgeERC20Interface {
    return new utils.Interface(_abi) as MystikoV2TBridgeERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2TBridgeERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2TBridgeERC20;
  }
}
