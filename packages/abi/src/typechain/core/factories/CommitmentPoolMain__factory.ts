/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
      {
        internalType: 'address',
        name: '_daoCenter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RejectRelay',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RejectRollup',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'rollupSize',
        type: 'uint256',
      },
    ],
    name: 'RollupDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'inputNumber',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: 'outputNumber',
        type: 'uint32',
      },
    ],
    name: 'TransactDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'UnauthorizedRole',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'auditorPublicKey',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'id',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'publicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'note',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct CommitmentPool.AuditorNote[]',
        name: 'notes',
        type: 'tuple[]',
      },
    ],
    name: 'EncryptedAuditorNotes',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentQueuedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNullifierCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getQueuedCommitments',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
    ],
    name: 'grantRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_account',
        type: 'address',
      },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: '_accounts',
        type: 'address[]',
      },
    ],
    name: 'revokeRoles',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'uint256',
            name: 'randomAuditingPublicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb1790555f6007819055600881905560095534801562000045575f80fd5b5060405162004690380380620046908339810160408190526200006891620007d8565b60015f908155600280546001600160a01b0319166001600160a01b03851617905583908390839060ff84169003620000b357604051632c4f29b160e21b815260040160405180910390fd5b600160ff84161b608052620000c88362000112565b600b8190555f908152600a60205260409020805460ff19166001179055600d80546001600160a01b039092166001600160a81b031990921691909117905550620008259350505050565b5f8160ff165f036200014557507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff166001036200017857507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600203620001ab57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff16600303620001de57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff166004036200021057507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff166005036200024357507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff166006036200027657507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600703620002a957507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff16600803620002dc57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff166009036200030f57507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a036200034257507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b036200037557507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c03620003a857507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d03620003db57507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e036200040e57507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f036200044157507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff166010036200047457507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601103620004a657507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff16601203620004d957507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff166013036200050c57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff166014036200053f57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff166015036200057257507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601603620005a557507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff16601703620005d857507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff166018036200060b57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff166019036200063e57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a036200067157507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b03620006a457507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c03620006d757507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d036200070a57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e036200073d57507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f036200077057507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602003620007a357507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b919050565b80516001600160a01b0381168114620007bc575f80fd5b5f805f60608486031215620007eb575f80fd5b835160ff81168114620007fc575f80fd5b92506200080c60208501620007c1565b91506200081c60408501620007c1565b90509250925092565b608051613e446200084c5f395f81816102f7015281816112540152611c030152613e445ff3fe6080604052600436106101c8575f3560e01c80637a553744116100f2578063a6232a9311610092578063e500f50411610062578063e500f5041461052b578063e5ef84051461053f578063ec571c6a1461055e578063f2da1d411461057d575f80fd5b8063a6232a93146104b5578063b08892d0146104e3578063b1c39422146104f7578063dd757c3414610517575f80fd5b806380e52e3f116100cd57806380e52e3f14610444578063866ac6581461046357806387780df9146104775780638dc9a3c314610496575f80fd5b80637a553744146103da5780637cbf0ff6146103ee5780637ef09bca1461040d575f80fd5b80633fe3347a116101685780635706001611610138578063570600161461034d57806363bc7d321461037b578063720829711461039c57806378d60cd7146103bb575f80fd5b80633fe3347a146102ce578063484eb652146102e9578063555d75f0146103255780635688881f14610339575f80fd5b80631f02d715116101a35780631f02d7151461023357806330f49cac1461025257806338977686146102715780633bb8d1b414610290575f80fd5b806301dbf19f146101d357806314a7737d146101e95780631ba46cfd14610208575f80fd5b366101cf57005b5f80fd5b3480156101de575f80fd5b506101e761059c565b005b3480156101f4575f80fd5b506101e7610203366004613405565b610687565b348015610213575f80fd5b505f5b6040516001600160a01b0390911681526020015b60405180910390f35b34801561023e575f80fd5b50600254610216906001600160a01b031681565b34801561025d575f80fd5b506101e761026c36600461348b565b610cbc565b34801561027c575f80fd5b506101e761028b36600461348b565b610dba565b34801561029b575f80fd5b506102be6102aa3660046134b8565b5f9081526005602052604090205460ff1690565b604051901515815260200161022a565b3480156102d9575f80fd5b50600160405161022a91906134e3565b3480156102f4575f80fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161022a565b348015610330575f80fd5b50600754610317565b348015610344575f80fd5b50610317610e97565b348015610358575f80fd5b506102be6103673660046134b8565b5f9081526004602052604090205460ff1690565b348015610386575f80fd5b5061038f610ead565b60405161022a9190613542565b3480156103a7575f80fd5b506101e76103b63660046136c7565b610f1b565b3480156103c6575f80fd5b506101e76103d536600461387e565b611bab565b3480156103e5575f80fd5b50600954610317565b3480156103f9575f80fd5b506101e76104083660046134b8565b611cd8565b348015610418575f80fd5b506102be61042736600461348b565b6001600160a01b03165f9081526003602052604090205460ff1690565b34801561044f575f80fd5b506101e761045e36600461348b565b611dbf565b34801561046e575f80fd5b5061038f611e99565b348015610482575f80fd5b506103176104913660046134b8565b611f48565b3480156104a1575f80fd5b506101e76104b0366004613920565b611fb9565b3480156104c0575f80fd5b506102be6104cf3660046134b8565b5f908152600a602052604090205460ff1690565b3480156104ee575f80fd5b50600c54610317565b348015610502575f80fd5b506001546102be90600160a01b900460ff1681565b348015610522575f80fd5b506101e7612116565b348015610536575f80fd5b50600854610317565b34801561054a575f80fd5b506101e7610559366004613920565b6121f5565b348015610569575f80fd5b50600154610216906001600160a01b031681565b348015610588575f80fd5b5061031761059736600461398f565b612351565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156105e3573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061060791906139b0565b6001600160a01b03161461062e5760405163177bc95160e11b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261067d92900460ff161515815260200190565b60405180910390a1565b6040805160608101825230815233602080830191825284015163ffffffff16828401908152600d54935163dd53f8a160e01b815283516001600160a01b039081166004830152925183166024820152905160448201529192169063dd53f8a190606401602060405180830381865afa158015610705573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061072991906139da565b61075f576040517fff4e342300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040808301515f908152600a602052205460ff16156107915760405163e2e1210360e01b815260040160405180910390fd5b600d5460208301516040516305afd53360e31b815263ffffffff90911660048201525f916001600160a01b031690632d7ea998906024016040805180830381865afa1580156107e2573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080691906139f3565b9050806020015161083d576020830151604051632a64af0160e01b815263ffffffff90911660048201526024015b60405180910390fd5b600754836020015163ffffffff161115610887576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610834565b600854602084015161089f9063ffffffff1682613a30565b156108da576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610834565b5f6108e9828660200151612351565b90505f856020015163ffffffff1667ffffffffffffffff81111561090f5761090f61321a565b604051908082528060200260200182016040528015610938578160200160208202803683370190505b5090505f805b876020015163ffffffff16811015610a31575f61095b8287613a63565b5f818152600660209081526040808320815180830190925280548083526001909101549282019290925292935090036109a75760405163d3482f7b60e01b815260040160405180910390fd5b805f01518584815181106109bd576109bd613a76565b6020026020010181815250508060200151846109d99190613a63565b5f8381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610a2990613a8a565b91505061093e565b50866020015163ffffffff1660075f828254610a4d9190613aa2565b925050819055505f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610a879190613ab5565b604051602081830303815290604052805190602001205f1c610aa99190613a30565b905080886060015114610aff576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610834565b60408051600480825260a082019092525f9160208201608080368337019050509050600b54815f81518110610b3657610b36613a76565b602002602001018181525050886040015181600181518110610b5a57610b5a613a76565b6020026020010181815250508181600281518110610b7a57610b7a613a76565b6020026020010181815250508481600381518110610b9a57610b9a613a76565b60209081029190910101528651895160405163c941764760e01b81525f926001600160a01b03169163c941764791610bd791908690600401613b12565b6020604051808303815f875af1158015610bf3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1791906139da565b905080610c67576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610834565b896020015163ffffffff1660085f828254610c829190613a63565b90915550506040808b0151600b8190555f908152600a60205220805460ff19166001179055610cb0846123d9565b50505050505050505050565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610d03573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2791906139b0565b6001600160a01b031614610d4e5760405163177bc95160e11b815260040160405180910390fd5b600180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b19060200160405180910390a150565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610e01573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e2591906139b0565b6001600160a01b031614610e4c5760405163177bc95160e11b815260040160405180910390fd5b6001600160a01b0381165f81815260036020526040808220805460ff19166001179055517f0baaa7abe79fc29984705b05242ef0b47970e216d9df1d047efebd0d490630699190a250565b5f600754600854610ea89190613a63565b905090565b600d5460408051633044b79b60e21b815290516060926001600160a01b03169163c112de6c916004808301925f9291908290030181865afa158015610ef4573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610ea89190810190613b82565b60025f5403610f6c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610834565b60025f908155604083015151610f8190612472565b90505f610f928460e0015151612472565b600d54909150600160a01b900460ff168015610fb3575063ffffffff811615155b15610fe157604051630286d72f60e31b815263ffffffff808416600483015282166024820152604401610834565b60c084015115611094576040805180820182523081523360208201908152600d549251635fa1062b60e11b815282516001600160a01b0390811660048301529151821660248201529192169063bf420c5690604401602060405180830381865afa158015611051573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061107591906139da565b6110925760405163324af8d960e11b815260040160405180910390fd5b505b600d546040516385e861eb60e01b815263ffffffff8085166004830152831660248201525f916001600160a01b0316906385e861eb906044016040805180830381865afa1580156110e7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061110b91906139f3565b9050806020015161113f57604051630286d72f60e31b815263ffffffff808516600483015283166024820152604401610834565b8263ffffffff168560600151511461119a576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610834565b8163ffffffff1685610100015151146111f6576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610834565b8163ffffffff168561016001515114611252576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610834565b7f00000000000000000000000000000000000000000000000000000000000000008263ffffffff1660075460085461128a9190613a63565b6112949190613a63565b11156112b357604051633b5ccb4360e21b815260040160405180910390fd5b6112bc326124f1565b156112da57604051632e70c0b160e01b815260040160405180910390fd5b6112e88561012001516124f1565b1561130657604051632e70c0b160e01b815260040160405180910390fd5b600d5f9054906101000a90046001600160a01b03166001600160a01b031663a592bd696040518163ffffffff1660e01b8152600401602060405180830381865afa158015611356573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061137a9190613c0e565b61138a9063ffffffff8516613c25565b856101a0015151146113af57604051633acf48bb60e21b815260040160405180910390fd5b5f6113b986612577565b90506113c58186612701565b6001600160a01b03165f1b866080015114611423576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610834565b5f61142f856002613c3c565b63ffffffff1690505f611443866002613c3c565b61144e906004613c64565b63ffffffff1690505f611462866002613c3c565b6114729063ffffffff1683613a63565b90505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663a592bd696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114e99190613c0e565b6114f4896002613c64565b63ffffffff166115049190613c25565b61150f836002613a63565b6115199190613a63565b67ffffffffffffffff8111156115315761153161321a565b60405190808252806020026020018201604052801561155a578160200160208202803683370190505b506020808c01515f908152600a909152604090205490915060ff166115ab576040516314e8955b60e21b8152600401610834906020808252600490820152631c9bdbdd60e21b604082015260600190565b8960200151815f815181106115c2576115c2613a76565b60209081029190910101525f6115d9896001613c64565b63ffffffff1690505f5b8963ffffffff168110156116e2575f8c60400151828151811061160857611608613a76565b6020908102919091018101515f818152600590925260409091205490915060ff1615611660576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808461166d846001613a63565b8151811061167d5761167d613a76565b6020026020010181815250508c60600151828151811061169f5761169f613a76565b60200260200101518484846116b49190613a63565b815181106116c4576116c4613a76565b602090810291909101015250806116da81613a8a565b9150506115e3565b5060808b0151826116f4876001613a63565b8151811061170457611704613a76565b602090810291909101015260a08b015182611720876002613a63565b8151811061173057611730613a76565b602090810291909101015260c08b01518261174c876003613a63565b8151811061175c5761175c613a76565b60209081029190910101525f61177863ffffffff8a1686613a63565b90505f5b8963ffffffff168110156118ef5760045f8e60e0015183815181106117a3576117a3613a76565b60209081029190910181015182528101919091526040015f205460ff161561180e5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610834565b600c548d6101000151828151811061182857611828613a76565b6020026020010151101561184f5760405163784f02bd60e11b815260040160405180910390fd5b8c60e00151818151811061186557611865613a76565b602002602001015184878361187a9190613a63565b8151811061188a5761188a613a76565b6020026020010181815250508c610100015181815181106118ad576118ad613a76565b60200260200101518483836118c29190613a63565b815181106118d2576118d2613a76565b6020908102919091010152806118e781613a8a565b91505061177c565b506118fb8c8486612723565b87518c5160405163c941764760e01b81526001600160a01b039092169163c94176479161192c918790600401613b12565b6020604051808303815f875af1158015611948573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061196c91906139da565b6119b9576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610834565b5f5b8a63ffffffff16811015611a8857600160055f8f6040015184815181106119e4576119e4613a76565b602002602001015181526020019081526020015f205f6101000a81548160ff021916908315150217905550600160095f828254611a219190613a63565b909155505060408d0151805182908110611a3d57611a3d613a76565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a380611a8081613a8a565b9150506119bb565b505f5b8963ffffffff16811015611b5557600160045f8f60e001518481518110611ab457611ab4613a76565b602002602001015181526020019081526020015f205f6101000a81548160ff021916908315150217905550611b438d60e001518281518110611af857611af8613a76565b60200260200101518e61010001518381518110611b1757611b17613a76565b60200260200101518f61016001518481518110611b3657611b36613a76565b6020026020010151612a05565b80611b4d81613a8a565b915050611a8b565b5060a08c015115611b7357611b738c61012001518d60a00151612aa2565b60c08c015115611b9057611b908c61014001518d60c00151612aa2565b611b998c612b41565b505060015f5550505050505050505050565b335f8181526003602052604090205460ff16611bda57604051630aedfc3560e21b815260040160405180910390fd5b600c5483606001511015611c015760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611c329190613a63565b10611c5057604051633b5ccb4360e21b815260040160405180910390fd5b6020808401515f9081526004909152604090205460ff1615611c855760405163e38cd14d60e01b815260040160405180910390fd5b602080840180515f90815260049092526040909120805460ff191660011790555160608401516080850151611cbb929190612a05565b604083015115611cd357611cd3828460400151612e3b565b505050565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611d1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d4391906139b0565b6001600160a01b031614611d6a5760405163177bc95160e11b815260040160405180910390fd5b805f03611dba576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610834565b600c55565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611e06573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e2a91906139b0565b6001600160a01b031614611e515760405163177bc95160e11b815260040160405180910390fd5b6001600160a01b0381165f81815260036020526040808220805460ff19169055517f6107a4a5447a4208ba14e3ec240bccf0a93828124ccf501af04601031070b1839190a250565b60605f60075467ffffffffffffffff811115611eb757611eb761321a565b604051908082528060200260200182016040528015611ee0578160200160208202803683370190505b5090505f5b600754811015611f42575f81600854611efe9190613a63565b5f81815260066020526040902054845191925090849084908110611f2457611f24613a76565b60209081029190910101525080611f3a81613a8a565b915050611ee5565b50919050565b600d5460405163dbda082960e01b8152600481018390525f916001600160a01b03169063dbda082990602401602060405180830381865afa158015611f8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb39190613c0e565b92915050565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015612000573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061202491906139b0565b6001600160a01b03161461204b5760405163177bc95160e11b815260040160405180910390fd5b5f5b81811015611cd357600160035f85858581811061206c5761206c613a76565b9050602002016020810190612081919061348b565b6001600160a01b0316815260208101919091526040015f20805460ff19169115159190911790558282828181106120ba576120ba613a76565b90506020020160208101906120cf919061348b565b6001600160a01b03167f0baaa7abe79fc29984705b05242ef0b47970e216d9df1d047efebd0d4906306960405160405180910390a28061210e81613a8a565b91505061204d565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561215d573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061218191906139b0565b6001600160a01b0316146121a85760405163177bc95160e11b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161067d91600160a01b90910460ff161515815260200190565b600254604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561223c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061226091906139b0565b6001600160a01b0316146122875760405163177bc95160e11b815260040160405180910390fd5b5f5b81811015611cd3575f60035f8585858181106122a7576122a7613a76565b90506020020160208101906122bc919061348b565b6001600160a01b0316815260208101919091526040015f20805460ff19169115159190911790558282828181106122f5576122f5613a76565b905060200201602081019061230a919061348b565b6001600160a01b03167f6107a4a5447a4208ba14e3ec240bccf0a93828124ccf501af04601031070b18360405160405180910390a28061234981613a8a565b915050612289565b5f6101008263ffffffff16106123765760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106123995760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106123bc5760028263ffffffff16901c9150600283901c92505b60028263ffffffff16106123d257600183901c92505b5090919050565b6040515f90339083908381818185875af1925050503d805f8114612418576040519150601f19603f3d011682016040523d82523d5f602084013e61241d565b606091505b505090508061246e5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610834565b5050565b5f63ffffffff8211156124ed5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610834565b5090565b6001545f90600160a01b900460ff1661250b57505f919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d90602401602060405180830381865afa158015612553573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb391906139da565b610160810151515f90600381106125a157604051633fb1945d60e11b815260040160405180910390fd5b6060815f036125f7576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b60405160208183030381529060405290506126ac565b8160010361263c578361012001518461014001518561016001515f8151811061262257612622613a76565b60200260200101516040516020016125e193929190613caa565b8361012001518461014001518561016001515f8151811061265f5761265f613a76565b602002602001015186610160015160018151811061267f5761267f613a76565b602002602001015160405160200161269a9493929190613cef565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b5f805f61270e8585612eda565b9150915061271b81612f45565b509392505050565b6101808301516040805180820182525f808252602091820152815180830190925260ff83901c8083526001600160ff1b0390931690820152835190919084908490811061277257612772613a76565b6020026020010181815250508060200151838360016127919190613a63565b815181106127a1576127a1613a76565b6020026020010181815250505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663a592bd696040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127fe573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906128229190613c0e565b90505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663c112de6c6040518163ffffffff1660e01b81526004015f60405180830381865afa158015612874573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261289b9190810190613b82565b90505f6128a9856002613a63565b90505f6128b68483613a63565b90505f6128c4856002613c25565b6128ce9084613a63565b90505f5b8581101561299b575f61292f8683815181106128f0576128f0613a76565b60200260200101516040805180820182525f808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b80519091508a61293f8488613a63565b8151811061294f5761294f613a76565b60200260200101818152505080602001518a838661296d9190613a63565b8151811061297d5761297d613a76565b6020908102919091010152508061299381613a8a565b9150506128d2565b505f5b896101a0015151811015610cb057896101a0015181815181106129c3576129c3613a76565b60200260200101518982846129d89190613a63565b815181106129e8576129e8613a76565b6020908102919091010152806129fd81613a8a565b91505061299e565b5f600854600754612a169190613a63565b60408051808201825286815260208082018781525f8581526006909252928120915182559151600191820155600780549394509092909190612a59908490613a63565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612a9493929190613d4a565b60405180910390a250505050565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114612aeb576040519150601f19603f3d011682016040523d82523d5f602084013e612af0565b606091505b5050905080611cd35760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610834565b600d546040805163a592bd6960e01b815290515f926001600160a01b03169163a592bd699160048083019260209291908290030181865afa158015612b88573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612bac9190613c0e565b90505f600d5f9054906101000a90046001600160a01b03166001600160a01b031663c112de6c6040518163ffffffff1660e01b81526004015f60405180830381865afa158015612bfe573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052612c259190810190613b82565b90505f82846040015151612c399190613c25565b90505f8167ffffffffffffffff811115612c5557612c5561321a565b604051908082528060200260200182016040528015612cb157816020015b612c9e60405180606001604052805f67ffffffffffffffff1681526020015f81526020015f81525090565b815260200190600190039081612c735790505b5090505f805b8660400151518163ffffffff161015612dfb575f5b868163ffffffff161015612de8578063ffffffff1660208363ffffffff1667ffffffffffffffff16901b17848481518110612d0957612d09613a76565b602090810291909101015167ffffffffffffffff90911690528551869063ffffffff8316908110612d3c57612d3c613a76565b6020026020010151848481518110612d5657612d56613a76565b60200260200101516020018181525050876101a001518163ffffffff16888463ffffffff16612d859190613c25565b612d8f9190613a63565b81518110612d9f57612d9f613a76565b6020026020010151848481518110612db957612db9613a76565b60209081029190910101516040015282612dd281613a8a565b9350508080612de090613d8a565b915050612ccc565b5080612df381613d8a565b915050612cb7565b507f6af07ebcb33931abd348e785f70c6d259390cf799191f8c99124245b96e1a61382604051612e2b9190613dac565b60405180910390a1505050505050565b5f826001600160a01b0316826040515f6040518083038185875af1925050503d805f8114612e84576040519150601f19603f3d011682016040523d82523d5f602084013e612e89565b606091505b5050905080611cd35760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610834565b5f808251604103612f0e576020830151604084015160608501515f1a612f02878285856130fd565b94509450505050612f3e565b8251604003612f375760208301516040840151612f2c8683836131e2565b935093505050612f3e565b505f905060025b9250929050565b5f816004811115612f5857612f586134cf565b03612f605750565b6001816004811115612f7457612f746134cf565b03612fc15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610834565b6002816004811115612fd557612fd56134cf565b036130225760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610834565b6003816004811115613036576130366134cf565b0361308e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610834565b60048160048111156130a2576130a26134cf565b036130fa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610834565b50565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561313257505f905060036131d9565b8460ff16601b1415801561314a57508460ff16601c14155b1561315a57505f905060046131d9565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156131ab573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b0381166131d3575f600192509250506131d9565b91505f90505b94509492505050565b5f806001600160ff1b038316816131fe60ff86901c601b613a63565b905061320c878288856130fd565b935093505050935093915050565b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156132515761325161321a565b60405290565b6040516101c0810167ffffffffffffffff811182821017156132515761325161321a565b60405160a0810167ffffffffffffffff811182821017156132515761325161321a565b604051601f8201601f1916810167ffffffffffffffff811182821017156132c7576132c761321a565b604052919050565b5f604082840312156132df575f80fd5b6132e761322e565b9050813581526020820135602082015292915050565b5f82601f83011261330c575f80fd5b61331461322e565b806040840185811115613325575f80fd5b845b8181101561333f578035845260209384019301613327565b509095945050505050565b5f81830361010081121561335c575f80fd5b6040516060810181811067ffffffffffffffff8211171561337f5761337f61321a565b60405291508161338f85856132cf565b81526080603f19830112156133a2575f80fd5b6133aa61322e565b91506133b985604086016132fd565b82526133c885608086016132fd565b60208301528160208201526133e08560c086016132cf565b6040820152505092915050565b803563ffffffff81168114613400575f80fd5b919050565b5f6101608284031215613416575f80fd5b6040516080810181811067ffffffffffffffff821117156134395761343961321a565b604052613446848461334a565b815261345561010084016133ed565b6020820152610120830135604082015261014090920135606083015250919050565b6001600160a01b03811681146130fa575f80fd5b5f6020828403121561349b575f80fd5b81356134a681613477565b9392505050565b803561340081613477565b5f602082840312156134c8575f80fd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061350357634e487b7160e01b5f52602160045260245ffd5b91905290565b5f8151808452602080850194508084015f5b838110156135375781518752958201959082019060010161351b565b509495945050505050565b602081525f6134a66020830184613509565b5f67ffffffffffffffff82111561356d5761356d61321a565b5060051b60200190565b5f82601f830112613586575f80fd5b8135602061359b61359683613554565b61329e565b82815260059290921b840181019181810190868411156135b9575f80fd5b8286015b848110156135d457803583529183019183016135bd565b509695505050505050565b5f82601f8301126135ee575f80fd5b813567ffffffffffffffff8111156136085761360861321a565b61361b601f8201601f191660200161329e565b81815284602083860101111561362f575f80fd5b816020850160208301375f918101602001919091529392505050565b5f82601f83011261365a575f80fd5b8135602061366a61359683613554565b82815260059290921b84018101918181019086841115613688575f80fd5b8286015b848110156135d457803567ffffffffffffffff8111156136ab575f8081fd5b6136b98986838b01016135df565b84525091830191830161368c565b5f80604083850312156136d8575f80fd5b823567ffffffffffffffff808211156136ef575f80fd5b908401906102a08287031215613703575f80fd5b61370b613257565b613715878461334a565b81526101008084013560208301526101208085013584811115613736575f80fd5b6137428a828801613577565b604085015250610140808601358581111561375b575f80fd5b6137678b828901613577565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c0890135888111156137a3575f80fd5b6137af8e828c01613577565b60e0890152506101e0890135888111156137c7575f80fd5b6137d38e828c01613577565b87890152506137e56102008a016134ad565b858801526137f66102208a016134ad565b8488015261024089013595508786111561380e575f80fd5b61381a8d878b0161364b565b838801526102608901358288015261028089013595508786111561383c575f80fd5b6138488d878b01613577565b9087015250939750505050602086013592505080821115613867575f80fd5b50613874858286016135df565b9150509250929050565b5f806040838503121561388f575f80fd5b823567ffffffffffffffff808211156138a6575f80fd5b9084019060a082870312156138b9575f80fd5b6138c161327b565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156138f4575f80fd5b613900888286016135df565b6080830152509350613917915050602084016134ad565b90509250929050565b5f8060208385031215613931575f80fd5b823567ffffffffffffffff80821115613948575f80fd5b818501915085601f83011261395b575f80fd5b813581811115613969575f80fd5b8660208260051b850101111561397d575f80fd5b60209290920196919550909350505050565b5f80604083850312156139a0575f80fd5b82359150613917602084016133ed565b5f602082840312156139c0575f80fd5b81516134a681613477565b80518015158114613400575f80fd5b5f602082840312156139ea575f80fd5b6134a6826139cb565b5f60408284031215613a03575f80fd5b613a0b61322e565b8251613a1681613477565b8152613a24602084016139cb565b60208201529392505050565b5f82613a4a57634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52601160045260245ffd5b80820180821115611fb357611fb3613a4f565b634e487b7160e01b5f52603260045260245ffd5b5f60018201613a9b57613a9b613a4f565b5060010190565b81810381811115611fb357611fb3613a4f565b81515f9082906020808601845b83811015613ade57815185529382019390820190600101613ac2565b50929695505050505050565b805f5b6002811015613b0c578151845260209384019390910190600101613aed565b50505050565b5f610120613b2b83865180518252602090810151910152565b6020850151613b3e604085018251613aea565b60200151613b4f6080850182613aea565b506040850151805160c08501526020015160e08401526101008301819052613b7981840185613509565b95945050505050565b5f6020808385031215613b93575f80fd5b825167ffffffffffffffff811115613ba9575f80fd5b8301601f81018513613bb9575f80fd5b8051613bc761359682613554565b81815260059190911b82018301908381019087831115613be5575f80fd5b928401925b82841015613c0357835182529284019290840190613bea565b979650505050505050565b5f60208284031215613c1e575f80fd5b5051919050565b8082028115828204841417611fb357611fb3613a4f565b63ffffffff818116838216028082169190828114613c5c57613c5c613a4f565b505092915050565b63ffffffff818116838216019080821115613c8157613c81613a4f565b5092915050565b5f5b83811015613ca2578181015183820152602001613c8a565b50505f910152565b5f6bffffffffffffffffffffffff19808660601b168352808560601b166014840152508251613ce0816028850160208701613c88565b91909101602801949350505050565b5f6bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613d25816028850160208801613c88565b835190830190613d3c816028840160208801613c88565b016028019695505050505050565b838152826020820152606060408201525f8251806060840152613d74816080850160208701613c88565b601f01601f191691909101608001949350505050565b5f63ffffffff808316818103613da257613da2613a4f565b6001019392505050565b602080825282518282018190525f919060409081850190868401855b82811015613e01578151805167ffffffffffffffff16855286810151878601528501518585015260609093019290850190600101613dc8565b509197965050505050505056fea2646970667358221220965ce6c51630f4a4f95ae520380e8e5e722715410d767a3e6a33e60ad63466de64736f6c63430008140033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    _daoCenter: string,
    _settingsCenter: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(
      _treeHeight,
      _daoCenter,
      _settingsCenter,
      overrides || {},
    ) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    _daoCenter: string,
    _settingsCenter: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, _daoCenter, _settingsCenter, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
