/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorPublicKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'publicKey',
        type: 'uint256',
      },
    ],
    name: 'AuditorPublicKey',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'id',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'publicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'note',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct CommitmentPool.EncryptedAuditorNote[]',
        name: 'notes',
        type: 'tuple[]',
      },
    ],
    name: 'EncryptedAuditorNoteBatch',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'uint256',
            name: 'randomAuditingPublicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_publicKey',
        type: 'uint256',
      },
    ],
    name: 'updateAuditorPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb179055600060078190556008553480156200004257600080fd5b50604051620043cb380380620043cb8339810160408190526200006591620007a4565b60016000558060ff81166200008d57604051632c4f29b160e21b815260040160405180910390fd5b600b80546001600160a01b03191633179055600160ff82161b608052620000b481620000db565b600a8190556000908152600960205260409020805460ff1916600117905550620007d09050565b600060ff82166200010d57507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014157507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017557507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001a957507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001dc57507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200021057507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024457507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027857507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002ac57507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002e057507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031457507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034857507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200037c57507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003b057507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e457507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041857507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200044c57507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200047f57507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b357507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004e757507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200051b57507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200054f57507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058357507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005b757507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005eb57507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200061f57507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065357507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068757507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006bb57507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006ef57507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072357507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075757507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200078b57507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007b757600080fd5b815160ff81168114620007c957600080fd5b9392505050565b608051613bd1620007fa60003960008181610393015281816111bf0152611ac40152613bd16000f3fe60806040526004361061021d5760003560e01c80637fa4b09c1161011d578063b3b75631116100b0578063e500f5041161007f578063f2da1d4111610064578063f2da1d4114610649578063f8f0538814610669578063ffa89b881461068957600080fd5b8063e500f504146105fc578063ec571c6a1461061157600080fd5b8063b3b7563114610587578063c259e2e6146105a7578063dd757c34146105c7578063deeff7cd146105dc57600080fd5b8063a6232a93116100ec578063a6232a9314610501578063a9b1d29614610531578063b08892d014610551578063b1c394221461056657600080fd5b80637fa4b09c1461048157806387780df9146104a15780639b0a6fea146104c15780639cc6b354146104e157600080fd5b80633bb8d1b4116101b0578063570600161161017f5780637208297111610164578063720829711461042157806378d60cd7146104415780637cbf0ff61461046157600080fd5b806357060016146103cf57806363bc7d32146103ff57600080fd5b80633bb8d1b4146103285780633fe3347a14610368578063484eb652146103845780634eb069f7146103b757600080fd5b80630c8867e6116101ec5780630c8867e6146102a0578063115f574c146102c057806314a7737d146102e857806330f49cac1461030857600080fd5b806301dbf19f1461022957806302d498f11461024057806303db98741461026057806306394c9b1461028057600080fd5b3661022457005b600080fd5b34801561023557600080fd5b5061023e6106a6565b005b34801561024c57600080fd5b5061023e61025b366004613226565b61072a565b34801561026c57600080fd5b5061023e61027b366004613226565b610779565b34801561028c57600080fd5b5061023e61029b366004613226565b6107c5565b3480156102ac57600080fd5b5061023e6102bb36600461357a565b610876565b3480156102cc57600080fd5b506102d5600581565b6040519081526020015b60405180910390f35b3480156102f457600080fd5b5061023e61030336600461332b565b610945565b34801561031457600080fd5b5061023e610323366004613226565b610ea8565b34801561033457600080fd5b50610358610343366004613561565b60009081526005602052604090205460ff1690565b60405190151581526020016102df565b34801561037457600080fd5b5060016040516102df9190613834565b34801561039057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d5565b3480156103c357600080fd5b50600f5460ff16610358565b3480156103db57600080fd5b506103586103ea366004613561565b60009081526004602052604090205460ff1690565b34801561040b57600080fd5b50610414610f35565b6040516102df9190613821565b34801561042d57600080fd5b5061023e61043c36600461339f565b610fb2565b34801561044d57600080fd5b5061023e61045c366004613284565b611a6b565b34801561046d57600080fd5b5061023e61047c366004613561565b611b9a565b34801561048d57600080fd5b5061023e61049c36600461363b565b611c18565b3480156104ad57600080fd5b506102d56104bc366004613561565b611cfb565b3480156104cd57600080fd5b5061023e6104dc3660046135bf565b611d39565b3480156104ed57600080fd5b5061023e6104fc366004613226565b611e31565b34801561050d57600080fd5b5061035861051c366004613561565b60009081526009602052604090205460ff1690565b34801561053d57600080fd5b5061023e61054c366004613226565b611e7d565b34801561055d57600080fd5b50600c546102d5565b34801561057257600080fd5b5060015461035890600160a01b900460ff1681565b34801561059357600080fd5b5061023e6105a236600461324a565b611ecc565b3480156105b357600080fd5b5061023e6105c2366004613611565b611f38565b3480156105d357600080fd5b5061023e611fdc565b3480156105e857600080fd5b5061023e6105f73660046135da565b612054565b34801561060857600080fd5b506008546102d5565b34801561061d57600080fd5b50600154610631906001600160a01b031681565b6040516001600160a01b0390911681526020016102df565b34801561065557600080fd5b506102d561066436600461359c565b612194565b34801561067557600080fd5b5061023e61068436600461324a565b61221d565b34801561069557600080fd5b50600f54610100900460ff16610358565b600b546001600160a01b031633146106d1576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261072092900460ff161515815260200190565b60405180910390a1565b600b546001600160a01b03163314610755576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19166001179055565b600b546001600160a01b031633146107a4576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600b546001600160a01b031633146107f0576040516327e1f1e560e01b815260040160405180910390fd5b600b546001600160a01b038281169116141561081f576040516336a1c33f60e01b815260040160405180910390fd5b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600b546001600160a01b031633146108a1576040516327e1f1e560e01b815260040160405180910390fd5b600582106108c25760405163318c434560e21b815260040160405180910390fd5b80601083600581106108d6576108d6613b4c565b015414156108f657604051624a706760e31b815260040160405180910390fd5b806010836005811061090a5761090a613b4c565b015560405181815282907f94adca83ce41447cfb8e07d1c9c4536a1b8afbff6c7c83c2d918214adc68102f9060200160405180910390a25050565b600f54610100900460ff1615801561096d5750336000908152600d602052604090205460ff16155b1561098b576040516321ce01f360e01b815260040160405180910390fd5b60408082015160009081526009602052205460ff16156109be5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff1611806109fa575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610a3a576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b6008546020820151610a529063ffffffff1682613afe565b15610a8d576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610a31565b6000610a9d828460200151612194565b90506000836020015163ffffffff1667ffffffffffffffff811115610ac457610ac4613b62565b604051908082528060200260200182016040528015610aed578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610beb576000610b1282876139cc565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610b5f5760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610b7657610b76613b4c565b602002602001018181525050806020015184610b9291906139cc565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610be390613abf565b915050610af4565b50846020015163ffffffff1660076000828254610c089190613a57565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610c439190613788565b6040516020818303038152906040528051906020012060001c610c669190613afe565b905080866060015114610cbc576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610a31565b60408051600480825260a0820190925260009160208201608080368337019050509050600a5481600081518110610cf557610cf5613b4c565b602002602001018181525050866040015181600181518110610d1957610d19613b4c565b6020026020010181815250508181600281518110610d3957610d39613b4c565b6020026020010181815250508481600381518110610d5957610d59613b4c565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610db19190869060040161385c565b602060405180830381600087803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e039190613267565b905080610e53576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610a31565b876020015163ffffffff1660086000828254610e6f91906139cc565b9091555050604080890151600a8190556000908152600960205220805460ff19166001179055610e9e84612291565b5050505050505050565b600b546001600160a01b03163314610ed3576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b6005811015610fac5760108160058110610f7b57610f7b613b4c565b0154828281518110610f8f57610f8f613b4c565b602090810291909101015280610fa481613abf565b915050610f5f565b50919050565b600260005414156110055760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610a31565b6002600090815560408301515161101b90612329565b9050600061102d8460e0015151612329565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff166110aa576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610a31565b8163ffffffff1684606001515114611105576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610a31565b8063ffffffff168461010001515114611161576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610a31565b8063ffffffff1684610160015151146111bd576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610a31565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff166007546008546111f591906139cc565b6111ff91906139cc565b111561121e57604051633b5ccb4360e21b815260040160405180910390fd5b611227326123a9565b1561124557604051632e70c0b160e01b815260040160405180910390fd5b6112538461012001516123a9565b1561127157604051632e70c0b160e01b815260040160405180910390fd5b611282600563ffffffff8416613a0c565b846101a0015151146112a757604051633acf48bb60e21b815260040160405180910390fd5b60006112b285612448565b90506112be81856125d4565b6001600160a01b031660001b85608001511461131d576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610a31565b600061132a846002613a2b565b63ffffffff169050600061133f856002613a2b565b61134a9060046139e4565b63ffffffff169050600061135f856002613a2b565b61136f9063ffffffff16836139cc565b9050600060056113808860026139e4565b63ffffffff166113909190613a0c565b61139b8360026139cc565b6113a591906139cc565b67ffffffffffffffff8111156113bd576113bd613b62565b6040519080825280602002602001820160405280156113e6578160200160208202803683370190505b506020808b015160009081526009909152604090205490915060ff16611438576040516314e8955b60e21b8152600401610a31906020808252600490820152631c9bdbdd60e21b604082015260600190565b88602001518160008151811061145057611450613b4c565b602090810291909101015260006114688860016139e4565b63ffffffff16905060005b8863ffffffff168110156115745760008b60400151828151811061149957611499613b4c565b6020908102919091018101516000818152600590925260409091205490915060ff16156114f2576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80846114ff8460016139cc565b8151811061150f5761150f613b4c565b6020026020010181815250508b60600151828151811061153157611531613b4c565b602002602001015184848461154691906139cc565b8151811061155657611556613b4c565b6020908102919091010152508061156c81613abf565b915050611473565b5060808a0151826115868760016139cc565b8151811061159657611596613b4c565b602090810291909101015260a08a0151826115b28760026139cc565b815181106115c2576115c2613b4c565b602090810291909101015260c08a0151826115de8760036139cc565b815181106115ee576115ee613b4c565b6020908102919091010152600061160b63ffffffff8916866139cc565b905060005b8863ffffffff1681101561178557600460008d60e00151838151811061163857611638613b4c565b60209081029190910181015182528101919091526040016000205460ff16156116a45760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610a31565b600c548c610100015182815181106116be576116be613b4c565b602002602001015110156116e55760405163784f02bd60e11b815260040160405180910390fd5b8b60e0015181815181106116fb576116fb613b4c565b602002602001015184878361171091906139cc565b8151811061172057611720613b4c565b6020026020010181815250508b6101000151818151811061174357611743613b4c565b602002602001015184838361175891906139cc565b8151811061176857611768613b4c565b60209081029190910101528061177d81613abf565b915050611610565b506117918b84866125f8565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c9417647916117e691889060040161385c565b602060405180830381600087803b15801561180057600080fd5b505af1158015611814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118389190613267565b905080611888576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610a31565b60005b8a63ffffffff16811015611943576001600560008f6040015184815181106118b5576118b5613b4c565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508c6040015181815181106118f8576118f8613b4c565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a38061193b81613abf565b91505061188b565b5060005b8963ffffffff16811015611a14576001600460008f60e00151848151811061197157611971613b4c565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611a028d60e0015182815181106119b7576119b7613b4c565b60200260200101518e610100015183815181106119d6576119d6613b4c565b60200260200101518f610160015184815181106119f5576119f5613b4c565b60200260200101516127ef565b80611a0c81613abf565b915050611947565b5060a08c015115611a3257611a328c61012001518d60a0015161288d565b60c08c015115611a4f57611a4f8c61014001518d60c0015161288d565b611a588c612935565b5050600160005550505050505050505050565b336000908152600e602052604090205460ff16611a9b5760405163f75e9fc760e01b815260040160405180910390fd5b600c5482606001511015611ac25760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611af391906139cc565b10611b1157604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611b475760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611b7e9291906127ef565b604082015115611b9657611b96818360400151612b4a565b5050565b600b546001600160a01b03163314611bc5576040516327e1f1e560e01b815260040160405180910390fd5b80611c13576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610a31565b600c55565b600b546001600160a01b03163314611c43576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611c67576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611c8b57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b600060058210611d1e5760405163318c434560e21b815260040160405180910390fd5b60108260058110611d3157611d31613b4c565b015492915050565b600b546001600160a01b03163314611d64576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611d88576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611da257506104008163ffffffff16115b15611ddd576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610a31565b611de8600182613a6e565b811663ffffffff16600014611e10576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600b546001600160a01b03163314611e5c576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600d60205260409020805460ff19169055565b600b546001600160a01b03163314611ea8576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600b546001600160a01b03163314611ef7576040516327e1f1e560e01b815260040160405180910390fd5b600f805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610f2a565b600b546001600160a01b03163314611f63576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff1615611f87576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216611fab57604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600b546001600160a01b03163314612007576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161072091600160a01b90910460ff161515815260200190565b600b546001600160a01b0316331461207f576040516327e1f1e560e01b815260040160405180910390fd5b600f5460ff16156120a3576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff821615806120bd57506104008263ffffffff16115b156120f8576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610a31565b612103600183613a6e565b821663ffffffff1660001461212b576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106121ba5760088263ffffffff16901c9150600883901c92505b60108263ffffffff16106121dd5760048263ffffffff16901c9150600483901c92505b60048263ffffffff16106122005760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061221657600183901c92505b5090919050565b600b546001600160a01b03163314612248576040516327e1f1e560e01b815260040160405180910390fd5b600f80548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610f2a90831515815260200190565b604051600090339083908381818185875af1925050503d80600081146122d3576040519150601f19603f3d011682016040523d82523d6000602084013e6122d8565b606091505b5050905080611b965760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610a31565b600063ffffffff8211156123a55760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610a31565b5090565b600154600090600160a01b900460ff166123c557506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b15801561240a57600080fd5b505afa15801561241e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124429190613267565b92915050565b610160810151516000906003811061247357604051633fb1945d60e11b815260040160405180910390fd5b6060816124c7576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b604051602081830303815290604052905061257f565b816001141561250e578361012001518461014001518561016001516000815181106124f4576124f4613b4c565b60200260200101516040516020016124b1939291906136e6565b83610120015184610140015185610160015160008151811061253257612532613b4c565b602002602001015186610160015160018151811061255257612552613b4c565b602002602001015160405160200161256d949392919061372c565b60405160208183030381529060405290505b8051602091820120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c01905280519101209392505050565b60008060006125e38585612bed565b915091506125f081612c5d565b509392505050565b6101808301516040805180820182526000808252602091820152815180830190925260ff83901c8083526001600160ff1b0390931690820152835190919084908490811061264857612648613b4c565b60200260200101818152505080602001518383600161266791906139cc565b8151811061267757612677613b4c565b6020908102919091010152600061268f8360026139cc565b9050600061269e6005836139cc565b905060006126ae60056002613a0c565b6126b890846139cc565b905060005b6005811015612784576000612718601083600581106126de576126de613b4c565b01546040805180820182526000808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b80519091508861272884886139cc565b8151811061273857612738613b4c565b602002602001018181525050806020015188838661275691906139cc565b8151811061276657612766613b4c565b6020908102919091010152508061277c81613abf565b9150506126bd565b5060005b876101a0015151811015610e9e57876101a0015181815181106127ad576127ad613b4c565b60200260200101518782846127c291906139cc565b815181106127d2576127d2613b4c565b6020908102919091010152806127e781613abf565b915050612788565b600060085460075461280191906139cc565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906128459084906139cc565b9250508190555080847ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9858560405161287f9291906138cd565b60405180910390a350505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146128da576040519150601f19603f3d011682016040523d82523d6000602084013e6128df565b606091505b50509050806129305760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610a31565b505050565b600060058260400151516129499190613a0c565b905060008167ffffffffffffffff81111561296657612966613b62565b6040519080825280602002602001820160405280156129c557816020015b6129b26040518060600160405280600067ffffffffffffffff16815260200160008152602001600081525090565b8152602001906001900390816129845790505b5090506000805b8460400151518163ffffffff161015612b0c5760005b60058163ffffffff161015612af9578063ffffffff1660208363ffffffff1667ffffffffffffffff16901b17848481518110612a2057612a20613b4c565b602090810291909101015167ffffffffffffffff9091169052601063ffffffff821660058110612a5257612a52613b4c565b0154848481518110612a6657612a66613b4c565b60200260200101516020018181525050856101a001518163ffffffff1660058463ffffffff16612a969190613a0c565b612aa091906139cc565b81518110612ab057612ab0613b4c565b6020026020010151848481518110612aca57612aca613b4c565b60209081029190910101516040015282612ae381613abf565b9350508080612af190613ada565b9150506129e2565b5080612b0481613ada565b9150506129cc565b507fc977f1efebd21ea2ac3d9bc175d981dbd7e5174444daa396aa2fcb8fbe76ea9d82604051612b3c91906137be565b60405180910390a150505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612b97576040519150601f19603f3d011682016040523d82523d6000602084013e612b9c565b606091505b50509050806129305760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610a31565b600080825160411415612c245760208301516040840151606085015160001a612c1887828585612e1b565b94509450505050612c56565b825160401415612c4e5760208301516040840151612c43868383612f08565b935093505050612c56565b506000905060025b9250929050565b6000816004811115612c7157612c71613b36565b1415612c7a5750565b6001816004811115612c8e57612c8e613b36565b1415612cdc5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a31565b6002816004811115612cf057612cf0613b36565b1415612d3e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a31565b6003816004811115612d5257612d52613b36565b1415612dab5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a31565b6004816004811115612dbf57612dbf613b36565b1415612e185760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610a31565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612e525750600090506003612eff565b8460ff16601b14158015612e6a57508460ff16601c14155b15612e7b5750600090506004612eff565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612ecf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612ef857600060019250925050612eff565b9150600090505b94509492505050565b6000806001600160ff1b03831681612f2560ff86901c601b6139cc565b9050612f3387828885612e1b565b935093505050935093915050565b8035612f4c81613b78565b919050565b600082601f830112612f6257600080fd5b81356020612f77612f72836139a8565b613977565b80838252828201915082860187848660051b8901011115612f9757600080fd5b6000805b86811015612fda57823567ffffffffffffffff811115612fb9578283fd5b612fc78b88838d01016130ad565b8652509385019391850191600101612f9b565b509198975050505050505050565b600082601f830112612ff957600080fd5b613001613907565b80838560408601111561301357600080fd5b60005b6002811015613035578135845260209384019390910190600101613016565b509095945050505050565b600082601f83011261305157600080fd5b81356020613061612f72836139a8565b80838252828201915082860187848660051b890101111561308157600080fd5b60005b858110156130a057813584529284019290840190600101613084565b5090979650505050505050565b600082601f8301126130be57600080fd5b813567ffffffffffffffff8111156130d8576130d8613b62565b6130eb601f8201601f1916602001613977565b81815284602083860101111561310057600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561312f57600080fd5b6040516040810181811067ffffffffffffffff8211171561315257613152613b62565b604052823581526020928301359281019290925250919050565b600081830361010081121561318057600080fd5b6040516060810181811067ffffffffffffffff821117156131a3576131a3613b62565b6040529150816131b3858561311d565b81526080603f19830112156131c757600080fd5b6131cf613907565b91506131de8560408601612fe8565b82526131ed8560808601612fe8565b60208301528160208201526132058560c0860161311d565b6040820152505092915050565b803563ffffffff81168114612f4c57600080fd5b60006020828403121561323857600080fd5b813561324381613b78565b9392505050565b60006020828403121561325c57600080fd5b813561324381613b8d565b60006020828403121561327957600080fd5b815161324381613b8d565b6000806040838503121561329757600080fd5b823567ffffffffffffffff808211156132af57600080fd5b9084019060a082870312156132c357600080fd5b6132cb613930565b823581526020830135602082015260408301356040820152606083013560608201526080830135828111156132ff57600080fd5b61330b888286016130ad565b608083015250935061332291505060208401612f41565b90509250929050565b6000610160828403121561333e57600080fd5b6040516080810181811067ffffffffffffffff8211171561336157613361613b62565b60405261336e848461316c565b815261337d6101008401613212565b6020820152610120830135604082015261014090920135606083015250919050565b600080604083850312156133b257600080fd5b823567ffffffffffffffff808211156133ca57600080fd5b908401906102a082870312156133df57600080fd5b6133e7613953565b6133f1878461316c565b8152610100808401356020830152610120808501358481111561341357600080fd5b61341f8a828801613040565b604085015250610140808601358581111561343957600080fd5b6134458b828901613040565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561348257600080fd5b61348e8e828c01613040565b60e0890152506101e0890135888111156134a757600080fd5b6134b38e828c01613040565b87890152506134c56102008a01612f41565b858801526134d66102208a01612f41565b848801526102408901359550878611156134ef57600080fd5b6134fb8d878b01612f51565b838801526102608901358288015261028089013595508786111561351e57600080fd5b61352a8d878b01613040565b908701525093975050505060208601359250508082111561354a57600080fd5b50613557858286016130ad565b9150509250929050565b60006020828403121561357357600080fd5b5035919050565b6000806040838503121561358d57600080fd5b50508035926020909101359150565b600080604083850312156135af57600080fd5b8235915061332260208401613212565b6000602082840312156135d157600080fd5b61324382613212565b600080604083850312156135ed57600080fd5b6135f683613212565b9150602083013561360681613b78565b809150509250929050565b6000806040838503121561362457600080fd5b61362d83613212565b915061332260208401613212565b60008060006060848603121561365057600080fd5b61365984613212565b925061366760208501613212565b9150604084013561367781613b78565b809150509250925092565b8060005b60028110156136a5578151845260209384019390910190600101613686565b50505050565b600081518084526020808501945080840160005b838110156136db578151875295820195908201906001016136bf565b509495945050505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b16601484015250825161371d816028850160208701613a93565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b166014840152508351613763816028850160208801613a93565b83519083019061377a816028840160208801613a93565b016028019695505050505050565b815160009082906020808601845b838110156137b257815185529382019390820190600101613796565b50929695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613814578151805167ffffffffffffffff168552868101518786015285015185850152606090930192908501906001016137db565b5091979650505050505050565b60208152600061324360208301846136ab565b602081016002831061385657634e487b7160e01b600052602160045260246000fd5b91905290565b600061012061387683865180518252602090810151910152565b6020850151613889604085018251613682565b6020015161389a6080850182613682565b506040850151805160c08501526020015160e084015261010083018190526138c4818401856136ab565b95945050505050565b82815260406020820152600082518060408401526138f2816060850160208701613a93565b601f01601f1916919091016060019392505050565b6040805190810167ffffffffffffffff8111828210171561392a5761392a613b62565b60405290565b60405160a0810167ffffffffffffffff8111828210171561392a5761392a613b62565b6040516101c0810167ffffffffffffffff8111828210171561392a5761392a613b62565b604051601f8201601f1916810167ffffffffffffffff811182821017156139a0576139a0613b62565b604052919050565b600067ffffffffffffffff8211156139c2576139c2613b62565b5060051b60200190565b600082198211156139df576139df613b20565b500190565b600063ffffffff808316818516808303821115613a0357613a03613b20565b01949350505050565b6000816000190483118215151615613a2657613a26613b20565b500290565b600063ffffffff80831681851681830481118215151615613a4e57613a4e613b20565b02949350505050565b600082821015613a6957613a69613b20565b500390565b600063ffffffff83811690831681811015613a8b57613a8b613b20565b039392505050565b60005b83811015613aae578181015183820152602001613a96565b838111156136a55750506000910152565b6000600019821415613ad357613ad3613b20565b5060010190565b600063ffffffff80831681811415613af457613af4613b20565b6001019392505050565b600082613b1b57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612e1857600080fd5b8015158114612e1857600080fdfea264697066735822122002bb2a9e342974c39b31f2b0df6d30dba54cab8adb15819191189a872a4ac9f664736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
