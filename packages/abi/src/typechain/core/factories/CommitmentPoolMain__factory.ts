/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides, BigNumberish } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { CommitmentPoolMain, CommitmentPoolMainInterface } from '../CommitmentPoolMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_treeHeight',
        type: 'uint8',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AuditorIndexError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorNotesLengthError',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AuditorPublicKeyNotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHasBeenSubmitted',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Duplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'IndexOutOfBound',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NewRootIsDuplicated',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NoteHasBeenSpent',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NumInputsGreaterThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyOperator',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedRoller',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyWhitelistedSender',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OutputNotesLessThanThree',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupSizeNotPowerOfTwo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeHeightOutOfBounds',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TreeIsFull',
    type: 'error',
  },
  {
    inputs: [],
    name: 'VerifierUpdatesHasBeenDisabled',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'index',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'publicKey',
        type: 'uint256',
      },
    ],
    name: 'AuditorPublicKey',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentIncluded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'rollupFee',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'leafIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'encryptedNote',
        type: 'bytes',
      },
    ],
    name: 'CommitmentQueued',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'rootHash',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'serialNumber',
        type: 'uint256',
      },
    ],
    name: 'CommitmentSpent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint64',
        name: 'id',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'auditorPublicKey',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'encryptedAuditorNote',
        type: 'uint256',
      },
    ],
    name: 'EncryptedAuditorNote',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'id',
            type: 'uint64',
          },
          {
            internalType: 'uint256',
            name: 'publicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'note',
            type: 'uint256',
          },
        ],
        indexed: false,
        internalType: 'struct CommitmentPool.AuditorNote[]',
        name: 'notes',
        type: 'tuple[]',
      },
    ],
    name: 'EncryptedAuditorNotes',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'operator',
        type: 'address',
      },
    ],
    name: 'OperatorChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'RollupWhitelistDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'VerifierUpdateDisabled',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_fullPath',
        type: 'uint256',
      },
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: '_pathIndices',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'addEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'addRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'auditorCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newOperator',
        type: 'address',
      },
    ],
    name: 'changeOperator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
    ],
    name: 'disableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
    ],
    name: 'disableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_rollupSize',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_rollupVerifier',
        type: 'address',
      },
    ],
    name: 'enableRollupVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: '_numInputs',
        type: 'uint32',
      },
      {
        internalType: 'uint32',
        name: '_numOutputs',
        type: 'uint32',
      },
      {
        internalType: 'contract IVerifier',
        name: '_transactVerifier',
        type: 'address',
      },
    ],
    name: 'enableTransactVerifier',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
        ],
        internalType: 'struct ICommitmentPool.CommitmentRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'enqueue',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAllAuditorPublicKeys',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
    ],
    name: 'getAuditorPublicKey',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentIncludedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCommitmentQueuedCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getNullifierCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getQueuedCommitments',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTreeCapacity',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_commitment',
        type: 'uint256',
      },
    ],
    name: 'isHistoricCommitment',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'root',
        type: 'uint256',
      },
    ],
    name: 'isKnownRoot',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isRollupWhitelistDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_serialNumber',
        type: 'uint256',
      },
    ],
    name: 'isSpentSerialNumber',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isVerifierUpdateDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_actor',
        type: 'address',
      },
    ],
    name: 'removeEnqueueWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_roller',
        type: 'address',
      },
    ],
    name: 'removeRollupWhitelist',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint32',
            name: 'rollupSize',
            type: 'uint32',
          },
          {
            internalType: 'uint256',
            name: 'newRoot',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'leafHash',
            type: 'uint256',
          },
        ],
        internalType: 'struct ICommitmentPool.RollupRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'rollup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setRollupWhitelistDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setVerifierUpdateDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'a',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256[2]',
                    name: 'X',
                    type: 'uint256[2]',
                  },
                  {
                    internalType: 'uint256[2]',
                    name: 'Y',
                    type: 'uint256[2]',
                  },
                ],
                internalType: 'struct IVerifier.G2Point',
                name: 'b',
                type: 'tuple',
              },
              {
                components: [
                  {
                    internalType: 'uint256',
                    name: 'X',
                    type: 'uint256',
                  },
                  {
                    internalType: 'uint256',
                    name: 'Y',
                    type: 'uint256',
                  },
                ],
                internalType: 'struct IVerifier.G1Point',
                name: 'c',
                type: 'tuple',
              },
            ],
            internalType: 'struct IVerifier.Proof',
            name: 'proof',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'rootHash',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'serialNumbers',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'sigHashes',
            type: 'uint256[]',
          },
          {
            internalType: 'bytes32',
            name: 'sigPk',
            type: 'bytes32',
          },
          {
            internalType: 'uint256',
            name: 'publicAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'relayerFeeAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'outCommitments',
            type: 'uint256[]',
          },
          {
            internalType: 'uint256[]',
            name: 'outRollupFees',
            type: 'uint256[]',
          },
          {
            internalType: 'address',
            name: 'publicRecipient',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'relayerAddress',
            type: 'address',
          },
          {
            internalType: 'bytes[]',
            name: 'outEncryptedNotes',
            type: 'bytes[]',
          },
          {
            internalType: 'uint256',
            name: 'randomAuditingPublicKey',
            type: 'uint256',
          },
          {
            internalType: 'uint256[]',
            name: 'encryptedAuditorNotes',
            type: 'uint256[]',
          },
        ],
        internalType: 'struct ICommitmentPool.TransactRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: '_signature',
        type: 'bytes',
      },
    ],
    name: 'transact',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_index',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_publicKey',
        type: 'uint256',
      },
    ],
    name: 'updateAuditorPublicKey',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60a0604052600180546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb1790556000600781905560088190556009553480156200004757600080fd5b5060405162004470380380620044708339810160408190526200006a91620007a9565b60016000558060ff81166200009257604051632c4f29b160e21b815260040160405180910390fd5b600c80546001600160a01b03191633179055600160ff82161b608052620000b981620000e0565b600b8190556000908152600a60205260409020805460ff1916600117905550620007d59050565b600060ff82166200011257507f09f658457775074ff4c842032a5ec2f1134c32784cca59d594caac8c503b7923919050565b8160ff16600114156200014657507f1a77569b79cb7c2eaf9368de9e3b1efc0a606561e5ab299c2337340f3cdd576a919050565b8160ff16600214156200017a57507f111bd0002b1e3b8f1978c932b5ccb2fab87fdb0acab2ddb266f9a346dcb11ee1919050565b8160ff1660031415620001ae57507f040868ea2a363e05d7ae44280f69b49e429ab096ca2844efe91f8d6b3dad57dd919050565b8160ff1660041415620001e157507ef8f605c92c8502c8fe83be1b83b24e3f67312a388f30cbadb5dee8974137c3919050565b8160ff16600514156200021557507f1adc043c99adbc0c86a60a36db0f661e2dd96f36ede322f954386d8935a0c5d9919050565b8160ff16600614156200024957507f2a1fedfa71da723ac3e9b35cef752fa1b647b2b737a23e91241cb7bdc419e3f4919050565b8160ff16600714156200027d57507f17fe1974543c4c4b228e1292f7e3200d31435fc910ee5a8c5cafd329cc4b256b919050565b8160ff1660081415620002b157507f0e84a586eb63a0eec0f1fe5785022441f0e29e4ae859c7ce1f5fc88a42ad2e6b919050565b8160ff1660091415620002e557507f193deb901f6eeb032e02e093280db17e373d4ff52bafda9215b46bb9b0a86f3e919050565b8160ff16600a14156200031957507f1d10ca7b985697cb519565a5006c3f44b020b2edab9b7422ed15dc34532f9406919050565b8160ff16600b14156200034d57507f1dc200763555467a4e583e00badfdc1fb4d3d3f8f1cc81f31fd2f8b387776081919050565b8160ff16600c14156200038157507f203dd11fdba0ed13b20ca2d6952f3feb7461836a03512e0cccce8467b320b2f6919050565b8160ff16600d1415620003b557507f0591af64e64a3e69caf23eee2bdea90885343a49f547ee9464e95d8d6267e4f7919050565b8160ff16600e1415620003e957507f2af572f1077a32f46dc8e307d43c0fa6753b400b2107325976b8df7380545ff6919050565b8160ff16600f14156200041d57507f043227ae4b70b1aacd04e35e6aaed7b56d91220c31e97aaf52e12a6a56984e52919050565b8160ff16601014156200045157507f2976f1f6a91d83d4c528dad69ece6d3d91934b0e5657e915b360c8c4c2fb54e6919050565b8160ff16601114156200048457507ee5c251c9e093658be0cd1b0df55b6f70f3d09146c1c8b4212a4ddcde700dbc919050565b8160ff1660121415620004b857507f0267cbbc1bc2f1c3e3073d2ee60df8cc0bfef39fe3cee735c9ad5c8ad30064d2919050565b8160ff1660131415620004ec57507f2f356057bc56f67dbf159a0e8935022acd5e982dce9f4071adc43e4d57ce27e6919050565b8160ff16601414156200052057507f273db68f52f12a9d8022ae524050064e42d4d1661c9bcce958acf89b5e8b127b919050565b8160ff16601514156200055457507f0496a18ad4cca81b7c98ceb197439ad925e0f7f62d69dfa42cf9574be77fe30f919050565b8160ff16601614156200058857507f24f89a3f943d421b2f3a554b65459f42b820ac09d6fd9d693df5f8ba732ab596919050565b8160ff1660171415620005bc57507f1b55bfd751c6807df36876cdce68034ab43210be2bc8afa8043c7f428604e7a7919050565b8160ff1660181415620005f057507f16d6595a398cf20f2489b90e958166f1e19c537c0c46e9b8ea5462391ee8f143919050565b8160ff16601914156200062457507f0f01447ef8f621592474b678ed2fc404ebaf22a6fce15364bb4152a88c113613919050565b8160ff16601a14156200065857507f026c2dffee48bacbc9d21cf90aa7c6e525ab01db6966a9e7e53b3d3f4d1f5a4d919050565b8160ff16601b14156200068c57507f234fe90732795745b2c504c791242a2bb193baa1cbeab57db9324b6bb9134817919050565b8160ff16601c1415620006c057507f23a8e0a7e60981c52ebb498c260d5bef4d7c65145d17128996a77c33a3262a7e919050565b8160ff16601d1415620006f457507f24ee69d2565210c7027ff6fc2657ed029278bc79f41077fe3281ea5d5d8e80f9919050565b8160ff16601e14156200072857507f1de402fa32463bb2917b733aeef0197a49cacacd1fe860c3acc8cd3b65a30a68919050565b8160ff16601f14156200075c57507f1d3015a0f6a7b3f754171d0540628107e50e25debceb16e0e33ae4205501896d919050565b8160ff16602014156200079057507f264a260539342647256819046bae05bed903a8d19b3c90439d67317d5d881322919050565b604051639780f42960e01b815260040160405180910390fd5b600060208284031215620007bc57600080fd5b815160ff81168114620007ce57600080fd5b9392505050565b608051613c71620007ff600039600081816103ff015281816112450152611b680152613c716000f3fe6080604052600436106102895760003560e01c80637cbf0ff611610153578063b1c39422116100cb578063e500f5041161007f578063f2da1d4111610064578063f2da1d4114610709578063f8f0538814610729578063ffa89b881461074957600080fd5b8063e500f504146106bc578063ec571c6a146106d157600080fd5b8063c259e2e6116100b0578063c259e2e614610667578063dd757c3414610687578063deeff7cd1461069c57600080fd5b8063b1c3942214610626578063b3b756311461064757600080fd5b80639b0a6fea11610122578063a6232a9311610107578063a6232a93146105c1578063a9b1d296146105f1578063b08892d01461061157600080fd5b80639b0a6fea146105815780639cc6b354146105a157600080fd5b80637cbf0ff61461050c5780637fa4b09c1461052c578063866ac6581461054c57806387780df91461056157600080fd5b80633fe3347a1161020157806357060016116101b5578063720829711161019a57806372082971146104b757806378d60cd7146104d75780637a553744146104f757600080fd5b8063570600161461046557806363bc7d321461049557600080fd5b80634eb069f7116101e65780634eb069f714610423578063555d75f01461043b5780635688881f1461045057600080fd5b80633fe3347a146103d4578063484eb652146103f057600080fd5b80630c8867e61161025857806314a7737d1161023d57806314a7737d1461035457806330f49cac146103745780633bb8d1b41461039457600080fd5b80630c8867e61461030c578063115f574c1461032c57600080fd5b806301dbf19f1461029557806302d498f1146102ac57806303db9874146102cc57806306394c9b146102ec57600080fd5b3661029057005b600080fd5b3480156102a157600080fd5b506102aa610766565b005b3480156102b857600080fd5b506102aa6102c73660046132bf565b6107ea565b3480156102d857600080fd5b506102aa6102e73660046132bf565b610839565b3480156102f857600080fd5b506102aa6103073660046132bf565b610885565b34801561031857600080fd5b506102aa610327366004613613565b610936565b34801561033857600080fd5b50610341600581565b6040519081526020015b60405180910390f35b34801561036057600080fd5b506102aa61036f3660046133c4565b610a05565b34801561038057600080fd5b506102aa61038f3660046132bf565b610f68565b3480156103a057600080fd5b506103c46103af3660046135fa565b60009081526005602052604090205460ff1690565b604051901515815260200161034b565b3480156103e057600080fd5b50600160405161034b91906138cd565b3480156103fc57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610341565b34801561042f57600080fd5b5060105460ff166103c4565b34801561044757600080fd5b50600754610341565b34801561045c57600080fd5b50610341610ff5565b34801561047157600080fd5b506103c46104803660046135fa565b60009081526004602052604090205460ff1690565b3480156104a157600080fd5b506104aa61100c565b60405161034b91906138ba565b3480156104c357600080fd5b506102aa6104d2366004613438565b611089565b3480156104e357600080fd5b506102aa6104f236600461331d565b611b0f565b34801561050357600080fd5b50600954610341565b34801561051857600080fd5b506102aa6105273660046135fa565b611c3a565b34801561053857600080fd5b506102aa6105473660046136d4565b611cb8565b34801561055857600080fd5b506104aa611d9b565b34801561056d57600080fd5b5061034161057c3660046135fa565b611e48565b34801561058d57600080fd5b506102aa61059c366004613658565b611e86565b3480156105ad57600080fd5b506102aa6105bc3660046132bf565b611f7e565b3480156105cd57600080fd5b506103c46105dc3660046135fa565b6000908152600a602052604090205460ff1690565b3480156105fd57600080fd5b506102aa61060c3660046132bf565b611fca565b34801561061d57600080fd5b50600d54610341565b34801561063257600080fd5b506001546103c490600160a01b900460ff1681565b34801561065357600080fd5b506102aa6106623660046132e3565b612019565b34801561067357600080fd5b506102aa6106823660046136aa565b612085565b34801561069357600080fd5b506102aa612129565b3480156106a857600080fd5b506102aa6106b7366004613673565b6121a1565b3480156106c857600080fd5b50600854610341565b3480156106dd57600080fd5b506001546106f1906001600160a01b031681565b6040516001600160a01b03909116815260200161034b565b34801561071557600080fd5b50610341610724366004613635565b6122e1565b34801561073557600080fd5b506102aa6107443660046132e3565b61236a565b34801561075557600080fd5b50601054610100900460ff166103c4565b600c546001600160a01b03163314610791576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926107e092900460ff161515815260200190565b60405180910390a1565b600c546001600160a01b03163314610815576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19166001179055565b600c546001600160a01b03163314610864576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19169055565b600c546001600160a01b031633146108b0576040516327e1f1e560e01b815260040160405180910390fd5b600c546001600160a01b03828116911614156108df576040516336a1c33f60e01b815260040160405180910390fd5b600c805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f4721129e0e676ed6a92909bb24e853ccdd63ad72280cc2e974e38e480e0e6e5490600090a250565b600c546001600160a01b03163314610961576040516327e1f1e560e01b815260040160405180910390fd5b600582106109825760405163318c434560e21b815260040160405180910390fd5b806011836005811061099657610996613bec565b015414156109b657604051624a706760e31b815260040160405180910390fd5b80601183600581106109ca576109ca613bec565b015560405181815282907f94adca83ce41447cfb8e07d1c9c4536a1b8afbff6c7c83c2d918214adc68102f9060200160405180910390a25050565b601054610100900460ff16158015610a2d5750336000908152600e602052604090205460ff16155b15610a4b576040516321ce01f360e01b815260040160405180910390fd5b6040808201516000908152600a602052205460ff1615610a7e5760405163e2e1210360e01b815260040160405180910390fd5b600754816020015163ffffffff161180610aba575060208181015163ffffffff16600090815260039091526040902054600160a01b900460ff16155b15610afa576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b60448201526064015b60405180910390fd5b6008546020820151610b129063ffffffff1682613b9e565b15610b4d576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610af1565b6000610b5d8284602001516122e1565b90506000836020015163ffffffff1667ffffffffffffffff811115610b8457610b84613c02565b604051908082528060200260200182016040528015610bad578160200160208202803683370190505b5090506000805b856020015163ffffffff16811015610cab576000610bd28287613a6c565b600081815260066020908152604091829020825180840190935280548084526001909101549183019190915291925090610c1f5760405163d3482f7b60e01b815260040160405180910390fd5b8060000151858481518110610c3657610c36613bec565b602002602001018181525050806020015184610c529190613a6c565b60008381526006602052604080822082815560010182905583519051929650917ffe6b097b46a78e08506a3143b6337c2505ba77df76fe05c3663a987395d634139190a250508080610ca390613b5f565b915050610bb4565b50846020015163ffffffff1660076000828254610cc89190613af7565b9250508190555060007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000183604051602001610d039190613821565b6040516020818303038152906040528051906020012060001c610d269190613b9e565b905080866060015114610d7c576040516314e8955b60e21b815260206004820152600860248201527f6c656166486173680000000000000000000000000000000000000000000000006044820152606401610af1565b60408051600480825260a0820190925260009160208201608080368337019050509050600b5481600081518110610db557610db5613bec565b602002602001018181525050866040015181600181518110610dd957610dd9613bec565b6020026020010181815250508181600281518110610df957610df9613bec565b6020026020010181815250508481600381518110610e1957610e19613bec565b6020908102919091018101919091528781015163ffffffff16600090815260039091526040808220548951915163c941764760e01b81526001600160a01b039091169163c941764791610e71919086906004016138f5565b602060405180830381600087803b158015610e8b57600080fd5b505af1158015610e9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec39190613300565b905080610f13576040516314e8955b60e21b815260206004820152600560248201527f70726f6f660000000000000000000000000000000000000000000000000000006044820152606401610af1565b876020015163ffffffff1660086000828254610f2f9190613a6c565b9091555050604080890151600b8190556000908152600a60205220805460ff19166001179055610f5e846123de565b5050505050505050565b600c546001600160a01b03163314610f93576040516327e1f1e560e01b815260040160405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b60006007546008546110079190613a6c565b905090565b60408051600580825260c08201909252606091600091906020820160a08036833701905050905060005b6005811015611083576011816005811061105257611052613bec565b015482828151811061106657611066613bec565b60209081029190910101528061107b81613b5f565b915050611036565b50919050565b611091612476565b60006110a18360400151516124d0565b905060006110b38460e00151516124d0565b63ffffffff838116600090815260026020908152604080832093851683529290522054909150600160a01b900460ff16611130576040516314e8955b60e21b815260206004820152600a60248201527f692f6f206c656e677468000000000000000000000000000000000000000000006044820152606401610af1565b8163ffffffff168460600151511461118b576040516314e8955b60e21b815260206004820152601060248201527f736967486173686573206c656e677468000000000000000000000000000000006044820152606401610af1565b8063ffffffff1684610100015151146111e7576040516314e8955b60e21b815260206004820152601460248201527f6f7574526f6c6c757046656573206c656e6774680000000000000000000000006044820152606401610af1565b8063ffffffff168461016001515114611243576040516314e8955b60e21b815260206004820152601860248201527f6f7574456e637279707465644e6f746573206c656e67746800000000000000006044820152606401610af1565b7f00000000000000000000000000000000000000000000000000000000000000008163ffffffff1660075460085461127b9190613a6c565b6112859190613a6c565b11156112a457604051633b5ccb4360e21b815260040160405180910390fd5b6112ad32612550565b156112cb57604051632e70c0b160e01b815260040160405180910390fd5b6112d9846101200151612550565b156112f757604051632e70c0b160e01b815260040160405180910390fd5b611308600563ffffffff8416613aac565b846101a00151511461132d57604051633acf48bb60e21b815260040160405180910390fd5b6000611338856125ef565b90506113448185612765565b6001600160a01b031660001b8560800151146113a3576040516314e8955b60e21b815260206004820152600960248201527f7369676e617475726500000000000000000000000000000000000000000000006044820152606401610af1565b60006113b0846002613acb565b63ffffffff16905060006113c5856002613acb565b6113d0906004613a84565b63ffffffff16905060006113e5856002613acb565b6113f59063ffffffff1683613a6c565b905060006005611406886002613a84565b63ffffffff166114169190613aac565b611421836002613a6c565b61142b9190613a6c565b67ffffffffffffffff81111561144357611443613c02565b60405190808252806020026020018201604052801561146c578160200160208202803683370190505b506020808b01516000908152600a909152604090205490915060ff166114be576040516314e8955b60e21b8152600401610af1906020808252600490820152631c9bdbdd60e21b604082015260600190565b8860200151816000815181106114d6576114d6613bec565b602090810291909101015260006114ee886001613a84565b63ffffffff16905060005b8863ffffffff168110156115fa5760008b60400151828151811061151f5761151f613bec565b6020908102919091018101516000818152600590925260409091205490915060ff1615611578576040517fff556e2000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8084611585846001613a6c565b8151811061159557611595613bec565b6020026020010181815250508b6060015182815181106115b7576115b7613bec565b60200260200101518484846115cc9190613a6c565b815181106115dc576115dc613bec565b602090810291909101015250806115f281613b5f565b9150506114f9565b5060808a01518261160c876001613a6c565b8151811061161c5761161c613bec565b602090810291909101015260a08a015182611638876002613a6c565b8151811061164857611648613bec565b602090810291909101015260c08a015182611664876003613a6c565b8151811061167457611674613bec565b6020908102919091010152600061169163ffffffff891686613a6c565b905060005b8863ffffffff1681101561180b57600460008d60e0015183815181106116be576116be613bec565b60209081029190910181015182528101919091526040016000205460ff161561172a5760405163bee3611160e01b815260206004820152600a60248201527f636f6d6d69746d656e74000000000000000000000000000000000000000000006044820152606401610af1565b600d548c6101000151828151811061174457611744613bec565b6020026020010151101561176b5760405163784f02bd60e11b815260040160405180910390fd5b8b60e00151818151811061178157611781613bec565b60200260200101518487836117969190613a6c565b815181106117a6576117a6613bec565b6020026020010181815250508b610100015181815181106117c9576117c9613bec565b60200260200101518483836117de9190613a6c565b815181106117ee576117ee613bec565b60209081029190910101528061180381613b5f565b915050611696565b506118178b8486612789565b63ffffffff808a166000908152600260209081526040808320938c168352929052818120548d51925163c941764760e01b815291926001600160a01b039091169163c94176479161186c9188906004016138f5565b602060405180830381600087803b15801561188657600080fd5b505af115801561189a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118be9190613300565b90508061190e576040516314e8955b60e21b815260206004820152600e60248201527f7472616e736163742070726f6f660000000000000000000000000000000000006044820152606401610af1565b60005b8a63ffffffff168110156119e2576001600560008f60400151848151811061193b5761193b613bec565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555060016009600082825461197b9190613a6c565b909155505060408d015180518290811061199757611997613bec565b60200260200101518d602001517f3c2372ab6130817bd6b8fc6dbaecae947e84201b49535d358debaa6c34c23ecf60405160405180910390a3806119da81613b5f565b915050611911565b5060005b8963ffffffff16811015611ab3576001600460008f60e001518481518110611a1057611a10613bec565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550611aa18d60e001518281518110611a5657611a56613bec565b60200260200101518e61010001518381518110611a7557611a75613bec565b60200260200101518f61016001518481518110611a9457611a94613bec565b6020026020010151612980565b80611aab81613b5f565b9150506119e6565b5060a08c015115611ad157611ad18c61012001518d60a00151612a1f565b60c08c015115611aee57611aee8c61014001518d60c00151612a1f565b611af78c612ac7565b50505050505050505050611b0b6001600055565b5050565b336000908152600f602052604090205460ff16611b3f5760405163f75e9fc760e01b815260040160405180910390fd5b600d5482606001511015611b665760405163784f02bd60e11b815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600754600854611b979190613a6c565b10611bb557604051633b5ccb4360e21b815260040160405180910390fd5b60208083015160009081526004909152604090205460ff1615611beb5760405163e38cd14d60e01b815260040160405180910390fd5b60208083018051600090815260049092526040909120805460ff191660011790555160608301516080840151611c22929190612980565b604082015115611b0b57611b0b818360400151612cdc565b600c546001600160a01b03163314611c65576040516327e1f1e560e01b815260040160405180910390fd5b80611cb3576040516314e8955b60e21b815260206004820152600d60248201527f5f6d696e526f6c6c7570466565000000000000000000000000000000000000006044820152606401610af1565b600d55565b600c546001600160a01b03163314611ce3576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611d07576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8316611d2b57604051639f7bd94b60e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff9687166000908152600282528481209690971687529490945293209251835492511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909316911617179055565b6060600060075467ffffffffffffffff811115611dba57611dba613c02565b604051908082528060200260200182016040528015611de3578160200160208202803683370190505b50905060005b60075481101561108357600081600854611e039190613a6c565b600081815260066020526040902054845191925090849084908110611e2a57611e2a613bec565b60209081029190910101525080611e4081613b5f565b915050611de9565b600060058210611e6b5760405163318c434560e21b815260040160405180910390fd5b60118260058110611e7e57611e7e613bec565b015492915050565b600c546001600160a01b03163314611eb1576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff1615611ed5576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff81161580611eef57506104008163ffffffff16115b15611f2a576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610af1565b611f35600182613b0e565b811663ffffffff16600014611f5d576040516322717ff960e01b815260040160405180910390fd5b63ffffffff166000908152600360205260409020805460ff60a01b19169055565b600c546001600160a01b03163314611fa9576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600e60205260409020805460ff19169055565b600c546001600160a01b03163314611ff5576040516327e1f1e560e01b815260040160405180910390fd5b6001600160a01b03166000908152600f60205260409020805460ff19166001179055565b600c546001600160a01b03163314612044576040516327e1f1e560e01b815260040160405180910390fd5b6010805460ff19168215159081179091556040519081527fcf54e49cbf0fd7613fb6b5b09f2e8c1255a9df94a826390f783d35cf2b4da7e490602001610fea565b600c546001600160a01b031633146120b0576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff16156120d4576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff82166120f857604051639f7bd94b60e01b815260040160405180910390fd5b63ffffffff91821660009081526002602090815260408083209390941682529190915220805460ff60a01b19169055565b600c546001600160a01b03163314612154576040516327e1f1e560e01b815260040160405180910390fd5b6001805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916107e091600160a01b90910460ff161515815260200190565b600c546001600160a01b031633146121cc576040516327e1f1e560e01b815260040160405180910390fd5b60105460ff16156121f0576040516336e3e09560e01b815260040160405180910390fd5b63ffffffff8216158061220a57506104008263ffffffff16115b15612245576040516314e8955b60e21b815260206004820152600a602482015269726f6c6c757053697a6560b01b6044820152606401610af1565b612250600183613b0e565b821663ffffffff16600014612278576040516322717ff960e01b815260040160405180910390fd5b6040805180820182526001600160a01b0392831681526001602080830191825263ffffffff90951660009081526003909552919093209251835491511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff19909216921691909117179055565b60006101008263ffffffff16106123075760088263ffffffff16901c9150600883901c92505b60108263ffffffff161061232a5760048263ffffffff16901c9150600483901c92505b60048263ffffffff161061234d5760028263ffffffff16901c9150600283901c92505b60028263ffffffff161061236357600183901c92505b5090919050565b600c546001600160a01b03163314612395576040516327e1f1e560e01b815260040160405180910390fd5b601080548215156101000261ff00199091161790556040517f9a24ee704854e0c531da821c99604540690f2af5577d2c892c2921cea409b47990610fea90831515815260200190565b604051600090339083908381818185875af1925050503d8060008114612420576040519150601f19603f3d011682016040523d82523d6000602084013e612425565b606091505b5050905080611b0b5760405162461bcd60e51b815260206004820152601a60248201527f726f6c6c757020666565207472616e73666572206661696c65640000000000006044820152606401610af1565b600260005414156124c95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610af1565b6002600055565b600063ffffffff82111561254c5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201527f32206269747300000000000000000000000000000000000000000000000000006064820152608401610af1565b5090565b600154600090600160a01b900460ff1661256c57506000919050565b60015460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d9060240160206040518083038186803b1580156125b157600080fd5b505afa1580156125c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e99190613300565b92915050565b610160810151516000906003811061261a57604051633fb1945d60e11b815260040160405180910390fd5b60608161266e576101208401516101408501516040516bffffffffffffffffffffffff19606093841b811660208301529190921b1660348201526048015b6040516020818303038152906040529050612726565b81600114156126b55783610120015184610140015185610160015160008151811061269b5761269b613bec565b60200260200101516040516020016126589392919061377f565b8361012001518461014001518561016001516000815181106126d9576126d9613bec565b60200260200101518661016001516001815181106126f9576126f9613bec565b602002602001015160405160200161271494939291906137c5565b60405160208183030381529060405290505b805160208201207f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c91909152603c9020949350505050565b60008060006127748585612d7f565b9150915061278181612dc5565b509392505050565b6101808301516040805180820182526000808252602091820152815180830190925260ff83901c8083526001600160ff1b039093169082015283519091908490849081106127d9576127d9613bec565b6020026020010181815250508060200151838360016127f89190613a6c565b8151811061280857612808613bec565b60209081029190910101526000612820836002613a6c565b9050600061282f600583613a6c565b9050600061283f60056002613aac565b6128499084613a6c565b905060005b60058110156129155760006128a96011836005811061286f5761286f613bec565b01546040805180820182526000808252602091820152815180830190925260ff83901c82526001600160ff1b039092169181019190915290565b8051909150886128b98488613a6c565b815181106128c9576128c9613bec565b60200260200101818152505080602001518883866128e79190613a6c565b815181106128f7576128f7613bec565b6020908102919091010152508061290d81613b5f565b91505061284e565b5060005b876101a0015151811015610f5e57876101a00151818151811061293e5761293e613bec565b60200260200101518782846129539190613a6c565b8151811061296357612963613bec565b60209081029190910101528061297881613b5f565b915050612919565b60006008546007546129929190613a6c565b6040805180820182528681526020808201878152600085815260069092529281209151825591516001918201556007805493945090929091906129d6908490613a6c565b92505081905550837ff533f9705aac5020e21695ea3553ac7b6881070d2b6900ab2b1e3050304b5bf9848385604051612a1193929190613966565b60405180910390a250505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612a6c576040519150601f19603f3d011682016040523d82523d6000602084013e612a71565b606091505b5050905080612ac25760405162461bcd60e51b815260206004820152600f60248201527f7769746864726177206661696c656400000000000000000000000000000000006044820152606401610af1565b505050565b60006005826040015151612adb9190613aac565b905060008167ffffffffffffffff811115612af857612af8613c02565b604051908082528060200260200182016040528015612b5757816020015b612b446040518060600160405280600067ffffffffffffffff16815260200160008152602001600081525090565b815260200190600190039081612b165790505b5090506000805b8460400151518163ffffffff161015612c9e5760005b60058163ffffffff161015612c8b578063ffffffff1660208363ffffffff1667ffffffffffffffff16901b17848481518110612bb257612bb2613bec565b602090810291909101015167ffffffffffffffff9091169052601163ffffffff821660058110612be457612be4613bec565b0154848481518110612bf857612bf8613bec565b60200260200101516020018181525050856101a001518163ffffffff1660058463ffffffff16612c289190613aac565b612c329190613a6c565b81518110612c4257612c42613bec565b6020026020010151848481518110612c5c57612c5c613bec565b60209081029190910101516040015282612c7581613b5f565b9350508080612c8390613b7a565b915050612b74565b5080612c9681613b7a565b915050612b5e565b507f6af07ebcb33931abd348e785f70c6d259390cf799191f8c99124245b96e1a61382604051612cce9190613857565b60405180910390a150505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d29576040519150601f19603f3d011682016040523d82523d6000602084013e612d2e565b606091505b5050905080612ac25760405162461bcd60e51b815260206004820152601c60248201527f6578656375746f7220666565207472616e73666572206661696c6564000000006044820152606401610af1565b600080825160411415612db65760208301516040840151606085015160001a612daa87828585612f16565b94509450505050612dbe565b506000905060025b9250929050565b6000816004811115612dd957612dd9613bd6565b1415612de25750565b6001816004811115612df657612df6613bd6565b1415612e445760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610af1565b6002816004811115612e5857612e58613bd6565b1415612ea65760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610af1565b6003816004811115612eba57612eba613bd6565b1415612f135760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610af1565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612f4d5750600090506003612fd1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612fa1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116612fca57600060019250925050612fd1565b9150600090505b94509492505050565b8035612fe581613c18565b919050565b600082601f830112612ffb57600080fd5b8135602061301061300b83613a48565b613a17565b80838252828201915082860187848660051b890101111561303057600080fd5b6000805b8681101561307357823567ffffffffffffffff811115613052578283fd5b6130608b88838d0101613146565b8652509385019391850191600101613034565b509198975050505050505050565b600082601f83011261309257600080fd5b61309a6139a7565b8083856040860111156130ac57600080fd5b60005b60028110156130ce5781358452602093840193909101906001016130af565b509095945050505050565b600082601f8301126130ea57600080fd5b813560206130fa61300b83613a48565b80838252828201915082860187848660051b890101111561311a57600080fd5b60005b858110156131395781358452928401929084019060010161311d565b5090979650505050505050565b600082601f83011261315757600080fd5b813567ffffffffffffffff81111561317157613171613c02565b613184601f8201601f1916602001613a17565b81815284602083860101111561319957600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156131c857600080fd5b6040516040810181811067ffffffffffffffff821117156131eb576131eb613c02565b604052823581526020928301359281019290925250919050565b600081830361010081121561321957600080fd5b6040516060810181811067ffffffffffffffff8211171561323c5761323c613c02565b60405291508161324c85856131b6565b81526080603f198301121561326057600080fd5b6132686139a7565b91506132778560408601613081565b82526132868560808601613081565b602083015281602082015261329e8560c086016131b6565b6040820152505092915050565b803563ffffffff81168114612fe557600080fd5b6000602082840312156132d157600080fd5b81356132dc81613c18565b9392505050565b6000602082840312156132f557600080fd5b81356132dc81613c2d565b60006020828403121561331257600080fd5b81516132dc81613c2d565b6000806040838503121561333057600080fd5b823567ffffffffffffffff8082111561334857600080fd5b9084019060a0828703121561335c57600080fd5b6133646139d0565b8235815260208301356020820152604083013560408201526060830135606082015260808301358281111561339857600080fd5b6133a488828601613146565b60808301525093506133bb91505060208401612fda565b90509250929050565b600061016082840312156133d757600080fd5b6040516080810181811067ffffffffffffffff821117156133fa576133fa613c02565b6040526134078484613205565b815261341661010084016132ab565b6020820152610120830135604082015261014090920135606083015250919050565b6000806040838503121561344b57600080fd5b823567ffffffffffffffff8082111561346357600080fd5b908401906102a0828703121561347857600080fd5b6134806139f3565b61348a8784613205565b815261010080840135602083015261012080850135848111156134ac57600080fd5b6134b88a8288016130d9565b60408501525061014080860135858111156134d257600080fd5b6134de8b8289016130d9565b6060860152506101608087013560808601526101808088013560a08701526101a08089013560c08801526101c08901358881111561351b57600080fd5b6135278e828c016130d9565b60e0890152506101e08901358881111561354057600080fd5b61354c8e828c016130d9565b878901525061355e6102008a01612fda565b8588015261356f6102208a01612fda565b8488015261024089013595508786111561358857600080fd5b6135948d878b01612fea565b83880152610260890135828801526102808901359550878611156135b757600080fd5b6135c38d878b016130d9565b90870152509397505050506020860135925050808211156135e357600080fd5b506135f085828601613146565b9150509250929050565b60006020828403121561360c57600080fd5b5035919050565b6000806040838503121561362657600080fd5b50508035926020909101359150565b6000806040838503121561364857600080fd5b823591506133bb602084016132ab565b60006020828403121561366a57600080fd5b6132dc826132ab565b6000806040838503121561368657600080fd5b61368f836132ab565b9150602083013561369f81613c18565b809150509250929050565b600080604083850312156136bd57600080fd5b6136c6836132ab565b91506133bb602084016132ab565b6000806000606084860312156136e957600080fd5b6136f2846132ab565b9250613700602085016132ab565b9150604084013561371081613c18565b809150509250925092565b8060005b600281101561373e57815184526020938401939091019060010161371f565b50505050565b600081518084526020808501945080840160005b8381101561377457815187529582019590820190600101613758565b509495945050505050565b60006bffffffffffffffffffffffff19808660601b168352808560601b1660148401525082516137b6816028850160208701613b33565b91909101602801949350505050565b60006bffffffffffffffffffffffff19808760601b168352808660601b1660148401525083516137fc816028850160208801613b33565b835190830190613813816028840160208801613b33565b016028019695505050505050565b815160009082906020808601845b8381101561384b5781518552938201939082019060010161382f565b50929695505050505050565b602080825282518282018190526000919060409081850190868401855b828110156138ad578151805167ffffffffffffffff16855286810151878601528501518585015260609093019290850190600101613874565b5091979650505050505050565b6020815260006132dc6020830184613744565b60208101600283106138ef57634e487b7160e01b600052602160045260246000fd5b91905290565b600061012061390f83865180518252602090810151910152565b602085015161392260408501825161371b565b60200151613933608085018261371b565b506040850151805160c08501526020015160e0840152610100830181905261395d81840185613744565b95945050505050565b8381528260208201526060604082015260008251806060840152613991816080850160208701613b33565b601f01601f191691909101608001949350505050565b6040805190810167ffffffffffffffff811182821017156139ca576139ca613c02565b60405290565b60405160a0810167ffffffffffffffff811182821017156139ca576139ca613c02565b6040516101c0810167ffffffffffffffff811182821017156139ca576139ca613c02565b604051601f8201601f1916810167ffffffffffffffff81118282101715613a4057613a40613c02565b604052919050565b600067ffffffffffffffff821115613a6257613a62613c02565b5060051b60200190565b60008219821115613a7f57613a7f613bc0565b500190565b600063ffffffff808316818516808303821115613aa357613aa3613bc0565b01949350505050565b6000816000190483118215151615613ac657613ac6613bc0565b500290565b600063ffffffff80831681851681830481118215151615613aee57613aee613bc0565b02949350505050565b600082821015613b0957613b09613bc0565b500390565b600063ffffffff83811690831681811015613b2b57613b2b613bc0565b039392505050565b60005b83811015613b4e578181015183820152602001613b36565b8381111561373e5750506000910152565b6000600019821415613b7357613b73613bc0565b5060010190565b600063ffffffff80831681811415613b9457613b94613bc0565b6001019392505050565b600082613bbb57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114612f1357600080fd5b8015158114612f1357600080fdfea2646970667358221220ba0872663cf84cf035cc862a3ed314b74effe8e987952badb57258461589c52a64736f6c63430008070033';

type CommitmentPoolMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentPoolMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CommitmentPoolMain__factory extends ContractFactory {
  constructor(...args: CommitmentPoolMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'CommitmentPoolMain';
  }

  deploy(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<CommitmentPoolMain> {
    return super.deploy(_treeHeight, overrides || {}) as Promise<CommitmentPoolMain>;
  }
  getDeployTransaction(
    _treeHeight: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_treeHeight, overrides || {});
  }
  attach(address: string): CommitmentPoolMain {
    return super.attach(address) as CommitmentPoolMain;
  }
  connect(signer: Signer): CommitmentPoolMain__factory {
    return super.connect(signer) as CommitmentPoolMain__factory;
  }
  static readonly contractName: 'CommitmentPoolMain';
  public readonly contractName: 'CommitmentPoolMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentPoolMainInterface {
    return new utils.Interface(_abi) as CommitmentPoolMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CommitmentPoolMain {
    return new Contract(address, _abi, signerOrProvider) as CommitmentPoolMain;
  }
}
