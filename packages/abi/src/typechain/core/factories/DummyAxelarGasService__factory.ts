/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DummyAxelarGasService, DummyAxelarGasServiceInterface } from '../DummyAxelarGasService';

const _abi = [
  {
    inputs: [],
    name: 'NothingReceived',
    type: 'error',
  },
  {
    inputs: [],
    name: 'TransferFailed',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'GasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sourceAddress',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'NativeGasPaidForContractCallWithToken',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'collectFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractId',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCall',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'gasToken',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'gasFeeAmount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCall',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'refundAddress',
        type: 'address',
      },
    ],
    name: 'payNativeGasForContractCallWithToken',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address payable',
        name: 'receiver',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'refund',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561000f575f80fd5b50610e568061001d5f395ff3fe60806040526004361061006e575f3560e01c8063c62c20021161004c578063c62c2002146100e5578063da854d75146100f8578063edb6b3a514610117578063fd09e3bd14610136575f80fd5b80630c93e3bb146100725780638291286c1461008757806382ad6f35146100c6575b5f80fd5b6100856100803660046106b4565b610155565b005b348015610092575f80fd5b507ffaa2f015f2ce5aee225904728de2def86eb8837491efd21f1a04fc20d8e923f660405190815260200160405180910390f35b3480156100d1575f80fd5b506100856100e036600461076c565b6101e2565b6100856100f33660046107aa565b610239565b348015610103575f80fd5b50610085610112366004610892565b6102cf565b348015610122575f80fd5b506100856101313660046109b0565b6103d3565b348015610141575f80fd5b50610085610150366004610ac3565b610455565b345f036101755760405163b5c74a2760e01b815260040160405180910390fd5b8282604051610185929190610b92565b6040518091039020886001600160a01b03167f617332c1832058df6ee45fcbdf471251474c9945a8e5d229287a21a5f67ccf0a8989898934886040516101d096959493929190610bc9565b60405180910390a35050505050505050565b6001600160a01b038216610229576040516001600160a01b0384169082156108fc029083905f818181858888f19350505050158015610223573d5f803e3d5ffd5b50505050565b6102348284836104d1565b505050565b345f036102595760405163b5c74a2760e01b815260040160405180910390fd5b8585604051610269929190610b92565b60405180910390208b6001600160a01b03167f999d431b58761213cf53af96262b67a069cbd963499fd8effd1e21556217b8418c8c8c8c8a8a8a348b6040516102ba99989796959493929190610c12565b60405180910390a35050505050505050505050565b5f5b81811015610223575f8383838181106102ec576102ec610c78565b90506020020160208101906103019190610c8c565b90506001600160a01b038116610349576040516001600160a01b038616904780156108fc02915f818181858888f19350505050158015610343573d5f803e3d5ffd5b506103c0565b6040516370a0823160e01b81523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa15801561038d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b19190610cae565b90506103be8287836104d1565b505b50806103cb81610cc5565b9150506102d1565b6103de833384610610565b86866040516103ee929190610b92565b60405180910390208c6001600160a01b03167f8875f9764f28fa82d3e7ff1b80bd5c8f665e1f42fcd8c2faebc7c400a4ba1bbd8d8d8d8d8b8b8b8b8b60405161043f99989796959493929190610d0b565b60405180910390a3505050505050505050505050565b610460833384610610565b8484604051610470929190610b92565b60405180910390208a6001600160a01b03167f99206760f0be19dd093729bd35e5924daff5e217bcedc5223ed067b60008cf8a8b8b8b8b8989896040516104bd9796959493929190610d93565b60405180910390a350505050505050505050565b6040516001600160a01b038381166024830152604482018390525f91829186169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161056a9190610de6565b5f604051808303815f865af19150503d805f81146105a3576040519150601f19603f3d011682016040523d82523d5f602084013e6105a8565b606091505b50915091505f8280156105d35750815115806105d35750818060200190518101906105d39190610e01565b90508015806105ea57506001600160a01b0386163b155b15610608576040516312171d8360e31b815260040160405180910390fd5b505050505050565b6040516001600160a01b038381166024830152306044830152606482018390525f9182918616906323b872dd60e01b906084016104ff565b6001600160a01b038116811461065c575f80fd5b50565b803561066a81610648565b919050565b5f8083601f84011261067f575f80fd5b50813567ffffffffffffffff811115610696575f80fd5b6020830191508360208285010111156106ad575f80fd5b9250929050565b5f805f805f805f8060a0898b0312156106cb575f80fd5b88356106d681610648565b9750602089013567ffffffffffffffff808211156106f2575f80fd5b6106fe8c838d0161066f565b909950975060408b0135915080821115610716575f80fd5b6107228c838d0161066f565b909750955060608b013591508082111561073a575f80fd5b506107478b828c0161066f565b909450925050608089013561075b81610648565b809150509295985092959890939650565b5f805f6060848603121561077e575f80fd5b833561078981610648565b9250602084013561079981610648565b929592945050506040919091013590565b5f805f805f805f805f805f60e08c8e0312156107c4575f80fd5b6107cd8c61065f565b9a5067ffffffffffffffff8060208e013511156107e8575f80fd5b6107f88e60208f01358f0161066f565b909b50995060408d013581101561080d575f80fd5b61081d8e60408f01358f0161066f565b909950975060608d0135811015610832575f80fd5b6108428e60608f01358f0161066f565b909750955060808d0135811015610857575f80fd5b506108688d60808e01358e0161066f565b909450925060a08c0135915061088060c08d0161065f565b90509295989b509295989b9093969950565b5f805f604084860312156108a4575f80fd5b83356108af81610648565b9250602084013567ffffffffffffffff808211156108cb575f80fd5b818601915086601f8301126108de575f80fd5b8135818111156108ec575f80fd5b8760208260051b8501011115610900575f80fd5b6020830194508093505050509250925092565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610936575f80fd5b813567ffffffffffffffff8082111561095157610951610913565b604051601f8301601f19908116603f0116810190828211818310171561097957610979610913565b81604052838152866020858801011115610991575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f805f805f805f805f806101208d8f0312156109cc575f80fd5b6109d58d61065f565b9b5067ffffffffffffffff60208e013511156109ef575f80fd5b6109ff8e60208f01358f0161066f565b909b50995067ffffffffffffffff60408e01351115610a1c575f80fd5b610a2c8e60408f01358f0161066f565b909950975067ffffffffffffffff60608e01351115610a49575f80fd5b610a598e60608f01358f0161066f565b909750955067ffffffffffffffff60808e01351115610a76575f80fd5b610a868e60808f01358f01610927565b945060a08d01359350610a9b60c08e0161065f565b925060e08d01359150610ab16101008e0161065f565b90509295989b509295989b509295989b565b5f805f805f805f805f8060e08b8d031215610adc575f80fd5b8a35610ae781610648565b995060208b013567ffffffffffffffff80821115610b03575f80fd5b610b0f8e838f0161066f565b909b50995060408d0135915080821115610b27575f80fd5b610b338e838f0161066f565b909950975060608d0135915080821115610b4b575f80fd5b50610b588d828e0161066f565b90965094505060808b0135610b6c81610648565b925060a08b01359150610b8160c08c0161065f565b90509295989b9194979a5092959850565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b608081525f610bdc60808301888a610ba1565b8281036020840152610bef818789610ba1565b9150508360408301526001600160a01b0383166060830152979650505050505050565b60c081525f610c2560c083018b8d610ba1565b8281036020840152610c38818a8c610ba1565b90508281036040840152610c4d81888a610ba1565b6060840196909652505060808101929092526001600160a01b031660a0909101529695505050505050565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215610c9c575f80fd5b8135610ca781610648565b9392505050565b5f60208284031215610cbe575f80fd5b5051919050565b5f60018201610ce257634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f5b83811015610d03578181015183820152602001610ceb565b50505f910152565b60e081525f610d1e60e083018b8d610ba1565b8281036020840152610d31818a8c610ba1565b905082810360408401528751808252610d51816020840160208c01610ce9565b60608401979097526001600160a01b03958616608084015260a083019490945250921660c0909201919091526020601f909201601f1916010195945050505050565b60a081525f610da660a08301898b610ba1565b8281036020840152610db981888a610ba1565b6001600160a01b039687166040850152606084019590955250509216608090920191909152949350505050565b5f8251610df7818460208701610ce9565b9190910192915050565b5f60208284031215610e11575f80fd5b81518015158114610ca7575f80fdfea264697066735822122037d587b3e0fee38abdb7ca50f680f7b95c748376144df2f2c1a981cac3d67f9e64736f6c63430008140033';

type DummyAxelarGasServiceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyAxelarGasServiceConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyAxelarGasService__factory extends ContractFactory {
  constructor(...args: DummyAxelarGasServiceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DummyAxelarGasService';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DummyAxelarGasService> {
    return super.deploy(overrides || {}) as Promise<DummyAxelarGasService>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyAxelarGasService {
    return super.attach(address) as DummyAxelarGasService;
  }
  connect(signer: Signer): DummyAxelarGasService__factory {
    return super.connect(signer) as DummyAxelarGasService__factory;
  }
  static readonly contractName: 'DummyAxelarGasService';
  public readonly contractName: 'DummyAxelarGasService';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyAxelarGasServiceInterface {
    return new utils.Interface(_abi) as DummyAxelarGasServiceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DummyAxelarGasService {
    return new Contract(address, _abi, signerOrProvider) as DummyAxelarGasService;
  }
}
