/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2WormholeETH,
  MystikoV2WormholeETHInterface,
  IMystikoBridge,
  BridgeWormholeTokenConfigStruct,
} from '../MystikoV2WormholeETH';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'peerWormholeChainId',
            type: 'uint16',
          },
          {
            internalType: 'uint256',
            name: 'bridgeGasLimit',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'wormholeRelayer',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'tokenBridge',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wormhole',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
        ],
        internalType: 'struct BridgeWormholeTokenConfig',
        name: '_wormhole',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'NotAnEvmAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cost',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerWormholeChainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'bytes[]',
        name: 'additionalVaas',
        type: 'bytes[]',
      },
      {
        internalType: 'bytes32',
        name: 'sourceAddress',
        type: 'bytes32',
      },
      {
        internalType: 'uint16',
        name: 'sourceChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'deliveryHash',
        type: 'bytes32',
      },
    ],
    name: 'receiveWormholeMessages',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'sourceChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'sourceAddress',
        type: 'bytes32',
      },
    ],
    name: 'setRegisteredSender',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'tokenBridge',
    outputs: [
      {
        internalType: 'contract ITokenBridge',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormhole',
    outputs: [
      {
        internalType: 'contract IWormhole',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormholeRelayer',
    outputs: [
      {
        internalType: 'contract IWormholeRelayer',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
];

const _bytecode =
  '0x60e06040523461035e57604051613b5838819003601f8101601f191683016001600160401b0381118482101761036357839282916040528339810103906101a0821261035e5780516001600160a01b038116919082900361035e5761006660208201610379565b906060603f1985011261035e5760405192606084016001600160401b03811185821017610363576040526040820151845260608201519160208501928352608081015192604086019384526040609f1988011261035e5760408051959086016001600160401b038111878210176103635760405260a0830151865260c080840151602088019081529860df19011261035e576040519760c089016001600160401b0381118a8210176103635760405260e08401519261ffff8416840361035e5789986060966101856101806080986040988e5260206101008201519f019e8f528d6101546101208301610379565b998a9101528d6101676101408301610379565b9b8c9101528d61017a6101608301610379565b9a8b91015201610379565b60a08c810191909152600080546001600160a81b03191692909217909155600880546001600160a01b0319908116909155915160035591516004558751600555885160065591516007556009805483166001600160a01b03948516179055928216608052928116909152600a805490921633179091551660c0525161032757516102e15762061a808251106102a85761ffff9151600c55511661ffff19600d541617600d556040516137ca908161038e8239608051818181610e9101528181611edc015281816121b00152612c84015260a05181818161086d015281816118e501528181611f240152818161203401526130e2015260c051818181610a3201528181611910015281816120b20152818161222a015281816126cd01526130780152f35b6040516314e8955b60e21b815260206004820152601060248201526f189c9a5919d94819d85cc81b1a5b5a5d60821b6044820152606490fd5b6040516314e8955b60e21b815260206004820152601560248201527f70656572206d696e206578656375746f722066656500000000000000000000006044820152606490fd5b6040516314e8955b60e21b815260206004820152600e60248201526d6d696e206272696467652066656560901b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361035e5756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630ba959091461021b5780631ba46cfd1461021657806321e32d55146102115780632421e1551461020c5780632cd26d45146102075780632f0a40d0146102025780633fe3347a146101fd578063422e0028146101f85780634dde6fbc146101f35780634e3c10b7146101ee578063529dca32146101e9578063640c0b36146101e4578063825b5f8d146101df57806384acd1bb146101da5780639a03636c146101d5578063bc587706146101d0578063c5500cc3146101cb578063c6328a46146101c6578063cb5c029a146101c1578063cbe34285146101bc578063cdfceeba146101b7578063cfc7e2da146101b2578063d0b436bd146101ad578063da25b725146101a8578063dd12d68b146101a3578063ddac5dc11461019e578063e06174e414610199578063ed6ea33a14610194578063efbfb2ae1461018f578063f4ad17c61461018a578063fa750f56146101855763fb3e3d730361000e5761107d565b611057565b61103c565b611021565b610fa3565b610f7c565b610f50565b610eb5565b610e71565b610e53565b610e38565b610e0d565b610def565b610a56565b610a12565b6109f4565b61096f565b610931565b61084d565b610832565b610814565b61073e565b610618565b6105c0565b61051e565b61039e565b61037c565b610355565b6102f2565b61026f565b610253565b610230565b600091031261022b57565b600080fd5b3461022b57600036600319011261022b57602061024b6110b6565b604051908152f35b3461022b57600036600319011261022b57602060405160008152f35b3461022b57600036600319011261022b5760206001600160a01b0360025416604051908152f35b60005b8381106102a95750506000910152565b8181015183820152602001610299565b906020916102d281518092818552858086019101610296565b601f01601f1916010190565b9060206102ef9281815201906102b9565b90565b3461022b57600036600319011261022b5761035160408051906103158183610429565b600882527f776f726d686f6c650000000000000000000000000000000000000000000000006020830152519182916020835260208301906102b9565b0390f35b3461022b57600036600319011261022b5760206001600160a01b0360085416604051908152f35b3461022b57600036600319011261022b57602061ffff600d5416604051908152f35b3461022b57600036600319011261022b57602060405160018152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176103ec57604052565b6103ba565b60a0810190811067ffffffffffffffff8211176103ec57604052565b6080810190811067ffffffffffffffff8211176103ec57604052565b90601f8019910116810190811067ffffffffffffffff8211176103ec57604052565b6040519061045b61010083610429565b565b6040519061045b608083610429565b6040519061045b60a083610429565b6040519061045b61016083610429565b6040519061045b606083610429565b9061045b6040519283610429565b67ffffffffffffffff81160361022b57565b67ffffffffffffffff81116103ec57601f01601f191660200190565b9291926104e2826104ba565b916104f06040519384610429565b82948184528183011161022b578281602093846000960137010152565b6001600160a01b0381160361022b57565b3461022b57602036600319011261022b5760043567ffffffffffffffff811161022b576060600319823603011261022b5760405161055b816103d0565b8160040135610569816104a8565b8152602482013567ffffffffffffffff811161022b5782013660238201121561022b57610019926105a660449236906024600482013591016104d6565b602084015201356105b68161050d565b604082015261112d565b3461022b57600036600319011261022b576020600554604051908152f35b90600182811c9216801561060e575b60208310146105f857565b634e487b7160e01b600052602260045260246000fd5b91607f16916105ed565b3461022b57600036600319011261022b57604051600060015461063a816105de565b80845290600181169081156106ce575060011461066e575b6103518361066281850382610429565b604051918291826102de565b91905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6916000905b8082106106b457509091508101602001610662610652565b91926001816020925483858801015201910190929161069c565b60ff191660208086019190915291151560051b840190910191506106629050610652565b9080601f8301121561022b578160206102ef933591016104d6565b67ffffffffffffffff81116103ec5760051b60200190565b61ffff81160361022b57565b6064359061045b82610725565b60a036600319011261022b5760043567ffffffffffffffff811161022b5761076a9036906004016106f2565b6024359067ffffffffffffffff821161022b573660238301121561022b578160040135916107978361070d565b906107a56040519283610429565b8382526024602083019460051b8201019036821161022b5760248101945b8286106107e45761001985856044356107da610731565b91608435936118cb565b853567ffffffffffffffff811161022b576020916108098392602436918701016106f2565b8152019501946107c3565b3461022b57600036600319011261022b576020600654604051908152f35b3461022b57600036600319011261022b57602061024b611c60565b3461022b57600036600319011261022b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b35906fffffffffffffffffffffffffffffffff8216820361022b57565b91906101008382031261022b576108c361044b565b928035845260208101356020850152604081013560408501526108e860608201610891565b6060850152608081013567ffffffffffffffff811161022b5760e09261090f9183016106f2565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b602036600319011261022b5760043567ffffffffffffffff811161022b5761095d9036906004016108ae565b5063e7a24ff960e01b60005260046000fd5b3461022b57600036600319011261022b57600460206001600160a01b036009541660405192838092635e2c3b8360e11b82525afa9081156109ef576000916109c0575b506040519015158152602090f35b6109e2915060203d6020116109e8575b6109da8183610429565b810190611cc7565b386109b2565b503d6109d0565b6110aa565b3461022b57600036600319011261022b576020600c54604051908152f35b3461022b57600036600319011261022b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b606036600319011261022b5760043567ffffffffffffffff811161022b57610a829036906004016108ae565b6024359060443567ffffffffffffffff811161022b57610aa69036906004016106f2565b91610ac8610abc6009546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa9081156109ef57600091610dd0575b50610dbf57604051635e2c3b8360e11b8152602081600481885afa9081156109ef57600091610da0575b50610d12575b50508051610b32611d6c565b11610d01578051610b416110b6565b10610cf05760a08101908151610b55611e8c565b11610cdf5760c08101918251610b69611fb8565b11610cce5760e08201928351610b7d611c60565b11610cbd57610baf60408401518451610ba960608701516fffffffffffffffffffffffffffffffff1690565b916124b9565b946020840195865103610cac5760405163df592f7d60e01b815232600482015290602090829060249082905afa9081156109ef57600091610c8d575b50610c7c57610c4b93610c3b610c4392610c3186518951835186519060808b015192610c1561046c565b94855260208501526040840152606083015260808201526125d4565b9551905190611d5f565b905190611d5f565b905190612699565b610c53611de8565b50517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610ca6915060203d6020116109e8576109da8183610429565b38610beb565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610d4f91602091610d2161045d565b32815291600084840152604083015260608201526040518093819263849e8b9f60e01b835260048301611cdf565b0381865afa9081156109ef57600091610d81575b5015610d70573880610b26565b633042041f60e21b60005260046000fd5b610d9a915060203d6020116109e8576109da8183610429565b38610d63565b610db9915060203d6020116109e8576109da8183610429565b38610b20565b630e2f42c960e31b60005260046000fd5b610de9915060203d6020116109e8576109da8183610429565b38610af6565b3461022b57600036600319011261022b576020600754604051908152f35b3461022b57600036600319011261022b57602067ffffffffffffffff60005460a81c16604051908152f35b3461022b57600036600319011261022b57602061024b611d6c565b3461022b57600036600319011261022b576020600454604051908152f35b3461022b57600036600319011261022b5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461022b57604036600319011261022b57600435610ed281610725565b602435906001600160a01b03600a54163303610eff5761ffff16600052600b602052604060002055600080f35b60405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b6064820152608490fd5b3461022b57600036600319011261022b576020610f6b611de8565b6001600160a01b0360405191168152f35b3461022b57600036600319011261022b5760206001600160a01b0360095416604051908152f35b3461022b57600036600319011261022b57602460206001600160a01b03600954166040519283809263bb07320560e01b82523060048301525afa80156109ef5761035191600091611002575b5060405190151581529081906020820190565b61101b915060203d6020116109e8576109da8183610429565b38610fef565b3461022b57600036600319011261022b57602061024b611e8c565b3461022b57600036600319011261022b57602061024b611fb8565b3461022b57600036600319011261022b57602060ff60005460a01c166040519015158152f35b3461022b57600036600319011261022b576020600354604051908152f35b9081602091031261022b575190565b6040513d6000823e3d90fd5b60095460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156109ef576000916110fe575b50806102ef575060045490565b611120915060203d602011611126575b6111188183610429565b81019061109b565b386110f1565b503d61110e565b60005460ff8160a01c16611305577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff82116103ec576111b1826111ac6001546105de565b611316565b602090601f831160011461127657926111ec836111fe946040946112279760009261126b575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b031673ffffffffffffffffffffffffffffffffffffffff196002541617600255565b61045b740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b0151905038806111d7565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b8181106112ed5750936040936112279693600193836111fe98106112d4575b505050811b016001556111f0565b015160001960f88460031b161c191690553880806112c6565b929360206001819287860151815501950193016112a7565b636d8f115160e11b60005260046000fd5b601f8111611322575050565b60016000526020600020906020601f840160051c8301931061135f575b601f0160051c01905b818110611353575050565b60008155600101611348565b909150819061133f565b906113738261070d565b6113806040519182610429565b8281528092611391601f199161070d565b019060005b8281106113a257505050565b6020906040516113b1816103f1565b6000815260008382015260006040820152600060608201526000608082015282828501015201611396565b634e487b7160e01b600052603260045260246000fd5b8051156113ff5760200190565b6113dc565b80518210156113ff5760209160051b010190565b519060ff8216820361022b57565b519063ffffffff8216820361022b57565b519061045b82610725565b519061045b826104a8565b81601f8201121561022b578051611463816104ba565b926114716040519485610429565b8184526020828401011161022b576102ef9160208085019101610296565b81601f8201121561022b578051906114a68261070d565b926114b46040519485610429565b82845260208085019360071b8301019181831161022b57602001925b8284106114de575050505090565b60808483031261022b5760206080916040516114f98161040d565b86518152828701518382015261151160408801611418565b604082015261152260608801611418565b60608201528152019301926114d0565b60208183031261022b5780519067ffffffffffffffff821161022b5701906101608282031261022b5761156361047b565b9161156d81611418565b835261157b60208201611426565b602084015261158c60408201611426565b604084015261159d60608201611437565b6060840152608081015160808401526115b860a08201611442565b60a08401526115c960c08201611418565b60c084015260e081015167ffffffffffffffff811161022b57826115ee91830161144d565b60e08401526116006101008201611426565b61010084015261012081015167ffffffffffffffff811161022b576101409261162a91830161148f565b610120840152015161014082015290565b1561164257565b60405162461bcd60e51b815260206004820152601660248201527f4e6f74206120546f6b656e2042726964676520564141000000000000000000006044820152606490fd5b60208183031261022b5780519067ffffffffffffffff821161022b57016101008183031261022b576116b761044b565b916116c182611418565b835260208201516020840152604082015160408401526116e360608301611437565b6060840152608082015160808401526116fe60a08301611437565b60a084015260c082015160c084015260e082015167ffffffffffffffff811161022b5761172b920161144d565b60e082015290565b9081602091031261022b57516102ef81610725565b1561174f57565b60405162461bcd60e51b815260206004820152602260248201527f546f6b656e20776173206e6f742073656e7420746f2074686973206164647265604482015261737360f01b6064820152608490fd5b9060208282031261022b57815167ffffffffffffffff811161022b576102ef920161144d565b634e487b7160e01b600052601160045260246000fd5b60ff6007199116019060ff82116117ee57565b6117c5565b9290600193925b60018211611806575050565b909280820481116117ee5760018416611826575b80029260011c906117fa565b8094029361181a565b81156118a357801561189c578080600114611894576002146118845760208210610133821016604e8310600b831016176118805761187091600019916117f3565b90816000190481116117ee570290565b0a90565b5060ff81116117ee576001901b90565b505050600190565b5050600090565b5050600190565b60ff6102ef9116600a61182f565b818102929181159184041417156117ee57565b93926118d78251611369565b936000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001695611944610abc306001600160a01b031690565b935b8651811015611c4e5780600061195f61197a938a611404565b516040518094819263a9e1189360e01b8352600483016102de565b03818a5afa80156109ef576119d092600091611c2d575b50608081015160206119a8606084015161ffff1690565b60405163ad66a5f160e01b815261ffff90911660048201529485908d90829081906024820190565b03915afa9182156109ef576119f660009360e093611a12978692611c0d575b501461163b565b01516040518094819263ea63738d60e01b8352600483016102de565b03818c5afa9182156109ef57600092611bea575b508560808301511480611b74575b91611a40600093611748565b82611a6c8b611a4f858d611404565b5160405196878094819363c3f511c160e01b8352600483016102de565b03925af180156109ef57600193600091611b53575b50506060810190611a94825161ffff1690565b611aa4604083019182519061201f565b916020611ab084612156565b910192835191600860ff821611611b27575b50611af1611ad8611b01939451965161ffff1690565b945194611ae361046c565b96875261ffff166020870152565b6001600160a01b03166040850152565b60608301526080820152611b15828c611404565b52611b20818b611404565b5001611946565b611ad8611b4b611b0194611b45611b40611af1956117db565b6118aa565b906118b8565b935050611ac2565b611b6e913d8091833e611b668183610429565b81019061179f565b38611a81565b5060a082015161ffff1691604051634d4502c960e11b81526020816004818c5afa9384156109ef5761ffff80600096611a40948891611bbc575b501691161491935050611a34565b611bdd915060203d8111611be3575b611bd58183610429565b810190611733565b38611bae565b503d611bcb565b611c0691923d8091833e611bfe8183610429565b810190611687565b9038611a26565b611c2691925060203d8111611126576111188183610429565b90386119ef565b611c48913d8091833e611c408183610429565b810190611532565b38611991565b50945094509491505061045b946121a1565b6009546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa9081156109ef57600091611ca8575b50806102ef575060075490565b611cc1915060203d602011611126576111188183610429565b38611c9b565b9081602091031261022b5751801515810361022b5790565b60a060606102ef93602084526001600160a01b0381511660208501526001600160a01b03602082015116604085015260408101518285015201519160808082015201906102b9565b90602082018092116117ee57565b90600882018092116117ee57565b90600482018092116117ee57565b90600282018092116117ee57565b919082018092116117ee57565b600954604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa9081156109ef57600091611db4575b50806102ef575060035490565b611dcd915060203d602011611126576111188183610429565b38611da7565b9081602091031261022b57516102ef8161050d565b6009546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa9081156109ef57600091611e47575b506001600160a01b03811615611e365790565b6306f3d63360e51b60005260046000fd5b611e69915060203d602011611e6f575b611e618183610429565b810190611dd3565b38611e23565b503d611e57565b919082604091031261022b576020825192015190565b611ed06040611e9e600d5461ffff1690565b600c54825163c23ee3c360e01b815261ffff909216600483015260006024830152604482015291829081906064820190565b03816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa9081156109ef57600091611f88575b50604051631a90a21960e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109ef576102ef92600092611f67575b50611d5f565b611f8191925060203d602011611126576111188183610429565b9038611f61565b611faa915060403d604011611fb1575b611fa28183610429565b810190611e76565b5038611f0d565b503d611f98565b600954604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa9081156109ef57600091612000575b50806102ef575060065490565b612019915060203d602011611126576111188183610429565b38611ff3565b604051634d4502c960e11b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156109ef5761ffff91600091612107575b501661ffff82161460001461208957506102ef906127e0565b604051630ff8f14360e11b815261ffff91909116600482015260248101919091526020816044817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156109ef576000916120ee575090565b6102ef915060203d602011611e6f57611e618183610429565b612120915060203d602011611be357611bd58183610429565b38612070565b3d15612151573d90612137826104ba565b916121456040519384610429565b82523d6000602084013e565b606090565b60008091604051602081019063313ce56760e01b82526004815261217b602482610429565b51915afa50612188612126565b60208180518101031261022b5760206102ef9101611418565b93509150506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016330361243b5760018151036123f55760606121ed6121f6926113f2565b51015191612841565b816122078251606084015190611d5f565b036123af576040810151612369576040516315ab88c960e31b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156109ef576001600160a01b039160009161234a575b5016803b1561022b57604051632e1a7d4d60e01b815260048101849052906000908290602490829084905af180156109ef5761232f575b5060008080806122b0611de8565b95865af16122bc612126565b50156122e95760005461045b929060a81c67ffffffffffffffff166002546001600160a01b031690612997565b6040516314e8955b60e21b815260206004820152601060248201527f7472616e7366657220746f20706f6f6c000000000000000000000000000000006044820152606490fd5b8061233e600061234493610429565b80610220565b386122a2565b612363915060203d602011611e6f57611e618183610429565b3861226b565b6040516314e8955b60e21b815260206004820152600c60248201527f6578656375746f722066656500000000000000000000000000000000000000006044820152606490fd5b6040516314e8955b60e21b815260206004820152600f60248201527f616d6f756e7420726563656976656400000000000000000000000000000000006044820152606490fd5b6040516314e8955b60e21b815260206004820152600f60248201527f746f6b656e7320726563656976656400000000000000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c617960448201526132b960f11b6064820152608490fd5b919060608301926000905b600382106124a357505050565b6020806001928551815201930191019091612496565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210156125ac576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101561259b5761256c9260209261253a610abc6000546001600160a01b031690565b91612545606061049a565b93845284840152604083015260405180809581946304b98e1d60e31b83526004830161248b565b03915afa9081156109ef57600091612582575090565b6102ef915060203d602011611126576111188183610429565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b906125d060209282815194859201610296565b0190565b6102ef6126859161268b6125e88251612a8a565b916126856125f96020830151612a8a565b9161268561260a6040830151612a8a565b612685608061261c6060860151612a8a565b9401519561267561263767ffffffffffffffff895116612f45565b602060405199826126518c94518092858088019101610296565b830161266582518093858085019101610296565b010103601f198101895288610429565b6040519a8b9960208b01906125bd565b906125bd565b03601f198101835282610429565b906126a2611e8c565b8110610cdf57816126b291611d5f565b340361279a576040516315ab88c960e31b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156109ef576001600160a01b039160009161277b575b5016803b1561022b57604051630d0e30db60e41b81529260008460048186865af19384156109ef5761276394612766575b50600d5461ffff169061275a6002546001600160a01b031690565b600c5492612c27565b50565b8061233e600061277593610429565b3861273f565b612794915060203d602011611e6f57611e618183610429565b3861270e565b6040516314e8955b60e21b815260206004820152600960248201527f6d73672076616c756500000000000000000000000000000000000000000000006044820152606490fd5b73ffffffffffffffffffffffffffffffffffffffff1981166127ff5790565b63033b960d60e41b60005260045260246000fd5b60405190612820826103f1565b60606080836000815260006020820152600060408201526000838201520152565b9061284a612813565b50612853612813565b61289561288961287d61287161286887612def565b90865287612e61565b90602086015286612e61565b90604085015285612e61565b906060840152846132de565b906128a08183611d5f565b855110158061292b575b6128b390612eed565b806128d9576128d091929394506040519260208401604052611d5f565b50608082015290565b60405191601f821681811560051b80838701019285840199010101965b80821061291857508394959650826128d09452601f8019910116604052611d5f565b90602080918951815201970196906128f6565b506128b36129398284611d5f565b831090506128aa565b906001600160a01b0361299060806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e08501906102b9565b9416910152565b909291926001600160a01b036129b8610abc6002546001600160a01b031690565b911603612a795767ffffffffffffffff6129ef6129e260005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b911603612a6857805115612a5757612a0b610abc610abc611de8565b91823b1561022b57612a3792600092836040518096819582946378d60cd760e01b845260048401612942565b03925af180156109ef57612a485750565b8061233e600061045b93610429565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b6001600160ff1b038111612ad3576040516020815290601f60005b60208110612aba575050506040810160405290565b60019083831a6020828701015301906000190190612aa5565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b60405190612b25826103d0565b60006040838281528260208201520152565b60408051909190612b488382610429565b6001815291601f19018260005b828110612b6157505050565b602090612b6c612b18565b82828501015201612b55565b9081602091031261022b57516102ef816104a8565b93949290612bbb9261ffff6001600160a01b039216865216602085015260c0604085015260c08401906102b9565b926060830152608082015260a08183039101526020808351928381520192019060005b818110612beb5750505090565b9091926020606060019267ffffffffffffffff6040885161ffff8151168452858101518685015201511660408201520194019101919091612bde565b939192948185612c3f92612c39612b37565b9561303f565b612c48836113f2565b52612c52826113f2565b506040805163c23ee3c360e01b815261ffff861660048201526000602482015260448101879052946001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016939186606481875afa9182156109ef576000976020978994612d23575b5090612ce491604051998a988997889663329a2be760e01b885260048801612b8d565b03925af19081156109ef57600091612cfa575090565b6102ef915060203d602011612d1c575b612d148183610429565b810190612b78565b503d612d0a565b612ce492919450612d429060403d604011611fb157611fa28183610429565b50939091612cc1565b15612d5257565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b15612daa57565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b80516020111580612e59575b612e0490612d4b565b604051602090910151601f60005b60208110612e4357505050602081016040525190612e396001600160ff1b03831115612da3565b6102ef6000611d27565b60019083831a8186015301906000190190612e12565b506001612dfb565b919091602083018084116117ee578151101580612ed7575b612e8290612d4b565b60405190830160200151601f60005b60208110612ec1575050508060206102ef92016040525192612ebc6001600160ff1b03851115612da3565b611d27565b60019083831a8186015301906000190190612e91565b50612e82612ee484611d27565b84109050612e79565b15612ef457565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b67ffffffffffffffff811660fd811015612f7b575060ff6102ef9116604051906001825260f81b60208201526021810160405290565b61ffff8111612fcb57506102ef6126859161268b612fbb61ffff612fb460fd604051906001825260f81b60208201526021810160405290565b9316613461565b60405194859360208501906125bd565b63ffffffff1061300d576102ef6126859161268b612fbb63ffffffff61300660fe604051906001825260f81b60208201526021810160405290565b9316613426565b6102ef6126859161268b612fbb61303960ff604051906001825260f81b60208201526021810160405290565b926133eb565b91909161304a612b18565b506020936040519361305c8686610429565b60008552613068612b18565b5060405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166004820181905260248201839052939087818060448101038160006001600160a01b0387165af180156109ef5761322c575b50604051631a90a21960e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031696909388856004818b5afa9182156109ef578995600093613200575b50613154906001600160a01b039394604051998a97889687966362d2f5ed60e11b885216926004870161349c565b0391855af19182156109ef5760049385916000946131e1575b50604051634d4502c960e11b815294859182905afa9283156109ef576000936131c0575b506102ef92936131ac6131a261048b565b61ffff9096168652565b84015267ffffffffffffffff166040830152565b6102ef93506131db90853d8711611be357611bd58183610429565b92613191565b6131f9919450823d8411612d1c57612d148183610429565b923861316d565b6001600160a01b0393509061322461315492883d8a11611126576111188183610429565b935090613126565b61324290883d8a116109e8576109da8183610429565b6130d2565b1561324e57565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b1561329957565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b91906132ea90836134d9565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b810361334f57505061ffff92613329916136ec565b921660fd81101580613343575b61333f90613292565b9190565b5061ffff811115613336565b607f60f91b810361338f57505063ffffffff9261336b91613678565b921661ffff811180613381575b61333f90613247565b5063ffffffff811115613378565b7fff00000000000000000000000000000000000000000000000000000000000000036133da575067ffffffffffffffff926133c9916135ad565b921661333f63ffffffff8211613247565b905060f81c61333f60fd8210613247565b6040516008815290601f60005b6008811061340d575050506028810160405290565b60019083831a60208287010153019060001901906133f8565b6040516004815290601f60005b60048110613448575050506024810160405290565b60019083831a6020828701015301906000190190613433565b6040516002815290601f60005b60028110613483575050506022810160405290565b60019083831a602082870101530190600019019061346e565b9160c09361ffff916001600160a01b036102ef98979416855260208501521660408301526060820152600060808201528160a082015201906102b9565b919060018101928382116117ee5780518411158061354d575b1561350957602082859201015191116117ee579190565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b508382106134f2565b1561355d57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600883018084116117ee576135d19082518111159081613617575b50613556565b60405190830160200151600760005b6008811061360157505050600881016040526017190151916102ef90611d35565b60019083831a81860153019060001901906135e0565b90508410386135cb565b1561362857565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600483018084116117ee5761369c90825181111590816136e2575b50613621565b60405190830160200151600360005b600481106136cc5750505060048101604052601b190151916102ef90611d43565b60019083831a81860153019060001901906136ab565b9050841038613696565b919091600283018084116117ee578151811115908161378a575b501561373a576102ef90602084604051920101518060011a825360001a600182015360028101604052601d19015192611d51565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b905083103861370656fea2646970667358221220d967abdab86422012779c423c66df7d89166eb4966e8182256789f4f14fa97c064736f6c634300081a0033';

type MystikoV2WormholeETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WormholeETHConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WormholeETH__factory extends ContractFactory {
  constructor(...args: MystikoV2WormholeETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WormholeETH';
  }

  deploy(
    _hasher3: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _wormhole: BridgeWormholeTokenConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WormholeETH> {
    return super.deploy(
      _hasher3,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _wormhole,
      overrides || {},
    ) as Promise<MystikoV2WormholeETH>;
  }
  getDeployTransaction(
    _hasher3: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _wormhole: BridgeWormholeTokenConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _wormhole,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2WormholeETH {
    return super.attach(address) as MystikoV2WormholeETH;
  }
  connect(signer: Signer): MystikoV2WormholeETH__factory {
    return super.connect(signer) as MystikoV2WormholeETH__factory;
  }
  static readonly contractName: 'MystikoV2WormholeETH';
  public readonly contractName: 'MystikoV2WormholeETH';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WormholeETHInterface {
    return new utils.Interface(_abi) as MystikoV2WormholeETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WormholeETH {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WormholeETH;
  }
}
