/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2WormholeUSDC,
  MystikoV2WormholeUSDCInterface,
  IMystikoBridge,
  BridgeWormholeCCTPConfigStruct,
} from '../MystikoV2WormholeUSDC';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'bridgeGasLimit',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint16',
            name: 'peerWormholeChainId',
            type: 'uint16',
          },
          {
            internalType: 'address',
            name: 'wormholeRelayer',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'wormhole',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'circleMessageTransmitter',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'circleTokenMessenger',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'USDCToken',
            type: 'address',
          },
        ],
        internalType: 'struct BridgeWormholeCCTPConfig',
        name: '_wormhole',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    name: 'chainIdToCCTPDomain',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultBridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cost',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerWormholeChainId',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'bytes[]',
        name: 'additionalMessages',
        type: 'bytes[]',
      },
      {
        internalType: 'bytes32',
        name: 'sourceAddress',
        type: 'bytes32',
      },
      {
        internalType: 'uint16',
        name: 'sourceChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'deliveryHash',
        type: 'bytes32',
      },
    ],
    name: 'receiveWormholeMessages',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'chain',
        type: 'uint16',
      },
      {
        internalType: 'uint32',
        name: 'cctpDomain',
        type: 'uint32',
      },
    ],
    name: 'setCCTPDomain',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: 'sourceChain',
        type: 'uint16',
      },
      {
        internalType: 'bytes32',
        name: 'sourceAddress',
        type: 'bytes32',
      },
    ],
    name: 'setRegisteredSender',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormhole',
    outputs: [
      {
        internalType: 'contract IWormhole',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'wormholeRelayer',
    outputs: [
      {
        internalType: 'contract IWormholeRelayer',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x610140604052346105fb57604051613aed38819003601f8101601f191683016001600160401b0381118482101761060057839282916040528339810103906101c082126105fb5780516001600160a01b03811691908290036105fb5761006760208201610616565b916080603f198501126105fb5760405191608083016001600160401b038111848210176106005760405260408101518352606081015190602084019182526080810151936040810194855260a082015160608201908152604060bf198901126105fb5760408051979088016001600160401b038111898210176106005760405260c084810151895260e085015160208a019081529960ff1901126105fb576040519860c08a016001600160401b0381118b821017610600576040526101008501519261ffff841684036105fb576060966040956020958d528c61014d6101208a01610616565b96879101528c6101606101408a01610616565b97889101528c6101736101608a01610616565b998a91015260a08d61019b6101a061018e6101808d01610616565b9b8c608085015201610616565b9101819052600080546001600160a81b031916909b17909a55600980546001600160a01b0319908116909155905160035590516004558951600555905160065589516007559051600855600a805482166001600160a01b0393841617905591811660805291821660a052600b805482163390811790915592821660c05292811660e052909216610100819052600d8054909216909217905561012052516105c4575161057e5761ffff90511661ffff19600f541617600f5560018060a01b03600d54163303610539576002600052600e6020527f9adb202b1492743bc00c81d33cdc6423fa8c79109027eb6a845391e8fc1f0481805463ffffffff19169055600d546001600160a01b03163303610539576005600052600e6020527fb9bec7e2561f624fe753ff070f1599b306cbf59fafd4e8d5a8184a1ea1841bce805463ffffffff19166007179055600d546001600160a01b03163303610539576006600052600e6020527f92b4482321f41ce3aa65f798bda23d0d12a60fc5f212868a548ddb00aa49de72805463ffffffff19166001179055600d546001600160a01b03163303610539576017600052600e6020527f1e3dcd93811a15ec9f36f04603879a32c5170fc20534b809651c2612846b4069805463ffffffff19166003179055600d546001600160a01b03163303610539576018600052600e6020527f44e03dbd624a27d622b68a614bb2fcdc0a3c0d48a3e0952eb6bb06da342d3593805463ffffffff19166002179055600d546001600160a01b0316330361053957601e600052600e6020527f195ad0e161a4326cd85229a1fcca74cf96f3c99e31b4ec5457e0d9c344e00031805463ffffffff19166006179055600d546001600160a01b0316330361053957612712600052600e6020527f330c26c4d83dc6bf63462f9aee880c3f6d8e75a9d551d7cb7b42401d345c90ee805463ffffffff19169055600d546001600160a01b0316330361053957612714600052600e6020527e867e8632a55a9f0453b9e579ace536395deb466f1b48d7e4d1eb0c6e16f29d805463ffffffff191660061790556040516134c2908161062b823960805181818161113101528181611c9001528181611de201526127c0015260a0518181816109790152612de1015260c05181612cb5015260e0518161185a0152610100518181816117f00152612ced015261012051818181610321015281816103be01528181610b2101528181610c7e01528181610f9f01528181611e4b01526121a50152f35b60405162461bcd60e51b815260206004820152601e60248201527f4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e00006044820152606490fd5b6040516314e8955b60e21b815260206004820152601560248201527f70656572206d696e206578656375746f722066656500000000000000000000006044820152606490fd5b6040516314e8955b60e21b815260206004820152600e60248201526d6d696e206272696467652066656560901b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036105fb5756fe6080604052600436101561001257600080fd5b60003560e01c80630ba9590914610267578063176de7a8146102625780631ba46cfd1461025d57806321e32d55146102585780632421e155146102535780632cd26d451461024e5780632f0a40d0146102495780633a57cd63146102445780633fe3347a1461023f578063422e00281461023a5780634dde6fbc146102355780634e3c10b714610230578063529dca321461022b578063640c0b3614610226578063825b5f8d1461022157806384acd1bb1461021c5780639a03636c14610217578063bc58770614610212578063c2d416011461020d578063c6a4fd1c14610208578063c9230c5d14610203578063cb5c029a146101fe578063cbe34285146101f9578063cdfceeba146101f4578063cfc7e2da146101ef578063d0b436bd146101ea578063da25b725146101e5578063dae8d7ca146101e0578063dd12d68b146101db578063ddac5dc1146101d6578063e06174e4146101d1578063e7fcefaf146101cc578063ed6ea33a146101c7578063efbfb2ae146101c2578063f4ad17c6146101bd578063fa750f56146101b85763fb3e3d73146101b357600080fd5b611356565b611330565b611315565b6112fa565b61127c565b61125e565b611237565b61120b565b611170565b611155565b611111565b6110f3565b6110d8565b6110ad565b61108f565b610cce565b610c58565b610baa565b610afb565b610a7b565b610a3d565b610959565b61093e565b610920565b61084a565b61073d565b6106e5565b610641565b61050b565b6104cc565b61048f565b610468565b610409565b6103e2565b61039e565b6102fb565b61027c565b600091031261027757565b600080fd5b3461027757600036600319011261027757602061029761138f565b604051908152f35b60005b8381106102b25750506000910152565b81810151838201526020016102a2565b906020916102db8151809281855285808601910161029f565b601f01601f1916010190565b9060206102f89281815201906102c2565b90565b34610277576000366003190112610277576040516395d89b4160e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156103995761037291600091610376575b506040519182916020835260208301906102c2565b0390f35b61039391503d806000833e61038b818361055e565b81019061143b565b3861035d565b611383565b346102775760003660031901126102775760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102775760003660031901126102775760206001600160a01b0360025416604051908152f35b3461027757600036600319011261027757610372604080519061042c818361055e565b600882527f776f726d686f6c650000000000000000000000000000000000000000000000006020830152519182916020835260208301906102c2565b346102775760003660031901126102775760206001600160a01b0360095416604051908152f35b3461027757600036600319011261027757602061ffff600f5416604051908152f35b61ffff81160361027757565b606435906104ca826104b1565b565b346102775760203660031901126102775761ffff6004356104ec816104b1565b16600052600e602052602063ffffffff60406000205416604051908152f35b3461027757600036600319011261027757602060405160008152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761055957604052565b610527565b90601f8019910116810190811067ffffffffffffffff82111761055957604052565b604051906104ca6101008361055e565b604051906104ca60808361055e565b604051906104ca60a08361055e565b604051906104ca60408361055e565b906104ca604051928361055e565b67ffffffffffffffff81160361027757565b67ffffffffffffffff811161055957601f01601f191660200190565b929192610605826105dd565b91610613604051938461055e565b829481845281830111610277578281602093846000960137010152565b6001600160a01b0381160361027757565b346102775760203660031901126102775760043567ffffffffffffffff811161027757606060031982360301126102775760405161067e8161053d565b816004013561068c816105cb565b8152602482013567ffffffffffffffff811161027757820136602382011215610277576106e3926106c960449236906024600482013591016105f9565b602084015201356106d981610630565b6040820152611472565b005b34610277576000366003190112610277576020600554604051908152f35b90600182811c92168015610733575b602083101461071d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610712565b3461027757600036600319011261027757604051600060015461075f81610703565b80845290600181169081156107f35750600114610793575b610372836107878185038261055e565b604051918291826102e7565b91905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6916000905b8082106107d957509091508101602001610787610777565b9192600181602092548385880101520191019092916107c1565b60ff191660208086019190915291151560051b840190910191506107879050610777565b9080601f83011215610277578160206102f8933591016105f9565b67ffffffffffffffff81116105595760051b60200190565b60a03660031901126102775760043567ffffffffffffffff811161027757610876903690600401610817565b6024359067ffffffffffffffff82116102775736602383011215610277578160040135916108a383610832565b906108b1604051928361055e565b8382526024602083019460051b820101903682116102775760248101945b8286106108f0576106e385856044356108e66104bd565b9160843593611770565b853567ffffffffffffffff811161027757602091610915839260243691870101610817565b8152019501946108cf565b34610277576000366003190112610277576020600754604051908152f35b346102775760003660031901126102775760206102976119a3565b346102775760003660031901126102775760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b35906fffffffffffffffffffffffffffffffff8216820361027757565b919061010083820312610277576109cf610580565b928035845260208101356020850152604081013560408501526109f46060820161099d565b6060850152608081013567ffffffffffffffff81116102775760e092610a1b918301610817565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126102775760043567ffffffffffffffff811161027757610a699036906004016109ba565b5063e7a24ff960e01b60005260046000fd5b3461027757600036600319011261027757600460206001600160a01b03600a541660405192838092635e2c3b8360e11b82525afa90811561039957600091610acc575b506040519015158152602090f35b610aee915060203d602011610af4575b610ae6818361055e565b810190611a0a565b38610abe565b503d610adc565b346102775760003660031901126102775760405163313ce56760e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561039957600091610b68575b60405160ff83168152602090f35b6020813d602011610ba2575b81610b816020938361055e565b81010312610b9e575160ff81168103610b9e579050610372610b5a565b5080fd5b3d9150610b74565b3461027757604036600319011261027757600435610bc7816104b1565b60243563ffffffff81168103610277576001600160a01b03600d54163303610c135761ffff6106e39216600052600e60205260406000209063ffffffff1663ffffffff19825416179055565b60405162461bcd60e51b815260206004820152601e60248201527f4e6f7420616c6c6f77656420746f20736574204343545020446f6d61696e00006044820152606490fd5b34610277576000366003190112610277576040516306fdde0360e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610399576103729160009161037657506040519182916020835260208301906102c2565b60603660031901126102775760043567ffffffffffffffff811161027757610cfa9036906004016109ba565b6024359060443567ffffffffffffffff811161027757610d1e903690600401610817565b91610d40610d34600a546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa90811561039957600091611070575b5061105f57604051635e2c3b8360e11b8152602081600481885afa90811561039957600091611040575b50610f8a575b50508051610daa611aca565b11610f79578051610db961138f565b10610f685760a08101908151610dcd611c51565b11610f575760c08101918251610de1611cf1565b11610f465760e08201928351610df56119a3565b11610f3557610e2760408401518451610e2160608701516fffffffffffffffffffffffffffffffff1690565b91611f9c565b946020840195865103610f245760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561039957600091610f05575b50610ef457610ec393610eb3610ebb92610ea986518951835186519060808b015192610e8d61059f565b94855260208501526040840152606083015260808201526120b7565b9551905190611abd565b905190611abd565b90519061217c565b610ecb611bad565b50517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610f1e915060203d602011610af457610ae6818361055e565b38610e63565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610fef91602091610f99610590565b328152917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683850152604083015260608201526040518093819263849e8b9f60e01b835260048301611a22565b0381865afa90811561039957600091611021575b5015611010573880610d9e565b633042041f60e21b60005260046000fd5b61103a915060203d602011610af457610ae6818361055e565b38611003565b611059915060203d602011610af457610ae6818361055e565b38610d98565b630e2f42c960e31b60005260046000fd5b611089915060203d602011610af457610ae6818361055e565b38610d6e565b34610277576000366003190112610277576020600854604051908152f35b3461027757600036600319011261027757602067ffffffffffffffff60005460a81c16604051908152f35b34610277576000366003190112610277576020610297611aca565b34610277576000366003190112610277576020600454604051908152f35b346102775760003660031901126102775760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610277576000366003190112610277576020610297611b31565b346102775760403660031901126102775760043561118d816104b1565b602435906001600160a01b03600b541633036111ba5761ffff16600052600c602052604060002055600080f35b60405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b6064820152608490fd5b34610277576000366003190112610277576020611226611bad565b6001600160a01b0360405191168152f35b346102775760003660031901126102775760206001600160a01b03600a5416604051908152f35b34610277576000366003190112610277576020600654604051908152f35b3461027757600036600319011261027757602460206001600160a01b03600a54166040519283809263bb07320560e01b82523060048301525afa801561039957610372916000916112db575b5060405190151581529081906020820190565b6112f4915060203d602011610af457610ae6818361055e565b386112c8565b34610277576000366003190112610277576020610297611c51565b34610277576000366003190112610277576020610297611cf1565b3461027757600036600319011261027757602060ff60005460a01c166040519015158152f35b34610277576000366003190112610277576020600354604051908152f35b90816020910312610277575190565b6040513d6000823e3d90fd5b600a5460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa908115610399576000916113d7575b50806102f8575060045490565b6113f9915060203d6020116113ff575b6113f1818361055e565b810190611374565b386113ca565b503d6113e7565b90929192611413816105dd565b91611421604051938461055e565b8294828452828201116102775760206104ca93019061029f565b6020818303126102775780519067ffffffffffffffff821161027757019080601f830112156102775781516102f892602001611406565b60005460ff8160a01c16611655577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff8211610559576114f6826114f1600154610703565b611666565b602090601f83116001146115c657926115318361154394604094611577976000926115bb575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b6104ca740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b01519050388061151c565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b81811061163d5750936040936115779693600193836115439810611624575b505050811b01600155611535565b015160001960f88460031b161c19169055388080611616565b929360206001819287860151815501950193016115f7565b636d8f115160e11b60005260046000fd5b601f8111611672575050565b60016000526020600020906020601f840160051c830193106116af575b601f0160051c01905b8181106116a3575050565b60008155600101611698565b909150819061168f565b8051156116c65760200190565b634e487b7160e01b600052603260045260246000fd5b9080601f830112156102775781516102f892602001611406565b91909160408184031261027757805192602082015167ffffffffffffffff8111610277576102f892016116dc565b1561172b57565b60405162461bcd60e51b815260206004820152601560248201527f57726f6e6720616d6f756e7420726563656976656400000000000000000000006044820152606490fd5b9392919060018151116119385760009060018151146117b1575b50806117ac6117a5876020806104ca9a5183010191016116f6565b9214611724565b611dd3565b6117bb91506116b9565b516117d160009160208082518301019101611d58565b6040516370a0823160e01b815230600482015296916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169190602089602481865afa988915610399578599611910575b50604051630afd9fa560e31b8152916020918391829161184d919060048401611da1565b0381876001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610399576118f3575b506040516370a0823160e01b815230600482015290602090829060249082905afa928315610399576104ca976117a5946117ac936118cb93916118d4575b50611dc6565b9250509461178a565b6118ed915060203d6020116113ff576113f1818361055e565b386118c5565b61190b9060203d602011610af457610ae6818361055e565b611887565b60209199509161192f61184d93833d85116113ff576113f1818361055e565b99915091611829565b60405162461bcd60e51b815260206004820152602660248201527f434354503a204174206d6f7374206f6e65204d6573736167652069732073757060448201527f706f7274656400000000000000000000000000000000000000000000000000006064820152608490fd5b600a546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa908115610399576000916119eb575b50806102f8575060085490565b611a04915060203d6020116113ff576113f1818361055e565b386119de565b90816020910312610277575180151581036102775790565b60a060606102f893602084526001600160a01b0381511660208501526001600160a01b03602082015116604085015260408101518285015201519160808082015201906102c2565b634e487b7160e01b600052601160045260246000fd5b9060208201809211611a8e57565b611a6a565b9060088201809211611a8e57565b9060048201809211611a8e57565b9060028201809211611a8e57565b91908201809211611a8e57565b600a54604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561039957600091611b12575b50806102f8575060035490565b611b2b915060203d6020116113ff576113f1818361055e565b38611b05565b600a54604051634d047f8160e11b815230600482015290602090829060249082906001600160a01b03165afa90811561039957600091611b79575b50806102f8575060065490565b611b92915060203d6020116113ff576113f1818361055e565b38611b6c565b9081602091031261027757516102f881610630565b600a546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561039957600091611c0c575b506001600160a01b03811615611bfb5790565b6306f3d63360e51b60005260046000fd5b611c2e915060203d602011611c34575b611c26818361055e565b810190611b98565b38611be8565b503d611c1c565b9190826040910312610277576020825192015190565b611c59611b31565b61ffff600f5416906040519163c23ee3c360e01b835260048301526000602483015260448201526040816064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561039957600091611cc4575090565b611ce6915060403d604011611cea575b611cde818361055e565b810190611c3b565b5090565b503d611cd4565b600a54604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa90811561039957600091611d39575b50806102f8575060075490565b611d52915060203d6020116113ff576113f1818361055e565b38611d2c565b91909160408184031261027757805167ffffffffffffffff81116102775783611d829183016116dc565b92602082015167ffffffffffffffff8111610277576102f892016116dc565b9091611db86102f8936040845260408401906102c2565b9160208184039101526102c2565b91908203918211611a8e57565b92509250506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163303611f1e57611e119061227a565b81611e228251606084015190611abd565b03611ed8576040810151611e92576104ca91611e70611e3f611bad565b91826001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661237b565b60005460a81c67ffffffffffffffff166002546001600160a01b031690612411565b6040516314e8955b60e21b815260206004820152600c60248201527f6578656375746f722066656500000000000000000000000000000000000000006044820152606490fd5b6040516314e8955b60e21b815260206004820152600f60248201527f616d6f756e7420726563656976656400000000000000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c617960448201526132b960f11b6064820152608490fd5b919060608301926000905b60038210611f8657505050565b6020806001928551815201930191019091611f79565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101561208f576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101561207e5761204f9260209261201d610d346000546001600160a01b031690565b9161202860606105bd565b93845284840152604083015260405180809581946304b98e1d60e31b835260048301611f6e565b03915afa90811561039957600091612065575090565b6102f8915060203d6020116113ff576113f1818361055e565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b906120b36020928281519485920161029f565b0190565b6102f86121689161216e6120cb825161250a565b916121686120dc602083015161250a565b916121686120ed604083015161250a565b61216860806120ff606086015161250a565b9401519561215861211a67ffffffffffffffff895116612b8c565b602060405199826121348c9451809285808801910161029f565b83016121488251809385808501910161029f565b010103601f19810189528861055e565b6040519a8b9960208b01906120a0565b906120a0565b03601f19810183528261055e565b90612185611c51565b8110610f575734036121f5576121f2916121ca8230336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016612598565b6121d2611b31565b906121e0600f5461ffff1690565b6002546001600160a01b03169061276e565b50565b6040516314e8955b60e21b815260206004820152600960248201527f6d73672076616c756500000000000000000000000000000000000000000000006044820152606490fd5b6040519060a0820182811067ffffffffffffffff8211176105595760405260606080836000815260006020820152600060408201526000838201520152565b9061228361223b565b5061228c61223b565b6122ce6122c26122b66122aa6122a187612995565b90865287612a07565b90602086015286612a07565b90604085015285612a07565b90606084015284612fb5565b906122d98183611abd565b8551101580612364575b6122ec90612a93565b806123125761230991929394506040519260208401604052611abd565b50608082015290565b60405191601f821681811560051b80838701019285840199010101965b80821061235157508394959650826123099452601f8019910116604052611abd565b906020809189518152019701969061232f565b506122ec6123728284611abd565b831090506122e3565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526104ca916123b760648361055e565b612aeb565b906001600160a01b0361240a60806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e08501906102c2565b9416910152565b909291926001600160a01b03612432610d346002546001600160a01b031690565b9116036124f95767ffffffffffffffff61246961245c60005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b9116036124e8578051156124d757612485610d34610d34611bad565b91823b15610277576124b192600092836040518096819582946378d60cd760e01b8452600484016123bc565b03925af18015610399576124c25750565b806124d160006104ca9361055e565b8061026c565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b6001600160ff1b038111612553576040516020815290601f60005b6020811061253a575050506040810160405290565b60019083831a6020828701015301906000190190612525565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b9091926001600160a01b036104ca9481604051956323b872dd60e01b60208801521660248601521660448401526064830152606482526123b760848361055e565b604051906040820182811067ffffffffffffffff821117610559576040526060602083600081520152565b60408051909190612615838261055e565b6001815291601f19018260005b82811061262e57505050565b6020906126396125d9565b82828501015201612622565b6040906102f89392815281602082015201906102c2565b9081602091031261027757516102f8816105cb565b9080602083519182815201916020808360051b8301019401926000915b83831061269d57505050505090565b90919293946020806126cf600193601f198682030187526040838b5160ff8151168452015191818582015201906102c2565b9701930193019193929061268e565b989792610140966127659661271c61ffff936101608e6001600160a01b03612757996104ca9f998916835216602082015281604082015201906102c2565b9660608d0152600060808d015260a08c01521660c08a01526001600160a01b0360001660e08a01526101008901906001600160a01b03169052565b868203610120880152612671565b600f9190940152565b90919392936127b061277e612604565b9461278a858583612c9b565b612793876116b9565b5261279d866116b9565b5061216e60405193849260208401612645565b6040516324320c9f60e01b8152937f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169290602086600481875afa958615610399576000966128d0575b506040805163c23ee3c360e01b815261ffff841660048201526000602482015260448101899052959086606481885afa9182156103995760209760009788946128aa575b5061286b9293946040519a8b998a98899763602a890760e11b89528460048a016126de565b03925af190811561039957600091612881575090565b6102f8915060203d6020116128a3575b61289b818361055e565b81019061265c565b503d612891565b61286b9394506128c89060403d604011611cea57611cde818361055e565b509392612846565b6128ea91965060203d602011611c3457611c26818361055e565b9438612802565b156128f857565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b1561295057565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b805160201115806129ff575b6129aa906128f1565b604051602090910151601f60005b602081106129e9575050506020810160405251906129df6001600160ff1b03831115612949565b6102f86000611a80565b60019083831a81860153019060001901906129b8565b5060016129a1565b91909160208301808411611a8e578151101580612a7d575b612a28906128f1565b60405190830160200151601f60005b60208110612a67575050508060206102f892016040525192612a626001600160ff1b03851115612949565b611a80565b60019083831a8186015301906000190190612a37565b50612a28612a8a84611a80565b84109050612a1f565b15612a9a57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b6000806001600160a01b03612b3693169360208151910182865af13d15612b84573d90612b17826105dd565b91612b25604051938461055e565b82523d6000602084013e5b8361342e565b8051908115159182612b69575b5050612b4c5750565b635274afe760e01b6000526001600160a01b031660045260246000fd5b612b7c9250602080918301019101611a0a565b153880612b43565b606090612b30565b67ffffffffffffffff811660fd811015612bc2575060ff6102f89116604051906001825260f81b60208201526021810160405290565b61ffff8111612c1257506102f86121689161216e612c0261ffff612bfb60fd604051906001825260f81b60208201526021810160405290565b9316613138565b60405194859360208501906120a0565b63ffffffff10612c54576102f86121689161216e612c0263ffffffff612c4d60fe604051906001825260f81b60208201526021810160405290565b93166130fd565b6102f86121689161216e612c02612c8060ff604051906001825260f81b60208201526021810160405290565b926130c2565b9081602091031261027757516102f8816104b1565b9190612ca56125d9565b5060405163095ea7b360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201819052602482018590527f00000000000000000000000000000000000000000000000000000000000000009490916020818060448101038160006001600160a01b038b165af1801561039957612d67612d52610d34602098600095612d7195612f03575b506001600160a01b031690565b9561ffff16600052600e602052604060002090565b5463ffffffff1690565b604051637c2b6edb60e11b8152600481019390935263ffffffff166024830152604482018490526001600160a01b0395909516606482015260848101929092529092839160a49183915af190811561039957600091612ee4575b50604051634d4502c960e11b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561039957612d67612e3991612ea093600091612eb5575b5061ffff16600052600e602052604060002090565b60405160e09190911b7fffffffff0000000000000000000000000000000000000000000000000000000016602082015260c09290921b7fffffffffffffffff00000000000000000000000000000000000000000000000016602483015281602c810161216e565b612ea86105ae565b6002815290602082015290565b612ed7915060203d602011612edd575b612ecf818361055e565b810190612c86565b38612e24565b503d612ec5565b612efd915060203d6020116128a35761289b818361055e565b38612dcb565b612f19908b3d8d11610af457610ae6818361055e565b612d45565b15612f2557565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b15612f7057565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b9190612fc19083613173565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b810361302657505061ffff9261300091613386565b921660fd8110158061301a575b61301690612f69565b9190565b5061ffff81111561300d565b607f60f91b810361306657505063ffffffff9261304291613312565b921661ffff811180613058575b61301690612f1e565b5063ffffffff81111561304f565b7fff00000000000000000000000000000000000000000000000000000000000000036130b1575067ffffffffffffffff926130a091613247565b921661301663ffffffff8211612f1e565b905060f81c61301660fd8210612f1e565b6040516008815290601f60005b600881106130e4575050506028810160405290565b60019083831a60208287010153019060001901906130cf565b6040516004815290601f60005b6004811061311f575050506024810160405290565b60019083831a602082870101530190600019019061310a565b6040516002815290601f60005b6002811061315a575050506022810160405290565b60019083831a6020828701015301906000190190613145565b91906001810192838211611a8e578051841115806131e7575b156131a35760208285920101519111611a8e579190565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b5083821061318c565b156131f757565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b91909160088301808411611a8e5761326b90825181111590816132b1575b506131f0565b60405190830160200151600760005b6008811061329b57505050600881016040526017190151916102f890611a93565b60019083831a818601530190600019019061327a565b9050841038613265565b156132c257565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b91909160048301808411611a8e57613336908251811115908161337c575b506132bb565b60405190830160200151600360005b600481106133665750505060048101604052601b190151916102f890611aa1565b60019083831a8186015301906000190190613345565b9050841038613330565b91909160028301808411611a8e5781518111159081613424575b50156133d4576102f890602084604051920101518060011a825360001a600182015360028101604052601d19015192611aaf565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b90508310386133a0565b90613454575080511561344357805190602001fd5b630a12f52160e11b60005260046000fd5b81511580613483575b613465575090565b6001600160a01b0390639996b31560e01b6000521660045260246000fd5b50803b1561345d56fea2646970667358221220beb9771c77ad3ccbcfc08d82ea63fde961fb9d44d80ca8b16b4b6d35121f2cda64736f6c634300081a0033';

type MystikoV2WormholeUSDCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2WormholeUSDCConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2WormholeUSDC__factory extends ContractFactory {
  constructor(...args: MystikoV2WormholeUSDCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2WormholeUSDC';
  }

  deploy(
    _hasher3: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _wormhole: BridgeWormholeCCTPConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2WormholeUSDC> {
    return super.deploy(
      _hasher3,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _wormhole,
      overrides || {},
    ) as Promise<MystikoV2WormholeUSDC>;
  }
  getDeployTransaction(
    _hasher3: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _wormhole: BridgeWormholeCCTPConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _wormhole,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2WormholeUSDC {
    return super.attach(address) as MystikoV2WormholeUSDC;
  }
  connect(signer: Signer): MystikoV2WormholeUSDC__factory {
    return super.connect(signer) as MystikoV2WormholeUSDC__factory;
  }
  static readonly contractName: 'MystikoV2WormholeUSDC';
  public readonly contractName: 'MystikoV2WormholeUSDC';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2WormholeUSDCInterface {
    return new utils.Interface(_abi) as MystikoV2WormholeUSDCInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2WormholeUSDC {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2WormholeUSDC;
  }
}
