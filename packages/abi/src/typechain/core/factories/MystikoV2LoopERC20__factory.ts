/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopERC20, MystikoV2LoopERC20Interface } from '../MystikoV2LoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_daoCenter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_txFeeProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'DepositAmountLimits',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'queryDepositFee',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'feeAmount',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'feePool',
            type: 'address',
          },
        ],
        internalType: 'struct QueryFeeResponse',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txFeeProxy',
    outputs: [
      {
        internalType: 'contract IFeeQuery',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'updateDepositAmountLimits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040525f80546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801562000036575f80fd5b5060405162001884380380620018848339810160408190526200005991620000d2565b600180546001600160a01b039384166001600160a01b0319918216179091556003805495841695821695909517909455600280549183169190941617909255600780549190921661010002610100600160a81b031990911617905562000137565b6001600160a01b0381168114620000cf575f80fd5b50565b5f805f8060808587031215620000e6575f80fd5b8451620000f381620000ba565b60208601519094506200010681620000ba565b60408601519093506200011981620000ba565b60608601519092506200012c81620000ba565b939692955090935050565b61173f80620001455f395ff3fe60806040526004361061016d575f3560e01c8063c2d41601116100c6578063e19abef81161007c578063ec571c6a11610057578063ec571c6a146103f2578063ed6ea33a14610410578063f6afe88f14610427575f80fd5b8063e19abef814610395578063e8183c44146103b4578063ea0cde85146103d3575f80fd5b8063cfc7e2da116100ac578063cfc7e2da14610350578063dd757c3414610364578063ddac5dc114610378575f80fd5b8063c2d4160114610316578063c9230c5d1461033c575f80fd5b80631f02d715116101265780633fe3347a116101015780633fe3347a146102ae578063a49f78c4146102c8578063b1c39422146102e7575f80fd5b80631f02d715146102445780632421e1551461026357806330f49cac1461028f575f80fd5b80630ba95909116101565780630ba95909146101cf578063176de7a8146101ed5780631ba46cfd1461020e575f80fd5b806301dbf19f146101715780630ab62f1b14610187575b5f80fd5b34801561017c575f80fd5b5061018561043a565b005b348015610192575f80fd5b506101a66101a1366004611262565b610524565b60408051825181526020928301516001600160a01b031692810192909252015b60405180910390f35b3480156101da575f80fd5b506006545b6040519081526020016101c6565b3480156101f8575f80fd5b506102016105e8565b6040516101c691906112c6565b348015610219575f80fd5b5060075461010090046001600160a01b03165b6040516001600160a01b0390911681526020016101c6565b34801561024f575f80fd5b5060015461022c906001600160a01b031681565b34801561026e575f80fd5b5060408051808201909152600481526306c6f6f760e41b6020820152610201565b34801561029a575f80fd5b506101856102a93660046112ef565b610666565b3480156102b9575f80fd5b505f6040516101c6919061130a565b3480156102d3575f80fd5b5060025461022c906001600160a01b031681565b3480156102f2575f80fd5b505f5461030690600160a01b900460ff1681565b60405190151581526020016101c6565b348015610321575f80fd5b5061032a610759565b60405160ff90911681526020016101c6565b348015610347575f80fd5b506102016107cf565b34801561035b575f80fd5b506005546101df565b34801561036f575f80fd5b50610185610821565b348015610383575f80fd5b506004546001600160a01b031661022c565b3480156103a0575f80fd5b506101856103af3660046112ef565b6108ff565b3480156103bf575f80fd5b506101856103ce366004611330565b6109c0565b3480156103de575f80fd5b506101856103ed36600461135d565b610aba565b3480156103fd575f80fd5b505f5461022c906001600160a01b031681565b34801561041b575f80fd5b5060075460ff16610306565b61018561043536600461145f565b610b8d565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610481573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a59190611519565b6001600160a01b0316146104cc5760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261051a92900460ff161515815260200190565b60405180910390a1565b604080518082019091525f80825260208201525f604051806040016040528061055b6007546001600160a01b036101009091041690565b6001600160a01b039081168252602091820186905260025460405163474aa58960e01b8152845183166004820152928401516024840152929350919091169063474aa589906044016040805180830381865afa1580156105bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e19190611534565b9392505050565b6060600760019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa15801561063a573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526106619190810190611588565b905090565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156106ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106d19190611519565b6001600160a01b0316146106f85760405163177bc95160e11b815260040160405180910390fd5b5f805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b5f600760019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107ab573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061066191906115f1565b6060600760019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa15801561063a573d5f803e3d5ffd5b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610868573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088c9190611519565b6001600160a01b0316146108b35760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161051a91600160a01b90910460ff161515815260200190565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610946573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061096a9190611519565b6001600160a01b0316146109915760405163177bc95160e11b815260040160405180910390fd5b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610a07573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a2b9190611519565b6001600160a01b031614610a525760405163177bc95160e11b815260040160405180910390fd5b81811115610a7357604051636003e82160e11b815260040160405180910390fd5b6006829055600581905560408051838152602081018390527f7633004c7a229869aeea10db4ff3e57e3b1534aeb2c9e72c5db25f965895c330910160405180910390a15050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610b01573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b259190611519565b6001600160a01b031614610b4c5760405163177bc95160e11b815260040160405180910390fd5b6007805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e099060200161074e565b60075460ff1615610bb157604051630e2f42c960e31b815260040160405180910390fd5b60055481511015610bd55760405163617ab12d60e11b815260040160405180910390fd5b60065481511115610bf957604051630625040160e01b815260040160405180910390fd5b5f610c108260400151835f01518460600151610c7c565b905080826020015114610c36576040516301bfaa2560e51b815260040160405180910390fd5b610c3f33610d90565b15610c5d57604051632e70c0b160e01b815260040160405180910390fd5b610c78825f015183602001518460a001518560800151610e19565b5050565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610cbe5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610cf057604051633bbde0bf60e21b815260040160405180910390fd5b60035460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610d4891600401611611565b602060405180830381865afa158015610d63573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d879190611641565b95945050505050565b5f8054600160a01b900460ff16610da857505f919050565b5f5460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d90602401602060405180830381865afa158015610def573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e139190611658565b92915050565b6040805160a081018252858152602081018590525f81830181905260608201859052608082018490526004805493516378d60cd760e01b815292936001600160a01b0316926378d60cd792610e7092869201611673565b5f604051808303815f87803b158015610e87575f80fd5b505af1158015610e99573d5f803e3d5ffd5b505050505f610ea786610524565b6004546020820151919250610ed4916001600160a01b0390911690610ecc878a6116cf565b84515f610edc565b505050505050565b803414610f305760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600754610f4d9061010090046001600160a01b0316338786610f71565b600754610f6a9061010090046001600160a01b0316338685610f71565b5050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610fe0908590610fe6565b50505050565b5f61103a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110cf9092919063ffffffff16565b8051909150156110ca57808060200190518101906110589190611658565b6110ca5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610f27565b505050565b60606110dd84845f856110e5565b949350505050565b60608247101561115d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610f27565b6001600160a01b0385163b6111b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f27565b5f80866001600160a01b031685876040516111cf91906116ee565b5f6040518083038185875af1925050503d805f8114611209576040519150601f19603f3d011682016040523d82523d5f602084013e61120e565b606091505b509150915061121e828286611229565b979650505050505050565b606083156112385750816105e1565b8251156112485782518084602001fd5b8160405162461bcd60e51b8152600401610f2791906112c6565b5f60208284031215611272575f80fd5b5035919050565b5f5b8381101561129357818101518382015260200161127b565b50505f910152565b5f81518084526112b2816020860160208601611279565b601f01601f19169290920160200192915050565b602081525f6105e1602083018461129b565b6001600160a01b03811681146112ec575f80fd5b50565b5f602082840312156112ff575f80fd5b81356105e1816112d8565b602081016002831061132a57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f8060408385031215611341575f80fd5b50508035926020909101359150565b80151581146112ec575f80fd5b5f6020828403121561136d575f80fd5b81356105e181611350565b634e487b7160e01b5f52604160045260245ffd5b60405160c0810167ffffffffffffffff811182821017156113af576113af611378565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156113de576113de611378565b604052919050565b5f67ffffffffffffffff8211156113ff576113ff611378565b50601f01601f191660200190565b5f82601f83011261141c575f80fd5b813561142f61142a826113e6565b6113b5565b818152846020838601011115611443575f80fd5b816020850160208301375f918101602001919091529392505050565b5f6020828403121561146f575f80fd5b813567ffffffffffffffff80821115611486575f80fd5b9083019060c08286031215611499575f80fd5b6114a161138c565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff811681146114db575f80fd5b60608201526080830135828111156114f1575f80fd5b6114fd8782860161140d565b60808301525060a083013560a082015280935050505092915050565b5f60208284031215611529575f80fd5b81516105e1816112d8565b5f60408284031215611544575f80fd5b6040516040810181811067ffffffffffffffff8211171561156757611567611378565b60405282518152602083015161157c816112d8565b60208201529392505050565b5f60208284031215611598575f80fd5b815167ffffffffffffffff8111156115ae575f80fd5b8201601f810184136115be575f80fd5b80516115cc61142a826113e6565b8181528560208385010111156115e0575f80fd5b610d87826020830160208601611279565b5f60208284031215611601575f80fd5b815160ff811681146105e1575f80fd5b6060810181835f5b6003811015611638578151835260209283019290910190600101611619565b50505092915050565b5f60208284031215611651575f80fd5b5051919050565b5f60208284031215611668575f80fd5b81516105e181611350565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201525f608084015160a060c08401526116b660e084018261129b565b9150506001600160a01b03831660208301529392505050565b80820180821115610e1357634e487b7160e01b5f52601160045260245ffd5b5f82516116ff818460208701611279565b919091019291505056fea2646970667358221220cb218b362e570960d2775233fb6208c69e5af2d413a0f1ac86ff571c1c3c7fd664736f6c63430008140033';

type MystikoV2LoopERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    _txFeeProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _daoCenter,
      _txFeeProxy,
      overrides || {},
    ) as Promise<MystikoV2LoopERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    _txFeeProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, _daoCenter, _txFeeProxy, overrides || {});
  }
  attach(address: string): MystikoV2LoopERC20 {
    return super.attach(address) as MystikoV2LoopERC20;
  }
  connect(signer: Signer): MystikoV2LoopERC20__factory {
    return super.connect(signer) as MystikoV2LoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2LoopERC20';
  public readonly contractName: 'MystikoV2LoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2LoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopERC20;
  }
}
