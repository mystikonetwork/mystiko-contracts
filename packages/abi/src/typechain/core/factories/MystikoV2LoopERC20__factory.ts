/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2LoopERC20, MystikoV2LoopERC20Interface } from '../MystikoV2LoopERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_daoCenter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'DepositAmountLimits',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoLoop.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'updateDepositAmountLimits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040525f80546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801562000036575f80fd5b5060405162001690380380620016908339810160408190526200005991620000c7565b600180546001600160a01b039283166001600160a01b031991821617909155600280549483169490911693909317909255600680549290911661010002610100600160a81b031990921691909117905562000118565b6001600160a01b0381168114620000c4575f80fd5b50565b5f805f60608486031215620000da575f80fd5b8351620000e781620000af565b6020850151909350620000fa81620000af565b60408501519092506200010d81620000af565b809150509250925092565b61156a80620001265f395ff3fe608060405260043610610157575f3560e01c8063c9230c5d116100bb578063e8183c4411610071578063ec571c6a11610057578063ec571c6a1461037a578063ed6ea33a14610398578063f6afe88f146103af575f80fd5b8063e8183c441461033c578063ea0cde851461035b575f80fd5b8063dd757c34116100a1578063dd757c34146102ec578063ddac5dc114610300578063e19abef81461031d575f80fd5b8063c9230c5d146102c4578063cfc7e2da146102d8575f80fd5b80632421e155116101105780633fe3347a116100f65780633fe3347a14610255578063b1c394221461026f578063c2d416011461029e575f80fd5b80632421e1551461020a57806330f49cac14610236575f80fd5b8063176de7a811610140578063176de7a8146101945780631ba46cfd146101b55780631f02d715146101eb575f80fd5b806301dbf19f1461015b5780630ba9590914610171575b5f80fd5b348015610166575f80fd5b5061016f6103c2565b005b34801561017c575f80fd5b506005545b6040519081526020015b60405180910390f35b34801561019f575f80fd5b506101a86104ac565b60405161018b919061113c565b3480156101c0575f80fd5b5060065461010090046001600160a01b03165b6040516001600160a01b03909116815260200161018b565b3480156101f6575f80fd5b506001546101d3906001600160a01b031681565b348015610215575f80fd5b5060408051808201909152600481526306c6f6f760e41b60208201526101a8565b348015610241575f80fd5b5061016f610250366004611165565b61052a565b348015610260575f80fd5b505f60405161018b9190611180565b34801561027a575f80fd5b505f5461028e90600160a01b900460ff1681565b604051901515815260200161018b565b3480156102a9575f80fd5b506102b261061d565b60405160ff909116815260200161018b565b3480156102cf575f80fd5b506101a8610693565b3480156102e3575f80fd5b50600454610181565b3480156102f7575f80fd5b5061016f6106e5565b34801561030b575f80fd5b506003546001600160a01b03166101d3565b348015610328575f80fd5b5061016f610337366004611165565b6107c3565b348015610347575f80fd5b5061016f6103563660046111a6565b610884565b348015610366575f80fd5b5061016f6103753660046111d3565b61097e565b348015610385575f80fd5b505f546101d3906001600160a01b031681565b3480156103a3575f80fd5b5060065460ff1661028e565b61016f6103bd3660046112d5565b610a51565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610409573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042d919061138f565b6001600160a01b0316146104545760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069926104a292900460ff161515815260200190565b60405180910390a1565b6060600660019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa1580156104fe573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261052591908101906113aa565b905090565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610571573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610595919061138f565b6001600160a01b0316146105bc5760405163177bc95160e11b815260040160405180910390fd5b5f805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b1906020015b60405180910390a150565b5f600660019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561066f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610525919061141c565b6060600660019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa1580156104fe573d5f803e3d5ffd5b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561072c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610750919061138f565b6001600160a01b0316146107775760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf5952069916104a291600160a01b90910460ff161515815260200190565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561080a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082e919061138f565b6001600160a01b0316146108555760405163177bc95160e11b815260040160405180910390fd5b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156108cb573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108ef919061138f565b6001600160a01b0316146109165760405163177bc95160e11b815260040160405180910390fd5b8181111561093757604051636003e82160e11b815260040160405180910390fd5b6005829055600481905560408051838152602081018390527f7633004c7a229869aeea10db4ff3e57e3b1534aeb2c9e72c5db25f965895c330910160405180910390a15050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156109c5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e9919061138f565b6001600160a01b031614610a105760405163177bc95160e11b815260040160405180910390fd5b6006805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e0990602001610612565b60065460ff1615610a7557604051630e2f42c960e31b815260040160405180910390fd5b60045481511015610a995760405163617ab12d60e11b815260040160405180910390fd5b60055481511115610abd57604051630625040160e01b815260040160405180910390fd5b5f610ad48260400151835f01518460600151610b40565b905080826020015114610afa576040516301bfaa2560e51b815260040160405180910390fd5b610b0333610c56565b15610b2157604051632e70c0b160e01b815260040160405180910390fd5b610b3c825f015183602001518460a001518560800151610cdf565b5050565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610b825760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610bb457604051633bbde0bf60e21b815260040160405180910390fd5b60025460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610c0c9160040161143c565b602060405180830381865afa158015610c27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c4b919061146c565b9150505b9392505050565b5f8054600160a01b900460ff16610c6e57505f919050565b5f5460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d90602401602060405180830381865afa158015610cb5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd99190611483565b92915050565b6040805160a081018252858152602081018590525f818301819052606082018590526080820184905260035492516378d60cd760e01b815291926001600160a01b0316916378d60cd791610d389185919060040161149e565b5f604051808303815f87803b158015610d4f575f80fd5b505af1158015610d61573d5f803e3d5ffd5b5050600354610d8692506001600160a01b03169050610d8085886114fa565b5f610d8d565b5050505050565b803414610de15760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600654610dfe9061010090046001600160a01b0316338585610e03565b505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610e72908590610e78565b50505050565b5f610ecc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f5c9092919063ffffffff16565b805190915015610dfe5780806020019051810190610eea9190611483565b610dfe5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610dd8565b6060610f6a84845f85610f72565b949350505050565b606082471015610fea5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610dd8565b6001600160a01b0385163b6110415760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610dd8565b5f80866001600160a01b0316858760405161105c9190611519565b5f6040518083038185875af1925050503d805f8114611096576040519150601f19603f3d011682016040523d82523d5f602084013e61109b565b606091505b50915091506110ab8282866110b6565b979650505050505050565b606083156110c5575081610c4f565b8251156110d55782518084602001fd5b8160405162461bcd60e51b8152600401610dd8919061113c565b5f5b838110156111095781810151838201526020016110f1565b50505f910152565b5f81518084526111288160208601602086016110ef565b601f01601f19169290920160200192915050565b602081525f610c4f6020830184611111565b6001600160a01b0381168114611162575f80fd5b50565b5f60208284031215611175575f80fd5b8135610c4f8161114e565b60208101600283106111a057634e487b7160e01b5f52602160045260245ffd5b91905290565b5f80604083850312156111b7575f80fd5b50508035926020909101359150565b8015158114611162575f80fd5b5f602082840312156111e3575f80fd5b8135610c4f816111c6565b634e487b7160e01b5f52604160045260245ffd5b60405160c0810167ffffffffffffffff81118282101715611225576112256111ee565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611254576112546111ee565b604052919050565b5f67ffffffffffffffff821115611275576112756111ee565b50601f01601f191660200190565b5f82601f830112611292575f80fd5b81356112a56112a08261125c565b61122b565b8181528460208386010111156112b9575f80fd5b816020850160208301375f918101602001919091529392505050565b5f602082840312156112e5575f80fd5b813567ffffffffffffffff808211156112fc575f80fd5b9083019060c0828603121561130f575f80fd5b611317611202565b82358152602083013560208201526040830135604082015260608301356fffffffffffffffffffffffffffffffff81168114611351575f80fd5b6060820152608083013582811115611367575f80fd5b61137387828601611283565b60808301525060a083013560a082015280935050505092915050565b5f6020828403121561139f575f80fd5b8151610c4f8161114e565b5f602082840312156113ba575f80fd5b815167ffffffffffffffff8111156113d0575f80fd5b8201601f810184136113e0575f80fd5b80516113ee6112a08261125c565b818152856020838501011115611402575f80fd5b6114138260208301602086016110ef565b95945050505050565b5f6020828403121561142c575f80fd5b815160ff81168114610c4f575f80fd5b6060810181835f5b6003811015611463578151835260209283019290910190600101611444565b50505092915050565b5f6020828403121561147c575f80fd5b5051919050565b5f60208284031215611493575f80fd5b8151610c4f816111c6565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201525f608084015160a060c08401526114e160e0840182611111565b9150506001600160a01b03831660208301529392505050565b80820180821115610cd957634e487b7160e01b5f52601160045260245ffd5b5f825161152a8184602087016110ef565b919091019291505056fea2646970667358221220971538a8fe4145106d8498a6b352c6f647d2fd18cd2f5b59f107961f2e3515cc64736f6c63430008140033';

type MystikoV2LoopERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2LoopERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2LoopERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2LoopERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2LoopERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2LoopERC20> {
    return super.deploy(_hasher3, _token, _daoCenter, overrides || {}) as Promise<MystikoV2LoopERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, _daoCenter, overrides || {});
  }
  attach(address: string): MystikoV2LoopERC20 {
    return super.attach(address) as MystikoV2LoopERC20;
  }
  connect(signer: Signer): MystikoV2LoopERC20__factory {
    return super.connect(signer) as MystikoV2LoopERC20__factory;
  }
  static readonly contractName: 'MystikoV2LoopERC20';
  public readonly contractName: 'MystikoV2LoopERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2LoopERC20Interface {
    return new utils.Interface(_abi) as MystikoV2LoopERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2LoopERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2LoopERC20;
  }
}
