/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2CelerMain, MystikoV2CelerMainInterface, IMystikoBridge } from '../MystikoV2CelerMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x6080604052346101715760405161245a38819003601f8101601f191683016001600160401b0381118482101761015b578392829160405283398101039061010082126101715780516001600160a01b03811691908290036101715761006660208201610176565b9261007360408301610176565b936060605f1983011261017157604051606081016001600160401b0381118282101761015b576040526060840151815260808401519160208201928352604060a08601519481840195865260bf190112610171576040805190810196906001600160401b0388118189101761015b5760209760405260e060c0880151978883520151978891015260018060a81b0319600054161760005560018060a01b031660018060a01b0319600854161760085551600355516004555160055560065560075560018060a01b031660018060a01b031960095416176009556040516122cf908161018b8239f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101715756fe6080604052600436101561001257600080fd5b60003560e01c80630ba95909146101b75780631ba46cfd146101b257806321e32d55146101ad5780632421e155146101a85780632cd26d45146101a35780633fe3347a1461019e578063422e0028146101995780634dde6fbc146101945780634e3c10b71461018f578063640c0b361461018a578063825b5f8d146101855780639a03636c146101805780639c649fdf1461017b578063bc58770614610176578063cb5c029a14610171578063cbe342851461016c578063cdfceeba14610167578063cfc7e2da14610162578063d0b436bd1461015d578063ddac5dc114610158578063e06174e414610153578063ed6ea33a1461014e578063efbfb2ae14610149578063f4ad17c614610144578063fa750f561461013f5763fb3e3d731461013a57600080fd5b610dcc565b610da6565b610d8b565b610d70565b610cf2565b610ccb565b610c9f565b610c81565b610c66565b610c3b565b610c1d565b61087c565b6107f7565b61076e565b610730565b61065a565b61063c565b610562565b61050a565b610468565b610318565b6102f1565b61028e565b61020b565b6101ef565b6101cc565b60009103126101c757565b600080fd5b346101c75760003660031901126101c75760206101e7610e05565b604051908152f35b346101c75760003660031901126101c757602060405160008152f35b346101c75760003660031901126101c75760206001600160a01b0360025416604051908152f35b60005b8381106102455750506000910152565b8181015183820152602001610235565b9060209161026e81518092818552858086019101610232565b601f01601f1916010190565b90602061028b928181520190610255565b90565b346101c75760003660031901126101c7576102ed60408051906102b1818361036b565b600582527f63656c6572000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610255565b0390f35b346101c75760003660031901126101c75760206001600160a01b0360085416604051908152f35b346101c75760003660031901126101c757602060405160018152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761036657604052565b610334565b90601f8019910116810190811067ffffffffffffffff82111761036657604052565b6040519061039d6101008361036b565b565b6040519061039d60808361036b565b6040519061039d60a08361036b565b9061039d604051928361036b565b6024359067ffffffffffffffff821682036101c757565b359067ffffffffffffffff821682036101c757565b67ffffffffffffffff811161036657601f01601f191660200190565b92919261041f826103f7565b9161042d604051938461036b565b8294818452818301116101c7578281602093846000960137010152565b6001600160a01b038116036101c757565b6064359061039d8261044a565b346101c75760203660031901126101c75760043567ffffffffffffffff81116101c757606060031982360301126101c7576040516104a58161034a565b6104b1826004016103e2565b8152602482013567ffffffffffffffff81116101c7578201366023820112156101c757610508926104ee6044923690602460048201359101610413565b602084015201356104fe8161044a565b6040820152610e7c565b005b346101c75760003660031901126101c7576020600554604051908152f35b90600182811c92168015610558575b602083101461054257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610537565b346101c75760003660031901126101c757604051600060015461058481610528565b808452906001811690811561061857506001146105b8575b6102ed836105ac8185038261036b565b6040519182918261027a565b91905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6916000905b8082106105fe575090915081016020016105ac61059c565b9192600181602092548385880101520191019092916105e6565b60ff191660208086019190915291151560051b840190910191506105ac905061059c565b346101c75760003660031901126101c7576020600654604051908152f35b346101c75760003660031901126101c75760206101e76110c3565b35906fffffffffffffffffffffffffffffffff821682036101c757565b9080601f830112156101c75781602061028b93359101610413565b9190610100838203126101c7576106c261038d565b928035845260208101356020850152604081013560408501526106e760608201610675565b6060850152608081013567ffffffffffffffff81116101c75760e09261070e918301610692565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126101c75760043567ffffffffffffffff81116101c75761075c9036906004016106ad565b5063e7a24ff960e01b60005260046000fd5b60803660031901126101c7576004356107868161044a565b61078e6103cb565b60443567ffffffffffffffff81116101c757366023820112156101c757806004013567ffffffffffffffff81116101c75736602482840101116101c7576102ed936107e59360246107dd61045b565b94019161112a565b60405190151581529081906020820190565b346101c75760003660031901126101c757600460206001600160a01b036009541660405192838092635e2c3b8360e11b82525afa90811561087757600091610848575b506040519015158152602090f35b61086a915060203d602011610870575b610862818361036b565b81019061126e565b3861083a565b503d610858565b610df9565b60603660031901126101c75760043567ffffffffffffffff81116101c7576108a89036906004016106ad565b6024359060443567ffffffffffffffff81116101c7576108cc903690600401610692565b916108ee6108e26009546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa90811561087757600091610bfe575b50610bed57604051635e2c3b8360e11b8152602081600481885afa90811561087757600091610bce575b50610b40575b50508051610958611329565b11610b2f578051610967610e05565b10610b1e5760a08101805161097a611433565b11610b0d5760c0820191825161098e61149a565b11610afc5760e0810180516109a16110c3565b11610aeb576109d3604083015183516109cd60608601516fffffffffffffffffffffffffffffffff1690565b916116bc565b946020830195865103610ada5760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561087757600091610abb575b50610aaa57610a6a610a7291610a62610a8296610a5886518a51835186519060808b015192610a3c6103ae565b94855260208501526040840152606083015260808201526117d7565b955190519061131c565b90519061131c565b91835161189c565b610a7a6113a5565b91519161190c565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610ad4915060203d60201161087057610862818361036b565b38610a0f565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610b7d91602091610b4f61039f565b32815291600084840152604083015260608201526040518093819263849e8b9f60e01b835260048301611286565b0381865afa90811561087757600091610baf575b5015610b9e57388061094c565b633042041f60e21b60005260046000fd5b610bc8915060203d60201161087057610862818361036b565b38610b91565b610be7915060203d60201161087057610862818361036b565b38610946565b630e2f42c960e31b60005260046000fd5b610c17915060203d60201161087057610862818361036b565b3861091c565b346101c75760003660031901126101c7576020600754604051908152f35b346101c75760003660031901126101c757602067ffffffffffffffff60005460a81c16604051908152f35b346101c75760003660031901126101c75760206101e7611329565b346101c75760003660031901126101c7576020600454604051908152f35b346101c75760003660031901126101c7576020610cba6113a5565b6001600160a01b0360405191168152f35b346101c75760003660031901126101c75760206001600160a01b0360095416604051908152f35b346101c75760003660031901126101c757602460206001600160a01b03600954166040519283809263bb07320560e01b82523060048301525afa8015610877576102ed91600091610d51575b5060405190151581529081906020820190565b610d6a915060203d60201161087057610862818361036b565b38610d3e565b346101c75760003660031901126101c75760206101e7611433565b346101c75760003660031901126101c75760206101e761149a565b346101c75760003660031901126101c757602060ff60005460a01c166040519015158152f35b346101c75760003660031901126101c7576020600354604051908152f35b908160209103126101c7575190565b6040513d6000823e3d90fd5b60095460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087757600091610e4d575b508061028b575060045490565b610e6f915060203d602011610e75575b610e67818361036b565b810190610dea565b38610e40565b503d610e5d565b60005460ff8160a01c1661105f577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff821161036657610f0082610efb600154610528565b611070565b602090601f8311600114610fd05792610f3b83610f4d94604094610f8197600092610fc5575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b61039d740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b015190503880610f26565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b818110611047575093604093610f81969360019383610f4d981061102e575b505050811b01600155610f3f565b015160001960f88460031b161c19169055388080611020565b92936020600181928786015181550195019301611001565b636d8f115160e11b60005260046000fd5b601f811161107c575050565b60016000526020600020906020601f840160051c830193106110b9575b601f0160051c01905b8181106110ad575050565b600081556001016110a2565b9091508190611099565b6009546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa9081156108775760009161110b575b508061028b575060075490565b611124915060203d602011610e7557610e67818361036b565b386110fe565b9493919290926001600160a01b0360085416330361125d5761114d913691610413565b93611156611501565b5061115f611501565b926111a261119661118a61117e6111758a611a8a565b9089528a611b0b565b90602089015289611b0b565b90604088015288611b0b565b90606087015287611d14565b90966111ae888361131c565b8151101580611246575b6111c190611b97565b876111ef57506111df6111ea9697604051926020840160405261131c565b506080850152611595565b600190565b9660405191601f821698818a1560051b808c8701019b858d0193010101905b808b10611233575050906111df916111ea9899828552601f801991011660405261131c565b9099602080918c518152019a019061120e565b506111c1611254898461131c565b831090506111b8565b633dca01cf60e11b60005260046000fd5b908160209103126101c7575180151581036101c75790565b60a0606061028b93602084526001600160a01b0381511660208501526001600160a01b0360208201511660408501526040810151828501520151916080808201520190610255565b90602082018092116112dc57565b634e487b7160e01b600052601160045260246000fd5b90600882018092116112dc57565b90600482018092116112dc57565b90600282018092116112dc57565b919082018092116112dc57565b600954604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087757600091611371575b508061028b575060035490565b61138a915060203d602011610e7557610e67818361036b565b38611364565b908160209103126101c7575161028b8161044a565b6009546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561087757600091611404575b506001600160a01b038116156113f35790565b6306f3d63360e51b60005260046000fd5b611426915060203d60201161142c575b61141e818361036b565b810190611390565b386113e0565b503d611414565b600954604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa9081156108775760009161147b575b508061028b575060055490565b611494915060203d602011610e7557610e67818361036b565b3861146e565b600954604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa908115610877576000916114e2575b508061028b575060065490565b6114fb915060203d602011610e7557610e67818361036b565b386114d5565b6040519060a0820182811067ffffffffffffffff8211176103665760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b0361158e60806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e0850190610255565b9416910152565b909291926001600160a01b036115b66108e26002546001600160a01b031690565b91160361167d5767ffffffffffffffff6115ed6115e060005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b91160361166c5780511561165b576116096108e26108e26113a5565b91823b156101c75761163592600092836040518096819582946378d60cd760e01b845260048401611540565b03925af18015610877576116465750565b80611655600061039d9361036b565b806101bc565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b919060608301926000905b600382106116a657505050565b6020806001928551815201930191019091611699565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210156117af576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182101561179e5761176f9260209261173d6108e26000546001600160a01b031690565b9161174860606103bd565b93845284840152604083015260405180809581946304b98e1d60e31b83526004830161168e565b03915afa90811561087757600091611785575090565b61028b915060203d602011610e7557610e67818361036b565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b906117d360209282815194859201610232565b0190565b61028b6118889161188e6117eb8251611bef565b916118886117fc6020830151611bef565b9161188861180d6040830151611bef565b611888608061181f6060860151611bef565b9401519561187861183a67ffffffffffffffff895116611e21565b602060405199826118548c94518092858088019101610232565b830161186882518093858085019101610232565b010103601f19810189528861036b565b6040519a8b9960208b01906117c0565b906117c0565b03601f19810183528261036b565b6001600160a01b03600854166001600160a01b03600254169067ffffffffffffffff60005460a81c16813b156101c75760009367ffffffffffffffff9361163560405197889687958694634f9e72ad60e11b86526004860152166024840152606060448401526064830190610255565b9091611918908361131c565b34036119a157600080809381935af13d1561199c573d611937816103f7565b90611945604051928361036b565b8152600060203d92013e5b1561195757565b60405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606490fd5b611950565b60405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e00000000000000000000000000006044820152606490fd5b156119ed57565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b15611a4557565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b80516020111580611af4575b611a9f906119e6565b604051602090910151601f60005b60208110611ade57505050602081016040525190611ad46001600160ff1b03831115611a3e565b61028b60006112ce565b60019083831a8186015301906000190190611aad565b50611a9f611b0260006112ce565b15159050611a96565b919091602083018084116112dc578151101580611b81575b611b2c906119e6565b60405190830160200151601f60005b60208110611b6b5750505080602061028b92016040525192611b666001600160ff1b03851115611a3e565b6112ce565b60019083831a8186015301906000190190611b3b565b50611b2c611b8e846112ce565b84109050611b23565b15611b9e57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b6001600160ff1b038111611c38576040516020815290601f60005b60208110611c1f575050506040810160405290565b60019083831a6020828701015301906000190190611c0a565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b15611c8457565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b15611ccf57565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b9190611d209083611f1b565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b8103611d8557505061ffff92611d5f91612140565b921660fd81101580611d79575b611d7590611cc8565b9190565b5061ffff811115611d6c565b607f60f91b8103611dc557505063ffffffff92611da1916120c3565b921661ffff811180611db7575b611d7590611c7d565b5063ffffffff811115611dae565b7fff0000000000000000000000000000000000000000000000000000000000000003611e10575067ffffffffffffffff92611dff91611fef565b9216611d7563ffffffff8211611c7d565b905060f81c611d7560fd8210611c7d565b67ffffffffffffffff811660fd811015611e57575060ff61028b9116604051906001825260f81b60208201526021810160405290565b61ffff8111611ea7575061028b6118889161188e611e9761ffff611e9060fd604051906001825260f81b60208201526021810160405290565b931661225e565b60405194859360208501906117c0565b63ffffffff10611ee95761028b6118889161188e611e9763ffffffff611ee260fe604051906001825260f81b60208201526021810160405290565b9316612223565b61028b6118889161188e611e97611f1560ff604051906001825260f81b60208201526021810160405290565b926121e8565b919060018101928382116112dc57805184111580611f8f575b15611f4b57602082859201015191116112dc579190565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b50838210611f34565b15611f9f57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600883018084116112dc578151101580612056575b61201090611f98565b60405190830160200151600760005b60088110612040575050506008810160405260171901519161028b906112f2565b60019083831a818601530190600019019061201f565b50612010612063846112f2565b84109050612007565b1561207357565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600483018084116112dc57815110158061212a575b6120e49061206c565b60405190830160200151600360005b600481106121145750505060048101604052601b1901519161028b90611300565b60019083831a81860153019060001901906120f3565b506120e461213784611300565b841090506120db565b919091600283018084116112dc57815181111590816121de575b501561218e5761028b90602084604051920101518060011a825360001a600182015360028101604052601d1901519261130e565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b905083103861215a565b6040516008815290601f60005b6008811061220a575050506028810160405290565b60019083831a60208287010153019060001901906121f5565b6040516004815290601f60005b60048110612245575050506024810160405290565b60019083831a6020828701015301906000190190612230565b6040516002815290601f60005b60028110612280575050506022810160405290565b60019083831a602082870101530190600019019061226b56fea264697066735822122075e562d38fc488d478fbb610aaa6f8ec0e62da1879ed729f0568930b19ad165d64736f6c634300081a0033';

type MystikoV2CelerMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerMain__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerMain';
  }

  deploy(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerMain> {
    return super.deploy(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2CelerMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2CelerMain {
    return super.attach(address) as MystikoV2CelerMain;
  }
  connect(signer: Signer): MystikoV2CelerMain__factory {
    return super.connect(signer) as MystikoV2CelerMain__factory;
  }
  static readonly contractName: 'MystikoV2CelerMain';
  public readonly contractName: 'MystikoV2CelerMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerMainInterface {
    return new utils.Interface(_abi) as MystikoV2CelerMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerMain;
  }
}
