/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2CelerMain, MystikoV2CelerMainInterface, IMystikoBridge } from '../MystikoV2CelerMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.LocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'depositWithCertificate',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settingsCenter',
    outputs: [
      {
        internalType: 'contract MystikoSettingsCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b191690553480156200001e57600080fd5b506040516200254a3803806200254a833981016040819052620000419162000126565b600080546001600160a01b039687166001600160a01b031991821617909155600880549587169582169590951790945581516003556020808301516004556040909201516005558051600655015160075560098054919093169116179055620001ec565b6001600160a01b0381168114620000bb57600080fd5b50565b604051606081016001600160401b0381118282101715620000ef57634e487b7160e01b600052604160045260246000fd5b60405290565b604080519081016001600160401b0381118282101715620000ef57634e487b7160e01b600052604160045260246000fd5b60008060008060008587036101008112156200014157600080fd5b86516200014e81620000a5565b60208801519096506200016181620000a5565b60408801519095506200017481620000a5565b93506060605f19820112156200018957600080fd5b62000193620000be565b606088015181526080880151602082015260a0880151604082015280935050604060bf1982011215620001c557600080fd5b50620001d0620000f5565b60c0870151815260e09096015160208701525092959194509290565b61234e80620001fc6000396000f3fe60806040526004361061018b5760003560e01c8063825b5f8d116100d6578063cfc7e2da1161007f578063ed6ea33a11610059578063ed6ea33a14610418578063efbfb2ae1461042d578063fb3e3d731461044257600080fd5b8063cfc7e2da146103d8578063d0b436bd146103ed578063ddac5dc11461040357600080fd5b8063abc1bd22116100b0578063abc1bd2214610361578063cbe3428514610381578063cdfceeba1461039757600080fd5b8063825b5f8d146103165780639a03636c1461032b5780639c649fdf1461033e57600080fd5b80633fe3347a116101385780634e3c10b7116101125780634e3c10b7146102d65780635898a0a8146102eb578063640c0b361461030057600080fd5b80633fe3347a14610284578063422e0028146102a05780634dde6fbc146102c057600080fd5b80632421e155116101695780632421e155146102005780632cd26d451461024f5780632dd654611461026f57600080fd5b80630ba95909146101905780631ba46cfd146101b857806321e32d55146101e0575b600080fd5b34801561019c57600080fd5b506101a5610458565b6040519081526020015b60405180910390f35b3480156101c457600080fd5b5060005b6040516001600160a01b0390911681526020016101af565b3480156101ec57600080fd5b506002546101c8906001600160a01b031681565b34801561020c57600080fd5b5060408051808201909152600581527f63656c657200000000000000000000000000000000000000000000000000000060208201525b6040516101af9190611bdc565b34801561025b57600080fd5b506008546101c8906001600160a01b031681565b61028261027d366004611da5565b6104e1565b005b34801561029057600080fd5b5060016040516101af9190611e12565b3480156102ac57600080fd5b506102826102bb366004611e6a565b6104fa565b3480156102cc57600080fd5b506101a560055481565b3480156102e257600080fd5b506102426105e7565b3480156102f757600080fd5b506101a5610675565b34801561030c57600080fd5b506101a560065481565b34801561032257600080fd5b506101a56106fc565b610282610339366004611f14565b610783565b61035161034c366004611f51565b610a68565b60405190151581526020016101af565b34801561036d57600080fd5b506009546101c8906001600160a01b031681565b34801561038d57600080fd5b506101a560075481565b3480156103a357600080fd5b506000546103bf90600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101af565b3480156103e457600080fd5b506101a5610af2565b3480156103f957600080fd5b506101a560045481565b34801561040f57600080fd5b506101c8610b79565b34801561042457600080fd5b50610351610c18565b34801561043957600080fd5b506101a5610c8a565b34801561044e57600080fd5b506101a560035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa1580156104a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c99190611ffc565b905080156104d757806104db565b6004545b91505090565b60405163e7a24ff960e01b815260040160405180910390fd5b600054600160a01b900460ff161561052557604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff9092169190911790556020810151600190610579908261209e565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b600180546105f490612015565b80601f016020809104026020016040519081016040528092919081815260200182805461062090612015565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b505050505081565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e69190611ffc565b905080156106f457806104db565b505060065490565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d9190611ffc565b9050801561077b57806104db565b505060075490565b6009546040516355f0ba2960e01b81523060048201526001600160a01b03909116906355f0ba2990602401602060405180830381865afa1580156107cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef919061215e565b1561080d57604051630e2f42c960e31b815260040160405180910390fd5b610815610af2565b815110156108365760405163617ab12d60e11b815260040160405180910390fd5b61083e610458565b8151111561085f57604051630625040160e01b815260040160405180910390fd5b610867610c8a565b8160a00151101561088b5760405163c4d8d00d60e01b815260040160405180910390fd5b610893610675565b8160c0015110156108b7576040516355a6d6a160e11b815260040160405180910390fd5b6108bf6106fc565b8160e0015110156108e35760405163784f02bd60e11b815260040160405180910390fd5b60006108fc826040015183600001518460600151610d11565b905080826020015114610922576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e919061215e565b156109ac57604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e083015160608201526080808401519082015260006109ef82610e28565b90506109ff8460a0015182610e97565b610a34610a0a610b79565b60e086015160c08701518751610a209190612180565b610a2a9190612180565b8660a00151610f1d565b60208401516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a250505050565b6008546000906001600160a01b03163314610a9657604051633dca01cf60e11b815260040160405180910390fd5b6000610ad785858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102392505050565b9050610ae5868885846110eb565b5060019695505050505050565b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa158015610b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b639190611ffc565b90508015610b7157806104db565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa158015610bc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bea91906121a1565b90506001600160a01b038116610c13576040516306f3d63360e51b815260040160405180910390fd5b919050565b6009546040516355f0ba2960e01b81523060048201526000916001600160a01b0316906355f0ba2990602401602060405180830381865afa158015610c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c85919061215e565b905090565b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb9190611ffc565b90508015610d0957806104db565b505060055490565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001808510610d545760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610610d8657604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891610dde916004016121be565b602060405180830381865afa158015610dfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1f9190611ffc565b95945050505050565b606080610e3883600001516111de565b610e4584602001516111de565b610e5285604001516111de565b610e5f86606001516111de565b610e6c8760800151611276565b604051602001610e809594939291906121ef565b60408051601f198184030181529190529392505050565b600854600254600054604051634f9e72ad60e11b81526001600160a01b0393841693639f3ce55a938793610ee793919092169167ffffffffffffffff600160a81b9091041690879060040161225a565b6000604051808303818588803b158015610f0057600080fd5b505af1158015610f14573d6000803e3d6000fd5b50505050505050565b610f278183612180565b3414610f7a5760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064015b60405180910390fd5b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114610fc7576040519150601f19603f3d011682016040523d82523d6000602084013e610fcc565b606091505b505090508061101d5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606401610f71565b50505050565b6110556040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6110876040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b600061109384826112ad565b90835290506110a284826112ad565b602084019190915290506110b684826112ad565b604084019190915290506110ca84826112ad565b606084019190915290506110de84826113de565b5060808301525092915050565b6002546001600160a01b0384811691161461111957604051631440e07960e11b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b909204161461114f57604051633876304f60e21b815260040160405180910390fd5b80516000036111715760405163820bf1e560e01b815260040160405180910390fd5b611179610b79565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b81526004016111a692919061228c565b600060405180830381600087803b1580156111c057600080fd5b505af11580156111d4573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b038211156112375760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606401610f71565b60405160208082526000601f5b828210156112665785811a826020860101536001919091019060001901611244565b5050506040818101905292915050565b8051606090611284816114eb565b836040516020016112969291906122e9565b604051602081830303815290604052915050919050565b60008083518360206112bf9190612180565b111580156112d657506112d3836020612180565b83105b61132e5760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608401610f71565b600060405160206000600182038760208a0101515b838310156113635780821a83860153600183019250600182039150611343565b50505081016040525190506001600160ff1b038111156113c55760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606401610f71565b806113d1856020612180565b92509250505b9250929050565b60606000806113ed85856115b5565b86519095509091506113ff8286612180565b1115801561141557506114128185612180565b84105b61146d5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608401610f71565b606081158015611488576040519150602082016040526114d2565b6040519150601f8316801560200281840101848101888315602002848c0101015b818310156114c15780518352602092830192016114a9565b5050848452601f01601f1916604052505b50806114de8387612180565b9350935050509250929050565b606060fd8267ffffffffffffffff16101561152057604080516001815260f884901b6020820152602181019091525b92915050565b61ffff8267ffffffffffffffff16116115705761154060fd60f81b6117b9565b611549836117e0565b60405160200161155a9291906122e9565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff161161159b57611592607f60f91b6117b9565b61154983611823565b6115ac6001600160f81b03196117b9565b61154983611866565b60008060006115c485856118a9565b9450905060006001600160f81b0319821660fd60f81b0361165c576115e98686611931565b955061ffff16905060fd8110801590611604575061ffff8111155b6116505760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606401610f71565b92508391506113d79050565b6001600160f81b03198216607f60f91b036116e65761167b86866119ea565b955063ffffffff16905061ffff8111801561169a575063ffffffff8111155b6116505760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610f71565b6001600160f81b03198083169003611763576117028686611abb565b955067ffffffffffffffff16905063ffffffff81116116505760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610f71565b5060f881901c60fd81106116505760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610f71565b60408051600181526001600160f81b0319831660208201526021810190915260609061151a565b6040516002808252606091906000601f5b828210156118135785811a8260208601015360019190910190600019016117f1565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156118565785811a826020860101536001919091019060001901611834565b5050506024810160405292915050565b6040516008808252606091906000601f5b828210156118995785811a826020860101536001919091019060001901611877565b5050506028810160405292915050565b60008083518360016118bb9190612180565b111580156118d257506118cf836001612180565b83105b61191e5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152606401610f71565b83830160200151806113d1856001612180565b60008083518360026119439190612180565b1115801561195a5750611957836002612180565b83105b6119b15760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610f71565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e810351915050808460026113d19190612180565b60008083518360046119fc9190612180565b11158015611a135750611a10836004612180565b83105b611a6a5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610f71565b600060405160046000600182038760208a0101515b83831015611a9f5780821a83860153600183019250600182039150611a7f565b505050016040819052601f1901519050806113d1856004612180565b6000808351836008611acd9190612180565b11158015611ae45750611ae1836008612180565b83105b611b3b5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610f71565b600060405160086000600182038760208a0101515b83831015611b705780821a83860153600183019250600182039150611b50565b505050016040819052601f1901519050806113d1856008612180565b60005b83811015611ba7578181015183820152602001611b8f565b50506000910152565b60008151808452611bc8816020860160208601611b8c565b601f01601f19169290920160200192915050565b602081526000611bef6020830184611bb0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611c3057611c30611bf6565b60405290565b6040516060810167ffffffffffffffff81118282101715611c3057611c30611bf6565b80356fffffffffffffffffffffffffffffffff81168114610c1357600080fd5b600067ffffffffffffffff80841115611c9457611c94611bf6565b604051601f8501601f19908116603f01168101908282118183101715611cbc57611cbc611bf6565b81604052809350858152868686011115611cd557600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611d0057600080fd5b611bef83833560208501611c79565b60006101008284031215611d2257600080fd5b611d2a611c0c565b9050813581526020820135602082015260408201356040820152611d5060608301611c59565b6060820152608082013567ffffffffffffffff811115611d6f57600080fd5b611d7b84828501611cef565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b600080600060608486031215611dba57600080fd5b833567ffffffffffffffff80821115611dd257600080fd5b611dde87838801611d0f565b9450602086013593506040860135915080821115611dfb57600080fd5b50611e0886828701611cef565b9150509250925092565b6020810160028310611e3457634e487b7160e01b600052602160045260246000fd5b91905290565b803567ffffffffffffffff81168114610c1357600080fd5b6001600160a01b0381168114611e6757600080fd5b50565b600060208284031215611e7c57600080fd5b813567ffffffffffffffff80821115611e9457600080fd5b9083019060608286031215611ea857600080fd5b611eb0611c36565b611eb983611e3a565b8152602083013582811115611ecd57600080fd5b83019150601f82018613611ee057600080fd5b611eef86833560208501611c79565b602082015260408301359250611f0483611e52565b6040810192909252509392505050565b600060208284031215611f2657600080fd5b813567ffffffffffffffff811115611f3d57600080fd5b611f4984828501611d0f565b949350505050565b600080600080600060808688031215611f6957600080fd5b8535611f7481611e52565b9450611f8260208701611e3a565b9350604086013567ffffffffffffffff80821115611f9f57600080fd5b818801915088601f830112611fb357600080fd5b813581811115611fc257600080fd5b896020828501011115611fd457600080fd5b6020830195508094505050506060860135611fee81611e52565b809150509295509295909350565b60006020828403121561200e57600080fd5b5051919050565b600181811c9082168061202957607f821691505b60208210810361204957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561209957600081815260208120601f850160051c810160208610156120765750805b601f850160051c820191505b8181101561209557828155600101612082565b5050505b505050565b815167ffffffffffffffff8111156120b8576120b8611bf6565b6120cc816120c68454612015565b8461204f565b602080601f83116001811461210157600084156120e95750858301515b600019600386901b1c1916600185901b178555612095565b600085815260208120601f198616915b8281101561213057888601518255948401946001909101908401612111565b508582101561214e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561217057600080fd5b81518015158114611bef57600080fd5b8082018082111561151a57634e487b7160e01b600052601160045260246000fd5b6000602082840312156121b357600080fd5b8151611bef81611e52565b60608101818360005b60038110156121e65781518352602092830192909101906001016121c7565b50505092915050565b60008651612201818460208b01611b8c565b865190830190612215818360208b01611b8c565b8651910190612228818360208a01611b8c565b855191019061223b818360208901611b8c565b845191019061224e818360208801611b8c565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201526000610e1f6060830184611bb0565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c08401526122d060e0840182611bb0565b9150506001600160a01b03831660208301529392505050565b600083516122fb818460208801611b8c565b83519083019061230f818360208801611b8c565b0194935050505056fea2646970667358221220ce4af89823a2135371bb495cbeb92abbeef6e7f8617b59059bbdb0e93466af9b64736f6c63430008140033';

type MystikoV2CelerMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerMain__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerMain';
  }

  deploy(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerMain> {
    return super.deploy(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2CelerMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2CelerMain {
    return super.attach(address) as MystikoV2CelerMain;
  }
  connect(signer: Signer): MystikoV2CelerMain__factory {
    return super.connect(signer) as MystikoV2CelerMain__factory;
  }
  static readonly contractName: 'MystikoV2CelerMain';
  public readonly contractName: 'MystikoV2CelerMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerMainInterface {
    return new utils.Interface(_abi) as MystikoV2CelerMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerMain;
  }
}
