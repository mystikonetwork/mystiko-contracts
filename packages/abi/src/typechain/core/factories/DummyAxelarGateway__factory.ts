/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { DummyAxelarGateway, DummyAxelarGatewayInterface } from '../DummyAxelarGateway';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AccountBlacklisted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AccountWhitelisted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'AllTokensFrozen',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'AllTokensUnfrozen',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationContractAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'ContractCall',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'sourceTxHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sourceEventIndex',
        type: 'uint256',
      },
    ],
    name: 'ContractCallApproved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'sourceTxHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'sourceEventIndex',
        type: 'uint256',
      },
    ],
    name: 'ContractCallApprovedWithMint',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationContractAddress',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'ContractCallWithToken',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
    ],
    name: 'Executed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'tokenAddresses',
        type: 'address',
      },
    ],
    name: 'TokenDeployed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'TokenFrozen',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'TokenSent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'TokenUnfrozen',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'implementation',
        type: 'address',
      },
    ],
    name: 'Upgraded',
    type: 'event',
  },
  {
    inputs: [],
    name: 'adminEpoch',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'epoch',
        type: 'uint256',
      },
    ],
    name: 'adminThreshold',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'epoch',
        type: 'uint256',
      },
    ],
    name: 'admins',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'allTokensFrozen',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'contractAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'callContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'contractAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'callContractWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainNameA',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'chainNameB',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractAddressA',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'contractAddressB',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'input',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'freezeAllTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'freezeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'implementation',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
    ],
    name: 'isCommandExecuted',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'isContractCallAndMintApproved',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'address',
        name: 'contractAddress',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
    ],
    name: 'isContractCallApproved',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'destinationChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'sendToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: '_chainNameA',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_contractAddressA',
        type: 'address',
      },
      {
        internalType: 'string',
        name: '_chainNameB',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_contractAddressB',
        type: 'address',
      },
    ],
    name: 'setChainPair',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'params',
        type: 'bytes',
      },
    ],
    name: 'setup',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'tokenAddresses',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'tokenFrozen',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'unfreezeAllTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
    ],
    name: 'unfreezeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newImplementation',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'newImplementationCodeHash',
        type: 'bytes32',
      },
      {
        internalType: 'bytes',
        name: 'setupParams',
        type: 'bytes',
      },
    ],
    name: 'upgrade',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
    ],
    name: 'validateContractCall',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes32',
        name: 'payloadHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'symbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'validateContractCallAndMint',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234801561000f575f80fd5b50610e378061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106101b0575f3560e01c8063935b13f6116100f3578063bbfb52fb11610093578063d2bc37f81161006e578063d2bc37f8146101c6578063d3137c8514610370578063e3dfa299146101c6578063f6a5f9f514610378575f80fd5b8063bbfb52fb14610331578063bc00c21614610344578063d26ff21014610362575f80fd5b8063aa1e1f0a116100ce578063aa1e1f0a146102e9578063add0a553146102f0578063b52b38e114610303578063b541708414610318575f80fd5b8063935b13f6146102c75780639ded06df146101b4578063a3499c73146102d5575f80fd5b806334ff69831161015e5780635f6970c3116101395780635f6970c314610286578063646c5d34146101b45780637b1b769e146102a057806388b30587146102b4575f80fd5b806334ff6983146101b4578063364940d8146102705780635c60da1b14610280575f80fd5b80631876eed91161018e5780631876eed9146102195780631c92115f1461024657806326ef699d14610259575f80fd5b806309c5eabe146101b457806310ef7795146101c857806314bfd6d0146101f8575b5f80fd5b6101c66101c2366004610550565b5050565b005b6001546101db906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61020c61020636600461058f565b50606090565b6040516101ef91906105a6565b6102366102273660046105f2565b60019998505050505050505050565b60405190151581526020016101ef565b6101c661025436600461069e565b610393565b6101c6610267366004610731565b50505050505050565b5f5b6040519081526020016101ef565b5f6101db565b6102366102943660046107cc565b60019695505050505050565b6102366102ae36600461085c565b50600190565b6102726102c236600461058f565b505f90565b6101db6102c236600461085c565b6101c66102e3366004610922565b50505050565b6001610236565b6101c66102fe366004610978565b6103fc565b61030b610473565b6040516101ef9190610a05565b6101c6610326366004610a50565b505050505050505050565b6003546101db906001600160a01b031681565b610236610352366004610b12565b60019a9950505050505050505050565b6102366102ae36600461058f565b61030b6104ff565b610236610386366004610bd6565b6001979650505050505050565b600354604051630922c0cb60e31b81526001600160a01b03909116906349160658906103c7905f9086908690600401610c63565b5f604051808303815f87803b1580156103de575f80fd5b505af11580156103f0573d5f803e3d5ffd5b50505050505050505050565b5f610408868883610d45565b506001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038616179055600261043e838583610d45565b506003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03929092169190911790555050505050565b6002805461048090610cbf565b80601f01602080910402602001604051908101604052809291908181526020018280546104ac90610cbf565b80156104f75780601f106104ce576101008083540402835291602001916104f7565b820191905f5260205f20905b8154815290600101906020018083116104da57829003601f168201915b505050505081565b5f805461048090610cbf565b5f8083601f84011261051b575f80fd5b50813567ffffffffffffffff811115610532575f80fd5b602083019150836020828501011115610549575f80fd5b9250929050565b5f8060208385031215610561575f80fd5b823567ffffffffffffffff811115610577575f80fd5b6105838582860161050b565b90969095509350505050565b5f6020828403121561059f575f80fd5b5035919050565b602080825282518282018190525f9190848201906040850190845b818110156105e65783516001600160a01b0316835292840192918401916001016105c1565b50909695505050505050565b5f805f805f805f805f60c08a8c03121561060a575f80fd5b8935985060208a013567ffffffffffffffff80821115610628575f80fd5b6106348d838e0161050b565b909a50985060408c013591508082111561064c575f80fd5b6106588d838e0161050b565b909850965060608c0135955060808c0135915080821115610677575f80fd5b506106848c828d0161050b565b9a9d999c50979a9699959894979660a00135949350505050565b5f805f805f80606087890312156106b3575f80fd5b863567ffffffffffffffff808211156106ca575f80fd5b6106d68a838b0161050b565b909850965060208901359150808211156106ee575f80fd5b6106fa8a838b0161050b565b90965094506040890135915080821115610712575f80fd5b5061071f89828a0161050b565b979a9699509497509295939492505050565b5f805f805f805f6080888a031215610747575f80fd5b873567ffffffffffffffff8082111561075e575f80fd5b61076a8b838c0161050b565b909950975060208a0135915080821115610782575f80fd5b61078e8b838c0161050b565b909750955060408a01359150808211156107a6575f80fd5b506107b38a828b0161050b565b989b979a50959894979596606090950135949350505050565b5f805f805f80608087890312156107e1575f80fd5b86359550602087013567ffffffffffffffff808211156107ff575f80fd5b61080b8a838b0161050b565b90975095506040890135915080821115610823575f80fd5b5061083089828a0161050b565b979a9699509497949695606090950135949350505050565b634e487b7160e01b5f52604160045260245ffd5b5f6020828403121561086c575f80fd5b813567ffffffffffffffff80821115610883575f80fd5b818401915084601f830112610896575f80fd5b8135818111156108a8576108a8610848565b604051601f8201601f19908116603f011681019083821181831017156108d0576108d0610848565b816040528281528760208487010111156108e8575f80fd5b826020860160208301375f928101602001929092525095945050505050565b80356001600160a01b038116811461091d575f80fd5b919050565b5f805f8060608587031215610935575f80fd5b61093e85610907565b935060208501359250604085013567ffffffffffffffff811115610960575f80fd5b61096c8782880161050b565b95989497509550505050565b5f805f805f806080878903121561098d575f80fd5b863567ffffffffffffffff808211156109a4575f80fd5b6109b08a838b0161050b565b90985096508691506109c460208a01610907565b955060408901359150808211156109d9575f80fd5b506109e689828a0161050b565b90945092506109f9905060608801610907565b90509295509295509295565b5f6020808352835180828501525f5b81811015610a3057858101830151858201604001528201610a14565b505f604082860101526040601f19601f8301168501019250505092915050565b5f805f805f805f805f60a08a8c031215610a68575f80fd5b893567ffffffffffffffff80821115610a7f575f80fd5b610a8b8d838e0161050b565b909b50995060208c0135915080821115610aa3575f80fd5b610aaf8d838e0161050b565b909950975060408c0135915080821115610ac7575f80fd5b610ad38d838e0161050b565b909750955060608c0135915080821115610aeb575f80fd5b50610af88c828d0161050b565b9a9d999c50979a9699959894979660800135949350505050565b5f805f805f805f805f8060e08b8d031215610b2b575f80fd5b8a35995060208b013567ffffffffffffffff80821115610b49575f80fd5b610b558e838f0161050b565b909b50995060408d0135915080821115610b6d575f80fd5b610b798e838f0161050b565b9099509750879150610b8d60608e01610907565b965060808d0135955060a08d0135915080821115610ba9575f80fd5b50610bb68d828e0161050b565b9150809450508092505060c08b013590509295989b9194979a5092959850565b5f805f805f805f60a0888a031215610bec575f80fd5b87359650602088013567ffffffffffffffff80821115610c0a575f80fd5b610c168b838c0161050b565b909850965060408a0135915080821115610c2e575f80fd5b50610c3b8a828b0161050b565b9095509350610c4e905060608901610907565b91506080880135905092959891949750929550565b8381526080602082015260016080820152600360fc1b60a082015260c060408201525f60c082015260e060608201528160e08201525f6101008385828501375f838501820152601f909301601f19169091019091019392505050565b600181811c90821680610cd357607f821691505b602082108103610cf157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610d40575f81815260208120601f850160051c81016020861015610d1d5750805b601f850160051c820191505b81811015610d3c57828155600101610d29565b5050505b505050565b67ffffffffffffffff831115610d5d57610d5d610848565b610d7183610d6b8354610cbf565b83610cf7565b5f601f841160018114610da2575f8515610d8b5750838201355b5f19600387901b1c1916600186901b178355610dfa565b5f83815260209020601f19861690835b82811015610dd25786850135825560209485019460019092019101610db2565b5086821015610dee575f1960f88860031b161c19848701351681555b505060018560011b0183555b505050505056fea264697066735822122080dbc5b8584d7d6fab964238c7ced0abe5b42f0a7214906bcc76dd49e65b707464736f6c63430008140033';

type DummyAxelarGatewayConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DummyAxelarGatewayConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DummyAxelarGateway__factory extends ContractFactory {
  constructor(...args: DummyAxelarGatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'DummyAxelarGateway';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DummyAxelarGateway> {
    return super.deploy(overrides || {}) as Promise<DummyAxelarGateway>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DummyAxelarGateway {
    return super.attach(address) as DummyAxelarGateway;
  }
  connect(signer: Signer): DummyAxelarGateway__factory {
    return super.connect(signer) as DummyAxelarGateway__factory;
  }
  static readonly contractName: 'DummyAxelarGateway';
  public readonly contractName: 'DummyAxelarGateway';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummyAxelarGatewayInterface {
    return new utils.Interface(_abi) as DummyAxelarGatewayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DummyAxelarGateway {
    return new Contract(address, _abi, signerOrProvider) as DummyAxelarGateway;
  }
}
