/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2AxelarMain,
  MystikoV2AxelarMainInterface,
  IMystikoBridge,
} from '../MystikoV2AxelarMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.LocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'StringsInsufficientHexLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settingsCenter',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b191690553480156200001e57600080fd5b5060405162002e8738038062002e87833981016040819052620000419162000140565b600080546001600160a01b03199081166001600160a01b0398891617909155600880548216968816969096179095558251600355602080840151600455604090930151600555815160065591015160075560098054841692851692909217909155600b8054909216921691909117905562000223565b6001600160a01b0381168114620000cd57600080fd5b50565b8051620000dd81620000b7565b919050565b600060408284031215620000f557600080fd5b604080519081016001600160401b03811182821017156200012657634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6000806000806000808688036101208112156200015c57600080fd5b87516200016981620000b7565b60208901519097506200017c81620000b7565b60408901519096506200018f81620000b7565b94506060605f1982011215620001a457600080fd5b50604051606081016001600160401b0381118282101715620001d657634e487b7160e01b600052604160045260246000fd5b6040908152606089015182526080890151602083015260a0890151908201529250620002068860c08901620000e2565b9150620002176101008801620000d0565b90509295509295509295565b612c5480620002336000396000f3fe6080604052600436106101a15760003560e01c8063640c0b36116100e1578063cdfceeba1161008a578063ddac5dc111610064578063ddac5dc11461045a578063ed6ea33a1461046f578063efbfb2ae14610494578063fb3e3d73146104a957600080fd5b8063cdfceeba146103ee578063cfc7e2da1461042f578063d0b436bd1461044457600080fd5b8063abc1bd22116100bb578063abc1bd22146103a5578063cb5c029a146103c5578063cbe34285146103d857600080fd5b8063640c0b3614610367578063825b5f8d1461037d5780639a03636c1461039257600080fd5b80632cd26d451161014e578063491606581161012857806349160658146103075780634dde6fbc146103275780634e3c10b71461033d5780635898a0a81461035257600080fd5b80632cd26d45146102ab5780633fe3347a146102cb578063422e0028146102e757600080fd5b80631ba46cfd1161017f5780631ba46cfd1461022857806321e32d551461023c5780632421e1551461025c57600080fd5b80630ba95909146101a6578063116191b6146101ce5780631a98b2e014610206575b600080fd5b3480156101b257600080fd5b506101bb6104bf565b6040519081526020015b60405180910390f35b3480156101da57600080fd5b50600a546101ee906001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b34801561021257600080fd5b50610226610221366004612198565b610548565b005b34801561023457600080fd5b5060006101ee565b34801561024857600080fd5b506002546101ee906001600160a01b031681565b34801561026857600080fd5b5060408051808201909152600681527f6178656c6172000000000000000000000000000000000000000000000000000060208201525b6040516101c591906122c2565b3480156102b757600080fd5b506008546101ee906001600160a01b031681565b3480156102d757600080fd5b5060016040516101c591906122dc565b3480156102f357600080fd5b506102266103023660046123f5565b6106bb565b34801561031357600080fd5b506102266103223660046124a6565b6107a8565b34801561033357600080fd5b506101bb60055481565b34801561034957600080fd5b5061029e610828565b34801561035e57600080fd5b506101bb6108b6565b34801561037357600080fd5b506101bb60065481565b34801561038957600080fd5b506101bb61093d565b6102266103a0366004612620565b6109c4565b3480156103b157600080fd5b506009546101ee906001600160a01b031681565b6102266103d336600461265d565b6109dd565b3480156103e457600080fd5b506101bb60075481565b3480156103fa57600080fd5b5060005461041690600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101c5565b34801561043b57600080fd5b506101bb610e08565b34801561045057600080fd5b506101bb60045481565b34801561046657600080fd5b506101ee610e8f565b34801561047b57600080fd5b50610484610f2e565b60405190151581526020016101c5565b3480156104a057600080fd5b506101bb610fa0565b3480156104b557600080fd5b506101bb60035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa15801561050c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053091906126ca565b9050801561053e5780610542565b6004545b91505090565b6000858560405161055a9291906126e3565b604051908190038120600a54631876eed960e01b83529092506001600160a01b031690631876eed9906105a1908e908e908e908e908e9089908d908d908d9060040161271c565b6020604051808303816000875af11580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e4919061277b565b61060157604051631403112d60e21b815260040160405180910390fd5b6106ae8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525050604080516020601f8b018190048102820181019092528981528c93508b9250908a908a90819084018382808284376000920191909152508a9250611027915050565b5050505050505050505050565b600054600160a01b900460ff16156106e657604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff909216919091179055602081015160019061073a9082612822565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b61081f86868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a01819004810282018101909252888152925088915087908190840183828082843760009201919091525087925086915061102f9050565b50505050505050565b600180546108359061279d565b80601f01602080910402602001604051908101604052809291908181526020018280546108619061279d565b80156108ae5780601f10610883576101008083540402835291602001916108ae565b820191906000526020600020905b81548152906001019060200180831161089157829003601f168201915b505050505081565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa158015610903573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092791906126ca565b905080156109355780610542565b505060065490565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae91906126ca565b905080156109bc5780610542565b505060075490565b60405163e7a24ff960e01b815260040160405180910390fd5b6009546040516355f0ba2960e01b81523060048201526001600160a01b03909116906355f0ba2990602401602060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a49919061277b565b15610a6757604051630e2f42c960e31b815260040160405180910390fd5b600960009054906101000a90046001600160a01b03166001600160a01b031663dc7f01246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade919061277b565b15610bab5760006040518060800160405280326001600160a01b03168152602001610b07600090565b6001600160a01b039081168252602082018690526040918201859052600954915163849e8b9f60e01b8152929350169063849e8b9f90610b4b9084906004016128e2565b602060405180830381865afa158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c919061277b565b610ba957604051633042041f60e21b815260040160405180910390fd5b505b610bb3610e08565b83511015610bd45760405163617ab12d60e11b815260040160405180910390fd5b610bdc6104bf565b83511115610bfd57604051630625040160e01b815260040160405180910390fd5b610c05610fa0565b8360a001511015610c295760405163c4d8d00d60e01b815260040160405180910390fd5b610c316108b6565b8360c001511015610c55576040516355a6d6a160e11b815260040160405180910390fd5b610c5d61093d565b8360e001511015610c815760405163784f02bd60e11b815260040160405180910390fd5b6000610c9a8460400151856000015186606001516110a7565b905080846020015114610cc0576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa158015610d08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2c919061277b565b15610d4a57604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252855181526020808701519082015260c08601519181019190915260e08501516060820152608080860151908201526000610d8d826111be565b9050610d9d8660a001518261122d565b610dd2610da8610e8f565b60e088015160c08901518951610dbe919061293e565b610dc8919061293e565b8860a0015161135a565b60208601516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a2505050505050565b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa158015610e55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7991906126ca565b90508015610e875780610542565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa158015610edc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f009190612951565b90506001600160a01b038116610f29576040516306f3d63360e51b815260040160405180910390fd5b919050565b6009546040516355f0ba2960e01b81523060048201526000916001600160a01b0316906355f0ba2990602401602060405180830381865afa158015610f77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9b919061277b565b905090565b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101191906126ca565b9050801561101f5780610542565b505060055490565b505050505050565b600061107083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061146092505050565b6000546002549192506110a091600160a81b90910467ffffffffffffffff16906001600160a01b03163284611528565b5050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018085106110ea5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff161061111c57604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e8916111749160040161296e565b602060405180830381865afa158015611191573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b591906126ca565b95945050505050565b6060806111ce836000015161161b565b6111db846020015161161b565b6111e8856040015161161b565b6111f5866060015161161b565b61120287608001516116b3565b60405160200161121695949392919061299f565b60408051601f198184030181529190529392505050565b600254600090611247906001600160a01b031660146116ea565b905082156112bd57600b54604051630c93e3bb60e01b81526001600160a01b0390911690630c93e3bb90859061128a903090600190879089903390600401612a87565b6000604051808303818588803b1580156112a357600080fd5b505af11580156112b7573d6000803e3d6000fd5b50505050505b7fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef6001826040516112ef929190612ae6565b60405180910390a1600854604051631c92115f60e01b81526001600160a01b0390911690631c92115f9061132c9060019085908790600401612b0b565b600060405180830381600087803b15801561134657600080fd5b505af115801561081f573d6000803e3d6000fd5b611364818361293e565b34146113b75760405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e000000000000000000000000000060448201526064015b60405180910390fd5b6000836001600160a01b03168360405160006040518083038185875af1925050503d8060008114611404576040519150601f19603f3d011682016040523d82523d6000602084013e611409565b606091505b505090508061145a5760405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c65640000000000000000000060448201526064016113ae565b50505050565b6114926040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6114c46040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b60006114d08482611879565b90835290506114df8482611879565b602084019190915290506114f38482611879565b604084019190915290506115078482611879565b6060840191909152905061151b84826119aa565b5060808301525092915050565b6002546001600160a01b0384811691161461155657604051631440e07960e11b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b909204161461158c57604051633876304f60e21b815260040160405180910390fd5b80516000036115ae5760405163820bf1e560e01b815260040160405180910390fd5b6115b6610e8f565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b81526004016115e3929190612b4e565b600060405180830381600087803b1580156115fd57600080fd5b505af1158015611611573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b038211156116745760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016113ae565b60405160208082526000601f5b828210156116a35785811a826020860101536001919091019060001901611681565b5050506040818101905292915050565b80516060906116c181611ab7565b836040516020016116d3929190612bab565b604051602081830303815290604052915050919050565b60608260006116fa846002612bda565b61170590600261293e565b67ffffffffffffffff81111561171d5761171d612304565b6040519080825280601f01601f191660200182016040528015611747576020820181803683370190505b509050600360fc1b8160008151811061176257611762612bf1565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061179157611791612bf1565b60200101906001600160f81b031916908160001a90535060006117b5856002612bda565b6117c090600161293e565b90505b6001811115611845577f303132333435363738396162636465660000000000000000000000000000000083600f166010811061180157611801612bf1565b1a60f81b82828151811061181757611817612bf1565b60200101906001600160f81b031916908160001a90535060049290921c9161183e81612c07565b90506117c3565b50811561186f5760405163e22e27eb60e01b815260048101869052602481018590526044016113ae565b9150505b92915050565b600080835183602061188b919061293e565b111580156118a2575061189f83602061293e565b83105b6118fa5760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016113ae565b600060405160206000600182038760208a0101515b8383101561192f5780821a8386015360018301925060018203915061190f565b50505081016040525190506001600160ff1b038111156119915760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016113ae565b8061199d85602061293e565b92509250505b9250929050565b60606000806119b98585611b7f565b86519095509091506119cb828661293e565b111580156119e157506119de818561293e565b84105b611a395760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016113ae565b606081158015611a5457604051915060208201604052611a9e565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611a8d578051835260209283019201611a75565b5050848452601f01601f1916604052505b5080611aaa838761293e565b9350935050509250929050565b606060fd8267ffffffffffffffff161015611aea57604080516001815260f884901b602082015260218101909152611873565b61ffff8267ffffffffffffffff1611611b3a57611b0a60fd60f81b611d83565b611b1383611daa565b604051602001611b24929190612bab565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff1611611b6557611b5c607f60f91b611d83565b611b1383611ded565b611b766001600160f81b0319611d83565b611b1383611e30565b6000806000611b8e8585611e73565b9450905060006001600160f81b0319821660fd60f81b03611c2657611bb38686611efb565b955061ffff16905060fd8110801590611bce575061ffff8111155b611c1a5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016113ae565b92508391506119a39050565b6001600160f81b03198216607f60f91b03611cb057611c458686611fb4565b955063ffffffff16905061ffff81118015611c64575063ffffffff8111155b611c1a5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016113ae565b6001600160f81b03198083169003611d2d57611ccc8686612085565b955067ffffffffffffffff16905063ffffffff8111611c1a5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016113ae565b5060f881901c60fd8110611c1a5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016113ae565b60408051600181526001600160f81b03198316602082015260218101909152606090611873565b6040516002808252606091906000601f5b82821015611ddd5785811a826020860101536001919091019060001901611dbb565b5050506022810160405292915050565b6040516004808252606091906000601f5b82821015611e205785811a826020860101536001919091019060001901611dfe565b5050506024810160405292915050565b6040516008808252606091906000601f5b82821015611e635785811a826020860101536001919091019060001901611e41565b5050506028810160405292915050565b6000808351836001611e85919061293e565b11158015611e9c5750611e9983600161293e565b83105b611ee85760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016113ae565b838301602001518061199d85600161293e565b6000808351836002611f0d919061293e565b11158015611f245750611f2183600261293e565b83105b611f7b5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016113ae565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e8103519150508084600261199d919061293e565b6000808351836004611fc6919061293e565b11158015611fdd5750611fda83600461293e565b83105b6120345760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016113ae565b600060405160046000600182038760208a0101515b838310156120695780821a83860153600183019250600182039150612049565b505050016040819052601f19015190508061199d85600461293e565b6000808351836008612097919061293e565b111580156120ae57506120ab83600861293e565b83105b6121055760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016113ae565b600060405160086000600182038760208a0101515b8383101561213a5780821a8386015360018301925060018203915061211a565b505050016040819052601f19015190508061199d85600861293e565b60008083601f84011261216857600080fd5b50813567ffffffffffffffff81111561218057600080fd5b6020830191508360208285010111156119a357600080fd5b60008060008060008060008060008060c08b8d0312156121b757600080fd5b8a35995060208b013567ffffffffffffffff808211156121d657600080fd5b6121e28e838f01612156565b909b50995060408d01359150808211156121fb57600080fd5b6122078e838f01612156565b909950975060608d013591508082111561222057600080fd5b61222c8e838f01612156565b909750955060808d013591508082111561224557600080fd5b506122528d828e01612156565b9150809450508092505060a08b013590509295989b9194979a5092959850565b60005b8381101561228d578181015183820152602001612275565b50506000910152565b600081518084526122ae816020860160208601612272565b601f01601f19169290920160200192915050565b6020815260006122d56020830184612296565b9392505050565b60208101600283106122fe57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561233d5761233d612304565b60405290565b604051610100810167ffffffffffffffff8111828210171561233d5761233d612304565b600067ffffffffffffffff8084111561238257612382612304565b604051601f8501601f19908116603f011681019082821181831017156123aa576123aa612304565b816040528093508581528686860111156123c357600080fd5b858560208301376000602087830101525050509392505050565b6001600160a01b03811681146123f257600080fd5b50565b60006020828403121561240757600080fd5b813567ffffffffffffffff8082111561241f57600080fd5b908301906060828603121561243357600080fd5b61243b61231a565b8235828116811461244b57600080fd5b815260208301358281111561245f57600080fd5b83019150601f8201861361247257600080fd5b61248186833560208501612367565b602082015260408301359250612496836123dd565b6040810192909252509392505050565b60008060008060008060006080888a0312156124c157600080fd5b87359650602088013567ffffffffffffffff808211156124e057600080fd5b6124ec8b838c01612156565b909850965060408a013591508082111561250557600080fd5b6125118b838c01612156565b909650945060608a013591508082111561252a57600080fd5b506125378a828b01612156565b989b979a50959850939692959293505050565b80356fffffffffffffffffffffffffffffffff81168114610f2957600080fd5b600082601f83011261257b57600080fd5b6122d583833560208501612367565b6000610100828403121561259d57600080fd5b6125a5612343565b90508135815260208201356020820152604082013560408201526125cb6060830161254a565b6060820152608082013567ffffffffffffffff8111156125ea57600080fd5b6125f68482850161256a565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b60006020828403121561263257600080fd5b813567ffffffffffffffff81111561264957600080fd5b6126558482850161258a565b949350505050565b60008060006060848603121561267257600080fd5b833567ffffffffffffffff8082111561268a57600080fd5b6126968783880161258a565b94506020860135935060408601359150808211156126b357600080fd5b506126c08682870161256a565b9150509250925092565b6000602082840312156126dc57600080fd5b5051919050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c06020820152600061273660c083018a8c6126f3565b828103604084015261274981898b6126f3565b905086606084015282810360808401526127648186886126f3565b9150508260a08301529a9950505050505050505050565b60006020828403121561278d57600080fd5b815180151581146122d557600080fd5b600181811c908216806127b157607f821691505b6020821081036127d157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561281d57600081815260208120601f850160051c810160208610156127fe5750805b601f850160051c820191505b818110156110275782815560010161280a565b505050565b815167ffffffffffffffff81111561283c5761283c612304565b6128508161284a845461279d565b846127d7565b602080601f831160018114612885576000841561286d5750858301515b600019600386901b1c1916600185901b178555611027565b600085815260208120601f198616915b828110156128b457888601518255948401946001909101908401612895565b50858210156128d25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020815260006001600160a01b038084511660208401528060208501511660408401525060408301516060830152606083015160808084015261265560a0840182612296565b634e487b7160e01b600052601160045260246000fd5b8082018082111561187357611873612928565b60006020828403121561296357600080fd5b81516122d5816123dd565b60608101818360005b6003811015612996578151835260209283019290910190600101612977565b50505092915050565b600086516129b1818460208b01612272565b8651908301906129c5818360208b01612272565b86519101906129d8818360208a01612272565b85519101906129eb818360208901612272565b84519101906129fe818360208801612272565b01979650505050505050565b60008154612a178161279d565b808552602060018381168015612a345760018114612a4e57612a7c565b60ff1985168884015283151560051b880183019550612a7c565b866000528260002060005b85811015612a745781548a8201860152908301908401612a59565b890184019650505b505050505092915050565b60006001600160a01b03808816835260a06020840152612aaa60a0840188612a0a565b8381036040850152612abc8188612296565b90508381036060850152612ad08187612296565b9250508084166080840152509695505050505050565b604081526000612af96040830185612a0a565b82810360208401526111b58185612296565b606081526000612b1e6060830186612a0a565b8281036020840152612b308186612296565b90508281036040840152612b448185612296565b9695505050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152612b9260e0840182612296565b9150506001600160a01b03831660208301529392505050565b60008351612bbd818460208801612272565b835190830190612bd1818360208801612272565b01949350505050565b808202811582820484141761187357611873612928565b634e487b7160e01b600052603260045260246000fd5b600081612c1657612c16612928565b50600019019056fea26469706673582212203f01311425b1809bd4acefea3e3d8e17cf1fd8bad2328286b370634ffb0f110564736f6c63430008140033';

type MystikoV2AxelarMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarMain__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarMain';
  }

  deploy(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarMain> {
    return super.deploy(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    ) as Promise<MystikoV2AxelarMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2AxelarMain {
    return super.attach(address) as MystikoV2AxelarMain;
  }
  connect(signer: Signer): MystikoV2AxelarMain__factory {
    return super.connect(signer) as MystikoV2AxelarMain__factory;
  }
  static readonly contractName: 'MystikoV2AxelarMain';
  public readonly contractName: 'MystikoV2AxelarMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarMainInterface {
    return new utils.Interface(_abi) as MystikoV2AxelarMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarMain;
  }
}
