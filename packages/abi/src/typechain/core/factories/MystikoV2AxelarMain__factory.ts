/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2AxelarMain,
  MystikoV2AxelarMainInterface,
  IMystikoBridge,
} from '../MystikoV2AxelarMain';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'StringsInsufficientHexLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x608060405234610199576040516129a338819003601f8101601f191683016001600160401b038111848210176101835783928291604052833981010361012081126101995781516001600160a01b0381169290839003610199576100656020820161019e565b6100716040830161019e565b926060605f1982011261019957604051606081016001600160401b03811182821017610183576040526060840151815260808401519060208101918252604060a08601519381830194855260bf1901126101995760408051908101959094906001600160401b03871186881017610183576101006101089160209860405260c08101519788815260e0820151998a9101520161019e565b600080546001600160a81b031916909917909855600880546001600160a01b03199081166001600160a01b039384161790915591516003559151600455915160055560069290925560079290925560098054831693821693909317909255600b8054909116919092161790556040516127f090816101b38239f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101995756fe6080604052600436101561001257600080fd5b60003560e01c80630ba95909146101d7578063116191b6146101d25780631a98b2e0146101cd5780631ba46cfd146101c857806321e32d55146101c35780632421e155146101be5780632cd26d45146101b95780633fe3347a146101b4578063422e0028146101af57806349160658146101aa5780634dde6fbc146101a55780634e3c10b7146101a0578063640c0b361461019b578063825b5f8d146101965780639a03636c14610191578063bc5877061461018c578063cb5c029a14610187578063cbe3428514610182578063cdfceeba1461017d578063cfc7e2da14610178578063d0b436bd14610173578063ddac5dc11461016e578063e06174e414610169578063ed6ea33a14610164578063efbfb2ae1461015f578063f4ad17c61461015a578063fa750f56146101555763fb3e3d731461015057600080fd5b611075565b61104f565b611034565b611019565b610f9b565b610f74565b610f48565b610f2a565b610f0f565b610ee4565b610ec6565b610b25565b610aa0565b610a62565b61098c565b61096e565b610895565b6107ba565b610605565b61055c565b61043a565b610413565b6103b0565b61032d565b610311565b610264565b61020f565b6101ec565b60009103126101e757565b600080fd5b346101e75760003660031901126101e75760206102076110ae565b604051908152f35b346101e75760003660031901126101e75760206001600160a01b03600a5416604051908152f35b9181601f840112156101e75782359167ffffffffffffffff83116101e757602083818601950101116101e757565b346101e75760c03660031901126101e75760043560243567ffffffffffffffff81116101e757610298903690600401610236565b60449291923567ffffffffffffffff81116101e7576102bb903690600401610236565b60649491943567ffffffffffffffff81116101e7576102de903690600401610236565b916084359667ffffffffffffffff88116101e75761030361030f983690600401610236565b96909560a435986111ac565b005b346101e75760003660031901126101e757602060405160008152f35b346101e75760003660031901126101e75760206001600160a01b0360025416604051908152f35b60005b8381106103675750506000910152565b8181015183820152602001610357565b9060209161039081518092818552858086019101610354565b601f01601f1916010190565b9060206103ad928181520190610377565b90565b346101e75760003660031901126101e75761040f60408051906103d3818361048d565b600682527f6178656c61720000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610377565b0390f35b346101e75760003660031901126101e75760206001600160a01b0360085416604051908152f35b346101e75760003660031901126101e757602060405160018152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761048857604052565b610456565b90601f8019910116810190811067ffffffffffffffff82111761048857604052565b604051906104bf6101008361048d565b565b604051906104bf60808361048d565b604051906104bf60a08361048d565b906104bf604051928361048d565b67ffffffffffffffff811161048857601f01601f191660200190565b929192610515826104ed565b91610523604051938461048d565b8294818452818301116101e7578281602093846000960137010152565b6001600160a01b038116036101e757565b35906104bf82610540565b346101e75760203660031901126101e75760043567ffffffffffffffff81116101e757606060031982360301126101e7576040516105998161046c565b816004013567ffffffffffffffff811681036101e7578152602482013567ffffffffffffffff81116101e757820191366023840112156101e75760446105fb916105f061030f953690602460048201359101610509565b602085015201610551565b6040820152611263565b346101e75760803660031901126101e75760243567ffffffffffffffff81116101e757610636903690600401610236565b60443567ffffffffffffffff81116101e757610656903690600401610236565b92906064359067ffffffffffffffff82116101e7576106959461068d61068361068d943690600401610236565b9590963691610509565b503691610509565b61069d611c64565b506106a6611c64565b6106e86106dc6106d06106c46106bb86612059565b908652866120cb565b906020860152856120cb565b906040850152846120cb565b90606084015283612340565b90926106f484836115ba565b81511015806107a3575b61070790612157565b8361074d575061072461030f9360405192602084016040526115ba565b50608082015260005460a81c67ffffffffffffffff166002546001600160a01b03163291611cf1565b9260405191601f82169481861560051b80888701019785890193010101905b808710610790575050906107249161030f95828552601f80199101166040526115ba565b909560208091885181520196019061076c565b506107076107b185846115ba565b831090506106fe565b346101e75760003660031901126101e7576020600554604051908152f35b90600182811c92168015610808575b60208310146107f257565b634e487b7160e01b600052602260045260246000fd5b91607f16916107e7565b60009291815491610822836107d8565b8083529260018116908115610878575060011461083e57505050565b60009081526020812093945091925b83831061085e575060209250010190565b60018160209294939454838587010152019101919061084d565b915050602093945060ff929192191683830152151560051b010190565b346101e75760003660031901126101e75760405160006001546108b7816107d8565b808452906001811690811561094a57506001146108eb575b61040f836108df8185038261048d565b6040519182918261039c565b600160009081527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b808210610930575090915081016020016108df6108cf565b919260018160209254838588010152019101909291610918565b60ff191660208086019190915291151560051b840190910191506108df90506108cf565b346101e75760003660031901126101e7576020600654604051908152f35b346101e75760003660031901126101e75760206102076114aa565b35906fffffffffffffffffffffffffffffffff821682036101e757565b9080601f830112156101e7578160206103ad93359101610509565b9190610100838203126101e7576109f46104af565b92803584526020810135602085015260408101356040850152610a19606082016109a7565b6060850152608081013567ffffffffffffffff81116101e75760e092610a409183016109c4565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126101e75760043567ffffffffffffffff81116101e757610a8e9036906004016109df565b5063e7a24ff960e01b60005260046000fd5b346101e75760003660031901126101e757600460206001600160a01b036009541660405192838092635e2c3b8360e11b82525afa908115610b2057600091610af1575b506040519015158152602090f35b610b13915060203d602011610b19575b610b0b818361048d565b810190611125565b38610ae3565b503d610b01565b6110a2565b60603660031901126101e75760043567ffffffffffffffff81116101e757610b519036906004016109df565b6024359060443567ffffffffffffffff81116101e757610b759036906004016109c4565b91610b97610b8b6009546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa908115610b2057600091610ea7575b50610e9657604051635e2c3b8360e11b8152602081600481885afa908115610b2057600091610e77575b50610de9575b50508051610c016115c7565b11610dd8578051610c106110ae565b10610dc75760a081018051610c236116d1565b11610db65760c08201918251610c37611738565b11610da55760e081018051610c4a6114aa565b11610d9457610c7c60408301518351610c7660608601516fffffffffffffffffffffffffffffffff1690565b916117cd565b946020830195865103610d835760405163df592f7d60e01b815232600482015290602090829060249082905afa908115610b2057600091610d64575b50610d5357610d13610d1b91610d0b610d2b96610d0186518a51835186519060808b015192610ce56104d0565b94855260208501526040840152606083015260808201526118e8565b95519051906115ba565b9051906115ba565b918351611a5b565b610d23611643565b915191611bd1565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610d7d915060203d602011610b1957610b0b818361048d565b38610cb8565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610e2691602091610df86104c1565b32815291600084840152604083015260608201526040518093819263849e8b9f60e01b835260048301611511565b0381865afa908115610b2057600091610e58575b5015610e47573880610bf5565b633042041f60e21b60005260046000fd5b610e71915060203d602011610b1957610b0b818361048d565b38610e3a565b610e90915060203d602011610b1957610b0b818361048d565b38610bef565b630e2f42c960e31b60005260046000fd5b610ec0915060203d602011610b1957610b0b818361048d565b38610bc5565b346101e75760003660031901126101e7576020600754604051908152f35b346101e75760003660031901126101e757602067ffffffffffffffff60005460a81c16604051908152f35b346101e75760003660031901126101e75760206102076115c7565b346101e75760003660031901126101e7576020600454604051908152f35b346101e75760003660031901126101e7576020610f63611643565b6001600160a01b0360405191168152f35b346101e75760003660031901126101e75760206001600160a01b0360095416604051908152f35b346101e75760003660031901126101e757602460206001600160a01b03600954166040519283809263bb07320560e01b82523060048301525afa8015610b205761040f91600091610ffa575b5060405190151581529081906020820190565b611013915060203d602011610b1957610b0b818361048d565b38610fe7565b346101e75760003660031901126101e75760206102076116d1565b346101e75760003660031901126101e7576020610207611738565b346101e75760003660031901126101e757602060ff60005460a01c166040519015158152f35b346101e75760003660031901126101e7576020600354604051908152f35b908160209103126101e7575190565b6040513d6000823e3d90fd5b60095460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa908115610b20576000916110f6575b50806103ad575060045490565b611118915060203d60201161111e575b611110818361048d565b810190611093565b386110e9565b503d611106565b908160209103126101e7575180151581036101e75790565b908060209392818452848401376000828201840152601f01601f1916010190565b9998979390946111866111949360a0999560c08e6111a79b9a8152816020820152019161113d565b918b830360408d015261113d565b926060890152878303608089015261113d565b930152565b968160008a99611205869d859d6111ca8a9c60209a999e3691610509565b898151910120966111e6610b8b600a546001600160a01b031690565b978c6040519c8d9b8c9a8b99631876eed960e01b8b5260048b0161115e565b03925af1908115610b2057600091611244575b50156112335761068d61068d93611230973691610509565b50565b631403112d60e21b60005260046000fd5b61125d915060203d602011610b1957610b0b818361048d565b38611218565b60005460ff8160a01c16611446577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff8211610488576112e7826112e26001546107d8565b611457565b602090601f83116001146113b757926113228361133494604094611368976000926113ac575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b6104bf740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b01519050388061130d565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b81811061142e5750936040936113689693600193836113349810611415575b505050811b01600155611326565b015160001960f88460031b161c19169055388080611407565b929360206001819287860151815501950193016113e8565b636d8f115160e11b60005260046000fd5b601f8111611463575050565b60016000526020600020906020601f840160051c830193106114a0575b601f0160051c01905b818110611494575050565b60008155600101611489565b9091508190611480565b6009546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa908115610b20576000916114f2575b50806103ad575060075490565b61150b915060203d60201161111e57611110818361048d565b386114e5565b60a060606103ad93602084526001600160a01b0381511660208501526001600160a01b0360208201511660408501526040810151828501520151916080808201520190610377565b634e487b7160e01b600052601160045260246000fd5b906002820180921161157d57565b611559565b906001820180921161157d57565b906020820180921161157d57565b906008820180921161157d57565b906004820180921161157d57565b9190820180921161157d57565b600954604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa908115610b205760009161160f575b50806103ad575060035490565b611628915060203d60201161111e57611110818361048d565b38611602565b908160209103126101e757516103ad81610540565b6009546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa908115610b20576000916116a2575b506001600160a01b038116156116915790565b6306f3d63360e51b60005260046000fd5b6116c4915060203d6020116116ca575b6116bc818361048d565b81019061162e565b3861167e565b503d6116b2565b600954604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa908115610b2057600091611719575b50806103ad575060055490565b611732915060203d60201161111e57611110818361048d565b3861170c565b600954604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa908115610b2057600091611780575b50806103ad575060065490565b611799915060203d60201161111e57611110818361048d565b38611773565b919060608301926000905b600382106117b757505050565b60208060019285518152019301910190916117aa565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210156118c0576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018210156118af576118809260209261184e610b8b6000546001600160a01b031690565b9161185960606104df565b93845284840152604083015260405180809581946304b98e1d60e31b83526004830161179f565b03915afa908115610b2057600091611896575090565b6103ad915060203d60201161111e57611110818361048d565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b906118e460209282815194859201610354565b0190565b6103ad6119999161199f6118fc8251611dc4565b9161199961190d6020830151611dc4565b9161199961191e6040830151611dc4565b61199960806119306060860151611dc4565b9401519561198961194b67ffffffffffffffff8951166121af565b602060405199826119658c94518092858088019101610354565b830161197982518093858085019101610354565b010103601f19810189528861048d565b6040519a8b9960208b01906118d1565b906118d1565b03601f19810183528261048d565b926119f9906119eb6080946001600160a01b03809599989916875260a060208801526119dd60a088016001610812565b908782036040890152610377565b908582036060870152610377565b9416910152565b6103ad9160408252611a16604083016001610812565b916020818403910152610377565b9091611a4d6103ad9360608452611a3f606085016001610812565b908482036020860152610377565b916040818403910152610377565b611a7b611a76610b8b610b8b6002546001600160a01b031690565b611ef1565b9080611b1f575b507fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef60405180611ab28482611a00565b0390a1611acd610b8b610b8b6008546001600160a01b031690565b91823b156101e757611af99260009283604051809681958294631c92115f60e01b845260048401611a24565b03925af18015610b2057611b0a5750565b80611b1960006104bf9361048d565b806101dc565b611b34610b8b600b546001600160a01b031690565b90813b156101e75760009060405192838092630c93e3bb60e01b825281611b61338a8a30600486016119ad565b03925af18015610b205715611a825780611b196000611b7f9361048d565b38611a82565b15611b8c57565b60405162461bcd60e51b815260206004820152601660248201527f616d6f756e74207472616e73666572206661696c6564000000000000000000006044820152606490fd5b91810180821161157d573403611c1f576000808080936104bf955af13d15611c1a573d611bfd816104ed565b90611c0b604051928361048d565b8152600060203d92013e611b85565b611b85565b60405162461bcd60e51b815260206004820152601260248201527f696e73756666696369656e7420746f6b656e00000000000000000000000000006044820152606490fd5b6040519060a0820182811067ffffffffffffffff8211176104885760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b036119f960806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e0850190610377565b909291926001600160a01b03611d12610b8b6002546001600160a01b031690565b911603611db35767ffffffffffffffff611d49611d3c60005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b911603611da257805115611d9157611d65610b8b610b8b611643565b91823b156101e757611af992600092836040518096819582946378d60cd760e01b845260048401611ca3565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b6001600160ff1b038111611e0d576040516020815290601f60005b60208110611df4575050506040810160405290565b60019083831a6020828701015301906000190190611ddf565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b908160011b916001600160ff1b0381160361157d57565b90611e73826104ed565b611e80604051918261048d565b8281528092611e91601f19916104ed565b0190602036910137565b634e487b7160e01b600052603260045260246000fd5b805115611ebe5760200190565b611e9b565b805160011015611ebe5760210190565b908151811015611ebe570160200190565b801561157d576000190190565b80611f0c611f07611f026014611e52565b61156f565b611e69565b916030611f1884611eb1565b536078611f2484611ec3565b53611f37611f326014611e52565b611582565b60018111611f615750611f48575090565b63e22e27eb60e01b600052600452601460245260446000fd5b90600f81166010811015611ebe57611fb0917f3031323334353637383961626364656600000000000000000000000000000000611faa921a611fa38588611ed3565b5360041c90565b91611ee4565b611f37565b15611fbc57565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b1561201457565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b805160201115806120c3575b61206e90611fb5565b604051602090910151601f60005b602081106120ad575050506020810160405251906120a36001600160ff1b0383111561200d565b6103ad6000611590565b60019083831a818601530190600019019061207c565b506001612065565b9190916020830180841161157d578151101580612141575b6120ec90611fb5565b60405190830160200151601f60005b6020811061212b575050508060206103ad920160405251926121266001600160ff1b0385111561200d565b611590565b60019083831a81860153019060001901906120fb565b506120ec61214e84611590565b841090506120e3565b1561215e57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b67ffffffffffffffff811660fd8110156121e5575060ff6103ad9116604051906001825260f81b60208201526021810160405290565b61ffff811161223557506103ad6119999161199f61222561ffff61221e60fd604051906001825260f81b60208201526021810160405290565b93166124c3565b60405194859360208501906118d1565b63ffffffff10612277576103ad6119999161199f61222563ffffffff61227060fe604051906001825260f81b60208201526021810160405290565b9316612488565b6103ad6119999161199f6122256122a360ff604051906001825260f81b60208201526021810160405290565b9261244d565b156122b057565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b156122fb57565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b919061234c90836124fe565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b81036123b157505061ffff9261238b91612712565b921660fd811015806123a5575b6123a1906122f4565b9190565b5061ffff811115612398565b607f60f91b81036123f157505063ffffffff926123cd9161269e565b921661ffff8111806123e3575b6123a1906122a9565b5063ffffffff8111156123da565b7fff000000000000000000000000000000000000000000000000000000000000000361243c575067ffffffffffffffff9261242b916125d3565b92166123a163ffffffff82116122a9565b905060f81c6123a160fd82106122a9565b6040516008815290601f60005b6008811061246f575050506028810160405290565b60019083831a602082870101530190600019019061245a565b6040516004815290601f60005b600481106124aa575050506024810160405290565b60019083831a6020828701015301906000190190612495565b6040516002815290601f60005b600281106124e5575050506022810160405290565b60019083831a60208287010153019060001901906124d0565b9190916001830180841161157d5781518111159081612572575b501561252e576020836103ad9201015192611582565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b9050831038612518565b1561258357565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916008830180841161157d576125f7908251811115908161263d575b5061257c565b60405190830160200151600760005b6008811061262757505050600881016040526017190151916103ad9061159e565b60019083831a8186015301906000190190612606565b90508410386125f1565b1561264e57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916004830180841161157d576126c29082518111159081612708575b50612647565b60405190830160200151600360005b600481106126f25750505060048101604052601b190151916103ad906115ac565b60019083831a81860153019060001901906126d1565b90508410386126bc565b9190916002830180841161157d57815181111590816127b0575b5015612760576103ad90602084604051920101518060011a825360001a600182015360028101604052601d1901519261156f565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b905083103861272c56fea26469706673582212204fb4c18f33e146df73d9b0389ecf847071db3091e059afd35833aaf5887c04a964736f6c634300081a0033';

type MystikoV2AxelarMainConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarMainConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarMain__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarMain';
  }

  deploy(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarMain> {
    return super.deploy(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    ) as Promise<MystikoV2AxelarMain>;
  }
  getDeployTransaction(
    _hasher3: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2AxelarMain {
    return super.attach(address) as MystikoV2AxelarMain;
  }
  connect(signer: Signer): MystikoV2AxelarMain__factory {
    return super.connect(signer) as MystikoV2AxelarMain__factory;
  }
  static readonly contractName: 'MystikoV2AxelarMain';
  public readonly contractName: 'MystikoV2AxelarMain';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarMainInterface {
    return new utils.Interface(_abi) as MystikoV2AxelarMainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarMain {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarMain;
  }
}
