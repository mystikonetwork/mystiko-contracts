/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2AxelarERC20,
  MystikoV2AxelarERC20Interface,
  IMystikoBridge,
} from '../MystikoV2AxelarERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'StringsInsufficientHexLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoBridgeSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b1916905534801561001d57600080fd5b5060405161335b38038061335b83398101604081905261003c91610179565b600080546001600160a01b03199081166001600160a01b03998a1617909155600880548216968916969096179095558251600355602080840151600455604090930151600555815160065591015160075560098054841692861692909217909155600b80548316918516919091179055600c805490911691909216179055610238565b6001600160a01b03811681146100d457600080fd5b50565b80516100e2816100bf565b919050565b604051606081016001600160401b038111828210171561011757634e487b7160e01b600052604160045260246000fd5b60405290565b60006040828403121561012f57600080fd5b604080519081016001600160401b038111828210171561015f57634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b600080600080600080600087890361014081121561019657600080fd5b88516101a1816100bf565b60208a01519098506101b2816100bf565b60408a01519097506101c3816100bf565b60608a01519096506101d4816100bf565b94506060607f19820112156101e857600080fd5b506101f16100e7565b6080890151815260a0890151602082015260c08901516040820152925061021b8960e08a0161011d565b915061022a61012089016100d7565b905092959891949750929550565b613114806102476000396000f3fe6080604052600436106101d85760003560e01c80639a03636c11610102578063d0b436bd11610095578063efbfb2ae11610064578063efbfb2ae1461052a578063f4ad17c61461053f578063fa750f5614610554578063fb3e3d731461057557600080fd5b8063d0b436bd146104ca578063ddac5dc1146104e0578063e06174e4146104f5578063ed6ea33a1461051557600080fd5b8063cb5c029a116100d1578063cb5c029a1461044b578063cbe342851461045e578063cdfceeba14610474578063cfc7e2da146104b557600080fd5b80639a03636c146103d7578063bc587706146103ea578063c2d416011461040f578063c9230c5d1461043657600080fd5b80632cd26d451161017a5780634dde6fbc116101495780634dde6fbc146103815780634e3c10b714610397578063640c0b36146103ac578063825b5f8d146103c257600080fd5b80632cd26d45146103055780633fe3347a14610325578063422e002814610341578063491606581461036157600080fd5b80631a98b2e0116101b65780631a98b2e01461025f5780631ba46cfd1461028157806321e32d551461029f5780632421e155146102bf57600080fd5b80630ba95909146101dd578063116191b614610205578063176de7a81461023d575b600080fd5b3480156101e957600080fd5b506101f261058b565b6040519081526020015b60405180910390f35b34801561021157600080fd5b50600a54610225906001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b34801561024957600080fd5b50610252610614565b6040516101fc9190612568565b34801561026b57600080fd5b5061027f61027a3660046125bd565b61068b565b005b34801561028d57600080fd5b50600c546001600160a01b0316610225565b3480156102ab57600080fd5b50600254610225906001600160a01b031681565b3480156102cb57600080fd5b5060408051808201909152600681527f6178656c617200000000000000000000000000000000000000000000000000006020820152610252565b34801561031157600080fd5b50600854610225906001600160a01b031681565b34801561033157600080fd5b5060006040516101fc91906126aa565b34801561034d57600080fd5b5061027f61035c3660046127e1565b6107fe565b34801561036d57600080fd5b5061027f61037c36600461289d565b6108eb565b34801561038d57600080fd5b506101f260055481565b3480156103a357600080fd5b5061025261096b565b3480156103b857600080fd5b506101f260065481565b3480156103ce57600080fd5b506101f26109f9565b61027f6103e5366004612a25565b610a80565b3480156103f657600080fd5b506103ff610a99565b60405190151581526020016101fc565b34801561041b57600080fd5b50610424610b07565b60405160ff90911681526020016101fc565b34801561044257600080fd5b50610252610b75565b61027f610459366004612a62565b610bbf565b34801561046a57600080fd5b506101f260075481565b34801561048057600080fd5b5060005461049c90600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101fc565b3480156104c157600080fd5b506101f2610ff4565b3480156104d657600080fd5b506101f260045481565b3480156104ec57600080fd5b5061022561107b565b34801561050157600080fd5b50600954610225906001600160a01b031681565b34801561052157600080fd5b506103ff61111a565b34801561053657600080fd5b506101f2611163565b34801561054b57600080fd5b506101f26111ea565b34801561056057600080fd5b506000546103ff90600160a01b900460ff1681565b34801561058157600080fd5b506101f260035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190612ad4565b9050801561060a578061060e565b6004545b91505090565b600c54604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801561065e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106869190810190612aed565b905090565b6000858560405161069d929190612b64565b604051908190038120600a54631876eed960e01b83529092506001600160a01b031690631876eed9906106e4908e908e908e908e908e9089908d908d908d90600401612b9d565b6020604051808303816000875af1158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190612bfc565b61074457604051631403112d60e21b815260040160405180910390fd5b6107f18a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525050604080516020601f8b018190048102820181019092528981528c93508b9250908a908a90819084018382808284376000920191909152508a9250611271915050565b5050505050505050505050565b600054600160a01b900460ff161561082957604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff909216919091179055602081015160019061087d9082612c9f565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b61096286868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a0181900481028201810190925288815292508891508790819084018382808284376000920191909152508792508691506112799050565b50505050505050565b6001805461097890612c1e565b80601f01602080910402602001604051908101604052809291908181526020018280546109a490612c1e565b80156109f15780601f106109c6576101008083540402835291602001916109f1565b820191906000526020600020905b8154815290600101906020018083116109d457829003601f168201915b505050505081565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa158015610a46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6a9190612ad4565b90508015610a78578061060e565b505060075490565b60405163e7a24ff960e01b815260040160405180910390fd5b60095460408051635e2c3b8360e11b815290516000926001600160a01b03169163bc5877069160048083019260209291908290030181865afa158015610ae3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190612bfc565b600c546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190612d5e565b600c54604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa15801561065e573d6000803e3d6000fd5b60095460405163bb07320560e01b81523060048201526001600160a01b039091169063bb07320590602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190612bfc565b15610c4957604051630e2f42c960e31b815260040160405180910390fd5b600960009054906101000a90046001600160a01b03166001600160a01b031663bc5877066040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc09190612bfc565b15610d975760006040518060800160405280326001600160a01b03168152602001610cf3600c546001600160a01b031690565b6001600160a01b039081168252602082018690526040918201859052600954915163849e8b9f60e01b8152929350169063849e8b9f90610d37908490600401612d81565b602060405180830381865afa158015610d54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d789190612bfc565b610d9557604051633042041f60e21b815260040160405180910390fd5b505b610d9f610ff4565b83511015610dc05760405163617ab12d60e11b815260040160405180910390fd5b610dc861058b565b83511115610de957604051630625040160e01b815260040160405180910390fd5b610df1611163565b8360a001511015610e155760405163c4d8d00d60e01b815260040160405180910390fd5b610e1d6111ea565b8360c001511015610e41576040516355a6d6a160e11b815260040160405180910390fd5b610e496109f9565b8360e001511015610e6d5760405163784f02bd60e11b815260040160405180910390fd5b6000610e868460400151856000015186606001516112f1565b905080846020015114610eac576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa158015610ef4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f189190612bfc565b15610f3657604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252855181526020808701519082015260c08601519181019190915260e08501516060820152608080860151908201526000610f798261140a565b9050610f898660a0015182611479565b610fbe610f9461107b565b60e088015160c08901518951610faa9190612de2565b610fb49190612de2565b8860a001516115a6565b60208601516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a2505050505050565b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa158015611041573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110659190612ad4565b90508015611073578061060e565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa1580156110c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ec9190612df5565b90506001600160a01b038116611115576040516306f3d63360e51b815260040160405180910390fd5b919050565b60095460405163bb07320560e01b81523060048201526000916001600160a01b03169063bb07320590602401602060405180830381865afa158015610ae3573d6000803e3d6000fd5b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa1580156111b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d49190612ad4565b905080156111e2578061060e565b505060055490565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125b9190612ad4565b90508015611269578061060e565b505060065490565b505050505050565b60006112ba83838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061161792505050565b6000546002549192506112ea91600160a81b90910467ffffffffffffffff16906001600160a01b031632846116df565b5050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018085106113345760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff161061136657604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e8916113be91600401612e12565b602060405180830381865afa1580156113db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ff9190612ad4565b9150505b9392505050565b60608061141a83600001516117d2565b61142784602001516117d2565b61143485604001516117d2565b61144186606001516117d2565b61144e876080015161186a565b604051602001611462959493929190612e43565b60408051601f198184030181529190529392505050565b600254600090611493906001600160a01b031660146118a1565b9050821561150957600b54604051630c93e3bb60e01b81526001600160a01b0390911690630c93e3bb9085906114d6903090600190879089903390600401612f30565b6000604051808303818588803b1580156114ef57600080fd5b505af1158015611503573d6000803e3d6000fd5b50505050505b7fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef60018260405161153b929190612f94565b60405180910390a1600854604051631c92115f60e01b81526001600160a01b0390911690631c92115f906115789060019085908790600401612fb9565b600060405180830381600087803b15801561159257600080fd5b505af1158015610962573d6000803e3d6000fd5b8034146115fa5760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600c54611612906001600160a01b0316338585611a30565b505050565b6116496040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b61167b6040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b60006116878482611aa5565b90835290506116968482611aa5565b602084019190915290506116aa8482611aa5565b604084019190915290506116be8482611aa5565b606084019190915290506116d28482611bd6565b5060808301525092915050565b6002546001600160a01b0384811691161461170d57604051631b495ecf60e31b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b90920416146117435760405163373bc12160e11b815260040160405180910390fd5b80516000036117655760405163820bf1e560e01b815260040160405180910390fd5b61176d61107b565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b815260040161179a929190612ff2565b600060405180830381600087803b1580156117b457600080fd5b505af11580156117c8573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b0382111561182b5760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e6765000000000060448201526064016115f1565b60405160208082526000601f5b8282101561185a5785811a826020860101536001919091019060001901611838565b5050506040818101905292915050565b805160609061187881611ce3565b8360405160200161188a92919061304f565b604051602081830303815290604052915050919050565b60608260006118b184600261307e565b6118bc906002612de2565b67ffffffffffffffff8111156118d4576118d46126d2565b6040519080825280601f01601f1916602001820160405280156118fe576020820181803683370190505b509050600360fc1b8160008151811061191957611919613095565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061194857611948613095565b60200101906001600160f81b031916908160001a905350600061196c85600261307e565b611977906001612de2565b90505b60018111156119fc577f303132333435363738396162636465660000000000000000000000000000000083600f16601081106119b8576119b8613095565b1a60f81b8282815181106119ce576119ce613095565b60200101906001600160f81b031916908160001a90535060049290921c916119f5816130ab565b905061197a565b508115611a265760405163e22e27eb60e01b815260048101869052602481018590526044016115f1565b9150505b92915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052611a9f908590611dab565b50505050565b6000808351836020611ab79190612de2565b11158015611ace5750611acb836020612de2565b83105b611b265760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b60648201526084016115f1565b600060405160206000600182038760208a0101515b83831015611b5b5780821a83860153600183019250600182039150611b3b565b50505081016040525190506001600160ff1b03811115611bbd5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e676500000000000000000060448201526064016115f1565b80611bc9856020612de2565b92509250505b9250929050565b6060600080611be58585611e0e565b8651909550909150611bf78286612de2565b11158015611c0d5750611c0a8185612de2565b84105b611c655760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b60648201526084016115f1565b606081158015611c8057604051915060208201604052611cca565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611cb9578051835260209283019201611ca1565b5050848452601f01601f1916604052505b5080611cd68387612de2565b9350935050509250929050565b606060fd8267ffffffffffffffff161015611d1657604080516001815260f884901b602082015260218101909152611a2a565b61ffff8267ffffffffffffffff1611611d6657611d3660fd60f81b612012565b611d3f83612039565b604051602001611d5092919061304f565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff1611611d9157611d88607f60f91b612012565b611d3f8361207c565b611da26001600160f81b0319612012565b611d3f836120bf565b6000611dc06001600160a01b03841683612102565b90508051600014158015611de5575080806020019051810190611de39190612bfc565b155b1561161257604051635274afe760e01b81526001600160a01b03841660048201526024016115f1565b6000806000611e1d8585612110565b9450905060006001600160f81b0319821660fd60f81b03611eb557611e428686612198565b955061ffff16905060fd8110801590611e5d575061ffff8111155b611ea95760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e67650060448201526064016115f1565b9250839150611bcf9050565b6001600160f81b03198216607f60f91b03611f3f57611ed48686612251565b955063ffffffff16905061ffff81118015611ef3575063ffffffff8111155b611ea95760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016115f1565b6001600160f81b03198083169003611fbc57611f5b8686612322565b955067ffffffffffffffff16905063ffffffff8111611ea95760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016115f1565b5060f881901c60fd8110611ea95760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e676560448201526064016115f1565b60408051600181526001600160f81b03198316602082015260218101909152606090611a2a565b6040516002808252606091906000601f5b8282101561206c5785811a82602086010153600191909101906000190161204a565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156120af5785811a82602086010153600191909101906000190161208d565b5050506024810160405292915050565b6040516008808252606091906000601f5b828210156120f25785811a8260208601015360019190910190600019016120d0565b5050506028810160405292915050565b6060611403838360006123f3565b60008083518360016121229190612de2565b111580156121395750612136836001612de2565b83105b6121855760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d60448201526064016115f1565b8383016020015180611bc9856001612de2565b60008083518360026121aa9190612de2565b111580156121c157506121be836002612de2565b83105b6122185760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016115f1565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e81035191505080846002611bc99190612de2565b60008083518360046122639190612de2565b1115801561227a5750612277836004612de2565b83105b6122d15760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016115f1565b600060405160046000600182038760208a0101515b838310156123065780821a838601536001830192506001820391506122e6565b505050016040819052601f190151905080611bc9856004612de2565b60008083518360086123349190612de2565b1115801561234b5750612348836008612de2565b83105b6123a25760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b60648201526084016115f1565b600060405160086000600182038760208a0101515b838310156123d75780821a838601536001830192506001820391506123b7565b505050016040819052601f190151905080611bc9856008612de2565b6060814710156124185760405163cd78605960e01b81523060048201526024016115f1565b600080856001600160a01b0316848660405161243491906130c2565b60006040518083038185875af1925050503d8060008114612471576040519150601f19603f3d011682016040523d82523d6000602084013e612476565b606091505b5091509150612486868383612490565b9695505050505050565b6060826124a5576124a0826124ec565b611403565b81511580156124bc57506001600160a01b0384163b155b156124e557604051639996b31560e01b81526001600160a01b03851660048201526024016115f1565b5080611403565b8051156124fc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60005b8381101561253357818101518382015260200161251b565b50506000910152565b60008151808452612554816020860160208601612518565b601f01601f19169290920160200192915050565b602081526000611403602083018461253c565b60008083601f84011261258d57600080fd5b50813567ffffffffffffffff8111156125a557600080fd5b602083019150836020828501011115611bcf57600080fd5b60008060008060008060008060008060c08b8d0312156125dc57600080fd5b8a35995060208b013567ffffffffffffffff8111156125fa57600080fd5b6126068d828e0161257b565b909a5098505060408b013567ffffffffffffffff81111561262657600080fd5b6126328d828e0161257b565b90985096505060608b013567ffffffffffffffff81111561265257600080fd5b61265e8d828e0161257b565b90965094505060808b013567ffffffffffffffff81111561267e57600080fd5b61268a8d828e0161257b565b9b9e9a9d50989b979a96999598949794969560a090950135949350505050565b60208101600283106126cc57634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561270b5761270b6126d2565b60405290565b604051610100810167ffffffffffffffff8111828210171561270b5761270b6126d2565b604051601f8201601f1916810167ffffffffffffffff8111828210171561275e5761275e6126d2565b604052919050565b600067ffffffffffffffff821115612780576127806126d2565b50601f01601f191660200190565b60006127a161279c84612766565b612735565b90508281528383830111156127b557600080fd5b828260208301376000602084830101529392505050565b6001600160a01b038116811461251557600080fd5b6000602082840312156127f357600080fd5b813567ffffffffffffffff81111561280a57600080fd5b82016060818503121561281c57600080fd5b6128246126e8565b813567ffffffffffffffff8116811461283c57600080fd5b8152602082013567ffffffffffffffff81111561285857600080fd5b8201601f8101861361286957600080fd5b6128788682356020840161278e565b6020830152506040820135915061288e826127cc565b60408101919091529392505050565b60008060008060008060006080888a0312156128b857600080fd5b87359650602088013567ffffffffffffffff8111156128d657600080fd5b6128e28a828b0161257b565b909750955050604088013567ffffffffffffffff81111561290257600080fd5b61290e8a828b0161257b565b909550935050606088013567ffffffffffffffff81111561292e57600080fd5b61293a8a828b0161257b565b989b979a50959850939692959293505050565b80356fffffffffffffffffffffffffffffffff8116811461111557600080fd5b600082601f83011261297e57600080fd5b6114038383356020850161278e565b600061010082840312156129a057600080fd5b6129a8612711565b82358152602080840135908201526040808401359082015290506129ce6060830161294d565b6060820152608082013567ffffffffffffffff8111156129ed57600080fd5b6129f98482850161296d565b60808301525060a0828101359082015260c0808301359082015260e09182013591810191909152919050565b600060208284031215612a3757600080fd5b813567ffffffffffffffff811115612a4e57600080fd5b612a5a8482850161298d565b949350505050565b600080600060608486031215612a7757600080fd5b833567ffffffffffffffff811115612a8e57600080fd5b612a9a8682870161298d565b93505060208401359150604084013567ffffffffffffffff811115612abe57600080fd5b612aca8682870161296d565b9150509250925092565b600060208284031215612ae657600080fd5b5051919050565b600060208284031215612aff57600080fd5b815167ffffffffffffffff811115612b1657600080fd5b8201601f81018413612b2757600080fd5b8051612b3561279c82612766565b818152856020838501011115612b4a57600080fd5b612b5b826020830160208601612518565b95945050505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000612bb760c083018a8c612b74565b8281036040840152612bca81898b612b74565b90508660608401528281036080840152612be5818688612b74565b9150508260a08301529a9950505050505050505050565b600060208284031215612c0e57600080fd5b8151801515811461140357600080fd5b600181811c90821680612c3257607f821691505b602082108103612c5257634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561161257806000526020600020601f840160051c81016020851015612c7f5750805b601f840160051c820191505b818110156112ea5760008155600101612c8b565b815167ffffffffffffffff811115612cb957612cb96126d2565b612ccd81612cc78454612c1e565b84612c58565b6020601f821160018114612d015760008315612ce95750848201515b600019600385901b1c1916600184901b1784556112ea565b600084815260208120601f198516915b82811015612d315787850151825560209485019460019092019101612d11565b5084821015612d4f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060208284031215612d7057600080fd5b815160ff8116811461140357600080fd5b602081526001600160a01b0382511660208201526001600160a01b0360208301511660408201526040820151606082015260006060830151608080840152612a5a60a084018261253c565b634e487b7160e01b600052601160045260246000fd5b80820180821115611a2a57611a2a612dcc565b600060208284031215612e0757600080fd5b8151611403816127cc565b60608101818360005b6003811015612e3a578151835260209283019290910190600101612e1b565b50505092915050565b60008651612e55818460208b01612518565b865190830190612e69818360208b01612518565b8651910190612e7c818360208a01612518565b8551910190612e8f818360208901612518565b8451910190612ea2818360208801612518565b01979650505050505050565b60008154612ebb81612c1e565b808552600182168015612ed55760018114612ef157612e3a565b60ff1983166020870152602082151560051b8701019350612e3a565b84600052602060002060005b83811015612f1f5781546020828a010152600182019150602081019050612efd565b870160200194505050505092915050565b6001600160a01b038616815260a060208201526000612f5260a0830187612eae565b8281036040840152612f64818761253c565b90508281036060840152612f78818661253c565b9150506001600160a01b03831660808301529695505050505050565b604081526000612fa76040830185612eae565b82810360208401526113ff818561253c565b606081526000612fcc6060830186612eae565b8281036020840152612fde818661253c565b90508281036040840152612486818561253c565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c084015261303660e084018261253c565b9150506001600160a01b03831660208301529392505050565b60008351613061818460208801612518565b835190830190613075818360208801612518565b01949350505050565b8082028115828204841417611a2a57611a2a612dcc565b634e487b7160e01b600052603260045260246000fd5b6000816130ba576130ba612dcc565b506000190190565b600082516130d4818460208701612518565b919091019291505056fea264697066735822122058854e7c9a5541a86882a10b1bf3e33c9a7590c19801ba8ce2a1da1e3ad186e364736f6c634300081a0033';

type MystikoV2AxelarERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    ) as Promise<MystikoV2AxelarERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2AxelarERC20 {
    return super.attach(address) as MystikoV2AxelarERC20;
  }
  connect(signer: Signer): MystikoV2AxelarERC20__factory {
    return super.connect(signer) as MystikoV2AxelarERC20__factory;
  }
  static readonly contractName: 'MystikoV2AxelarERC20';
  public readonly contractName: 'MystikoV2AxelarERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarERC20Interface {
    return new utils.Interface(_abi) as MystikoV2AxelarERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarERC20;
  }
}
