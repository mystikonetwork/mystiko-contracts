/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2AxelarERC20,
  MystikoV2AxelarERC20Interface,
  IMystikoBridge,
} from '../MystikoV2AxelarERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'bridgeGasLimit',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'StringsInsufficientHexLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultBridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052346101f357604051612e3738819003601f8101601f191683016001600160401b038111848210176101dd5783928291604052833981010361016081126101f35781516001600160a01b03811691908290036101f3576020830151926001600160a01b03841684036101f35761007b604082016101f8565b610087606083016101f8565b926080607f198201126101f357604051608081016001600160401b038111828210176101dd576040526080840151815260a08401516020820190815260c08501519160408101928352604060e0870151946060830195865260ff1901126101f35760408051908101969095906001600160401b038811878910176101dd5761014061012d91602099604052610100810151988981526101208201519a8b910152016101f8565b600080546001600160a81b031916909a17909955600980546001600160a01b03199081166001600160a01b03938416179091559151600355915160045591516005559151600655600792909255600892909255600a8054821693831693909317909255600c80549092169216919091179055608052604051612c2a908161020d82396080518181816103080152818161048001528181610c5d01528181610d0c015281816110350152611f0c0152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101f35756fe6080604052600436101561001257600080fd5b60003560e01c80630ba9590914610227578063116191b614610222578063176de7a81461021d5780631a98b2e0146102185780631ba46cfd1461021357806321e32d551461020e5780632421e155146102095780632cd26d45146102045780633fe3347a146101ff578063422e0028146101fa57806349160658146101f55780634dde6fbc146101f05780634e3c10b7146101eb578063640c0b36146101e6578063825b5f8d146101e15780639a03636c146101dc578063bc587706146101d7578063c2d41601146101d2578063c9230c5d146101cd578063cb5c029a146101c8578063cbe34285146101c3578063cdfceeba146101be578063cfc7e2da146101b9578063d0b436bd146101b4578063dae8d7ca146101af578063ddac5dc1146101aa578063e06174e4146101a5578063e7fcefaf146101a0578063ed6ea33a1461019b578063efbfb2ae14610196578063f4ad17c614610191578063fa750f561461018c5763fb3e3d731461018757600080fd5b611394565b61136e565b611353565b611338565b6112ba565b61129c565b611275565b611249565b6111a7565b611189565b61116e565b611143565b611125565b610d5c565b610ce6565b610c37565b610bb7565b610b79565b610aa3565b610a85565b6109ac565b6108d1565b61071c565b610673565b610551565b61052a565b6104cb565b6104a4565b610460565b6103b3565b6102e2565b61025f565b61023c565b600091031261023757565b600080fd5b346102375760003660031901126102375760206102576113cd565b604051908152f35b346102375760003660031901126102375760206001600160a01b03600b5416604051908152f35b60005b8381106102995750506000910152565b8181015183820152602001610289565b906020916102c281518092818552858086019101610286565b601f01601f1916010190565b9060206102df9281815201906102a9565b90565b34610237576000366003190112610237576040516395d89b4160e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610380576103599160009161035d575b506040519182916020835260208301906102a9565b0390f35b61037a91503d806000833e61037281836105a4565b810190611434565b38610344565b6113c1565b9181601f840112156102375782359167ffffffffffffffff8311610237576020838186019501011161023757565b346102375760c03660031901126102375760043560243567ffffffffffffffff8111610237576103e7903690600401610385565b60449291923567ffffffffffffffff81116102375761040a903690600401610385565b60649491943567ffffffffffffffff81116102375761042d903690600401610385565b916084359667ffffffffffffffff88116102375761045261045e983690600401610385565b96909560a4359861151a565b005b346102375760003660031901126102375760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102375760003660031901126102375760206001600160a01b0360025416604051908152f35b346102375760003660031901126102375761035960408051906104ee81836105a4565b600682527f6178656c617200000000000000000000000000000000000000000000000000006020830152519182916020835260208301906102a9565b346102375760003660031901126102375760206001600160a01b0360095416604051908152f35b3461023757600036600319011261023757602060405160008152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761059f57604052565b61056d565b90601f8019910116810190811067ffffffffffffffff82111761059f57604052565b604051906105d6610100836105a4565b565b604051906105d66080836105a4565b604051906105d660a0836105a4565b906105d660405192836105a4565b67ffffffffffffffff811161059f57601f01601f191660200190565b92919261062c82610604565b9161063a60405193846105a4565b829481845281830111610237578281602093846000960137010152565b6001600160a01b0381160361023757565b35906105d682610657565b346102375760203660031901126102375760043567ffffffffffffffff81116102375760606003198236030112610237576040516106b081610583565b816004013567ffffffffffffffff81168103610237578152602482013567ffffffffffffffff811161023757820191366023840112156102375760446107129161070761045e953690602460048201359101610620565b602085015201610668565b60408201526115d1565b346102375760803660031901126102375760243567ffffffffffffffff81116102375761074d903690600401610385565b60443567ffffffffffffffff81116102375761076d903690600401610385565b92906064359067ffffffffffffffff8211610237576107ac946107a461079a6107a4943690600401610385565b9590963691610620565b503691610620565b6107b4612040565b506107bd612040565b6107ff6107f36107e76107db6107d286612435565b908652866124a7565b906020860152856124a7565b906040850152846124a7565b9060608401528361271c565b909261080b8483611928565b81511015806108ba575b61081e90612533565b83610864575061083b61045e936040519260208401604052611928565b50608082015260005460a81c67ffffffffffffffff166002546001600160a01b031632916120cd565b9260405191601f82169481861560051b80888701019785890193010101905b8087106108a75750509061083b9161045e95828552601f8019910116604052611928565b9095602080918851815201960190610883565b5061081e6108c88584611928565b83109050610815565b34610237576000366003190112610237576020600554604051908152f35b90600182811c9216801561091f575b602083101461090957565b634e487b7160e01b600052602260045260246000fd5b91607f16916108fe565b60009291815491610939836108ef565b808352926001811690811561098f575060011461095557505050565b60009081526020812093945091925b838310610975575060209250010190565b600181602092949394548385870101520191019190610964565b915050602093945060ff929192191683830152151560051b010190565b346102375760003660031901126102375760405160006001546109ce816108ef565b8084529060018116908115610a615750600114610a02575b610359836109f6818503826105a4565b604051918291826102ce565b600160009081527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b808210610a47575090915081016020016109f66109e6565b919260018160209254838588010152019101909291610a2f565b60ff191660208086019190915291151560051b840190910191506109f690506109e6565b34610237576000366003190112610237576020600754604051908152f35b34610237576000366003190112610237576020610257611818565b35906fffffffffffffffffffffffffffffffff8216820361023757565b9080601f83011215610237578160206102df93359101610620565b91906101008382031261023757610b0b6105c6565b92803584526020810135602085015260408101356040850152610b3060608201610abe565b6060850152608081013567ffffffffffffffff81116102375760e092610b57918301610adb565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126102375760043567ffffffffffffffff811161023757610ba5903690600401610af6565b5063e7a24ff960e01b60005260046000fd5b3461023757600036600319011261023757600460206001600160a01b03600a541660405192838092635e2c3b8360e11b82525afa90811561038057600091610c08575b506040519015158152602090f35b610c2a915060203d602011610c30575b610c2281836105a4565b810190611493565b38610bfa565b503d610c18565b346102375760003660031901126102375760405163313ce56760e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561038057600091610ca4575b60405160ff83168152602090f35b6020813d602011610cde575b81610cbd602093836105a4565b81010312610cda575160ff81168103610cda579050610359610c96565b5080fd5b3d9150610cb0565b34610237576000366003190112610237576040516306fdde0360e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610380576103599160009161035d57506040519182916020835260208301906102a9565b60603660031901126102375760043567ffffffffffffffff811161023757610d88903690600401610af6565b6024359060443567ffffffffffffffff811161023757610dac903690600401610adb565b91610dce610dc2600a546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa90811561038057600091611106575b506110f557604051635e2c3b8360e11b8152602081600481885afa908115610380576000916110d6575b50611020575b50508051610e38611935565b1161100f578051610e476113cd565b10610ffe5760a081018051610e5a611a3f565b11610fed5760c08201918251610e6e611aa6565b11610fdc5760e081018051610e81611818565b11610fcb57610eb360408301518351610ead60608601516fffffffffffffffffffffffffffffffff1690565b91611b3b565b946020830195865103610fba5760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561038057600091610f9b575b50610f8a57610f4a610f5291610f42610f6296610f3886518a51835186519060808b015192610f1c6105e7565b9485526020850152604084015260608301526080820152611c56565b9551905190611928565b905190611928565b918351611dc9565b610f5a6119b1565b915191611ef3565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610fb4915060203d602011610c3057610c2281836105a4565b38610eef565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b6110859160209161102f6105d8565b328152917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683850152604083015260608201526040518093819263849e8b9f60e01b83526004830161187f565b0381865afa908115610380576000916110b7575b50156110a6573880610e2c565b633042041f60e21b60005260046000fd5b6110d0915060203d602011610c3057610c2281836105a4565b38611099565b6110ef915060203d602011610c3057610c2281836105a4565b38610e26565b630e2f42c960e31b60005260046000fd5b61111f915060203d602011610c3057610c2281836105a4565b38610dfc565b34610237576000366003190112610237576020600854604051908152f35b3461023757600036600319011261023757602067ffffffffffffffff60005460a81c16604051908152f35b34610237576000366003190112610237576020610257611935565b34610237576000366003190112610237576020600454604051908152f35b3461023757600036600319011261023757600a54604051634d047f8160e11b815230600482015290602090829060249082906001600160a01b03165afa9081156103805760009161121a575b508061121157506103596006545b6040519081529081906020820190565b61035990611201565b61123c915060203d602011611242575b61123481836105a4565b8101906113b2565b386111f3565b503d61122a565b346102375760003660031901126102375760206112646119b1565b6001600160a01b0360405191168152f35b346102375760003660031901126102375760206001600160a01b03600a5416604051908152f35b34610237576000366003190112610237576020600654604051908152f35b3461023757600036600319011261023757602460206001600160a01b03600a54166040519283809263bb07320560e01b82523060048301525afa80156103805761035991600091611319575b5060405190151581529081906020820190565b611332915060203d602011610c3057610c2281836105a4565b38611306565b34610237576000366003190112610237576020610257611a3f565b34610237576000366003190112610237576020610257611aa6565b3461023757600036600319011261023757602060ff60005460a01c166040519015158152f35b34610237576000366003190112610237576020600354604051908152f35b90816020910312610237575190565b6040513d6000823e3d90fd5b600a5460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa90811561038057600091611415575b50806102df575060045490565b61142e915060203d6020116112425761123481836105a4565b38611408565b6020818303126102375780519067ffffffffffffffff8211610237570181601f8201121561023757805161146781610604565b9261147560405194856105a4565b81845260208284010111610237576102df9160208085019101610286565b90816020910312610237575180151581036102375790565b908060209392818452848401376000828201840152601f01601f1916010190565b9998979390946114f46115029360a0999560c08e6115159b9a815281602082015201916114ab565b918b830360408d01526114ab565b92606089015287830360808901526114ab565b930152565b968160008a99611573869d859d6115388a9c60209a999e3691610620565b89815191012096611554610dc2600b546001600160a01b031690565b978c6040519c8d9b8c9a8b99631876eed960e01b8b5260048b016114cc565b03925af1908115610380576000916115b2575b50156115a1576107a46107a49361159e973691610620565b50565b631403112d60e21b60005260046000fd5b6115cb915060203d602011610c3057610c2281836105a4565b38611586565b60005460ff8160a01c166117b4577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff821161059f57611655826116506001546108ef565b6117c5565b602090601f83116001146117255792611690836116a2946040946116d69760009261171a575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b6105d6740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b01519050388061167b565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b81811061179c5750936040936116d69693600193836116a29810611783575b505050811b01600155611694565b015160001960f88460031b161c19169055388080611775565b92936020600181928786015181550195019301611756565b636d8f115160e11b60005260046000fd5b601f81116117d1575050565b60016000526020600020906020601f840160051c8301931061180e575b601f0160051c01905b818110611802575050565b600081556001016117f7565b90915081906117ee565b600a546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa90811561038057600091611860575b50806102df575060085490565b611879915060203d6020116112425761123481836105a4565b38611853565b60a060606102df93602084526001600160a01b0381511660208501526001600160a01b03602082015116604085015260408101518285015201519160808082015201906102a9565b634e487b7160e01b600052601160045260246000fd5b90600282018092116118eb57565b6118c7565b90600182018092116118eb57565b90602082018092116118eb57565b90600882018092116118eb57565b90600482018092116118eb57565b919082018092116118eb57565b600a54604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa9081156103805760009161197d575b50806102df575060035490565b611996915060203d6020116112425761123481836105a4565b38611970565b9081602091031261023757516102df81610657565b600a546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561038057600091611a10575b506001600160a01b038116156119ff5790565b6306f3d63360e51b60005260046000fd5b611a32915060203d602011611a38575b611a2a81836105a4565b81019061199c565b386119ec565b503d611a20565b600a54604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa90811561038057600091611a87575b50806102df575060055490565b611aa0915060203d6020116112425761123481836105a4565b38611a7a565b600a54604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa90811561038057600091611aee575b50806102df575060075490565b611b07915060203d6020116112425761123481836105a4565b38611ae1565b919060608301926000905b60038210611b2557505050565b6020806001928551815201930191019091611b18565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611c2e576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611c1d57611bee92602092611bbc610dc26000546001600160a01b031690565b91611bc760606105f6565b93845284840152604083015260405180809581946304b98e1d60e31b835260048301611b0d565b03915afa90811561038057600091611c04575090565b6102df915060203d6020116112425761123481836105a4565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b90611c5260209282815194859201610286565b0190565b6102df611d0791611d0d611c6a82516121a0565b91611d07611c7b60208301516121a0565b91611d07611c8c60408301516121a0565b611d076080611c9e60608601516121a0565b94015195611cf7611cb967ffffffffffffffff89511661258b565b60206040519982611cd38c94518092858088019101610286565b8301611ce782518093858085019101610286565b010103601f1981018952886105a4565b6040519a8b9960208b0190611c3f565b90611c3f565b03601f1981018352826105a4565b92611d6790611d596080946001600160a01b03809599989916875260a06020880152611d4b60a088016001610929565b9087820360408901526102a9565b9085820360608701526102a9565b9416910152565b6102df9160408252611d84604083016001610929565b9160208184039101526102a9565b9091611dbb6102df9360608452611dad606085016001610929565b9084820360208601526102a9565b9160408184039101526102a9565b611de9611de4610dc2610dc26002546001600160a01b031690565b6122cd565b9080611e8d575b507fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef60405180611e208482611d6e565b0390a1611e3b610dc2610dc26009546001600160a01b031690565b91823b1561023757611e679260009283604051809681958294631c92115f60e01b845260048401611d92565b03925af1801561038057611e785750565b80611e8760006105d6936105a4565b8061022c565b611ea2610dc2600c546001600160a01b031690565b90813b156102375760009060405192838092630c93e3bb60e01b825281611ecf338a8a3060048601611d1b565b03925af180156103805715611df05780611e876000611eed936105a4565b38611df0565b90913403611ffb57600080611f9e926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001694604051906001600160a01b0360208301936323b872dd60e01b8552336024850152166044830152606482015260648152611f686084826105a4565b519082865af13d15611ff3573d90611f7f82610604565b91611f8d60405193846105a4565b82523d6000602084013e5b83612b96565b8051908115159182611fd1575b5050611fb45750565b635274afe760e01b6000526001600160a01b031660045260246000fd5b611fec925090602080611fe8938301019101611493565b1590565b3880611fab565b606090611f98565b60405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d61746368000000000000000000000000006044820152606490fd5b6040519060a0820182811067ffffffffffffffff82111761059f5760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b03611d6760806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e08501906102a9565b909291926001600160a01b036120ee610dc26002546001600160a01b031690565b91160361218f5767ffffffffffffffff61212561211860005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b91160361217e5780511561216d57612141610dc2610dc26119b1565b91823b1561023757611e6792600092836040518096819582946378d60cd760e01b84526004840161207f565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b6001600160ff1b0381116121e9576040516020815290601f60005b602081106121d0575050506040810160405290565b60019083831a60208287010153019060001901906121bb565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b908160011b916001600160ff1b038116036118eb57565b9061224f82610604565b61225c60405191826105a4565b828152809261226d601f1991610604565b0190602036910137565b634e487b7160e01b600052603260045260246000fd5b80511561229a5760200190565b612277565b80516001101561229a5760210190565b90815181101561229a570160200190565b80156118eb576000190190565b806122e86122e36122de601461222e565b6118dd565b612245565b9160306122f48461228d565b5360786123008461229f565b5361231361230e601461222e565b6118f0565b6001811161233d5750612324575090565b63e22e27eb60e01b600052600452601460245260446000fd5b90600f8116601081101561229a5761238c917f3031323334353637383961626364656600000000000000000000000000000000612386921a61237f85886122af565b5360041c90565b916122c0565b612313565b1561239857565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b156123f057565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b8051602011158061249f575b61244a90612391565b604051602090910151601f60005b602081106124895750505060208101604052519061247f6001600160ff1b038311156123e9565b6102df60006118fe565b60019083831a8186015301906000190190612458565b506001612441565b919091602083018084116118eb57815110158061251d575b6124c890612391565b60405190830160200151601f60005b60208110612507575050508060206102df920160405251926125026001600160ff1b038511156123e9565b6118fe565b60019083831a81860153019060001901906124d7565b506124c861252a846118fe565b841090506124bf565b1561253a57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b67ffffffffffffffff811660fd8110156125c1575060ff6102df9116604051906001825260f81b60208201526021810160405290565b61ffff811161261157506102df611d0791611d0d61260161ffff6125fa60fd604051906001825260f81b60208201526021810160405290565b931661289f565b6040519485936020850190611c3f565b63ffffffff10612653576102df611d0791611d0d61260163ffffffff61264c60fe604051906001825260f81b60208201526021810160405290565b9316612864565b6102df611d0791611d0d61260161267f60ff604051906001825260f81b60208201526021810160405290565b92612829565b1561268c57565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b156126d757565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b919061272890836128da565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b810361278d57505061ffff9261276791612aee565b921660fd81101580612781575b61277d906126d0565b9190565b5061ffff811115612774565b607f60f91b81036127cd57505063ffffffff926127a991612a7a565b921661ffff8111806127bf575b61277d90612685565b5063ffffffff8111156127b6565b7fff0000000000000000000000000000000000000000000000000000000000000003612818575067ffffffffffffffff92612807916129af565b921661277d63ffffffff8211612685565b905060f81c61277d60fd8210612685565b6040516008815290601f60005b6008811061284b575050506028810160405290565b60019083831a6020828701015301906000190190612836565b6040516004815290601f60005b60048110612886575050506024810160405290565b60019083831a6020828701015301906000190190612871565b6040516002815290601f60005b600281106128c1575050506022810160405290565b60019083831a60208287010153019060001901906128ac565b919091600183018084116118eb578151811115908161294e575b501561290a576020836102df92010151926118f0565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b90508310386128f4565b1561295f57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600883018084116118eb576129d39082518111159081612a19575b50612958565b60405190830160200151600760005b60088110612a0357505050600881016040526017190151916102df9061190c565b60019083831a81860153019060001901906129e2565b90508410386129cd565b15612a2a57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b919091600483018084116118eb57612a9e9082518111159081612ae4575b50612a23565b60405190830160200151600360005b60048110612ace5750505060048101604052601b190151916102df9061191a565b60019083831a8186015301906000190190612aad565b9050841038612a98565b919091600283018084116118eb5781518111159081612b8c575b5015612b3c576102df90602084604051920101518060011a825360001a600182015360028101604052601d190151926118dd565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9050831038612b08565b90612bbc5750805115612bab57805190602001fd5b630a12f52160e11b60005260046000fd5b81511580612beb575b612bcd575090565b6001600160a01b0390639996b31560e01b6000521660045260246000fd5b50803b15612bc556fea26469706673582212209834bdd79f4337f37fa594964d2e5f07ef64d423fd2991024a009ee11cc5881564736f6c634300081a0033';

type MystikoV2AxelarERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    ) as Promise<MystikoV2AxelarERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2AxelarERC20 {
    return super.attach(address) as MystikoV2AxelarERC20;
  }
  connect(signer: Signer): MystikoV2AxelarERC20__factory {
    return super.connect(signer) as MystikoV2AxelarERC20__factory;
  }
  static readonly contractName: 'MystikoV2AxelarERC20';
  public readonly contractName: 'MystikoV2AxelarERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarERC20Interface {
    return new utils.Interface(_abi) as MystikoV2AxelarERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarERC20;
  }
}
