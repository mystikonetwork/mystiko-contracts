/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2AxelarERC20, MystikoV2AxelarERC20Interface } from '../MystikoV2AxelarERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_daoCenter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_txFeeProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'DepositAmountLimits',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'MinBridgeFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'MinExecutorFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'PeerMinExecutorFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'PeerMinRollupFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'queryDepositFee',
    outputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'feeAmount',
            type: 'uint256',
          },
          {
            internalType: 'address',
            name: 'feePool',
            type: 'address',
          },
        ],
        internalType: 'struct QueryFeeResponse',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    name: 'setAxelarGasReceiver',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txFeeProxy',
    outputs: [
      {
        internalType: 'contract IFeeQuery',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'updateDepositAmountLimits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040525f80546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801562000036575f80fd5b5060405162003973380380620039738339810160408190526200005991620000c1565b600180546001600160a01b03199081166001600160a01b03948516179091556002805482169584169590951790945560078054851691831691909117905560108054909316911617905562000126565b6001600160a01b0381168114620000be575f80fd5b50565b5f805f8060808587031215620000d5575f80fd5b8451620000e281620000a9565b6020860151909450620000f581620000a9565b60408601519093506200010881620000a9565b60608601519092506200011b81620000a9565b939692955090935050565b61383f80620001345f395ff3fe6080604052600436106102ab575f3560e01c80637d2c852011610165578063dd757c34116100c6578063ea0cde851161007c578063ed6ea33a11610062578063ed6ea33a1461076e578063efbfb2ae14610785578063f4ad17c614610799575f80fd5b8063ea0cde8514610731578063ec571c6a14610750575f80fd5b8063df420737116100ac578063df420737146106d4578063e19abef8146106f3578063e8183c4414610712575f80fd5b8063dd757c34146106a3578063ddac5dc1146106b7575f80fd5b8063b1c394221161011b578063c9230c5d11610101578063c9230c5d1461063b578063cdfceeba1461064f578063cfc7e2da1461068f575f80fd5b8063b1c39422146105e6578063c2d4160114610615575f80fd5b80639a03636c1161014b5780639a03636c14610595578063a3bc64f2146105a8578063a49f78c4146105c7575f80fd5b80637d2c852014610562578063825b5f8d14610581575f80fd5b806321e32d551161020f57806349160658116101c5578063521ff057116101ab578063521ff057146105105780635898a0a81461052f5780635e10b2b714610543575f80fd5b806349160658146104dd5780634e3c10b7146104fc575f80fd5b80632cd26d45116101f55780632cd26d451461048557806330f49cac146104a45780633fe3347a146104c3575f80fd5b806321e32d55146104215780632421e15514610440575f80fd5b8063176de7a8116102645780631a98b2e01161024a5780631a98b2e0146103c65780631ba46cfd146103e55780631f02d71514610402575f80fd5b8063176de7a81461038657806319e75d6e146103a7575f80fd5b80630ba95909116102945780630ba959091461030d578063116191b61461032b578063153dc45014610367575f80fd5b806301dbf19f146102af5780630ab62f1b146102c5575b5f80fd5b3480156102ba575f80fd5b506102c36107ad565b005b3480156102d0575f80fd5b506102e46102df366004612d2c565b610897565b60408051825181526020928301516001600160a01b031692810192909252015b60405180910390f35b348015610318575f80fd5b506009545b604051908152602001610304565b348015610336575f80fd5b50600e5461034f9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610304565b348015610372575f80fd5b506102c3610381366004612d2c565b610955565b348015610391575f80fd5b5061039a610a23565b6040516103049190612d90565b3480156103b2575f80fd5b506102c36103c1366004612d2c565b610a96565b3480156103d1575f80fd5b506102c36103e0366004612de0565b610b5c565b3480156103f0575f80fd5b506010546001600160a01b031661034f565b34801561040d575f80fd5b5060015461034f906001600160a01b031681565b34801561042c575f80fd5b5060055461034f906001600160a01b031681565b34801561044b575f80fd5b5060408051808201909152600681527f6178656c61720000000000000000000000000000000000000000000000000000602082015261039a565b348015610490575f80fd5b5060065461034f906001600160a01b031681565b3480156104af575f80fd5b506102c36104be366004612ec7565b610ccd565b3480156104ce575f80fd5b505f6040516103049190612ee2565b3480156104e8575f80fd5b506102c36104f7366004612f08565b610dac565b348015610507575f80fd5b5061039a610e2a565b34801561051b575f80fd5b506102c361052a366004612d2c565b610eb6565b34801561053a575f80fd5b50600c5461031d565b34801561054e575f80fd5b506102c361055d366004612d2c565b610fd2565b34801561056d575f80fd5b506102c361057c366004613075565b611099565b34801561058c575f80fd5b50600d5461031d565b6102c36105a336600461312d565b611196565b3480156105b3575f80fd5b506102c36105c2366004612ec7565b6113b5565b3480156105d2575f80fd5b5060075461034f906001600160a01b031681565b3480156105f1575f80fd5b505f5461060590600160a01b900460ff1681565b6040519015158152602001610304565b348015610620575f80fd5b50610629611469565b60405160ff9091168152602001610304565b348015610646575f80fd5b5061039a6114d4565b34801561065a575f80fd5b5060035461067690600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610304565b34801561069a575f80fd5b5060085461031d565b3480156106ae575f80fd5b506102c361151b565b3480156106c2575f80fd5b506003546001600160a01b031661034f565b3480156106df575f80fd5b506102c36106ee366004612ec7565b6115f9565b3480156106fe575f80fd5b506102c361070d366004612ec7565b6116ad565b34801561071d575f80fd5b506102c361072c3660046131e6565b611761565b34801561073c575f80fd5b506102c361074b366004613213565b61185b565b34801561075b575f80fd5b505f5461034f906001600160a01b031681565b348015610779575f80fd5b50600e5460ff16610605565b348015610790575f80fd5b50600a5461031d565b3480156107a4575f80fd5b50600b5461031d565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156107f4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610818919061322e565b6001600160a01b03161461083f5760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261088d92900460ff161515815260200190565b60405180910390a1565b604080518082019091525f80825260208201525f60405180604001604052806108c86010546001600160a01b031690565b6001600160a01b039081168252602091820186905260075460405163474aa58960e01b8152845183166004820152928401516024840152929350919091169063474aa589906044016040805180830381865afa15801561092a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094e9190613249565b9392505050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa15801561099c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c0919061322e565b6001600160a01b0316146109e75760405163177bc95160e11b815260040160405180910390fd5b600c8190556040518181527f14988234d3e50a12aeec2d6ee595b70c2fae163caff28baab5802b122bf2a753906020015b60405180910390a150565b601054604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b41916004808301925f9291908290030181865afa158015610a6a573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f19168201604052610a91919081019061329d565b905090565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610add573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b01919061322e565b6001600160a01b031614610b285760405163177bc95160e11b815260040160405180910390fd5b600a8190556040518181527e91f5f5db3092e39ecb701218d4af20b7571e0429595937c334f3acd14fe2fe90602001610a18565b5f8585604051610b6d929190613306565b604051908190038120600e54631876eed960e01b835290925061010090046001600160a01b031690631876eed990610bb9908e908e908e908e908e9089908d908d908d9060040161333d565b6020604051808303815f875af1158015610bd5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bf9919061339b565b610c1657604051631403112d60e21b815260040160405180910390fd5b610cc08a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284375f9201919091525050604080516020601f8b018190048102820181019092528981528c93508b9250908a908a90819084018382808284375f920191909152508a925061192e915050565b5050505050505050505050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610d14573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d38919061322e565b6001600160a01b031614610d5f5760405163177bc95160e11b815260040160405180910390fd5b5f80546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b190602001610a18565b610e2186868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8a0181900481028201810190925288815292508891508790819084018382808284375f920191909152508792508691506119369050565b50505050505050565b60048054610e37906133b6565b80601f0160208091040260200160405190810160405280929190818152602001828054610e63906133b6565b8015610eae5780601f10610e8557610100808354040283529160200191610eae565b820191905f5260205f20905b815481529060010190602001808311610e9157829003601f168201915b505050505081565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610efd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f21919061322e565b6001600160a01b031614610f485760405163177bc95160e11b815260040160405180910390fd5b805f03610f9d576040516314e8955b60e21b815260206004820152601760248201527f70656572206d696e696d616c20726f6c6c75702066656500000000000000000060448201526064015b60405180910390fd5b600d8190556040518181527f878075a8e8aa1c7c15e6932752520f7812bf5744785e6df605373729da41554590602001610a18565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611019573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061103d919061322e565b6001600160a01b0316146110645760405163177bc95160e11b815260040160405180910390fd5b600b8190556040518181527f88d210dfa198f7519579294721f90c771153a7b49101eefb95147037cc8ce48190602001610a18565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156110e0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611104919061322e565b6001600160a01b03161461112b5760405163177bc95160e11b815260040160405180910390fd5b600380547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff86160217905560046111718382613433565b50600580546001600160a01b0319166001600160a01b03929092169190911790555050565b600e5460ff16156111ba57604051630e2f42c960e31b815260040160405180910390fd5b600854815110156111de5760405163617ab12d60e11b815260040160405180910390fd5b6009548151111561120257604051630625040160e01b815260040160405180910390fd5b600a548160a0015110156112295760405163c4d8d00d60e01b815260040160405180910390fd5b600c548160c001511015611250576040516355a6d6a160e11b815260040160405180910390fd5b600d548160e0015110156112775760405163784f02bd60e11b815260040160405180910390fd5b5f61128e8260400151835f015184606001516119ac565b9050808260200151146112b4576040516301bfaa2560e51b815260040160405180910390fd5b6112bd33611ac0565b156112db57604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252835181526020808501519082015260c08401519181019190915260e08301516060820152608080840151908201525f61131d82611b49565b905061132d8460a0015182611bb7565b5f61133a855f0151610897565b600354602082015160e088015160c08901518951949550611381946001600160a01b039094169361136b9190613503565b6113759190613503565b845160a08a0151611cd8565b60208501516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe905f90a25050505050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156113fc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611420919061322e565b6001600160a01b0316146114475760405163177bc95160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6010546040805163313ce56760e01b815290515f926001600160a01b03169163313ce5679160048083019260209291908290030181865afa1580156114b0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a919190613516565b601054604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde03916004808301925f9291908290030181865afa158015610a6a573d5f803e3d5ffd5b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611562573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611586919061322e565b6001600160a01b0316146115ad5760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161088d91600160a01b90910460ff161515815260200190565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611640573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611664919061322e565b6001600160a01b03161461168b5760405163177bc95160e11b815260040160405180910390fd5b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156116f4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611718919061322e565b6001600160a01b03161461173f5760405163177bc95160e11b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156117a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117cc919061322e565b6001600160a01b0316146117f35760405163177bc95160e11b815260040160405180910390fd5b8181111561181457604051636003e82160e11b815260040160405180910390fd5b6009829055600881905560408051838152602081018390527f7633004c7a229869aeea10db4ff3e57e3b1534aeb2c9e72c5db25f965895c330910160405180910390a15050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156118a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118c6919061322e565b6001600160a01b0316146118ed5760405163177bc95160e11b815260040160405180910390fd5b600e805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e0990602001610a18565b505050505050565b5f61197583838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250611d5792505050565b6003546005549192506119a591600160a01b90910467ffffffffffffffff16906001600160a01b03163284611e16565b5050505050565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018085106119ee5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff1610611a2057604051633bbde0bf60e21b815260040160405180910390fd5b60025460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e891611a7891600401613536565b602060405180830381865afa158015611a93573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ab79190613566565b95945050505050565b5f8054600160a01b900460ff16611ad857505f919050565b5f5460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d90602401602060405180830381865afa158015611b1f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b43919061339b565b92915050565b606080611b58835f0151611f00565b611b658460200151611f00565b611b728560400151611f00565b611b7f8660600151611f00565b611b8c8760800151611f96565b604051602001611ba095949392919061357d565b60408051601f198184030181529190529392505050565b6005545f90611bd0906001600160a01b03166014611fcd565b90508215611c4157600f54604051630c93e3bb60e01b81526001600160a01b0390911690630c93e3bb908590611c129030906004908790899033908401613660565b5f604051808303818588803b158015611c29575f80fd5b505af1158015611c3b573d5f803e3d5ffd5b50505050505b7fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef600482604051611c739291906136be565b60405180910390a1600654604051631c92115f60e01b81526001600160a01b0390911690631c92115f90611caf906004908590879083016136e2565b5f604051808303815f87803b158015611cc6575f80fd5b505af1158015610e21573d5f803e3d5ffd5b803414611d275760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d61746368000000000000000000000000006044820152606401610f94565b601054611d3f906001600160a01b0316338786612170565b6010546119a5906001600160a01b0316338685612170565b611d856040518060a001604052805f81526020015f81526020015f81526020015f8152602001606081525090565b611db36040518060a001604052805f81526020015f81526020015f81526020015f8152602001606081525090565b5f611dbe84826121e5565b9083529050611dcd84826121e5565b60208401919091529050611de184826121e5565b60408401919091529050611df584826121e5565b60608401919091529050611e098482612313565b5060808301525092915050565b6005546001600160a01b03848116911614611e4457604051631440e07960e11b815260040160405180910390fd5b60035467ffffffffffffffff858116600160a01b9092041614611e7a57604051633876304f60e21b815260040160405180910390fd5b80515f03611e9b5760405163820bf1e560e01b815260040160405180910390fd5b6003546040516378d60cd760e01b81526001600160a01b03909116906378d60cd790611ecd9084908690600401613724565b5f604051808303815f87803b158015611ee4575f80fd5b505af1158015611ef6573d5f803e3d5ffd5b5050505050505050565b60606001600160ff1b03821115611f595760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606401610f94565b60405160208082525f601f5b82821015611f865785811a82602086010153600191909101905f1901611f65565b5050506040818101905292915050565b8051606090611fa48161241f565b83604051602001611fb6929190613780565b604051602081830303815290604052915050919050565b60605f611fdb8360026137ae565b611fe6906002613503565b67ffffffffffffffff811115611ffe57611ffe612fa4565b6040519080825280601f01601f191660200182016040528015612028576020820181803683370190505b509050600360fc1b815f81518110612042576120426137c5565b60200101906001600160f81b03191690815f1a905350600f60fb1b81600181518110612070576120706137c5565b60200101906001600160f81b03191690815f1a9053505f6120928460026137ae565b61209d906001613503565b90505b6001811115612121577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106120de576120de6137c5565b1a60f81b8282815181106120f4576120f46137c5565b60200101906001600160f81b03191690815f1a90535060049490941c9361211a816137d9565b90506120a0565b50831561094e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610f94565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526121df9085906124ec565b50505050565b5f8083518360206121f69190613503565b1115801561220d575061220a836020613503565b83105b6122655760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608401610f94565b5f60405160205f600182038760208a0101515b838310156122985780821a83860153600183019250600182039150612278565b50505081016040525190506001600160ff1b038111156122fa5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606401610f94565b80612306856020613503565b92509250505b9250929050565b60605f8061232185856125d5565b86519095509091506123338286613503565b1115801561234957506123468185613503565b84105b6123a15760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608401610f94565b6060811580156123bc57604051915060208201604052612406565b6040519150601f8316801560200281840101848101888315602002848c0101015b818310156123f55780518352602092830192016123dd565b5050848452601f01601f1916604052505b50806124128387613503565b9350935050509250929050565b606060fd8267ffffffffffffffff16101561245257604080516001815260f884901b602082015260218101909152611b43565b61ffff8267ffffffffffffffff16116124a25761247260fd60f81b6127d6565b61247b836127fd565b60405160200161248c929190613780565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff16116124cd576124c4607f60f91b6127d6565b61247b8361283e565b6124de6001600160f81b03196127d6565b61247b8361287f565b919050565b5f612540826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166128c09092919063ffffffff16565b8051909150156125d0578080602001905181019061255e919061339b565b6125d05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610f94565b505050565b5f805f6125e285856128d6565b945090505f6001600160f81b0319821660fd60f81b0361267957612606868661295d565b955061ffff16905060fd8110801590612621575061ffff8111155b61266d5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606401610f94565b925083915061230c9050565b6001600160f81b03198216607f60f91b03612703576126988686612a13565b955063ffffffff16905061ffff811180156126b7575063ffffffff8111155b61266d5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610f94565b6001600160f81b031980831690036127805761271f8686612ae1565b955067ffffffffffffffff16905063ffffffff811161266d5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610f94565b5060f881901c60fd811061266d5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610f94565b60408051600181526001600160f81b03198316602082015260218101909152606090611b43565b6040516002808252606091905f601f5b8282101561282e5785811a82602086010153600191909101905f190161280d565b5050506022810160405292915050565b6040516004808252606091905f601f5b8282101561286f5785811a82602086010153600191909101905f190161284e565b5050506024810160405292915050565b6040516008808252606091905f601f5b828210156128b05785811a82602086010153600191909101905f190161288f565b5050506028810160405292915050565b60606128ce84845f85612baf565b949350505050565b5f8083518360016128e79190613503565b111580156128fe57506128fb836001613503565b83105b61294a5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152606401610f94565b8383016020015180612306856001613503565b5f80835183600261296e9190613503565b111580156129855750612982836002613503565b83105b6129dc5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610f94565b5f604051846020870101518060011a8253805f1a60018301535060028101604052601e810351915050808460026123069190613503565b5f808351836004612a249190613503565b11158015612a3b5750612a38836004613503565b83105b612a925760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610f94565b5f60405160045f600182038760208a0101515b83831015612ac55780821a83860153600183019250600182039150612aa5565b505050016040819052601f190151905080612306856004613503565b5f808351836008612af29190613503565b11158015612b095750612b06836008613503565b83105b612b605760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610f94565b5f60405160085f600182038760208a0101515b83831015612b935780821a83860153600183019250600182039150612b73565b505050016040819052601f190151905080612306856008613503565b606082471015612c275760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610f94565b6001600160a01b0385163b612c7e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610f94565b5f80866001600160a01b03168587604051612c9991906137ee565b5f6040518083038185875af1925050503d805f8114612cd3576040519150601f19603f3d011682016040523d82523d5f602084013e612cd8565b606091505b5091509150612ce8828286612cf3565b979650505050505050565b60608315612d0257508161094e565b825115612d125782518084602001fd5b8160405162461bcd60e51b8152600401610f949190612d90565b5f60208284031215612d3c575f80fd5b5035919050565b5f5b83811015612d5d578181015183820152602001612d45565b50505f910152565b5f8151808452612d7c816020860160208601612d43565b601f01601f19169290920160200192915050565b602081525f61094e6020830184612d65565b5f8083601f840112612db2575f80fd5b50813567ffffffffffffffff811115612dc9575f80fd5b60208301915083602082850101111561230c575f80fd5b5f805f805f805f805f8060c08b8d031215612df9575f80fd5b8a35995060208b013567ffffffffffffffff80821115612e17575f80fd5b612e238e838f01612da2565b909b50995060408d0135915080821115612e3b575f80fd5b612e478e838f01612da2565b909950975060608d0135915080821115612e5f575f80fd5b612e6b8e838f01612da2565b909750955060808d0135915080821115612e83575f80fd5b50612e908d828e01612da2565b9150809450508092505060a08b013590509295989b9194979a5092959850565b6001600160a01b0381168114612ec4575f80fd5b50565b5f60208284031215612ed7575f80fd5b813561094e81612eb0565b6020810160028310612f0257634e487b7160e01b5f52602160045260245ffd5b91905290565b5f805f805f805f6080888a031215612f1e575f80fd5b87359650602088013567ffffffffffffffff80821115612f3c575f80fd5b612f488b838c01612da2565b909850965060408a0135915080821115612f60575f80fd5b612f6c8b838c01612da2565b909650945060608a0135915080821115612f84575f80fd5b50612f918a828b01612da2565b989b979a50959850939692959293505050565b634e487b7160e01b5f52604160045260245ffd5b604051610100810167ffffffffffffffff81118282101715612fdc57612fdc612fa4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561300b5761300b612fa4565b604052919050565b5f67ffffffffffffffff82111561302c5761302c612fa4565b50601f01601f191660200190565b5f61304c61304784613013565b612fe2565b905082815283838301111561305f575f80fd5b828260208301375f602084830101529392505050565b5f805f60608486031215613087575f80fd5b833567ffffffffffffffff808216821461309f575f80fd5b909350602085013590808211156130b4575f80fd5b508401601f810186136130c5575f80fd5b6130d48682356020840161303a565b92505060408401356130e581612eb0565b809150509250925092565b80356fffffffffffffffffffffffffffffffff811681146124e7575f80fd5b5f82601f83011261311e575f80fd5b61094e8383356020850161303a565b5f6020828403121561313d575f80fd5b813567ffffffffffffffff80821115613154575f80fd5b908301906101008286031215613168575f80fd5b613170612fb8565b823581526020830135602082015260408301356040820152613194606084016130f0565b60608201526080830135828111156131aa575f80fd5b6131b68782860161310f565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b5f80604083850312156131f7575f80fd5b50508035926020909101359150565b8015158114612ec4575f80fd5b5f60208284031215613223575f80fd5b813561094e81613206565b5f6020828403121561323e575f80fd5b815161094e81612eb0565b5f60408284031215613259575f80fd5b6040516040810181811067ffffffffffffffff8211171561327c5761327c612fa4565b60405282518152602083015161329181612eb0565b60208201529392505050565b5f602082840312156132ad575f80fd5b815167ffffffffffffffff8111156132c3575f80fd5b8201601f810184136132d3575f80fd5b80516132e161304782613013565b8181528560208385010111156132f5575f80fd5b611ab7826020830160208601612d43565b818382375f9101908152919050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b89815260c060208201525f61335660c083018a8c613315565b828103604084015261336981898b613315565b90508660608401528281036080840152613384818688613315565b9150508260a08301529a9950505050505050505050565b5f602082840312156133ab575f80fd5b815161094e81613206565b600181811c908216806133ca57607f821691505b6020821081036133e857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156125d0575f81815260208120601f850160051c810160208610156134145750805b601f850160051c820191505b8181101561192e57828155600101613420565b815167ffffffffffffffff81111561344d5761344d612fa4565b6134618161345b84546133b6565b846133ee565b602080601f831160018114613494575f841561347d5750858301515b5f19600386901b1c1916600185901b17855561192e565b5f85815260208120601f198616915b828110156134c2578886015182559484019460019091019084016134a3565b50858210156134df57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b80820180821115611b4357611b436134ef565b5f60208284031215613526575f80fd5b815160ff8116811461094e575f80fd5b6060810181835f5b600381101561355d57815183526020928301929091019060010161353e565b50505092915050565b5f60208284031215613576575f80fd5b5051919050565b5f865161358e818460208b01612d43565b8651908301906135a2818360208b01612d43565b86519101906135b5818360208a01612d43565b85519101906135c8818360208901612d43565b84519101906135db818360208801612d43565b01979650505050505050565b5f81546135f3816133b6565b808552602060018381168015613610576001811461362a57613655565b60ff1985168884015283151560051b880183019550613655565b865f52825f205f5b8581101561364d5781548a8201860152908301908401613632565b890184019650505b505050505092915050565b5f6001600160a01b03808816835260a0602084015261368260a08401886135e7565b83810360408501526136948188612d65565b905083810360608501526136a88187612d65565b9250508084166080840152509695505050505050565b604081525f6136d060408301856135e7565b8281036020840152611ab78185612d65565b606081525f6136f460608301866135e7565b82810360208401526137068186612d65565b9050828103604084015261371a8185612d65565b9695505050505050565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201525f608084015160a060c084015261376760e0840182612d65565b9150506001600160a01b03831660208301529392505050565b5f8351613791818460208801612d43565b8351908301906137a5818360208801612d43565b01949350505050565b8082028115828204841417611b4357611b436134ef565b634e487b7160e01b5f52603260045260245ffd5b5f816137e7576137e76134ef565b505f190190565b5f82516137ff818460208701612d43565b919091019291505056fea2646970667358221220f7931ea573e7c12de324862c13a4250816824389cb0921264040d9f780e1161d64736f6c63430008140033';

type MystikoV2AxelarERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    _txFeeProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _daoCenter,
      _txFeeProxy,
      overrides || {},
    ) as Promise<MystikoV2AxelarERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    _txFeeProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, _daoCenter, _txFeeProxy, overrides || {});
  }
  attach(address: string): MystikoV2AxelarERC20 {
    return super.attach(address) as MystikoV2AxelarERC20;
  }
  connect(signer: Signer): MystikoV2AxelarERC20__factory {
    return super.connect(signer) as MystikoV2AxelarERC20__factory;
  }
  static readonly contractName: 'MystikoV2AxelarERC20';
  public readonly contractName: 'MystikoV2AxelarERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarERC20Interface {
    return new utils.Interface(_abi) as MystikoV2AxelarERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarERC20;
  }
}
