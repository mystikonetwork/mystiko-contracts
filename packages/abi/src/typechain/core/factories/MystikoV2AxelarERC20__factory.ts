/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2AxelarERC20,
  MystikoV2AxelarERC20Interface,
  IMystikoBridge,
} from '../MystikoV2AxelarERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'StringsInsufficientHexLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052346101df57604051612d5338819003601f8101601f191683016001600160401b038111848210176101c95783928291604052833981010361014081126101df5781516001600160a01b03811691908290036101df576020830151926001600160a01b03841684036101df5761007b604082016101e4565b610087606083016101e4565b926060607f198201126101df57604051606081016001600160401b038111828210176101c9576040526080840151815260a08401519060208101918252604060c08601519381830194855260df1901126101df5760408051908101959094906001600160401b038711868810176101c95761012061011f9160209860405260e081015197888152610100820151998a910152016101e4565b600080546001600160a81b031916909917909855600880546001600160a01b03199081166001600160a01b039384161790915591516003559151600455915160055560069290925560079290925560098054831693821693909317909255600b805490911691909216179055608052604051612b5a90816101f982396080518181816102e80152818161046001528181610c3d01528181610cec015281816110150152611e3c0152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101df5756fe6080604052600436101561001257600080fd5b60003560e01c80630ba9590914610207578063116191b614610202578063176de7a8146101fd5780631a98b2e0146101f85780631ba46cfd146101f357806321e32d55146101ee5780632421e155146101e95780632cd26d45146101e45780633fe3347a146101df578063422e0028146101da57806349160658146101d55780634dde6fbc146101d05780634e3c10b7146101cb578063640c0b36146101c6578063825b5f8d146101c15780639a03636c146101bc578063bc587706146101b7578063c2d41601146101b2578063c9230c5d146101ad578063cb5c029a146101a8578063cbe34285146101a3578063cdfceeba1461019e578063cfc7e2da14610199578063d0b436bd14610194578063ddac5dc11461018f578063e06174e41461018a578063ed6ea33a14610185578063efbfb2ae14610180578063f4ad17c61461017b578063fa750f56146101765763fb3e3d731461017157600080fd5b6112b4565b61128e565b611273565b611258565b6111da565b6111b3565b611187565b611169565b61114e565b611123565b611105565b610d3c565b610cc6565b610c17565b610b97565b610b59565b610a83565b610a65565b61098c565b6108b1565b6106fc565b610653565b610531565b61050a565b6104ab565b610484565b610440565b610393565b6102c2565b61023f565b61021c565b600091031261021757565b600080fd5b346102175760003660031901126102175760206102376112ed565b604051908152f35b346102175760003660031901126102175760206001600160a01b03600a5416604051908152f35b60005b8381106102795750506000910152565b8181015183820152602001610269565b906020916102a281518092818552858086019101610266565b601f01601f1916010190565b9060206102bf928181520190610289565b90565b34610217576000366003190112610217576040516395d89b4160e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610360576103399160009161033d575b50604051918291602083526020830190610289565b0390f35b61035a91503d806000833e6103528183610584565b810190611364565b38610324565b6112e1565b9181601f840112156102175782359167ffffffffffffffff8311610217576020838186019501011161021757565b346102175760c03660031901126102175760043560243567ffffffffffffffff8111610217576103c7903690600401610365565b60449291923567ffffffffffffffff8111610217576103ea903690600401610365565b60649491943567ffffffffffffffff81116102175761040d903690600401610365565b916084359667ffffffffffffffff88116102175761043261043e983690600401610365565b96909560a4359861144a565b005b346102175760003660031901126102175760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102175760003660031901126102175760206001600160a01b0360025416604051908152f35b346102175760003660031901126102175761033960408051906104ce8183610584565b600682527f6178656c61720000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610289565b346102175760003660031901126102175760206001600160a01b0360085416604051908152f35b3461021757600036600319011261021757602060405160008152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761057f57604052565b61054d565b90601f8019910116810190811067ffffffffffffffff82111761057f57604052565b604051906105b661010083610584565b565b604051906105b6608083610584565b604051906105b660a083610584565b906105b66040519283610584565b67ffffffffffffffff811161057f57601f01601f191660200190565b92919261060c826105e4565b9161061a6040519384610584565b829481845281830111610217578281602093846000960137010152565b6001600160a01b0381160361021757565b35906105b682610637565b346102175760203660031901126102175760043567ffffffffffffffff811161021757606060031982360301126102175760405161069081610563565b816004013567ffffffffffffffff81168103610217578152602482013567ffffffffffffffff811161021757820191366023840112156102175760446106f2916106e761043e953690602460048201359101610600565b602085015201610648565b6040820152611501565b346102175760803660031901126102175760243567ffffffffffffffff81116102175761072d903690600401610365565b60443567ffffffffffffffff81116102175761074d903690600401610365565b92906064359067ffffffffffffffff82116102175761078c9461078461077a610784943690600401610365565b9590963691610600565b503691610600565b610794611f70565b5061079d611f70565b6107df6107d36107c76107bb6107b286612365565b908652866123d7565b906020860152856123d7565b906040850152846123d7565b9060608401528361264c565b90926107eb8483611858565b815110158061089a575b6107fe90612463565b83610844575061081b61043e936040519260208401604052611858565b50608082015260005460a81c67ffffffffffffffff166002546001600160a01b03163291611ffd565b9260405191601f82169481861560051b80888701019785890193010101905b8087106108875750509061081b9161043e95828552601f8019910116604052611858565b9095602080918851815201960190610863565b506107fe6108a88584611858565b831090506107f5565b34610217576000366003190112610217576020600554604051908152f35b90600182811c921680156108ff575b60208310146108e957565b634e487b7160e01b600052602260045260246000fd5b91607f16916108de565b60009291815491610919836108cf565b808352926001811690811561096f575060011461093557505050565b60009081526020812093945091925b838310610955575060209250010190565b600181602092949394548385870101520191019190610944565b915050602093945060ff929192191683830152151560051b010190565b346102175760003660031901126102175760405160006001546109ae816108cf565b8084529060018116908115610a4157506001146109e2575b610339836109d681850382610584565b604051918291826102ae565b600160009081527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b808210610a27575090915081016020016109d66109c6565b919260018160209254838588010152019101909291610a0f565b60ff191660208086019190915291151560051b840190910191506109d690506109c6565b34610217576000366003190112610217576020600654604051908152f35b34610217576000366003190112610217576020610237611748565b35906fffffffffffffffffffffffffffffffff8216820361021757565b9080601f83011215610217578160206102bf93359101610600565b91906101008382031261021757610aeb6105a6565b92803584526020810135602085015260408101356040850152610b1060608201610a9e565b6060850152608081013567ffffffffffffffff81116102175760e092610b37918301610abb565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126102175760043567ffffffffffffffff811161021757610b85903690600401610ad6565b5063e7a24ff960e01b60005260046000fd5b3461021757600036600319011261021757600460206001600160a01b036009541660405192838092635e2c3b8360e11b82525afa90811561036057600091610be8575b506040519015158152602090f35b610c0a915060203d602011610c10575b610c028183610584565b8101906113c3565b38610bda565b503d610bf8565b346102175760003660031901126102175760405163313ce56760e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa90811561036057600091610c84575b60405160ff83168152602090f35b6020813d602011610cbe575b81610c9d60209383610584565b81010312610cba575160ff81168103610cba579050610339610c76565b5080fd5b3d9150610c90565b34610217576000366003190112610217576040516306fdde0360e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610360576103399160009161033d5750604051918291602083526020830190610289565b60603660031901126102175760043567ffffffffffffffff811161021757610d68903690600401610ad6565b6024359060443567ffffffffffffffff811161021757610d8c903690600401610abb565b91610dae610da26009546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa908115610360576000916110e6575b506110d557604051635e2c3b8360e11b8152602081600481885afa908115610360576000916110b6575b50611000575b50508051610e18611865565b11610fef578051610e276112ed565b10610fde5760a081018051610e3a61196f565b11610fcd5760c08201918251610e4e6119d6565b11610fbc5760e081018051610e61611748565b11610fab57610e9360408301518351610e8d60608601516fffffffffffffffffffffffffffffffff1690565b91611a6b565b946020830195865103610f9a5760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561036057600091610f7b575b50610f6a57610f2a610f3291610f22610f4296610f1886518a51835186519060808b015192610efc6105c7565b9485526020850152604084015260608301526080820152611b86565b9551905190611858565b905190611858565b918351611cf9565b610f3a6118e1565b915191611e23565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610f94915060203d602011610c1057610c028183610584565b38610ecf565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b6110659160209161100f6105b8565b328152917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683850152604083015260608201526040518093819263849e8b9f60e01b8352600483016117af565b0381865afa90811561036057600091611097575b5015611086573880610e0c565b633042041f60e21b60005260046000fd5b6110b0915060203d602011610c1057610c028183610584565b38611079565b6110cf915060203d602011610c1057610c028183610584565b38610e06565b630e2f42c960e31b60005260046000fd5b6110ff915060203d602011610c1057610c028183610584565b38610ddc565b34610217576000366003190112610217576020600754604051908152f35b3461021757600036600319011261021757602067ffffffffffffffff60005460a81c16604051908152f35b34610217576000366003190112610217576020610237611865565b34610217576000366003190112610217576020600454604051908152f35b346102175760003660031901126102175760206111a26118e1565b6001600160a01b0360405191168152f35b346102175760003660031901126102175760206001600160a01b0360095416604051908152f35b3461021757600036600319011261021757602460206001600160a01b03600954166040519283809263bb07320560e01b82523060048301525afa80156103605761033991600091611239575b5060405190151581529081906020820190565b611252915060203d602011610c1057610c028183610584565b38611226565b3461021757600036600319011261021757602061023761196f565b346102175760003660031901126102175760206102376119d6565b3461021757600036600319011261021757602060ff60005460a01c166040519015158152f35b34610217576000366003190112610217576020600354604051908152f35b90816020910312610217575190565b6040513d6000823e3d90fd5b60095460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa90811561036057600091611335575b50806102bf575060045490565b611357915060203d60201161135d575b61134f8183610584565b8101906112d2565b38611328565b503d611345565b6020818303126102175780519067ffffffffffffffff8211610217570181601f82011215610217578051611397816105e4565b926113a56040519485610584565b81845260208284010111610217576102bf9160208085019101610266565b90816020910312610217575180151581036102175790565b908060209392818452848401376000828201840152601f01601f1916010190565b9998979390946114246114329360a0999560c08e6114459b9a815281602082015201916113db565b918b830360408d01526113db565b92606089015287830360808901526113db565b930152565b968160008a996114a3869d859d6114688a9c60209a999e3691610600565b89815191012096611484610da2600a546001600160a01b031690565b978c6040519c8d9b8c9a8b99631876eed960e01b8b5260048b016113fc565b03925af1908115610360576000916114e2575b50156114d157610784610784936114ce973691610600565b50565b631403112d60e21b60005260046000fd5b6114fb915060203d602011610c1057610c028183610584565b386114b6565b60005460ff8160a01c166116e4577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff821161057f57611585826115806001546108cf565b6116f5565b602090601f831160011461165557926115c0836115d2946040946116069760009261164a575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b6105b6740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b0151905038806115ab565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b8181106116cc5750936040936116069693600193836115d298106116b3575b505050811b016001556115c4565b015160001960f88460031b161c191690553880806116a5565b92936020600181928786015181550195019301611686565b636d8f115160e11b60005260046000fd5b601f8111611701575050565b60016000526020600020906020601f840160051c8301931061173e575b601f0160051c01905b818110611732575050565b60008155600101611727565b909150819061171e565b6009546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa90811561036057600091611790575b50806102bf575060075490565b6117a9915060203d60201161135d5761134f8183610584565b38611783565b60a060606102bf93602084526001600160a01b0381511660208501526001600160a01b0360208201511660408501526040810151828501520151916080808201520190610289565b634e487b7160e01b600052601160045260246000fd5b906002820180921161181b57565b6117f7565b906001820180921161181b57565b906020820180921161181b57565b906008820180921161181b57565b906004820180921161181b57565b9190820180921161181b57565b600954604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa908115610360576000916118ad575b50806102bf575060035490565b6118c6915060203d60201161135d5761134f8183610584565b386118a0565b9081602091031261021757516102bf81610637565b6009546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561036057600091611940575b506001600160a01b0381161561192f5790565b6306f3d63360e51b60005260046000fd5b611962915060203d602011611968575b61195a8183610584565b8101906118cc565b3861191c565b503d611950565b600954604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa908115610360576000916119b7575b50806102bf575060055490565b6119d0915060203d60201161135d5761134f8183610584565b386119aa565b600954604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa90811561036057600091611a1e575b50806102bf575060065490565b611a37915060203d60201161135d5761134f8183610584565b38611a11565b919060608301926000905b60038210611a5557505050565b6020806001928551815201930191019091611a48565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611b5e576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611b4d57611b1e92602092611aec610da26000546001600160a01b031690565b91611af760606105d6565b93845284840152604083015260405180809581946304b98e1d60e31b835260048301611a3d565b03915afa90811561036057600091611b34575090565b6102bf915060203d60201161135d5761134f8183610584565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b90611b8260209282815194859201610266565b0190565b6102bf611c3791611c3d611b9a82516120d0565b91611c37611bab60208301516120d0565b91611c37611bbc60408301516120d0565b611c376080611bce60608601516120d0565b94015195611c27611be967ffffffffffffffff8951166124bb565b60206040519982611c038c94518092858088019101610266565b8301611c1782518093858085019101610266565b010103601f198101895288610584565b6040519a8b9960208b0190611b6f565b90611b6f565b03601f198101835282610584565b92611c9790611c896080946001600160a01b03809599989916875260a06020880152611c7b60a088016001610909565b908782036040890152610289565b908582036060870152610289565b9416910152565b6102bf9160408252611cb4604083016001610909565b916020818403910152610289565b9091611ceb6102bf9360608452611cdd606085016001610909565b908482036020860152610289565b916040818403910152610289565b611d19611d14610da2610da26002546001600160a01b031690565b6121fd565b9080611dbd575b507fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef60405180611d508482611c9e565b0390a1611d6b610da2610da26008546001600160a01b031690565b91823b1561021757611d979260009283604051809681958294631c92115f60e01b845260048401611cc2565b03925af1801561036057611da85750565b80611db760006105b693610584565b8061020c565b611dd2610da2600b546001600160a01b031690565b90813b156102175760009060405192838092630c93e3bb60e01b825281611dff338a8a3060048601611c4b565b03925af180156103605715611d205780611db76000611e1d93610584565b38611d20565b90913403611f2b57600080611ece926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001694604051906001600160a01b0360208301936323b872dd60e01b8552336024850152166044830152606482015260648152611e98608482610584565b519082865af13d15611f23573d90611eaf826105e4565b91611ebd6040519384610584565b82523d6000602084013e5b83612ac6565b8051908115159182611f01575b5050611ee45750565b635274afe760e01b6000526001600160a01b031660045260246000fd5b611f1c925090602080611f189383010191016113c3565b1590565b3880611edb565b606090611ec8565b60405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d61746368000000000000000000000000006044820152606490fd5b6040519060a0820182811067ffffffffffffffff82111761057f5760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b03611c9760806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e0850190610289565b909291926001600160a01b0361201e610da26002546001600160a01b031690565b9116036120bf5767ffffffffffffffff61205561204860005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b9116036120ae5780511561209d57612071610da2610da26118e1565b91823b1561021757611d9792600092836040518096819582946378d60cd760e01b845260048401611faf565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b6001600160ff1b038111612119576040516020815290601f60005b60208110612100575050506040810160405290565b60019083831a60208287010153019060001901906120eb565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b908160011b916001600160ff1b0381160361181b57565b9061217f826105e4565b61218c6040519182610584565b828152809261219d601f19916105e4565b0190602036910137565b634e487b7160e01b600052603260045260246000fd5b8051156121ca5760200190565b6121a7565b8051600110156121ca5760210190565b9081518110156121ca570160200190565b801561181b576000190190565b8061221861221361220e601461215e565b61180d565b612175565b916030612224846121bd565b536078612230846121cf565b5361224361223e601461215e565b611820565b6001811161226d5750612254575090565b63e22e27eb60e01b600052600452601460245260446000fd5b90600f811660108110156121ca576122bc917f30313233343536373839616263646566000000000000000000000000000000006122b6921a6122af85886121df565b5360041c90565b916121f0565b612243565b156122c857565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b1561232057565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b805160201115806123cf575b61237a906122c1565b604051602090910151601f60005b602081106123b9575050506020810160405251906123af6001600160ff1b03831115612319565b6102bf600061182e565b60019083831a8186015301906000190190612388565b506001612371565b9190916020830180841161181b57815110158061244d575b6123f8906122c1565b60405190830160200151601f60005b60208110612437575050508060206102bf920160405251926124326001600160ff1b03851115612319565b61182e565b60019083831a8186015301906000190190612407565b506123f861245a8461182e565b841090506123ef565b1561246a57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b67ffffffffffffffff811660fd8110156124f1575060ff6102bf9116604051906001825260f81b60208201526021810160405290565b61ffff811161254157506102bf611c3791611c3d61253161ffff61252a60fd604051906001825260f81b60208201526021810160405290565b93166127cf565b6040519485936020850190611b6f565b63ffffffff10612583576102bf611c3791611c3d61253163ffffffff61257c60fe604051906001825260f81b60208201526021810160405290565b9316612794565b6102bf611c3791611c3d6125316125af60ff604051906001825260f81b60208201526021810160405290565b92612759565b156125bc57565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b1561260757565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b9190612658908361280a565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b81036126bd57505061ffff9261269791612a1e565b921660fd811015806126b1575b6126ad90612600565b9190565b5061ffff8111156126a4565b607f60f91b81036126fd57505063ffffffff926126d9916129aa565b921661ffff8111806126ef575b6126ad906125b5565b5063ffffffff8111156126e6565b7fff0000000000000000000000000000000000000000000000000000000000000003612748575067ffffffffffffffff92612737916128df565b92166126ad63ffffffff82116125b5565b905060f81c6126ad60fd82106125b5565b6040516008815290601f60005b6008811061277b575050506028810160405290565b60019083831a6020828701015301906000190190612766565b6040516004815290601f60005b600481106127b6575050506024810160405290565b60019083831a60208287010153019060001901906127a1565b6040516002815290601f60005b600281106127f1575050506022810160405290565b60019083831a60208287010153019060001901906127dc565b9190916001830180841161181b578151811115908161287e575b501561283a576020836102bf9201015192611820565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b9050831038612824565b1561288f57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916008830180841161181b576129039082518111159081612949575b50612888565b60405190830160200151600760005b6008811061293357505050600881016040526017190151916102bf9061183c565b60019083831a8186015301906000190190612912565b90508410386128fd565b1561295a57565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916004830180841161181b576129ce9082518111159081612a14575b50612953565b60405190830160200151600360005b600481106129fe5750505060048101604052601b190151916102bf9061184a565b60019083831a81860153019060001901906129dd565b90508410386129c8565b9190916002830180841161181b5781518111159081612abc575b5015612a6c576102bf90602084604051920101518060011a825360001a600182015360028101604052601d1901519261180d565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9050831038612a38565b90612aec5750805115612adb57805190602001fd5b630a12f52160e11b60005260046000fd5b81511580612b1b575b612afd575090565b6001600160a01b0390639996b31560e01b6000521660045260246000fd5b50803b15612af556fea264697066735822122078645e0225a846f1b72409d0d6dd08de335187f0232ae3d58029456422dc876e64736f6c634300081a0033';

type MystikoV2AxelarERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    ) as Promise<MystikoV2AxelarERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2AxelarERC20 {
    return super.attach(address) as MystikoV2AxelarERC20;
  }
  connect(signer: Signer): MystikoV2AxelarERC20__factory {
    return super.connect(signer) as MystikoV2AxelarERC20__factory;
  }
  static readonly contractName: 'MystikoV2AxelarERC20';
  public readonly contractName: 'MystikoV2AxelarERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarERC20Interface {
    return new utils.Interface(_abi) as MystikoV2AxelarERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarERC20;
  }
}
