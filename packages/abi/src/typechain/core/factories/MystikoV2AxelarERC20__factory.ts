/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2AxelarERC20,
  MystikoV2AxelarERC20Interface,
  IMystikoBridge,
} from '../MystikoV2AxelarERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.LocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
      {
        internalType: 'address',
        name: '_gasReceiver',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotApprovedByGateway',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'StringsInsufficientHexLength',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'peerChainName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'destinationAddress',
        type: 'string',
      },
    ],
    name: 'CallContractMessage',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'commandId',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'sourceChain',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'sourceAddress',
        type: 'string',
      },
      {
        internalType: 'bytes',
        name: 'payload',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: 'tokenSymbol',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'executeWithToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'gateway',
    outputs: [
      {
        internalType: 'contract IAxelarGateway',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.PeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settingsCenter',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040526000805460ff60a01b191690553480156200001e57600080fd5b50604051620032a2380380620032a2833981016040819052620000419162000185565b600080546001600160a01b03199081166001600160a01b03998a1617909155600880548216968916969096179095558251600355602080840151600455604090930151600555815160065591015160075560098054841692861692909217909155600b80548316918516919091179055600c80549091169190921617905562000254565b6001600160a01b0381168114620000db57600080fd5b50565b8051620000eb81620000c5565b919050565b604051606081016001600160401b03811182821017156200012157634e487b7160e01b600052604160045260246000fd5b60405290565b6000604082840312156200013a57600080fd5b604080519081016001600160401b03811182821017156200016b57634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6000806000806000806000878903610140811215620001a357600080fd5b8851620001b081620000c5565b60208a0151909850620001c381620000c5565b60408a0151909750620001d681620000c5565b60608a0151909650620001e981620000c5565b94506060607f1982011215620001fe57600080fd5b5062000209620000f0565b6080890151815260a0890151602082015260c089015160408201529250620002358960e08a0162000127565b9150620002466101208901620000de565b905092959891949750929550565b61303e80620002646000396000f3fe6080604052600436106101c25760003560e01c8063640c0b36116100f7578063cbe3428511610095578063ddac5dc111610064578063ddac5dc1146104da578063ed6ea33a146104ef578063efbfb2ae14610514578063fb3e3d731461052957600080fd5b8063cbe3428514610458578063cdfceeba1461046e578063cfc7e2da146104af578063d0b436bd146104c457600080fd5b8063abc1bd22116100d1578063abc1bd22146103e9578063c2d4160114610409578063c9230c5d14610430578063cb5c029a1461044557600080fd5b8063640c0b36146103ab578063825b5f8d146103c15780639a03636c146103d657600080fd5b80632cd26d4511610164578063491606581161013e578063491606581461034b5780634dde6fbc1461036b5780634e3c10b7146103815780635898a0a81461039657600080fd5b80632cd26d45146102ef5780633fe3347a1461030f578063422e00281461032b57600080fd5b80631a98b2e0116101a05780631a98b2e0146102495780631ba46cfd1461026b57806321e32d55146102895780632421e155146102a957600080fd5b80630ba95909146101c7578063116191b6146101ef578063176de7a814610227575b600080fd5b3480156101d357600080fd5b506101dc61053f565b6040519081526020015b60405180910390f35b3480156101fb57600080fd5b50600a5461020f906001600160a01b031681565b6040516001600160a01b0390911681526020016101e6565b34801561023357600080fd5b5061023c6105c8565b6040516101e691906124d2565b34801561025557600080fd5b50610269610264366004612527565b61063f565b005b34801561027757600080fd5b50600c546001600160a01b031661020f565b34801561029557600080fd5b5060025461020f906001600160a01b031681565b3480156102b557600080fd5b5060408051808201909152600681527f6178656c61720000000000000000000000000000000000000000000000000000602082015261023c565b3480156102fb57600080fd5b5060085461020f906001600160a01b031681565b34801561031b57600080fd5b5060006040516101e69190612601565b34801561033757600080fd5b50610269610346366004612738565b6107b2565b34801561035757600080fd5b506102696103663660046127e9565b61089f565b34801561037757600080fd5b506101dc60055481565b34801561038d57600080fd5b5061023c61091f565b3480156103a257600080fd5b506101dc6109ad565b3480156103b757600080fd5b506101dc60065481565b3480156103cd57600080fd5b506101dc610a34565b6102696103e4366004612963565b610abb565b3480156103f557600080fd5b5060095461020f906001600160a01b031681565b34801561041557600080fd5b5061041e610ad4565b60405160ff90911681526020016101e6565b34801561043c57600080fd5b5061023c610b42565b6102696104533660046129a0565b610b8c565b34801561046457600080fd5b506101dc60075481565b34801561047a57600080fd5b5060005461049690600160a81b900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016101e6565b3480156104bb57600080fd5b506101dc610fc1565b3480156104d057600080fd5b506101dc60045481565b3480156104e657600080fd5b5061020f611048565b3480156104fb57600080fd5b506105046110e7565b60405190151581526020016101e6565b34801561052057600080fd5b506101dc611154565b34801561053557600080fd5b506101dc60035481565b60095460405163473a063160e01b815230600482015260009182916001600160a01b039091169063473a063190602401602060405180830381865afa15801561058c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b09190612a0d565b905080156105be57806105c2565b6004545b91505090565b600c54604080516395d89b4160e01b815290516060926001600160a01b0316916395d89b419160048083019260009291908290030181865afa158015610612573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063a9190810190612a26565b905090565b60008585604051610651929190612a9d565b604051908190038120600a54631876eed960e01b83529092506001600160a01b031690631876eed990610698908e908e908e908e908e9089908d908d908d90600401612ad6565b6020604051808303816000875af11580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db9190612b35565b6106f857604051631403112d60e21b815260040160405180910390fd5b6107a58a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525050604080516020601f8b018190048102820181019092528981528c93508b9250908a908a90819084018382808284376000920191909152508a92506111db915050565b5050505050505050505050565b600054600160a01b900460ff16156107dd57604051636d8f115160e11b815260040160405180910390fd5b80516000805467ffffffffffffffff909216600160a81b027fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff90921691909117905560208101516001906108319082612bd7565b5060400151600280546001600160a01b039092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b61091686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8a0181900481028201810190925288815292508891508790819084018382808284376000920191909152508792508691506111e39050565b50505050505050565b6001805461092c90612b57565b80601f016020809104026020016040519081016040528092919081815260200182805461095890612b57565b80156109a55780601f1061097a576101008083540402835291602001916109a5565b820191906000526020600020905b81548152906001019060200180831161098857829003601f168201915b505050505081565b600954604051634f314f9d60e11b815230600482015260009182916001600160a01b0390911690639e629f3a90602401602060405180830381865afa1580156109fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e9190612a0d565b90508015610a2c57806105c2565b505060065490565b6009546040516361863c0360e11b815230600482015260009182916001600160a01b039091169063c30c780690602401602060405180830381865afa158015610a81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190612a0d565b90508015610ab357806105c2565b505060075490565b60405163e7a24ff960e01b815260040160405180910390fd5b600c546040805163313ce56760e01b815290516000926001600160a01b03169163313ce5679160048083019260209291908290030181865afa158015610b1e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190612c97565b600c54604080516306fdde0360e01b815290516060926001600160a01b0316916306fdde039160048083019260009291908290030181865afa158015610612573d6000803e3d6000fd5b6009546040516355f0ba2960e01b81523060048201526001600160a01b03909116906355f0ba2990602401602060405180830381865afa158015610bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf89190612b35565b15610c1657604051630e2f42c960e31b815260040160405180910390fd5b600960009054906101000a90046001600160a01b03166001600160a01b031663dc7f01246040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d9190612b35565b15610d645760006040518060800160405280326001600160a01b03168152602001610cc0600c546001600160a01b031690565b6001600160a01b039081168252602082018690526040918201859052600954915163849e8b9f60e01b8152929350169063849e8b9f90610d04908490600401612cba565b602060405180830381865afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190612b35565b610d6257604051633042041f60e21b815260040160405180910390fd5b505b610d6c610fc1565b83511015610d8d5760405163617ab12d60e11b815260040160405180910390fd5b610d9561053f565b83511115610db657604051630625040160e01b815260040160405180910390fd5b610dbe611154565b8360a001511015610de25760405163c4d8d00d60e01b815260040160405180910390fd5b610dea6109ad565b8360c001511015610e0e576040516355a6d6a160e11b815260040160405180910390fd5b610e16610a34565b8360e001511015610e3a5760405163784f02bd60e11b815260040160405180910390fd5b6000610e5384604001518560000151866060015161125b565b905080846020015114610e79576040516301bfaa2560e51b815260040160405180910390fd5b60095460405163df592f7d60e01b81523260048201526001600160a01b039091169063df592f7d90602401602060405180830381865afa158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee59190612b35565b15610f0357604051632e70c0b160e01b815260040160405180910390fd5b6040805160a081018252855181526020808701519082015260c08601519181019190915260e08501516060820152608080860151908201526000610f4682611374565b9050610f568660a00151826113e3565b610f8b610f61611048565b60e088015160c08901518951610f779190612d16565b610f819190612d16565b8860a00151611510565b60208601516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe90600090a2505050505050565b600954604051635525984960e01b815230600482015260009182916001600160a01b0390911690635525984990602401602060405180830381865afa15801561100e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110329190612a0d565b9050801561104057806105c2565b505060035490565b6009546040516341fb697960e01b815230600482015260009182916001600160a01b03909116906341fb697990602401602060405180830381865afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190612d29565b90506001600160a01b0381166110e2576040516306f3d63360e51b815260040160405180910390fd5b919050565b6009546040516355f0ba2960e01b81523060048201526000916001600160a01b0316906355f0ba2990602401602060405180830381865afa158015611130573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190612b35565b600954604051637b52b00d60e01b815230600482015260009182916001600160a01b0390911690637b52b00d90602401602060405180830381865afa1580156111a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c59190612a0d565b905080156111d357806105c2565b505060055490565b505050505050565b600061122483838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061158192505050565b60005460025491925061125491600160a81b90910467ffffffffffffffff16906001600160a01b03163284611649565b5050505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180851061129e5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff16106112d057604051633bbde0bf60e21b815260040160405180910390fd5b60005460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e89161132891600401612d46565b602060405180830381865afa158015611345573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113699190612a0d565b9150505b9392505050565b606080611384836000015161173c565b611391846020015161173c565b61139e856040015161173c565b6113ab866060015161173c565b6113b887608001516117d4565b6040516020016113cc959493929190612d77565b60408051601f198184030181529190529392505050565b6002546000906113fd906001600160a01b0316601461180b565b9050821561147357600b54604051630c93e3bb60e01b81526001600160a01b0390911690630c93e3bb908590611440903090600190879089903390600401612e5f565b6000604051808303818588803b15801561145957600080fd5b505af115801561146d573d6000803e3d6000fd5b50505050505b7fe68d82569479581bf9793b8672c8f40b6d3ad0545719dc0579fb3ee30919d3ef6001826040516114a5929190612ebe565b60405180910390a1600854604051631c92115f60e01b81526001600160a01b0390911690631c92115f906114e29060019085908790600401612ee3565b600060405180830381600087803b1580156114fc57600080fd5b505af1158015610916573d6000803e3d6000fd5b8034146115645760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d617463680000000000000000000000000060448201526064015b60405180910390fd5b600c5461157c906001600160a01b031633858561199a565b505050565b6115b36040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b6115e56040518060a0016040528060008152602001600081526020016000815260200160008152602001606081525090565b60006115f18482611a0f565b90835290506116008482611a0f565b602084019190915290506116148482611a0f565b604084019190915290506116288482611a0f565b6060840191909152905061163c8482611b40565b5060808301525092915050565b6002546001600160a01b0384811691161461167757604051631440e07960e11b815260040160405180910390fd5b60005467ffffffffffffffff858116600160a81b90920416146116ad57604051633876304f60e21b815260040160405180910390fd5b80516000036116cf5760405163820bf1e560e01b815260040160405180910390fd5b6116d7611048565b6001600160a01b03166378d60cd782846040518363ffffffff1660e01b8152600401611704929190612f1c565b600060405180830381600087803b15801561171e57600080fd5b505af1158015611732573d6000803e3d6000fd5b5050505050505050565b60606001600160ff1b038211156117955760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e67650000000000604482015260640161155b565b60405160208082526000601f5b828210156117c45785811a8260208601015360019190910190600019016117a2565b5050506040818101905292915050565b80516060906117e281611c4d565b836040516020016117f4929190612f79565b604051602081830303815290604052915050919050565b606082600061181b846002612fa8565b611826906002612d16565b67ffffffffffffffff81111561183e5761183e612629565b6040519080825280601f01601f191660200182016040528015611868576020820181803683370190505b509050600360fc1b8160008151811061188357611883612fbf565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106118b2576118b2612fbf565b60200101906001600160f81b031916908160001a90535060006118d6856002612fa8565b6118e1906001612d16565b90505b6001811115611966577f303132333435363738396162636465660000000000000000000000000000000083600f166010811061192257611922612fbf565b1a60f81b82828151811061193857611938612fbf565b60200101906001600160f81b031916908160001a90535060049290921c9161195f81612fd5565b90506118e4565b5081156119905760405163e22e27eb60e01b8152600481018690526024810185905260440161155b565b9150505b92915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052611a09908590611d15565b50505050565b6000808351836020611a219190612d16565b11158015611a385750611a35836020612d16565b83105b611a905760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b606482015260840161155b565b600060405160206000600182038760208a0101515b83831015611ac55780821a83860153600183019250600182039150611aa5565b50505081016040525190506001600160ff1b03811115611b275760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e6765000000000000000000604482015260640161155b565b80611b33856020612d16565b92509250505b9250929050565b6060600080611b4f8585611d78565b8651909550909150611b618286612d16565b11158015611b775750611b748185612d16565b84105b611bcf5760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b606482015260840161155b565b606081158015611bea57604051915060208201604052611c34565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611c23578051835260209283019201611c0b565b5050848452601f01601f1916604052505b5080611c408387612d16565b9350935050509250929050565b606060fd8267ffffffffffffffff161015611c8057604080516001815260f884901b602082015260218101909152611994565b61ffff8267ffffffffffffffff1611611cd057611ca060fd60f81b611f7c565b611ca983611fa3565b604051602001611cba929190612f79565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff1611611cfb57611cf2607f60f91b611f7c565b611ca983611fe6565b611d0c6001600160f81b0319611f7c565b611ca983612029565b6000611d2a6001600160a01b0384168361206c565b90508051600014158015611d4f575080806020019051810190611d4d9190612b35565b155b1561157c57604051635274afe760e01b81526001600160a01b038416600482015260240161155b565b6000806000611d87858561207a565b9450905060006001600160f81b0319821660fd60f81b03611e1f57611dac8686612102565b955061ffff16905060fd8110801590611dc7575061ffff8111155b611e135760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e676500604482015260640161155b565b9250839150611b399050565b6001600160f81b03198216607f60f91b03611ea957611e3e86866121bb565b955063ffffffff16905061ffff81118015611e5d575063ffffffff8111155b611e135760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161155b565b6001600160f81b03198083169003611f2657611ec5868661228c565b955067ffffffffffffffff16905063ffffffff8111611e135760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161155b565b5060f881901c60fd8110611e135760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e6765604482015260640161155b565b60408051600181526001600160f81b03198316602082015260218101909152606090611994565b6040516002808252606091906000601f5b82821015611fd65785811a826020860101536001919091019060001901611fb4565b5050506022810160405292915050565b6040516004808252606091906000601f5b828210156120195785811a826020860101536001919091019060001901611ff7565b5050506024810160405292915050565b6040516008808252606091906000601f5b8282101561205c5785811a82602086010153600191909101906000190161203a565b5050506028810160405292915050565b606061136d8383600061235d565b600080835183600161208c9190612d16565b111580156120a357506120a0836001612d16565b83105b6120ef5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d604482015260640161155b565b8383016020015180611b33856001612d16565b60008083518360026121149190612d16565b1115801561212b5750612128836002612d16565b83105b6121825760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161155b565b6000604051846020870101518060011a82538060001a60018301535060028101604052601e81035191505080846002611b339190612d16565b60008083518360046121cd9190612d16565b111580156121e457506121e1836004612d16565b83105b61223b5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161155b565b600060405160046000600182038760208a0101515b838310156122705780821a83860153600183019250600182039150612250565b505050016040819052601f190151905080611b33856004612d16565b600080835183600861229e9190612d16565b111580156122b557506122b2836008612d16565b83105b61230c5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b606482015260840161155b565b600060405160086000600182038760208a0101515b838310156123415780821a83860153600183019250600182039150612321565b505050016040819052601f190151905080611b33856008612d16565b6060814710156123825760405163cd78605960e01b815230600482015260240161155b565b600080856001600160a01b0316848660405161239e9190612fec565b60006040518083038185875af1925050503d80600081146123db576040519150601f19603f3d011682016040523d82523d6000602084013e6123e0565b606091505b50915091506123f08683836123fa565b9695505050505050565b60608261240f5761240a82612456565b61136d565b815115801561242657506001600160a01b0384163b155b1561244f57604051639996b31560e01b81526001600160a01b038516600482015260240161155b565b508061136d565b8051156124665780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60005b8381101561249d578181015183820152602001612485565b50506000910152565b600081518084526124be816020860160208601612482565b601f01601f19169290920160200192915050565b60208152600061136d60208301846124a6565b60008083601f8401126124f757600080fd5b50813567ffffffffffffffff81111561250f57600080fd5b602083019150836020828501011115611b3957600080fd5b60008060008060008060008060008060c08b8d03121561254657600080fd5b8a35995060208b013567ffffffffffffffff8082111561256557600080fd5b6125718e838f016124e5565b909b50995060408d013591508082111561258a57600080fd5b6125968e838f016124e5565b909950975060608d01359150808211156125af57600080fd5b6125bb8e838f016124e5565b909750955060808d01359150808211156125d457600080fd5b506125e18d828e016124e5565b9150809450508092505060a08b013590509295989b9194979a5092959850565b602081016002831061262357634e487b7160e01b600052602160045260246000fd5b91905290565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561266257612662612629565b60405290565b604051610100810167ffffffffffffffff8111828210171561266257612662612629565b604051601f8201601f1916810167ffffffffffffffff811182821017156126b5576126b5612629565b604052919050565b600067ffffffffffffffff8211156126d7576126d7612629565b50601f01601f191660200190565b60006126f86126f3846126bd565b61268c565b905082815283838301111561270c57600080fd5b828260208301376000602084830101529392505050565b6001600160a01b038116811461247f57600080fd5b60006020828403121561274a57600080fd5b813567ffffffffffffffff8082111561276257600080fd5b908301906060828603121561277657600080fd5b61277e61263f565b8235828116811461278e57600080fd5b81526020830135828111156127a257600080fd5b83019150601f820186136127b557600080fd5b6127c4868335602085016126e5565b6020820152604083013592506127d983612723565b6040810192909252509392505050565b60008060008060008060006080888a03121561280457600080fd5b87359650602088013567ffffffffffffffff8082111561282357600080fd5b61282f8b838c016124e5565b909850965060408a013591508082111561284857600080fd5b6128548b838c016124e5565b909650945060608a013591508082111561286d57600080fd5b5061287a8a828b016124e5565b989b979a50959850939692959293505050565b80356fffffffffffffffffffffffffffffffff811681146110e257600080fd5b600082601f8301126128be57600080fd5b61136d838335602085016126e5565b600061010082840312156128e057600080fd5b6128e8612668565b905081358152602082013560208201526040820135604082015261290e6060830161288d565b6060820152608082013567ffffffffffffffff81111561292d57600080fd5b612939848285016128ad565b60808301525060a082013560a082015260c082013560c082015260e082013560e082015292915050565b60006020828403121561297557600080fd5b813567ffffffffffffffff81111561298c57600080fd5b612998848285016128cd565b949350505050565b6000806000606084860312156129b557600080fd5b833567ffffffffffffffff808211156129cd57600080fd5b6129d9878388016128cd565b94506020860135935060408601359150808211156129f657600080fd5b50612a03868287016128ad565b9150509250925092565b600060208284031215612a1f57600080fd5b5051919050565b600060208284031215612a3857600080fd5b815167ffffffffffffffff811115612a4f57600080fd5b8201601f81018413612a6057600080fd5b8051612a6e6126f3826126bd565b818152856020838501011115612a8357600080fd5b612a94826020830160208601612482565b95945050505050565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b89815260c060208201526000612af060c083018a8c612aad565b8281036040840152612b0381898b612aad565b90508660608401528281036080840152612b1e818688612aad565b9150508260a08301529a9950505050505050505050565b600060208284031215612b4757600080fd5b8151801515811461136d57600080fd5b600181811c90821680612b6b57607f821691505b602082108103612b8b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561157c57600081815260208120601f850160051c81016020861015612bb85750805b601f850160051c820191505b818110156111db57828155600101612bc4565b815167ffffffffffffffff811115612bf157612bf1612629565b612c0581612bff8454612b57565b84612b91565b602080601f831160018114612c3a5760008415612c225750858301515b600019600386901b1c1916600185901b1785556111db565b600085815260208120601f198616915b82811015612c6957888601518255948401946001909101908401612c4a565b5085821015612c875787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215612ca957600080fd5b815160ff8116811461136d57600080fd5b6020815260006001600160a01b038084511660208401528060208501511660408401525060408301516060830152606083015160808084015261299860a08401826124a6565b634e487b7160e01b600052601160045260246000fd5b8082018082111561199457611994612d00565b600060208284031215612d3b57600080fd5b815161136d81612723565b60608101818360005b6003811015612d6e578151835260209283019290910190600101612d4f565b50505092915050565b60008651612d89818460208b01612482565b865190830190612d9d818360208b01612482565b8651910190612db0818360208a01612482565b8551910190612dc3818360208901612482565b8451910190612dd6818360208801612482565b01979650505050505050565b60008154612def81612b57565b808552602060018381168015612e0c5760018114612e2657612e54565b60ff1985168884015283151560051b880183019550612e54565b866000528260002060005b85811015612e4c5781548a8201860152908301908401612e31565b890184019650505b505050505092915050565b60006001600160a01b03808816835260a06020840152612e8260a0840188612de2565b8381036040850152612e9481886124a6565b90508381036060850152612ea881876124a6565b9250508084166080840152509695505050505050565b604081526000612ed16040830185612de2565b828103602084015261136981856124a6565b606081526000612ef66060830186612de2565b8281036020840152612f0881866124a6565b905082810360408401526123f081856124a6565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201526000608084015160a060c0840152612f6060e08401826124a6565b9150506001600160a01b03831660208301529392505050565b60008351612f8b818460208801612482565b835190830190612f9f818360208801612482565b01949350505050565b808202811582820484141761199457611994612d00565b634e487b7160e01b600052603260045260246000fd5b600081612fe457612fe4612d00565b506000190190565b60008251612ffe818460208701612482565b919091019291505056fea2646970667358221220ea28d92ba3daf17521f1f85b6df92ac0f780643d00631ad74868dd425fd98d2d64736f6c63430008140033';

type MystikoV2AxelarERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2AxelarERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2AxelarERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2AxelarERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2AxelarERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2AxelarERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    ) as Promise<MystikoV2AxelarERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.LocalConfigStruct,
    _peerConfig: IMystikoBridge.PeerConfigStruct,
    _gasReceiver: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      _gasReceiver,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2AxelarERC20 {
    return super.attach(address) as MystikoV2AxelarERC20;
  }
  connect(signer: Signer): MystikoV2AxelarERC20__factory {
    return super.connect(signer) as MystikoV2AxelarERC20__factory;
  }
  static readonly contractName: 'MystikoV2AxelarERC20';
  public readonly contractName: 'MystikoV2AxelarERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2AxelarERC20Interface {
    return new utils.Interface(_abi) as MystikoV2AxelarERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2AxelarERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2AxelarERC20;
  }
}
