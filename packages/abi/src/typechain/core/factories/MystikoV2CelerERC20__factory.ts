/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2CelerERC20,
  MystikoV2CelerERC20Interface,
  IMystikoBridge,
} from '../MystikoV2CelerERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052346101b55760405161280d38819003601f8101601f191683016001600160401b0381118482101761019f5783928291604052833981010361012081126101b55781516001600160a01b038116908190036101b5576020830151926001600160a01b03841684036101b55761007a604082016101ba565b92610087606083016101ba565b936060607f198301126101b557604051606081016001600160401b0381118282101761019f576040526080840151815260a08401519160208201928352604060c08601519481840195865260df1901126101b5576040805190810196906001600160401b0388118189101761019f5760209760405261010060e0880151978883520151978891015260018060a81b0319600054161760005560018060a01b031660018060a01b0319600854161760085551600355516004555160055560065560075560018060a01b031660018060a01b0319600954161760095560805260405161263e90816101cf82396080518181816102a10152818161033e0152818161099401528181610a4301528181610d6c0152611bc30152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101b55756fe6080604052600436101561001257600080fd5b60003560e01c80630ba95909146101e7578063176de7a8146101e25780631ba46cfd146101dd57806321e32d55146101d85780632421e155146101d35780632cd26d45146101ce5780633fe3347a146101c9578063422e0028146101c45780634dde6fbc146101bf5780634e3c10b7146101ba578063640c0b36146101b5578063825b5f8d146101b05780639a03636c146101ab5780639c649fdf146101a6578063bc587706146101a1578063c2d416011461019c578063c9230c5d14610197578063cb5c029a14610192578063cbe342851461018d578063cdfceeba14610188578063cfc7e2da14610183578063d0b436bd1461017e578063ddac5dc114610179578063e06174e414610174578063ed6ea33a1461016f578063efbfb2ae1461016a578063f4ad17c614610165578063fa750f56146101605763fb3e3d731461015b57600080fd5b61100b565b610fe5565b610fca565b610faf565b610f31565b610f0a565b610ede565b610ec0565b610ea5565b610e7a565b610e5c565b610a93565b610a1d565b61096e565b6108ee565b610865565b610827565b610751565b610733565b610659565b610601565b61055f565b61040f565b6103e8565b610389565b610362565b61031e565b61027b565b6101fc565b60009103126101f757565b600080fd5b346101f75760003660031901126101f7576020610217611044565b604051908152f35b60005b8381106102325750506000910152565b8181015183820152602001610222565b9060209161025b8151809281855285808601910161021f565b601f01601f1916010190565b906020610278928181520190610242565b90565b346101f75760003660031901126101f7576040516395d89b4160e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610319576102f2916000916102f6575b50604051918291602083526020830190610242565b0390f35b61031391503d806000833e61030b8183610462565b8101906110bb565b386102dd565b611038565b346101f75760003660031901126101f75760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101f75760003660031901126101f75760206001600160a01b0360025416604051908152f35b346101f75760003660031901126101f7576102f260408051906103ac8183610462565b600582527f63656c6572000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610242565b346101f75760003660031901126101f75760206001600160a01b0360085416604051908152f35b346101f75760003660031901126101f757602060405160008152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761045d57604052565b61042b565b90601f8019910116810190811067ffffffffffffffff82111761045d57604052565b6040519061049461010083610462565b565b60405190610494608083610462565b6040519061049460a083610462565b906104946040519283610462565b6024359067ffffffffffffffff821682036101f757565b359067ffffffffffffffff821682036101f757565b67ffffffffffffffff811161045d57601f01601f191660200190565b929192610516826104ee565b916105246040519384610462565b8294818452818301116101f7578281602093846000960137010152565b6001600160a01b038116036101f757565b6064359061049482610541565b346101f75760203660031901126101f75760043567ffffffffffffffff81116101f757606060031982360301126101f75760405161059c81610441565b6105a8826004016104d9565b8152602482013567ffffffffffffffff81116101f7578201366023820112156101f7576105ff926105e5604492369060246004820135910161050a565b602084015201356105f581610541565b604082015261111a565b005b346101f75760003660031901126101f7576020600554604051908152f35b90600182811c9216801561064f575b602083101461063957565b634e487b7160e01b600052602260045260246000fd5b91607f169161062e565b346101f75760003660031901126101f757604051600060015461067b8161061f565b808452906001811690811561070f57506001146106af575b6102f2836106a381850382610462565b60405191829182610267565b91905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6916000905b8082106106f5575090915081016020016106a3610693565b9192600181602092548385880101520191019092916106dd565b60ff191660208086019190915291151560051b840190910191506106a39050610693565b346101f75760003660031901126101f7576020600654604051908152f35b346101f75760003660031901126101f7576020610217611361565b35906fffffffffffffffffffffffffffffffff821682036101f757565b9080601f830112156101f7578160206102789335910161050a565b9190610100838203126101f7576107b9610484565b928035845260208101356020850152604081013560408501526107de6060820161076c565b6060850152608081013567ffffffffffffffff81116101f75760e092610805918301610789565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126101f75760043567ffffffffffffffff81116101f7576108539036906004016107a4565b5063e7a24ff960e01b60005260046000fd5b60803660031901126101f75760043561087d81610541565b6108856104c2565b60443567ffffffffffffffff81116101f757366023820112156101f757806004013567ffffffffffffffff81116101f75736602482840101116101f7576102f2936108dc9360246108d4610552565b9401916113c8565b60405190151581529081906020820190565b346101f75760003660031901126101f757600460206001600160a01b036009541660405192838092635e2c3b8360e11b82525afa9081156103195760009161093f575b506040519015158152602090f35b610961915060203d602011610967575b6109598183610462565b81019061150c565b38610931565b503d61094f565b346101f75760003660031901126101f75760405163313ce56760e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610319576000916109db575b60405160ff83168152602090f35b6020813d602011610a15575b816109f460209383610462565b81010312610a11575160ff81168103610a115790506102f26109cd565b5080fd5b3d91506109e7565b346101f75760003660031901126101f7576040516306fdde0360e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa8015610319576102f2916000916102f65750604051918291602083526020830190610242565b60603660031901126101f75760043567ffffffffffffffff81116101f757610abf9036906004016107a4565b6024359060443567ffffffffffffffff81116101f757610ae3903690600401610789565b91610b05610af96009546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa90811561031957600091610e3d575b50610e2c57604051635e2c3b8360e11b8152602081600481885afa90811561031957600091610e0d575b50610d57575b50508051610b6f6115c7565b11610d46578051610b7e611044565b10610d355760a081018051610b916116d1565b11610d245760c08201918251610ba5611738565b11610d135760e081018051610bb8611361565b11610d0257610bea60408301518351610be460608601516fffffffffffffffffffffffffffffffff1690565b9161195a565b946020830195865103610cf15760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561031957600091610cd2575b50610cc157610c81610c8991610c79610c9996610c6f86518a51835186519060808b015192610c536104a5565b9485526020850152604084015260608301526080820152611a75565b95519051906115ba565b9051906115ba565b918351611b3a565b610c91611643565b915191611baa565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610ceb915060203d602011610967576109598183610462565b38610c26565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610dbc91602091610d66610496565b328152917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683850152604083015260608201526040518093819263849e8b9f60e01b835260048301611524565b0381865afa90811561031957600091610dee575b5015610ddd573880610b63565b633042041f60e21b60005260046000fd5b610e07915060203d602011610967576109598183610462565b38610dd0565b610e26915060203d602011610967576109598183610462565b38610b5d565b630e2f42c960e31b60005260046000fd5b610e56915060203d602011610967576109598183610462565b38610b33565b346101f75760003660031901126101f7576020600754604051908152f35b346101f75760003660031901126101f757602067ffffffffffffffff60005460a81c16604051908152f35b346101f75760003660031901126101f75760206102176115c7565b346101f75760003660031901126101f7576020600454604051908152f35b346101f75760003660031901126101f7576020610ef9611643565b6001600160a01b0360405191168152f35b346101f75760003660031901126101f75760206001600160a01b0360095416604051908152f35b346101f75760003660031901126101f757602460206001600160a01b03600954166040519283809263bb07320560e01b82523060048301525afa8015610319576102f291600091610f90575b5060405190151581529081906020820190565b610fa9915060203d602011610967576109598183610462565b38610f7d565b346101f75760003660031901126101f75760206102176116d1565b346101f75760003660031901126101f7576020610217611738565b346101f75760003660031901126101f757602060ff60005460a01c166040519015158152f35b346101f75760003660031901126101f7576020600354604051908152f35b908160209103126101f7575190565b6040513d6000823e3d90fd5b60095460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156103195760009161108c575b5080610278575060045490565b6110ae915060203d6020116110b4575b6110a68183610462565b810190611029565b3861107f565b503d61109c565b6020818303126101f75780519067ffffffffffffffff82116101f7570181601f820112156101f75780516110ee816104ee565b926110fc6040519485610462565b818452602082840101116101f757610278916020808501910161021f565b60005460ff8160a01c166112fd577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff821161045d5761119e8261119960015461061f565b61130e565b602090601f831160011461126e57926111d9836111eb9460409461121f97600092611263575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b610494740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b0151905038806111c4565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b8181106112e557509360409361121f9693600193836111eb98106112cc575b505050811b016001556111dd565b015160001960f88460031b161c191690553880806112be565b9293602060018192878601518155019501930161129f565b636d8f115160e11b60005260046000fd5b601f811161131a575050565b60016000526020600020906020601f840160051c83019310611357575b601f0160051c01905b81811061134b575050565b60008155600101611340565b9091508190611337565b6009546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa908115610319576000916113a9575b5080610278575060075490565b6113c2915060203d6020116110b4576110a68183610462565b3861139c565b9493919290926001600160a01b036008541633036114fb576113eb91369161050a565b936113f461179f565b506113fd61179f565b9261144061143461142861141c6114138a611d9b565b9089528a611e1c565b90602089015289611e1c565b90604088015288611e1c565b90606087015287612025565b909661144c88836115ba565b81511015806114e4575b61145f90611ea8565b8761148d575061147d611488969760405192602084016040526115ba565b506080850152611833565b600190565b9660405191601f821698818a1560051b808c8701019b858d0193010101905b808b106114d15750509061147d916114889899828552601f80199101166040526115ba565b9099602080918c518152019a01906114ac565b5061145f6114f289846115ba565b83109050611456565b633dca01cf60e11b60005260046000fd5b908160209103126101f7575180151581036101f75790565b60a0606061027893602084526001600160a01b0381511660208501526001600160a01b0360208201511660408501526040810151828501520151916080808201520190610242565b906020820180921161157a57565b634e487b7160e01b600052601160045260246000fd5b906008820180921161157a57565b906004820180921161157a57565b906002820180921161157a57565b9190820180921161157a57565b600954604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa9081156103195760009161160f575b5080610278575060035490565b611628915060203d6020116110b4576110a68183610462565b38611602565b908160209103126101f7575161027881610541565b6009546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa908115610319576000916116a2575b506001600160a01b038116156116915790565b6306f3d63360e51b60005260046000fd5b6116c4915060203d6020116116ca575b6116bc8183610462565b81019061162e565b3861167e565b503d6116b2565b600954604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa90811561031957600091611719575b5080610278575060055490565b611732915060203d6020116110b4576110a68183610462565b3861170c565b600954604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa90811561031957600091611780575b5080610278575060065490565b611799915060203d6020116110b4576110a68183610462565b38611773565b6040519060a0820182811067ffffffffffffffff82111761045d5760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b0361182c60806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e0850190610242565b9416910152565b909291926001600160a01b03611854610af96002546001600160a01b031690565b91160361191b5767ffffffffffffffff61188b61187e60005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b91160361190a578051156118f9576118a7610af9610af9611643565b91823b156101f7576118d392600092836040518096819582946378d60cd760e01b8452600484016117de565b03925af18015610319576118e45750565b806118f3600061049493610462565b806101ec565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b919060608301926000905b6003821061194457505050565b6020806001928551815201930191019091611937565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611a4d576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611a3c57611a0d926020926119db610af96000546001600160a01b031690565b916119e660606104b4565b93845284840152604083015260405180809581946304b98e1d60e31b83526004830161192c565b03915afa90811561031957600091611a23575090565b610278915060203d6020116110b4576110a68183610462565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b90611a716020928281519485920161021f565b0190565b610278611b2691611b2c611a898251611f00565b91611b26611a9a6020830151611f00565b91611b26611aab6040830151611f00565b611b266080611abd6060860151611f00565b94015195611b16611ad867ffffffffffffffff895116612132565b60206040519982611af28c9451809285808801910161021f565b8301611b068251809385808501910161021f565b010103601f198101895288610462565b6040519a8b9960208b0190611a5e565b90611a5e565b03601f198101835282610462565b6001600160a01b03600854166001600160a01b03600254169067ffffffffffffffff60005460a81c16813b156101f75760009367ffffffffffffffff936118d360405197889687958694634f9e72ad60e11b86526004860152166024840152606060448401526064830190610242565b90913403611cb257600080611c55926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001694604051906001600160a01b0360208301936323b872dd60e01b8552336024850152166044830152606482015260648152611c1f608482610462565b519082865af13d15611caa573d90611c36826104ee565b91611c446040519384610462565b82523d6000602084013e5b836125aa565b8051908115159182611c88575b5050611c6b5750565b635274afe760e01b6000526001600160a01b031660045260246000fd5b611ca3925090602080611c9f93830101910161150c565b1590565b3880611c62565b606090611c4f565b60405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d61746368000000000000000000000000006044820152606490fd5b15611cfe57565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b15611d5657565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b80516020111580611e05575b611db090611cf7565b604051602090910151601f60005b60208110611def57505050602081016040525190611de56001600160ff1b03831115611d4f565b610278600061156c565b60019083831a8186015301906000190190611dbe565b50611db0611e13600061156c565b15159050611da7565b9190916020830180841161157a578151101580611e92575b611e3d90611cf7565b60405190830160200151601f60005b60208110611e7c5750505080602061027892016040525192611e776001600160ff1b03851115611d4f565b61156c565b60019083831a8186015301906000190190611e4c565b50611e3d611e9f8461156c565b84109050611e34565b15611eaf57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b6001600160ff1b038111611f49576040516020815290601f60005b60208110611f30575050506040810160405290565b60019083831a6020828701015301906000190190611f1b565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b15611f9557565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b15611fe057565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b9190612031908361222c565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b810361209657505061ffff9261207091612451565b921660fd8110158061208a575b61208690611fd9565b9190565b5061ffff81111561207d565b607f60f91b81036120d657505063ffffffff926120b2916123d4565b921661ffff8111806120c8575b61208690611f8e565b5063ffffffff8111156120bf565b7fff0000000000000000000000000000000000000000000000000000000000000003612121575067ffffffffffffffff9261211091612300565b921661208663ffffffff8211611f8e565b905060f81c61208660fd8210611f8e565b67ffffffffffffffff811660fd811015612168575060ff6102789116604051906001825260f81b60208201526021810160405290565b61ffff81116121b85750610278611b2691611b2c6121a861ffff6121a160fd604051906001825260f81b60208201526021810160405290565b931661256f565b6040519485936020850190611a5e565b63ffffffff106121fa57610278611b2691611b2c6121a863ffffffff6121f360fe604051906001825260f81b60208201526021810160405290565b9316612534565b610278611b2691611b2c6121a861222660ff604051906001825260f81b60208201526021810160405290565b926124f9565b9190600181019283821161157a578051841115806122a0575b1561225c576020828592010151911161157a579190565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b50838210612245565b156122b057565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916008830180841161157a578151101580612367575b612321906122a9565b60405190830160200151600760005b60088110612351575050506008810160405260171901519161027890611590565b60019083831a8186015301906000190190612330565b5061232161237484611590565b84109050612318565b1561238457565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916004830180841161157a57815110158061243b575b6123f59061237d565b60405190830160200151600360005b600481106124255750505060048101604052601b190151916102789061159e565b60019083831a8186015301906000190190612404565b506123f56124488461159e565b841090506123ec565b9190916002830180841161157a57815181111590816124ef575b501561249f5761027890602084604051920101518060011a825360001a600182015360028101604052601d190151926115ac565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b905083103861246b565b6040516008815290601f60005b6008811061251b575050506028810160405290565b60019083831a6020828701015301906000190190612506565b6040516004815290601f60005b60048110612556575050506024810160405290565b60019083831a6020828701015301906000190190612541565b6040516002815290601f60005b60028110612591575050506022810160405290565b60019083831a602082870101530190600019019061257c565b906125d057508051156125bf57805190602001fd5b630a12f52160e11b60005260046000fd5b815115806125ff575b6125e1575090565b6001600160a01b0390639996b31560e01b6000521660045260246000fd5b50803b156125d956fea2646970667358221220bbb9827d5c0148ab5257f7a0661584376b4c997ad3e2e8dd50f8ef92cfe74c3164736f6c634300081a0033';

type MystikoV2CelerERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2CelerERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2CelerERC20 {
    return super.attach(address) as MystikoV2CelerERC20;
  }
  connect(signer: Signer): MystikoV2CelerERC20__factory {
    return super.connect(signer) as MystikoV2CelerERC20__factory;
  }
  static readonly contractName: 'MystikoV2CelerERC20';
  public readonly contractName: 'MystikoV2CelerERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerERC20Interface {
    return new utils.Interface(_abi) as MystikoV2CelerERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerERC20;
  }
}
