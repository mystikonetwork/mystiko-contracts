/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoV2CelerERC20, MystikoV2CelerERC20Interface } from '../MystikoV2CelerERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_daoCenter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_txFeeProxy',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FromProxyAddressNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'param',
        type: 'string',
      },
    ],
    name: 'Invalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'MinAmountGreaterThanMaxAmount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'maxAmount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minAmount',
        type: 'uint256',
      },
    ],
    name: 'DepositAmountLimits',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'DepositsDisabled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'MinBridgeFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'MinExecutorFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'PeerMinExecutorFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint256',
        name: 'peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'PeerMinRollupFee',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bool',
        name: 'state',
        type: 'bool',
      },
    ],
    name: 'SanctionsCheck',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'contract ISanctionsList',
        name: 'sanctions',
        type: 'address',
      },
    ],
    name: 'SanctionsList',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'center',
    outputs: [
      {
        internalType: 'contract IMystikoGovernorCenter',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.DepositRequest',
        name: '_request',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'disableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'enableSanctionsCheck',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsCheck',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'sanctionsList',
    outputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_commitmentPoolAddress',
        type: 'address',
      },
    ],
    name: 'setAssociatedCommitmentPool',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
    ],
    name: 'setBridgeProxyAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: '_state',
        type: 'bool',
      },
    ],
    name: 'setDepositsDisabled',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minBridgeFee',
        type: 'uint256',
      },
    ],
    name: 'setMinBridgeFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: '_peerChainId',
        type: 'uint64',
      },
      {
        internalType: 'string',
        name: '_peerChainName',
        type: 'string',
      },
      {
        internalType: 'address',
        name: '_peerContract',
        type: 'address',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinExecutorFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinExecutorFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_peerMinRollupFee',
        type: 'uint256',
      },
    ],
    name: 'setPeerMinRollupFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'txFeeProxy',
    outputs: [
      {
        internalType: 'contract IFeeQuery',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_maxAmount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_minAmount',
        type: 'uint256',
      },
    ],
    name: 'updateDepositAmountLimits',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract ISanctionsList',
        name: '_sanction',
        type: 'address',
      },
    ],
    name: 'updateSanctionsListAddress',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040525f80546001600160a81b031916740140c57923924b5c5c5455c48d93317139addac8fb17905534801562000036575f80fd5b50604051620030d4380380620030d48339810160408190526200005991620000d2565b600180546001600160a01b039384166001600160a01b0319918216179091556002805495841695821695909517909455600780549183169190941617909255600e80549190921661010002610100600160a81b031990911617905562000137565b6001600160a01b0381168114620000cf575f80fd5b50565b5f805f8060808587031215620000e6575f80fd5b8451620000f381620000ba565b60208601519094506200010681620000ba565b60408601519093506200011981620000ba565b60608601519092506200012c81620000ba565b939692955090935050565b612f8f80620001455f395ff3fe608060405260043610610243575f3560e01c80639a03636c11610131578063dd757c34116100ac578063ea0cde851161007c578063ed6ea33a11610062578063ed6ea33a14610656578063efbfb2ae1461066d578063f4ad17c614610681575f80fd5b8063ea0cde8514610619578063ec571c6a14610638575f80fd5b8063dd757c34146105aa578063ddac5dc1146105be578063e19abef8146105db578063e8183c44146105fa575f80fd5b8063b1c3942211610101578063c9230c5d116100e7578063c9230c5d14610542578063cdfceeba14610556578063cfc7e2da14610596575f80fd5b8063b1c39422146104fd578063c2d416011461051c575f80fd5b80639a03636c146104895780639c649fdf1461049c578063a3bc64f2146104bf578063a49f78c4146104de575f80fd5b80632cd26d45116101c1578063521ff057116101915780635e10b2b7116101775780635e10b2b7146104375780637d2c852014610456578063825b5f8d14610475575f80fd5b8063521ff057146104045780635898a0a814610423575f80fd5b80632cd26d451461039857806330f49cac146103b75780633fe3347a146103d65780634e3c10b7146103f0575f80fd5b806319e75d6e116102165780631f02d715116101fc5780631f02d7151461031557806321e32d55146103345780632421e15514610353575f80fd5b806319e75d6e146102c05780631ba46cfd146102df575f80fd5b806301dbf19f146102475780630ba959091461025d578063153dc45014610280578063176de7a81461029f575b5f80fd5b348015610252575f80fd5b5061025b610695565b005b348015610268575f80fd5b506009545b6040519081526020015b60405180910390f35b34801561028b575f80fd5b5061025b61029a36600461274e565b61077f565b3480156102aa575f80fd5b506102b361084d565b60405161027791906127b2565b3480156102cb575f80fd5b5061025b6102da36600461274e565b6108cb565b3480156102ea575f80fd5b50600e5461010090046001600160a01b03165b6040516001600160a01b039091168152602001610277565b348015610320575f80fd5b506001546102fd906001600160a01b031681565b34801561033f575f80fd5b506005546102fd906001600160a01b031681565b34801561035e575f80fd5b5060408051808201909152600581527f63656c657200000000000000000000000000000000000000000000000000000060208201526102b3565b3480156103a3575f80fd5b506006546102fd906001600160a01b031681565b3480156103c2575f80fd5b5061025b6103d13660046127db565b610991565b3480156103e1575f80fd5b505f60405161027791906127f6565b3480156103fb575f80fd5b506102b3610a70565b34801561040f575f80fd5b5061025b61041e36600461274e565b610afc565b34801561042e575f80fd5b50600c5461026d565b348015610442575f80fd5b5061025b61045136600461274e565b610c18565b348015610461575f80fd5b5061025b610470366004612904565b610cdf565b348015610480575f80fd5b50600d5461026d565b61025b6104973660046129b2565b610ddc565b6104af6104aa366004612a6b565b61109b565b6040519015158152602001610277565b3480156104ca575f80fd5b5061025b6104d93660046127db565b611122565b3480156104e9575f80fd5b506007546102fd906001600160a01b031681565b348015610508575f80fd5b505f546104af90600160a01b900460ff1681565b348015610527575f80fd5b506105306111d6565b60405160ff9091168152602001610277565b34801561054d575f80fd5b506102b361124c565b348015610561575f80fd5b5060035461057d90600160a01b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610277565b3480156105a1575f80fd5b5060085461026d565b3480156105b5575f80fd5b5061025b61129e565b3480156105c9575f80fd5b506003546001600160a01b03166102fd565b3480156105e6575f80fd5b5061025b6105f53660046127db565b61137c565b348015610605575f80fd5b5061025b610614366004612b0e565b611430565b348015610624575f80fd5b5061025b610633366004612b3b565b61152a565b348015610643575f80fd5b505f546102fd906001600160a01b031681565b348015610661575f80fd5b50600e5460ff166104af565b348015610678575f80fd5b50600a5461026d565b34801561068c575f80fd5b50600b5461026d565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156106dc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107009190612b56565b6001600160a01b0316146107275760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916600160a01b908117918290556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699261077592900460ff161515815260200190565b60405180910390a1565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156107c6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107ea9190612b56565b6001600160a01b0316146108115760405163177bc95160e11b815260040160405180910390fd5b600c8190556040518181527f14988234d3e50a12aeec2d6ee595b70c2fae163caff28baab5802b122bf2a753906020015b60405180910390a150565b6060600e60019054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b81526004015f60405180830381865afa15801561089f573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526108c69190810190612b71565b905090565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610912573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109369190612b56565b6001600160a01b03161461095d5760405163177bc95160e11b815260040160405180910390fd5b600a8190556040518181527e91f5f5db3092e39ecb701218d4af20b7571e0429595937c334f3acd14fe2fe90602001610842565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156109d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fc9190612b56565b6001600160a01b031614610a235760405163177bc95160e11b815260040160405180910390fd5b5f80546001600160a01b0319166001600160a01b0383169081179091556040519081527fbe1808917e09814fca7d80289a9760a4065f10d624ac1aee0b9f903c4f5d92b190602001610842565b60048054610a7d90612be3565b80601f0160208091040260200160405190810160405280929190818152602001828054610aa990612be3565b8015610af45780601f10610acb57610100808354040283529160200191610af4565b820191905f5260205f20905b815481529060010190602001808311610ad757829003601f168201915b505050505081565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610b43573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b679190612b56565b6001600160a01b031614610b8e5760405163177bc95160e11b815260040160405180910390fd5b805f03610be3576040516314e8955b60e21b815260206004820152601760248201527f70656572206d696e696d616c20726f6c6c75702066656500000000000000000060448201526064015b60405180910390fd5b600d8190556040518181527f878075a8e8aa1c7c15e6932752520f7812bf5744785e6df605373729da41554590602001610842565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610c5f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c839190612b56565b6001600160a01b031614610caa5760405163177bc95160e11b815260040160405180910390fd5b600b8190556040518181527f88d210dfa198f7519579294721f90c771153a7b49101eefb95147037cc8ce48190602001610842565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015610d26573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d4a9190612b56565b6001600160a01b031614610d715760405163177bc95160e11b815260040160405180910390fd5b600380547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff8616021790556004610db78382612c68565b50600580546001600160a01b0319166001600160a01b03929092169190911790555050565b600e5460ff1615610e0057604051630e2f42c960e31b815260040160405180910390fd5b60085481511015610e245760405163617ab12d60e11b815260040160405180910390fd5b60095481511115610e4857604051630625040160e01b815260040160405180910390fd5b600a548160a001511015610e6f5760405163c4d8d00d60e01b815260040160405180910390fd5b600c548160c001511015610e96576040516355a6d6a160e11b815260040160405180910390fd5b600d548160e001511015610ebd5760405163784f02bd60e11b815260040160405180910390fd5b5f610ed48260400151835f015184606001516115fd565b905080826020015114610efa576040516301bfaa2560e51b815260040160405180910390fd5b610f0333611713565b15610f2157604051632e70c0b160e01b815260040160405180910390fd5b5f6040518060400160405280610f45600e546001600160a01b036101009091041690565b6001600160a01b039081168252855160209283015260075460405163474aa58960e01b81528451831660048201529284015160248401529293505f92169063474aa589906044016040805180830381865afa158015610fa6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fca9190612d24565b90505f6040518060a00160405280865f01518152602001866020015181526020018660c0015181526020018660e001518152602001866080015181525090505f6110138261179c565b90506110238660a001518261180a565b600354602084015160e088015160c08901518951611066946001600160a01b031693929161105091612d78565b61105a9190612d78565b865160a08b015161188c565b60208601516040517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe905f90a2505050505050565b6006545f906001600160a01b031633146110c857604051633dca01cf60e11b815260040160405180910390fd5b5f61110785858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525061191c92505050565b9050611115868885846119db565b5060019695505050505050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611169573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061118d9190612b56565b6001600160a01b0316146111b45760405163177bc95160e11b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b5f600e60019054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611228573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c69190612d97565b6060600e60019054906101000a90046001600160a01b03166001600160a01b03166306fdde036040518163ffffffff1660e01b81526004015f60405180830381865afa15801561089f573d5f803e3d5ffd5b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156112e5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113099190612b56565b6001600160a01b0316146113305760405163177bc95160e11b815260040160405180910390fd5b5f805460ff60a01b1916908190556040517fa5ffe1601eb93a7fefd0d0eeb5fc94a2f65475f333836fe2b87fd7bbf59520699161077591600160a01b90910460ff161515815260200190565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa1580156113c3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113e79190612b56565b6001600160a01b03161461140e5760405163177bc95160e11b815260040160405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611477573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061149b9190612b56565b6001600160a01b0316146114c25760405163177bc95160e11b815260040160405180910390fd5b818111156114e357604051636003e82160e11b815260040160405180910390fd5b6009829055600881905560408051838152602081018390527f7633004c7a229869aeea10db4ff3e57e3b1534aeb2c9e72c5db25f965895c330910160405180910390a15050565b600154604080516361070aa960e01b8152905133926001600160a01b0316916361070aa99160048083019260209291908290030181865afa158015611571573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115959190612b56565b6001600160a01b0316146115bc5760405163177bc95160e11b815260040160405180910390fd5b600e805460ff19168215159081179091556040519081527fcd162c6fc24285bfbe399ec0cc2ce2c380ad27d2eb1fca418c652df1257e7e0990602001610842565b5f7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000180851061163f5760405163805f2a4960e01b815260040160405180910390fd5b80836fffffffffffffffffffffffffffffffff161061167157604051633bbde0bf60e21b815260040160405180910390fd5b60025460408051606081018252878152602081018790526fffffffffffffffffffffffffffffffff86168183015290516304b98e1d60e31b81526001600160a01b03909216916325cc70e8916116c991600401612db7565b602060405180830381865afa1580156116e4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117089190612de7565b9150505b9392505050565b5f8054600160a01b900460ff1661172b57505f919050565b5f5460405163df592f7d60e01b81526001600160a01b0384811660048301529091169063df592f7d90602401602060405180830381865afa158015611772573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906117969190612dfe565b92915050565b6060806117ab835f0151611ac5565b6117b88460200151611ac5565b6117c58560400151611ac5565b6117d28660600151611ac5565b6117df8760800151611b5b565b6040516020016117f3959493929190612e19565b60408051601f198184030181529190529392505050565b600654600554600354604051634f9e72ad60e11b81526001600160a01b0393841693639f3ce55a93879361185a93919092169167ffffffffffffffff600160a01b90910416908790600401612e83565b5f604051808303818588803b158015611871575f80fd5b505af1158015611883573d5f803e3d5ffd5b50505050505050565b8034146118db5760405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d61746368000000000000000000000000006044820152606401610bda565b600e546118f89061010090046001600160a01b0316338786611b92565b600e546119159061010090046001600160a01b0316338685611b92565b5050505050565b61194a6040518060a001604052805f81526020015f81526020015f81526020015f8152602001606081525090565b6119786040518060a001604052805f81526020015f81526020015f81526020015f8152602001606081525090565b5f6119838482611c07565b90835290506119928482611c07565b602084019190915290506119a68482611c07565b604084019190915290506119ba8482611c07565b606084019190915290506119ce8482611d35565b5060808301525092915050565b6005546001600160a01b03848116911614611a0957604051631440e07960e11b815260040160405180910390fd5b60035467ffffffffffffffff858116600160a01b9092041614611a3f57604051633876304f60e21b815260040160405180910390fd5b80515f03611a605760405163820bf1e560e01b815260040160405180910390fd5b6003546040516378d60cd760e01b81526001600160a01b03909116906378d60cd790611a929084908690600401612eb4565b5f604051808303815f87803b158015611aa9575f80fd5b505af1158015611abb573d5f803e3d5ffd5b5050505050505050565b60606001600160ff1b03821115611b1e5760405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606401610bda565b60405160208082525f601f5b82821015611b4b5785811a82602086010153600191909101905f1901611b2a565b5050506040818101905292915050565b8051606090611b6981611e41565b83604051602001611b7b929190612f10565b604051602081830303815290604052915050919050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052611c01908590611f0e565b50505050565b5f808351836020611c189190612d78565b11158015611c2f5750611c2c836020612d78565b83105b611c875760405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608401610bda565b5f60405160205f600182038760208a0101515b83831015611cba5780821a83860153600183019250600182039150611c9a565b50505081016040525190506001600160ff1b03811115611d1c5760405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606401610bda565b80611d28856020612d78565b92509250505b9250929050565b60605f80611d438585611ff7565b8651909550909150611d558286612d78565b11158015611d6b5750611d688185612d78565b84105b611dc35760405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608401610bda565b606081158015611dde57604051915060208201604052611e28565b6040519150601f8316801560200281840101848101888315602002848c0101015b81831015611e17578051835260209283019201611dff565b5050848452601f01601f1916604052505b5080611e348387612d78565b9350935050509250929050565b606060fd8267ffffffffffffffff161015611e7457604080516001815260f884901b602082015260218101909152611796565b61ffff8267ffffffffffffffff1611611ec457611e9460fd60f81b6121f8565b611e9d8361221f565b604051602001611eae929190612f10565b6040516020818303038152906040529050919050565b63ffffffff8267ffffffffffffffff1611611eef57611ee6607f60f91b6121f8565b611e9d83612260565b611f006001600160f81b03196121f8565b611e9d836122a1565b919050565b5f611f62826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122e29092919063ffffffff16565b805190915015611ff25780806020019051810190611f809190612dfe565b611ff25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610bda565b505050565b5f805f61200485856122f8565b945090505f6001600160f81b0319821660fd60f81b0361209b57612028868661237f565b955061ffff16905060fd8110801590612043575061ffff8111155b61208f5760405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606401610bda565b9250839150611d2e9050565b6001600160f81b03198216607f60f91b03612125576120ba8686612435565b955063ffffffff16905061ffff811180156120d9575063ffffffff8111155b61208f5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610bda565b6001600160f81b031980831690036121a2576121418686612503565b955067ffffffffffffffff16905063ffffffff811161208f5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610bda565b5060f881901c60fd811061208f5760405162461bcd60e51b815260206004820181905260248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152606401610bda565b60408051600181526001600160f81b03198316602082015260218101909152606090611796565b6040516002808252606091905f601f5b828210156122505785811a82602086010153600191909101905f190161222f565b5050506022810160405292915050565b6040516004808252606091905f601f5b828210156122915785811a82602086010153600191909101905f1901612270565b5050506024810160405292915050565b6040516008808252606091905f601f5b828210156122d25785811a82602086010153600191909101905f19016122b1565b5050506028810160405292915050565b60606122f084845f856125d1565b949350505050565b5f8083518360016123099190612d78565b11158015612320575061231d836001612d78565b83105b61236c5760405162461bcd60e51b815260206004820181905260248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152606401610bda565b8383016020015180611d28856001612d78565b5f8083518360026123909190612d78565b111580156123a757506123a4836002612d78565b83105b6123fe5760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610bda565b5f604051846020870101518060011a8253805f1a60018301535060028101604052601e81035191505080846002611d289190612d78565b5f8083518360046124469190612d78565b1115801561245d575061245a836004612d78565b83105b6124b45760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610bda565b5f60405160045f600182038760208a0101515b838310156124e75780821a838601536001830192506001820391506124c7565b505050016040819052601f190151905080611d28856004612d78565b5f8083518360086125149190612d78565b1115801561252b5750612528836008612d78565b83105b6125825760405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608401610bda565b5f60405160085f600182038760208a0101515b838310156125b55780821a83860153600183019250600182039150612595565b505050016040819052601f190151905080611d28856008612d78565b6060824710156126495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610bda565b6001600160a01b0385163b6126a05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bda565b5f80866001600160a01b031685876040516126bb9190612f3e565b5f6040518083038185875af1925050503d805f81146126f5576040519150601f19603f3d011682016040523d82523d5f602084013e6126fa565b606091505b509150915061270a828286612715565b979650505050505050565b6060831561272457508161170c565b8251156127345782518084602001fd5b8160405162461bcd60e51b8152600401610bda91906127b2565b5f6020828403121561275e575f80fd5b5035919050565b5f5b8381101561277f578181015183820152602001612767565b50505f910152565b5f815180845261279e816020860160208601612765565b601f01601f19169290920160200192915050565b602081525f61170c6020830184612787565b6001600160a01b03811681146127d8575f80fd5b50565b5f602082840312156127eb575f80fd5b813561170c816127c4565b602081016002831061281657634e487b7160e01b5f52602160045260245ffd5b91905290565b803567ffffffffffffffff81168114611f09575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051610100810167ffffffffffffffff8111828210171561286b5761286b612833565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561289a5761289a612833565b604052919050565b5f67ffffffffffffffff8211156128bb576128bb612833565b50601f01601f191660200190565b5f6128db6128d6846128a2565b612871565b90508281528383830111156128ee575f80fd5b828260208301375f602084830101529392505050565b5f805f60608486031215612916575f80fd5b61291f8461281c565b9250602084013567ffffffffffffffff81111561293a575f80fd5b8401601f8101861361294a575f80fd5b612959868235602084016128c9565b925050604084013561296a816127c4565b809150509250925092565b80356fffffffffffffffffffffffffffffffff81168114611f09575f80fd5b5f82601f8301126129a3575f80fd5b61170c838335602085016128c9565b5f602082840312156129c2575f80fd5b813567ffffffffffffffff808211156129d9575f80fd5b9083019061010082860312156129ed575f80fd5b6129f5612847565b823581526020830135602082015260408301356040820152612a1960608401612975565b6060820152608083013582811115612a2f575f80fd5b612a3b87828601612994565b60808301525060a083013560a082015260c083013560c082015260e083013560e082015280935050505092915050565b5f805f805f60808688031215612a7f575f80fd5b8535612a8a816127c4565b9450612a986020870161281c565b9350604086013567ffffffffffffffff80821115612ab4575f80fd5b818801915088601f830112612ac7575f80fd5b813581811115612ad5575f80fd5b896020828501011115612ae6575f80fd5b6020830195508094505050506060860135612b00816127c4565b809150509295509295909350565b5f8060408385031215612b1f575f80fd5b50508035926020909101359150565b80151581146127d8575f80fd5b5f60208284031215612b4b575f80fd5b813561170c81612b2e565b5f60208284031215612b66575f80fd5b815161170c816127c4565b5f60208284031215612b81575f80fd5b815167ffffffffffffffff811115612b97575f80fd5b8201601f81018413612ba7575f80fd5b8051612bb56128d6826128a2565b818152856020838501011115612bc9575f80fd5b612bda826020830160208601612765565b95945050505050565b600181811c90821680612bf757607f821691505b602082108103612c1557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115611ff2575f81815260208120601f850160051c81016020861015612c415750805b601f850160051c820191505b81811015612c6057828155600101612c4d565b505050505050565b815167ffffffffffffffff811115612c8257612c82612833565b612c9681612c908454612be3565b84612c1b565b602080601f831160018114612cc9575f8415612cb25750858301515b5f19600386901b1c1916600185901b178555612c60565b5f85815260208120601f198616915b82811015612cf757888601518255948401946001909101908401612cd8565b5085821015612d1457878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f60408284031215612d34575f80fd5b6040516040810181811067ffffffffffffffff82111715612d5757612d57612833565b604052825181526020830151612d6c816127c4565b60208201529392505050565b8082018082111561179657634e487b7160e01b5f52601160045260245ffd5b5f60208284031215612da7575f80fd5b815160ff8116811461170c575f80fd5b6060810181835f5b6003811015612dde578151835260209283019290910190600101612dbf565b50505092915050565b5f60208284031215612df7575f80fd5b5051919050565b5f60208284031215612e0e575f80fd5b815161170c81612b2e565b5f8651612e2a818460208b01612765565b865190830190612e3e818360208b01612765565b8651910190612e51818360208a01612765565b8551910190612e64818360208901612765565b8451910190612e77818360208801612765565b01979650505050505050565b6001600160a01b038416815267ffffffffffffffff83166020820152606060408201525f612bda6060830184612787565b60408152825160408201526020830151606082015260408301516080820152606083015160a08201525f608084015160a060c0840152612ef760e0840182612787565b9150506001600160a01b03831660208301529392505050565b5f8351612f21818460208801612765565b835190830190612f35818360208801612765565b01949350505050565b5f8251612f4f818460208701612765565b919091019291505056fea2646970667358221220a927c81849d0d54459354a956f243044cd3f40179d5b79865e45cfec34e32c2364736f6c63430008140033';

type MystikoV2CelerERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    _txFeeProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _daoCenter,
      _txFeeProxy,
      overrides || {},
    ) as Promise<MystikoV2CelerERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _daoCenter: string,
    _txFeeProxy: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher3, _token, _daoCenter, _txFeeProxy, overrides || {});
  }
  attach(address: string): MystikoV2CelerERC20 {
    return super.attach(address) as MystikoV2CelerERC20;
  }
  connect(signer: Signer): MystikoV2CelerERC20__factory {
    return super.connect(signer) as MystikoV2CelerERC20__factory;
  }
  static readonly contractName: 'MystikoV2CelerERC20';
  public readonly contractName: 'MystikoV2CelerERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerERC20Interface {
    return new utils.Interface(_abi) as MystikoV2CelerERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerERC20;
  }
}
