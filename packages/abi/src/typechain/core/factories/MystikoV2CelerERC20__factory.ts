/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type {
  MystikoV2CelerERC20,
  MystikoV2CelerERC20Interface,
  IMystikoBridge,
} from '../MystikoV2CelerERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IHasher3',
        name: '_hasher3',
        type: 'address',
      },
      {
        internalType: 'contract IERC20Metadata',
        name: '_token',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_bridgeProxyAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_settingsCenter',
        type: 'address',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'minAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'maxAmount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'minBridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'bridgeGasLimit',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeLocalConfig',
        name: '_localConfig',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'uint256',
            name: 'peerMinExecutorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'peerMinRollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerConfig',
        name: '_peerConfig',
        type: 'tuple',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountLessThanZero',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooLarge',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AmountTooSmall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'AssociatedPoolNotSet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'BridgeFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CertificateInvalid',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CommitmentHashIncorrect',
    type: 'error',
  },
  {
    inputs: [],
    name: 'DepositsDisabled',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ExecutorFeeTooFew',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [],
    name: 'HashKGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotSupport',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerChainIdNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractAlreadySet',
    type: 'error',
  },
  {
    inputs: [],
    name: 'PeerContractNotMatched',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RandomSGreaterThanFieldSize',
    type: 'error',
  },
  {
    inputs: [],
    name: 'RollupFeeToFew',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SanctionedAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'SenderIsNotBridgeProxy',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'commitment',
        type: 'uint256',
      },
    ],
    name: 'CommitmentCrossChain',
    type: 'event',
  },
  {
    inputs: [],
    name: 'assetAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetDecimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetSymbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetType',
    outputs: [
      {
        internalType: 'enum AssetPool.AssetType',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeProxyAddress',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'bridgeType',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '_request',
        type: 'tuple',
      },
      {
        internalType: 'uint256',
        name: '_certificateDeadline',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_certificateSignature',
        type: 'bytes',
      },
    ],
    name: 'certDeposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultBridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'defaultPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint256',
            name: 'amount',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'commitment',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'hashK',
            type: 'uint256',
          },
          {
            internalType: 'uint128',
            name: 'randomS',
            type: 'uint128',
          },
          {
            internalType: 'bytes',
            name: 'encryptedNote',
            type: 'bytes',
          },
          {
            internalType: 'uint256',
            name: 'bridgeFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'executorFee',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'rollupFee',
            type: 'uint256',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgeDepositRequest',
        name: '',
        type: 'tuple',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_sender',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: '_srcChainId',
        type: 'uint64',
      },
      {
        internalType: 'bytes',
        name: '_message',
        type: 'bytes',
      },
      {
        internalType: 'address',
        name: '_executor',
        type: 'address',
      },
    ],
    name: 'executeMessage',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getAssociatedCommitmentPool',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBridgeGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMaxAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinAmount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinBridgeFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMinExecutorFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getPeerMinRollupFee',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isCertificateCheckEnabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isDepositsDisabled',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPeerContractSet',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainId',
    outputs: [
      {
        internalType: 'uint64',
        name: '',
        type: 'uint64',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerChainName',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'peerContract',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'uint64',
            name: 'peerChainId',
            type: 'uint64',
          },
          {
            internalType: 'string',
            name: 'peerChainName',
            type: 'string',
          },
          {
            internalType: 'address',
            name: 'peerContract',
            type: 'address',
          },
        ],
        internalType: 'struct IMystikoBridge.BridgePeerContract',
        name: '_peerContract',
        type: 'tuple',
      },
    ],
    name: 'setPeerContract',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'settings',
    outputs: [
      {
        internalType: 'contract MystikoSettings',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60a0604052346101c8576040516128f038819003601f8101601f191683016001600160401b038111848210176101b25783928291604052833981010361014081126101c85781516001600160a01b038116908190036101c8576020830151926001600160a01b03841684036101c85761007a604082016101cd565b92610087606083016101cd565b936080607f198301126101c857604051608081016001600160401b038111828210176101b2576040526080840151815260a0840151906020810191825260c08501519260408201938452604060e0870151956060840196875260ff1901126101c8576040805190810197906001600160401b038911818a10176101b257602098604052610120610100890151988983520151988991015260018060a81b0319600054161760005560018060a01b031660018060a01b031960095416176009555160035551600455516005555160065560075560085560018060a01b031660018060a01b0319600a541617600a5560805260405161270e90816101e282396080518181816102c10152818161035e015281816109b401528181610a6301528181610d8c0152611c930152f35b634e487b7160e01b600052604160045260246000fd5b600080fd5b51906001600160a01b03821682036101c85756fe6080604052600436101561001257600080fd5b60003560e01c80630ba9590914610207578063176de7a8146102025780631ba46cfd146101fd57806321e32d55146101f85780632421e155146101f35780632cd26d45146101ee5780633fe3347a146101e9578063422e0028146101e45780634dde6fbc146101df5780634e3c10b7146101da578063640c0b36146101d5578063825b5f8d146101d05780639a03636c146101cb5780639c649fdf146101c6578063bc587706146101c1578063c2d41601146101bc578063c9230c5d146101b7578063cb5c029a146101b2578063cbe34285146101ad578063cdfceeba146101a8578063cfc7e2da146101a3578063d0b436bd1461019e578063dae8d7ca14610199578063ddac5dc114610194578063e06174e41461018f578063e7fcefaf1461018a578063ed6ea33a14610185578063efbfb2ae14610180578063f4ad17c61461017b578063fa750f56146101765763fb3e3d731461017157600080fd5b6110eb565b6110c5565b6110aa565b61108f565b611011565b610ff3565b610fcc565b610fa0565b610efe565b610ee0565b610ec5565b610e9a565b610e7c565b610ab3565b610a3d565b61098e565b61090e565b610885565b610847565b610771565b610753565b610679565b610621565b61057f565b61042f565b610408565b6103a9565b610382565b61033e565b61029b565b61021c565b600091031261021757565b600080fd5b34610217576000366003190112610217576020610237611124565b604051908152f35b60005b8381106102525750506000910152565b8181015183820152602001610242565b9060209161027b8151809281855285808601910161023f565b601f01601f1916010190565b906020610298928181520190610262565b90565b34610217576000366003190112610217576040516395d89b4160e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa80156103395761031291600091610316575b50604051918291602083526020830190610262565b0390f35b61033391503d806000833e61032b8183610482565b81019061118b565b386102fd565b611118565b346102175760003660031901126102175760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102175760003660031901126102175760206001600160a01b0360025416604051908152f35b346102175760003660031901126102175761031260408051906103cc8183610482565b600582527f63656c6572000000000000000000000000000000000000000000000000000000602083015251918291602083526020830190610262565b346102175760003660031901126102175760206001600160a01b0360095416604051908152f35b3461021757600036600319011261021757602060405160008152f35b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111761047d57604052565b61044b565b90601f8019910116810190811067ffffffffffffffff82111761047d57604052565b604051906104b461010083610482565b565b604051906104b4608083610482565b604051906104b460a083610482565b906104b46040519283610482565b6024359067ffffffffffffffff8216820361021757565b359067ffffffffffffffff8216820361021757565b67ffffffffffffffff811161047d57601f01601f191660200190565b9291926105368261050e565b916105446040519384610482565b829481845281830111610217578281602093846000960137010152565b6001600160a01b0381160361021757565b606435906104b482610561565b346102175760203660031901126102175760043567ffffffffffffffff81116102175760606003198236030112610217576040516105bc81610461565b6105c8826004016104f9565b8152602482013567ffffffffffffffff8111610217578201366023820112156102175761061f92610605604492369060246004820135910161052a565b6020840152013561061581610561565b60408201526111ea565b005b34610217576000366003190112610217576020600554604051908152f35b90600182811c9216801561066f575b602083101461065957565b634e487b7160e01b600052602260045260246000fd5b91607f169161064e565b3461021757600036600319011261021757604051600060015461069b8161063f565b808452906001811690811561072f57506001146106cf575b610312836106c381850382610482565b60405191829182610287565b91905060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6916000905b808210610715575090915081016020016106c36106b3565b9192600181602092548385880101520191019092916106fd565b60ff191660208086019190915291151560051b840190910191506106c390506106b3565b34610217576000366003190112610217576020600754604051908152f35b34610217576000366003190112610217576020610237611431565b35906fffffffffffffffffffffffffffffffff8216820361021757565b9080601f83011215610217578160206102989335910161052a565b919061010083820312610217576107d96104a4565b928035845260208101356020850152604081013560408501526107fe6060820161078c565b6060850152608081013567ffffffffffffffff81116102175760e0926108259183016107a9565b608085015260a081013560a085015260c081013560c0850152013560e0830152565b60203660031901126102175760043567ffffffffffffffff8111610217576108739036906004016107c4565b5063e7a24ff960e01b60005260046000fd5b60803660031901126102175760043561089d81610561565b6108a56104e2565b60443567ffffffffffffffff8111610217573660238201121561021757806004013567ffffffffffffffff811161021757366024828401011161021757610312936108fc9360246108f4610572565b940191611498565b60405190151581529081906020820190565b3461021757600036600319011261021757600460206001600160a01b03600a541660405192838092635e2c3b8360e11b82525afa9081156103395760009161095f575b506040519015158152602090f35b610981915060203d602011610987575b6109798183610482565b8101906115dc565b38610951565b503d61096f565b346102175760003660031901126102175760405163313ce56760e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610339576000916109fb575b60405160ff83168152602090f35b6020813d602011610a35575b81610a1460209383610482565b81010312610a31575160ff81168103610a315790506103126109ed565b5080fd5b3d9150610a07565b34610217576000366003190112610217576040516306fdde0360e01b81526000816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561033957610312916000916103165750604051918291602083526020830190610262565b60603660031901126102175760043567ffffffffffffffff811161021757610adf9036906004016107c4565b6024359060443567ffffffffffffffff811161021757610b039036906004016107a9565b91610b25610b19600a546001600160a01b031690565b6001600160a01b031690565b60405163bb07320560e01b8152306004820152909390602081602481885afa90811561033957600091610e5d575b50610e4c57604051635e2c3b8360e11b8152602081600481885afa90811561033957600091610e2d575b50610d77575b50508051610b8f611697565b11610d66578051610b9e611124565b10610d555760a081018051610bb16117a1565b11610d445760c08201918251610bc5611808565b11610d335760e081018051610bd8611431565b11610d2257610c0a60408301518351610c0460608601516fffffffffffffffffffffffffffffffff1690565b91611a2a565b946020830195865103610d115760405163df592f7d60e01b815232600482015290602090829060249082905afa90811561033957600091610cf2575b50610ce157610ca1610ca991610c99610cb996610c8f86518a51835186519060808b015192610c736104c5565b9485526020850152604084015260608301526080820152611b45565b955190519061168a565b90519061168a565b918351611c0a565b610cb1611713565b915191611c7a565b517fd106eb38b3368b7c294e36fae5513fdefe880be5abfad529b37b044f2fdd2dbe600080a2005b632e70c0b160e01b60005260046000fd5b610d0b915060203d602011610987576109798183610482565b38610c46565b6301bfaa2560e51b60005260046000fd5b63784f02bd60e11b60005260046000fd5b6355a6d6a160e11b60005260046000fd5b63c4d8d00d60e01b60005260046000fd5b630625040160e01b60005260046000fd5b63617ab12d60e11b60005260046000fd5b610ddc91602091610d866104b6565b328152917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031683850152604083015260608201526040518093819263849e8b9f60e01b8352600483016115f4565b0381865afa90811561033957600091610e0e575b5015610dfd573880610b83565b633042041f60e21b60005260046000fd5b610e27915060203d602011610987576109798183610482565b38610df0565b610e46915060203d602011610987576109798183610482565b38610b7d565b630e2f42c960e31b60005260046000fd5b610e76915060203d602011610987576109798183610482565b38610b53565b34610217576000366003190112610217576020600854604051908152f35b3461021757600036600319011261021757602067ffffffffffffffff60005460a81c16604051908152f35b34610217576000366003190112610217576020610237611697565b34610217576000366003190112610217576020600454604051908152f35b3461021757600036600319011261021757600a54604051634d047f8160e11b815230600482015290602090829060249082906001600160a01b03165afa90811561033957600091610f71575b5080610f6857506103126006545b6040519081529081906020820190565b61031290610f58565b610f93915060203d602011610f99575b610f8b8183610482565b810190611109565b38610f4a565b503d610f81565b34610217576000366003190112610217576020610fbb611713565b6001600160a01b0360405191168152f35b346102175760003660031901126102175760206001600160a01b03600a5416604051908152f35b34610217576000366003190112610217576020600654604051908152f35b3461021757600036600319011261021757602460206001600160a01b03600a54166040519283809263bb07320560e01b82523060048301525afa80156103395761031291600091611070575b5060405190151581529081906020820190565b611089915060203d602011610987576109798183610482565b3861105d565b346102175760003660031901126102175760206102376117a1565b34610217576000366003190112610217576020610237611808565b3461021757600036600319011261021757602060ff60005460a01c166040519015158152f35b34610217576000366003190112610217576020600354604051908152f35b90816020910312610217575190565b6040513d6000823e3d90fd5b600a5460405163473a063160e01b815230600482015290602090829060249082906001600160a01b03165afa9081156103395760009161116c575b5080610298575060045490565b611185915060203d602011610f9957610f8b8183610482565b3861115f565b6020818303126102175780519067ffffffffffffffff8211610217570181601f820112156102175780516111be8161050e565b926111cc6040519485610482565b8184526020828401011161021757610298916020808501910161023f565b60005460ff8160a01c166113cd577fffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffff7cffffffffffffffff000000000000000000000000000000000000000000835160a81b16911617600055602081015180519067ffffffffffffffff821161047d5761126e8261126960015461063f565b6113de565b602090601f831160011461133e57926112a9836112bb946040946112ef97600092611333575b50508160011b916000199060031b1c19161790565b6001555b01516001600160a01b031690565b6001600160a01b03167fffffffffffffffffffffffff00000000000000000000000000000000000000006002541617600255565b6104b4740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff6000541617600055565b015190503880611294565b6001600052601f19831691907fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf69260005b8181106113b55750936040936112ef9693600193836112bb981061139c575b505050811b016001556112ad565b015160001960f88460031b161c1916905538808061138e565b9293602060018192878601518155019501930161136f565b636d8f115160e11b60005260046000fd5b601f81116113ea575050565b60016000526020600020906020601f840160051c83019310611427575b601f0160051c01905b81811061141b575050565b60008155600101611410565b9091508190611407565b600a546040516361863c0360e11b815230600482015290602090829060249082906001600160a01b03165afa90811561033957600091611479575b5080610298575060085490565b611492915060203d602011610f9957610f8b8183610482565b3861146c565b9493919290926001600160a01b036009541633036115cb576114bb91369161052a565b936114c461186f565b506114cd61186f565b926115106115046114f86114ec6114e38a611e6b565b9089528a611eec565b90602089015289611eec565b90604088015288611eec565b906060870152876120f5565b909661151c888361168a565b81511015806115b4575b61152f90611f78565b8761155d575061154d6115589697604051926020840160405261168a565b506080850152611903565b600190565b9660405191601f821698818a1560051b808c8701019b858d0193010101905b808b106115a15750509061154d916115589899828552601f801991011660405261168a565b9099602080918c518152019a019061157c565b5061152f6115c2898461168a565b83109050611526565b633dca01cf60e11b60005260046000fd5b90816020910312610217575180151581036102175790565b60a0606061029893602084526001600160a01b0381511660208501526001600160a01b0360208201511660408501526040810151828501520151916080808201520190610262565b906020820180921161164a57565b634e487b7160e01b600052601160045260246000fd5b906008820180921161164a57565b906004820180921161164a57565b906002820180921161164a57565b9190820180921161164a57565b600a54604051635525984960e01b815230600482015290602090829060249082906001600160a01b03165afa908115610339576000916116df575b5080610298575060035490565b6116f8915060203d602011610f9957610f8b8183610482565b386116d2565b90816020910312610217575161029881610561565b600a546040516341fb697960e01b815230600482015290602090829060249082906001600160a01b03165afa90811561033957600091611772575b506001600160a01b038116156117615790565b6306f3d63360e51b60005260046000fd5b611794915060203d60201161179a575b61178c8183610482565b8101906116fe565b3861174e565b503d611782565b600a54604051637b52b00d60e01b815230600482015290602090829060249082906001600160a01b03165afa908115610339576000916117e9575b5080610298575060055490565b611802915060203d602011610f9957610f8b8183610482565b386117dc565b600a54604051634f314f9d60e11b815230600482015290602090829060249082906001600160a01b03165afa90811561033957600091611850575b5080610298575060075490565b611869915060203d602011610f9957610f8b8183610482565b38611843565b6040519060a0820182811067ffffffffffffffff82111761047d5760405260606080836000815260006020820152600060408201526000838201520152565b906001600160a01b036118fc60806020939695966040865280516040870152848101516060870152604081015182870152606081015160a0870152015160a060c086015260e0850190610262565b9416910152565b909291926001600160a01b03611924610b196002546001600160a01b031690565b9116036119eb5767ffffffffffffffff61195b61194e60005467ffffffffffffffff9060a81c1690565b67ffffffffffffffff1690565b9116036119da578051156119c957611977610b19610b19611713565b91823b15610217576119a392600092836040518096819582946378d60cd760e01b8452600484016118ae565b03925af18015610339576119b45750565b806119c360006104b493610482565b8061020c565b63820bf1e560e01b60005260046000fd5b63373bc12160e11b60005260046000fd5b631b495ecf60e31b60005260046000fd5b919060608301926000905b60038210611a1457505050565b6020806001928551815201930191019091611a07565b90917f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611b1d576fffffffffffffffffffffffffffffffff16907f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001821015611b0c57611add92602092611aab610b196000546001600160a01b031690565b91611ab660606104d4565b93845284840152604083015260405180809581946304b98e1d60e31b8352600483016119fc565b03915afa90811561033957600091611af3575090565b610298915060203d602011610f9957610f8b8183610482565b633bbde0bf60e21b60005260046000fd5b63805f2a4960e01b60005260046000fd5b90611b416020928281519485920161023f565b0190565b610298611bf691611bfc611b598251611fd0565b91611bf6611b6a6020830151611fd0565b91611bf6611b7b6040830151611fd0565b611bf66080611b8d6060860151611fd0565b94015195611be6611ba867ffffffffffffffff895116612202565b60206040519982611bc28c9451809285808801910161023f565b8301611bd68251809385808501910161023f565b010103601f198101895288610482565b6040519a8b9960208b0190611b2e565b90611b2e565b03601f198101835282610482565b6001600160a01b03600954166001600160a01b03600254169067ffffffffffffffff60005460a81c16813b156102175760009367ffffffffffffffff936119a360405197889687958694634f9e72ad60e11b86526004860152166024840152606060448401526064830190610262565b90913403611d8257600080611d25926001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001694604051906001600160a01b0360208301936323b872dd60e01b8552336024850152166044830152606482015260648152611cef608482610482565b519082865af13d15611d7a573d90611d068261050e565b91611d146040519384610482565b82523d6000602084013e5b8361267a565b8051908115159182611d58575b5050611d3b5750565b635274afe760e01b6000526001600160a01b031660045260246000fd5b611d73925090602080611d6f9383010191016115dc565b1590565b3880611d32565b606090611d1f565b60405162461bcd60e51b815260206004820152601360248201527f62726964676520666565206d69736d61746368000000000000000000000000006044820152606490fd5b15611dce57565b60405162461bcd60e51b815260206004820152602360248201527f4e65787455696e743235352c206f66667365742065786365656473206d6178696044820152626d756d60e81b6064820152608490fd5b15611e2657565b60405162461bcd60e51b815260206004820152601760248201527f56616c75652065786365656473207468652072616e67650000000000000000006044820152606490fd5b80516020111580611ed5575b611e8090611dc7565b604051602090910151601f60005b60208110611ebf57505050602081016040525190611eb56001600160ff1b03831115611e1f565b610298600061163c565b60019083831a8186015301906000190190611e8e565b50611e80611ee3600061163c565b15159050611e77565b9190916020830180841161164a578151101580611f62575b611f0d90611dc7565b60405190830160200151601f60005b60208110611f4c5750505080602061029892016040525192611f476001600160ff1b03851115611e1f565b61163c565b60019083831a8186015301906000190190611f1c565b50611f0d611f6f8461163c565b84109050611f04565b15611f7f57565b60405162461bcd60e51b8152602060048201526024808201527f4e65787456617242797465732c206f66667365742065786365656473206d6178604482015263696d756d60e01b6064820152608490fd5b6001600160ff1b038111612019576040516020815290601f60005b60208110612000575050506040810160405290565b60019083831a6020828701015301906000190190611feb565b60405162461bcd60e51b815260206004820152601b60248201527f56616c756520657863656564732075696e743235352072616e676500000000006044820152606490fd5b1561206557565b606460405162461bcd60e51b815260206004820152602060248201527f4e65787456617255696e742c2076616c7565206f7574736964652072616e67656044820152fd5b156120b057565b60405162461bcd60e51b815260206004820152601f60248201527f4e65787455696e7431362c2076616c7565206f7574736964652072616e6765006044820152606490fd5b919061210190836122fc565b92907fff00000000000000000000000000000000000000000000000000000000000000811660fd60f81b810361216657505061ffff9261214091612521565b921660fd8110158061215a575b612156906120a9565b9190565b5061ffff81111561214d565b607f60f91b81036121a657505063ffffffff92612182916124a4565b921661ffff811180612198575b6121569061205e565b5063ffffffff81111561218f565b7fff00000000000000000000000000000000000000000000000000000000000000036121f1575067ffffffffffffffff926121e0916123d0565b921661215663ffffffff821161205e565b905060f81c61215660fd821061205e565b67ffffffffffffffff811660fd811015612238575060ff6102989116604051906001825260f81b60208201526021810160405290565b61ffff81116122885750610298611bf691611bfc61227861ffff61227160fd604051906001825260f81b60208201526021810160405290565b931661263f565b6040519485936020850190611b2e565b63ffffffff106122ca57610298611bf691611bfc61227863ffffffff6122c360fe604051906001825260f81b60208201526021810160405290565b9316612604565b610298611bf691611bfc6122786122f660ff604051906001825260f81b60208201526021810160405290565b926125c9565b9190600181019283821161164a57805184111580612370575b1561232c576020828592010151911161164a579190565b606460405162461bcd60e51b815260206004820152602060248201527f4e657874427974652c204f66667365742065786365656473206d6178696d756d6044820152fd5b50838210612315565b1561238057565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7436342c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916008830180841161164a578151101580612437575b6123f190612379565b60405190830160200151600760005b60088110612421575050506008810160405260171901519161029890611660565b60019083831a8186015301906000190190612400565b506123f161244484611660565b841090506123e8565b1561245457565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7433322c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b9190916004830180841161164a57815110158061250b575b6124c59061244d565b60405190830160200151600360005b600481106124f55750505060048101604052601b190151916102989061166e565b60019083831a81860153019060001901906124d4565b506124c56125188461166e565b841090506124bc565b9190916002830180841161164a57815181111590816125bf575b501561256f5761029890602084604051920101518060011a825360001a600182015360028101604052601d1901519261167c565b60405162461bcd60e51b815260206004820152602260248201527f4e65787455696e7431362c206f66667365742065786365656473206d6178696d604482015261756d60f01b6064820152608490fd5b905083103861253b565b6040516008815290601f60005b600881106125eb575050506028810160405290565b60019083831a60208287010153019060001901906125d6565b6040516004815290601f60005b60048110612626575050506024810160405290565b60019083831a6020828701015301906000190190612611565b6040516002815290601f60005b60028110612661575050506022810160405290565b60019083831a602082870101530190600019019061264c565b906126a0575080511561268f57805190602001fd5b630a12f52160e11b60005260046000fd5b815115806126cf575b6126b1575090565b6001600160a01b0390639996b31560e01b6000521660045260246000fd5b50803b156126a956fea26469706673582212201bd377e78f96e74ce9b3e391977d75fd1ce8af456b27664f2e2f04638d2cc98b64736f6c634300081a0033';

type MystikoV2CelerERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoV2CelerERC20ConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoV2CelerERC20__factory extends ContractFactory {
  constructor(...args: MystikoV2CelerERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoV2CelerERC20';
  }

  deploy(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MystikoV2CelerERC20> {
    return super.deploy(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    ) as Promise<MystikoV2CelerERC20>;
  }
  getDeployTransaction(
    _hasher3: string,
    _token: string,
    _bridgeProxyAddress: string,
    _settingsCenter: string,
    _localConfig: IMystikoBridge.BridgeLocalConfigStruct,
    _peerConfig: IMystikoBridge.BridgePeerConfigStruct,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _hasher3,
      _token,
      _bridgeProxyAddress,
      _settingsCenter,
      _localConfig,
      _peerConfig,
      overrides || {},
    );
  }
  attach(address: string): MystikoV2CelerERC20 {
    return super.attach(address) as MystikoV2CelerERC20;
  }
  connect(signer: Signer): MystikoV2CelerERC20__factory {
    return super.connect(signer) as MystikoV2CelerERC20__factory;
  }
  static readonly contractName: 'MystikoV2CelerERC20';
  public readonly contractName: 'MystikoV2CelerERC20';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoV2CelerERC20Interface {
    return new utils.Interface(_abi) as MystikoV2CelerERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoV2CelerERC20 {
    return new Contract(address, _abi, signerOrProvider) as MystikoV2CelerERC20;
  }
}
