/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MystikoGovernorRegistry, MystikoGovernorRegistryInterface } from '../MystikoGovernorRegistry';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidMystikoDAOAddress',
    type: 'error',
  },
  {
    inputs: [],
    name: 'NotChanged',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyBeforeDaoInitialized',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyDeployer',
    type: 'error',
  },
  {
    inputs: [],
    name: 'OnlyMystikoDAO',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'DeployerRenounced',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'newDao',
        type: 'address',
      },
    ],
    name: 'MystikoDAOChanged',
    type: 'event',
  },
  {
    inputs: [],
    name: 'dao',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'daoMap',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'deployer',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceDeployer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_previousDao',
        type: 'address',
      },
    ],
    name: 'rollBackMystikoDAO',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newDao',
        type: 'address',
      },
    ],
    name: 'setMystikoDAO',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_newDao',
        type: 'address',
      },
    ],
    name: 'transferOwnerToDAO',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x6080806040523460375760008054336001600160a01b031991821681179092556001805490911690911790556103d9908161003d8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806326abb3fd1461030b57806327781ff0146102385780634162169f146102115780639545c171146101cf578063bf6f00d814610166578063d5f394881461013f5763ddee8f9b1461006957600080fd5b3461013a57602036600319011261013a576004356001600160a01b03811680910361013a576001600160a01b036001541680331490811591610124575b5061011357801561010357806001600160a01b031960005416176000558060005260026020526040600020600160ff198254161790557fde2e1324f3df3c01ca8d6df2ffe554430c8ad84c48bef85f850875e15f81eb86600080a2005b623e148760e41b60005260046000fd5b63363da34960e11b60005260046000fd5b90506001600160a01b03600054161415386100a6565b600080fd5b3461013a57600036600319011261013a5760206001600160a01b0360015416604051908152f35b3461013a57600036600319011261013a576001546001600160a01b03811633036101be576001600160a01b0319166001557f10dc94362cceafb01741f9b4a773a328c549fb0ff6f72ddaddedc4b7b96f6f19600080a1005b63618bbdd560e01b60005260046000fd5b3461013a57602036600319011261013a576004356001600160a01b03811680910361013a576000526002602052602060ff604060002054166040519015158152f35b3461013a57600036600319011261013a5760206001600160a01b0360005416604051908152f35b3461013a57602036600319011261013a576004356001600160a01b03811680910361013a576000546001600160a01b0381168033148015906102f7575b6102e65782156101035782146102d5576001600160a01b0319829116176000558060005260026020526040600020600160ff198254161790557fde2e1324f3df3c01ca8d6df2ffe554430c8ad84c48bef85f850875e15f81eb86600080a2005b6336a1c33f60e01b60005260046000fd5b63177bc95160e11b60005260046000fd5b506001600160a01b03600154163314610275565b3461013a57602036600319011261013a576004356001600160a01b03811680910361013a576001600160a01b036001541633036101be576000546001600160a01b03811682146102d55781600052600260205260ff6040600020541615610103576001600160a01b0319829116176000557fde2e1324f3df3c01ca8d6df2ffe554430c8ad84c48bef85f850875e15f81eb86600080a200fea264697066735822122032f6af1f6b9b09667168d228f597372ffe8f22eca4b92430d51a2868418e6f2064736f6c634300081a0033';

type MystikoGovernorRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MystikoGovernorRegistryConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MystikoGovernorRegistry__factory extends ContractFactory {
  constructor(...args: MystikoGovernorRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MystikoGovernorRegistry';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MystikoGovernorRegistry> {
    return super.deploy(overrides || {}) as Promise<MystikoGovernorRegistry>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MystikoGovernorRegistry {
    return super.attach(address) as MystikoGovernorRegistry;
  }
  connect(signer: Signer): MystikoGovernorRegistry__factory {
    return super.connect(signer) as MystikoGovernorRegistry__factory;
  }
  static readonly contractName: 'MystikoGovernorRegistry';
  public readonly contractName: 'MystikoGovernorRegistry';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MystikoGovernorRegistryInterface {
    return new utils.Interface(_abi) as MystikoGovernorRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MystikoGovernorRegistry {
    return new Contract(address, _abi, signerOrProvider) as MystikoGovernorRegistry;
  }
}
