/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockMystikoVoteToken, MockMystikoVoteTokenInterface } from '../MockMystikoVoteToken';

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract IERC20',
        name: '_xzk',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
    ],
    name: 'AddressEmptyCode',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'AddressInsufficientBalance',
    type: 'error',
  },
  {
    inputs: [],
    name: 'CheckpointUnorderedInsertion',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ECDSAInvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'ECDSAInvalidSignatureLength',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'ECDSAInvalidSignatureS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'increasedSupply',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'cap',
        type: 'uint256',
      },
    ],
    name: 'ERC20ExceededSafeSupply',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'allowance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'approver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidApprover',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidReceiver',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSpender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidUnderlying',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
    ],
    name: 'ERC2612ExpiredSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'ERC2612InvalidSigner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
      {
        internalType: 'uint48',
        name: 'clock',
        type: 'uint48',
      },
    ],
    name: 'ERC5805FutureLookup',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ERC6372InconsistentClock',
    type: 'error',
  },
  {
    inputs: [],
    name: 'FailedInnerCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'currentNonce',
        type: 'uint256',
      },
    ],
    name: 'InvalidAccountNonce',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidShortString',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'bits',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'SafeCastOverflowedUintDowncast',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
    ],
    name: 'StringTooLong',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'expiry',
        type: 'uint256',
      },
    ],
    name: 'VotesExpiredSignature',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'fromDelegate',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'toDelegate',
        type: 'address',
      },
    ],
    name: 'DelegateChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'delegate',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'previousVotes',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'newVotes',
        type: 'uint256',
      },
    ],
    name: 'DelegateVotesChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'EIP712DomainChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'CLOCK_MODE',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: 'pos',
        type: 'uint32',
      },
    ],
    name: 'checkpoints',
    outputs: [
      {
        components: [
          {
            internalType: 'uint48',
            name: '_key',
            type: 'uint48',
          },
          {
            internalType: 'uint208',
            name: '_value',
            type: 'uint208',
          },
        ],
        internalType: 'struct Checkpoints.Checkpoint208',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'clock',
    outputs: [
      {
        internalType: 'uint48',
        name: '',
        type: 'uint48',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
    ],
    name: 'delegate',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'delegatee',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'nonce',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'expiry',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'delegateBySig',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'delegates',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'depositFor',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eip712Domain',
    outputs: [
      {
        internalType: 'bytes1',
        name: 'fields',
        type: 'bytes1',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256[]',
        name: 'extensions',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastTotalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'timepoint',
        type: 'uint256',
      },
    ],
    name: 'getPastVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'getVotes',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
    ],
    name: 'nonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'numCheckpoints',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'underlying',
    outputs: [
      {
        internalType: 'contract IERC20',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'withdrawTo',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x61018080604052346104be57602081612a7a803803809161002082856104c3565b8339810103126104be57516001600160a01b0381168082036104be5760405161004a6040826104c3565b60128152602081017126bcb9ba34b5b7902b37ba32902a37b5b2b760711b8152604051906100796040836104c3565b601282527126bcb9ba34b5b7902b37ba32902a37b5b2b760711b6020830152604051926100a76040856104c3565b600484526376585a4b60e01b6020850152604051936100c76040866104c3565b60018552603160f81b60208601908152845190946001600160401b0382116103bb5760035490600182811c921680156104b4575b602083101461039b5781601f849311610444575b50602090601f83116001146103dc576000926103d1575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116103bb5760045490600182811c921680156103b1575b602083101461039b5781601f84931161032b575b50602090601f83116001146102c3576000926102b8575b50508160011b916000199060031b1c1916176004555b6101a9816104e6565b610120526101b684610694565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815261021f60c0826104c3565b5190206080523060c05230146102a357610160526040516122479081610833823960805181611372015260a0518161142f015260c05181611343015260e051816113c1015261010051816113e7015261012051816108e701526101405181610910015261016051818181610436015281816105c5015281816107d201526112be0152f35b63438d6fe360e01b6000523060045260246000fd5b01519050388061018a565b600460009081528281209350601f198516905b81811061031357509084600195949392106102fa575b505050811b016004556101a0565b015160001960f88460031b161c191690553880806102ec565b929360206001819287860151815501950193016102d6565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610391575b90601f859493920160051c01905b8181106103825750610173565b60008155849350600101610375565b9091508190610367565b634e487b7160e01b600052602260045260246000fd5b91607f169161015f565b634e487b7160e01b600052604160045260246000fd5b015190503880610126565b600360009081528281209350601f198516905b81811061042c5750908460019594939210610413575b505050811b0160035561013c565b015160001960f88460031b161c19169055388080610405565b929360206001819287860151815501950193016103ef565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106104aa575b90601f859493920160051c01905b81811061049b575061010f565b6000815584935060010161048e565b9091508190610480565b91607f16916100fb565b600080fd5b601f909101601f19168101906001600160401b038211908210176103bb57604052565b9081516020811060001461057e575090601f815111610522576020815191015160208210610512571790565b6000198260200360031b1b161790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106105665750508160006044809484010152601f80199101168101030190fd5b60208282018101516044878401015285935001610544565b6001600160401b0381116103bb57600554600181811c9116801561068a575b602082101461039b57601f8111610654575b50602092601f82116001146105ef57928192936000926105e4575b50508160011b916000199060031b1c19161760055560ff90565b0151905038806105ca565b601f198216936005600052806000209160005b86811061063c5750836001959610610623575b505050811b0160055560ff90565b015160001960f88460031b161c19169055388080610615565b91926020600181928685015181550194019201610602565b6005600052601f6020600020910160051c810190601f830160051c015b81811061067e57506105af565b60008155600101610671565b90607f169061059d565b9081516020811060001461071c575090601f8151116106c0576020815191015160208210610512571790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106107045750508160006044809484010152601f80199101168101030190fd5b602082820181015160448784010152859350016106e2565b6001600160401b0381116103bb57600654600181811c91168015610828575b602082101461039b57601f81116107f2575b50602092601f821160011461078d5792819293600092610782575b50508160011b916000199060031b1c19161760065560ff90565b015190503880610768565b601f198216936006600052806000209160005b8681106107da57508360019596106107c1575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806107b3565b919260206001819286850151815501940192016107a0565b6006600052601f6020600020910160051c810190601f830160051c015b81811061081c575061074d565b6000815560010161080f565b90607f169061073b56fe6080604052600436101561001257600080fd5b60003560e01c806306fdde03146101b7578063095ea7b3146101b257806318160ddd146101ad578063205c2878146101a857806323b872dd146101a35780632f4f21e21461019e578063313ce567146101995780633644e515146101945780633a46b1a81461018f5780634bf5d7e91461018a578063587cde1e146101855780635c19a95c146101805780636f307dc31461017b5780636fcfff451461017657806370a08231146101715780637ecebe001461016c57806384b0196e146101675780638e539e8c1461016257806391ddadf41461015d57806395d89b41146101585780639ab24eb014610153578063a9059cbb1461014e578063c3cda52014610149578063d505accf14610144578063dd62ed3e1461013f5763f1127ed81461013a57600080fd5b610ee2565b610e85565b610d53565b610c34565b610c03565b610bb9565b610b11565b610aee565b6109cf565b6108ce565b610894565b61085c565b6107f6565b6107b2565b61078e565b61074b565b6106ec565b610661565b61063e565b610618565b610555565b6104af565b61036e565b610350565b61031f565b610211565b919082519283825260005b8481106101e8575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016101c7565b90602061020e9281815201906101bc565b90565b346102ee5760003660031901126102ee57604051600060035461023381610f79565b80845290600181169081156102ca575060011461026b575b6102678361025b8185038261106d565b604051918291826101fd565b0390f35b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b8082106102b05750909150810160200161025b61024b565b919260018160209254838588010152019101909291610298565b60ff191660208086019190915291151560051b8401909101915061025b905061024b565b600080fd5b600435906001600160a01b03821682036102ee57565b602435906001600160a01b03821682036102ee57565b346102ee5760403660031901126102ee5761034561033b6102f3565b6024359033611653565b602060405160018152f35b346102ee5760003660031901126102ee576020600254604051908152f35b346102ee5760403660031901126102ee576103876102f3565b6024356001600160a01b03821630811461049b57503315610485576103bf336001600160a01b03166000526000602052604060002090565b5491818310610466578161045a93036103eb336001600160a01b03166000526000602052604060002090565b556103f98260025403600255565b60405182815260009033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a36104348233611e99565b7f00000000000000000000000000000000000000000000000000000000000000006110b9565b60405160018152602090f35b5063391434e360e21b6000523360045260249190915260445260646000fd5b634b637e8f60e11b600052600060045260246000fd5b63ec442f0560e01b60005260045260246000fd5b346102ee5760603660031901126102ee576104c86102f3565b6104d0610309565b604435906001600160a01b0383166000526001602052610507336040600020906001600160a01b0316600052602052604060002090565b54926001840161051c575b61045a93506110fa565b828410610538576105338361045a950333836116f9565b610512565b8284637dc7a0d960e11b6000523360045260245260445260646000fd5b346102ee5760403660031901126102ee5761056e6102f3565b602435303314610603576001600160a01b038216913083146105ee5761045a92506105e96040516323b872dd60e01b6020820152336024820152306044820152836064820152606481526105c360848261106d565b7f000000000000000000000000000000000000000000000000000000000000000061175c565b6111fa565b8263ec442f0560e01b60005260045260246000fd5b634b637e8f60e11b6000523060045260246000fd5b346102ee5760003660031901126102ee5760206106336112a9565b60ff60405191168152f35b346102ee5760003660031901126102ee576020610659611339565b604051908152f35b346102ee5760403660031901126102ee5761067a6102f3565b60243565ffffffffffff4216808210156106d4576102676001600160d01b036106c3846001600160a01b03871660005260096020526106bd604060002091611455565b906114b9565b604051911681529081906020820190565b90637669fc0f60e11b60005260045260245260446000fd5b346102ee5760003660031901126102ee57610267604080519061070f818361106d565b600e82527f6d6f64653d74696d657374616d700000000000000000000000000000000000006020830152519182916020835260208301906101bc565b346102ee5760203660031901126102ee576001600160a01b0361076c6102f3565b16600052600860205260206001600160a01b0360406000205416604051908152f35b346102ee5760203660031901126102ee576107b06107aa6102f3565b33611555565b005b346102ee5760003660031901126102ee5760206040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102ee5760203660031901126102ee576001600160a01b036108176102f3565b16600052600960205260406000205463ffffffff81116108435760405163ffffffff9091168152602090f35b6306dfcc6560e41b600052602060045260245260446000fd5b346102ee5760203660031901126102ee57602061065961087a6102f3565b6001600160a01b0316600052600060205260406000205490565b346102ee5760203660031901126102ee576001600160a01b036108b56102f3565b1660005260076020526020604060002054604051908152f35b346102ee5760003660031901126102ee5761097461090b7f0000000000000000000000000000000000000000000000000000000000000000611b46565b6109347f0000000000000000000000000000000000000000000000000000000000000000611baa565b6020604051610943828261106d565b600081528161098281830194601f198301368737604051978897600f60f81b895260e0858a015260e08901906101bc565b9087820360408901526101bc565b91466060870152306080870152600060a087015285830360c0870152519182815201929160005b8281106109b857505050500390f35b8351855286955093810193928101926001016109a9565b346102ee5760203660031901126102ee574265ffffffffffff1660043581811015610ad7576109fd90611455565b6000600a5481928160058111610a70575b50906001600160d01b0393610a2492600a6119ae565b80610a3757505b60405191168152602090f35b610a409061149c565b600a9091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8015460301c610a2b565b93610a7a85611839565b8503948511610ad2576001600160d01b0394610a2493600a865265ffffffffffff826020882001541665ffffffffffff851610600014610ac05750915b91925093610a0e565b929150610acc906114ab565b90610ab7565b611486565b637669fc0f60e11b60005260045260245260446000fd5b346102ee5760003660031901126102ee57602060405165ffffffffffff42168152f35b346102ee5760003660031901126102ee576040516000600454610b3381610f79565b80845290600181169081156102ca5750600114610b5a576102678361025b8185038261106d565b600460009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b808210610b9f5750909150810160200161025b61024b565b919260018160209254838588010152019101909291610b87565b346102ee5760203660031901126102ee576001600160a01b03610bda6102f3565b16600052600960205260206001600160d01b03610bfa60406000206115ef565b16604051908152f35b346102ee5760403660031901126102ee57610345610c1f6102f3565b60243590336110fa565b60ff8116036102ee57565b346102ee5760c03660031901126102ee57610c4d6102f3565b60243590604435606435610c6081610c29565b6084359060a43592804211610d3f5791610ce69391610cd8610cdd9460405160208101917fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf83526001600160a01b038a1660408301528a6060830152608082015260808152610cd060a08261106d565b51902061161e565b611be1565b90929192611c96565b610d0c816001600160a01b03166000526007602052604060002080549060018201905590565b809303610d1d576107b09250611555565b6001600160a01b0391506301d4b62360e61b6000521660045260245260446000fd5b632341d78760e11b60005260045260246000fd5b346102ee5760e03660031901126102ee57610d6c6102f3565b610d74610309565b6044359060643592608435610d8881610c29565b60a43560c43590864211610e7057610e3392610e2e610dc3866001600160a01b03166000526007602052604060002080549060018201905590565b9860405160208101917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c983526001600160a01b0389169b8c60408401526001600160a01b038b1660608401528b608084015260a083015260c082015260c08152610cd060e08261106d565b611644565b936001600160a01b03851603610e4d576107b09350611653565b6325c0072360e11b6000526001600160a01b038085166004521660245260446000fd5b8663313c898160e11b60005260045260246000fd5b346102ee5760403660031901126102ee576020610ed9610ea36102f3565b6001600160a01b03610eb3610309565b9116600052600183526040600020906001600160a01b0316600052602052604060002090565b54604051908152f35b346102ee5760403660031901126102ee57610efb6102f3565b6024359063ffffffff821682036102ee57610f50916001600160a01b03610f4a92610f246110a0565b50610f2d6110a0565b501660005260096020526040600020610f446110a0565b50611d18565b50611d46565b60408051825165ffffffffffff1681526020928301516001600160d01b03169281019290925290f35b90600182811c92168015610fa9575b6020831014610f9357565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f88565b60009291815491610fc383610f79565b80835292600181169081156110195750600114610fdf57505050565b60009081526020812093945091925b838310610fff575060209250010190565b600181602092949394548385870101520191019190610fee565b915050602093945060ff929192191683830152151560051b010190565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761106857604052565b611036565b90601f8019910116810190811067ffffffffffffffff82111761106857604052565b6040519061109e60408361106d565b565b604051906110ad8261104c565b60006020838281520152565b60405163a9059cbb60e01b60208201526001600160a01b0392909216602483015260448083019390935291815261109e916110f560648361106d565b61175c565b9291906001600160a01b038416938415610485576001600160a01b03821680156111e45760009561113e836001600160a01b03166000526000602052604060002090565b548581106111c05761109e9697867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef920361118c866001600160a01b03166000526000602052604060002090565b556111aa866001600160a01b03166000526000602052604060002090565b80548801905550604051868152602090a3611f99565b63391434e360e21b88526001600160a01b0384166004526024526044859052606487fd5b63ec442f0560e01b600052600060045260246000fd5b91906001600160a01b0383169283156111e457600254828101809111610ad25760025560009361123d826001600160a01b03166000526000602052604060002090565b80548401905560405183815285907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602090a3600254936001600160d01b0380861161129157505061109e929350611f1f565b630e58ae9360e11b8252600486905260245260449150fd5b60405163313ce56760e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa600091816112fc575b5061020e5750601290565b9091506020813d602011611331575b816113186020938361106d565b810103126102ee575161132a81610c29565b90386112f1565b3d915061130b565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630148061142c575b15611394577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815261142660c08261106d565b51902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461136b565b65ffffffffffff811161146d5765ffffffffffff1690565b6306dfcc6560e41b600052603060045260245260446000fd5b634e487b7160e01b600052601160045260246000fd5b600019810191908211610ad257565b9060018201809211610ad257565b9081549060008291600584116114ff575b6114d59350846119ae565b60009190806114e657505050600090565b6114ef9061149c565b9082526020909120015460301c90565b919261150a81611839565b8103908111610ad2576114d5938560005265ffffffffffff82602060002001541665ffffffffffff8516106000146115435750916114ca565b92915061154f906114ab565b906114ca565b6001600160a01b03818116600081815260086020526040812080548685167fffffffffffffffffffffffff00000000000000000000000000000000000000008216811790925561109e969416946115e99390928691907f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9080a46001600160a01b0316600052600060205260406000205490565b91611a15565b805490816115fe575050600090565b81600019810111610ad25760005260001990602060002001015460301c90565b604290611629611339565b906040519161190160f01b8352600283015260228201522090565b9161020e9391610cdd93611be1565b6001600160a01b03169081156116e3576001600160a01b0381169283156116cd57806116c07f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925938560005260016020526040600020906001600160a01b0316600052602052604060002090565b55604051908152602090a3565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b6001600160a01b03169081156116e3576001600160a01b038116156116cd576117419160005260016020526040600020906001600160a01b0316600052602052604060002090565b55565b908160209103126102ee575180151581036102ee5790565b60006001600160a01b038192169260208151910182855af13d1561180d573d67ffffffffffffffff8111611068576040516117b89290916117a7601f8201601f19166020018461106d565b82523d6000602084013e5b83612015565b80519081151591826117eb575b50506117ce5750565b635274afe760e01b6000526001600160a01b031660045260246000fd5b611806925090602080611802938301019101611744565b1590565b38806117c5565b6117b8906060906117b2565b8115611823570490565b634e487b7160e01b600052601260045260246000fd5b80156119a85761020e9061193e61193761192d61192361191961190f6119056118fb60016118e960008b608081901c8061199a575b508061187d6118df9260401c90565b8061198d575b5061188e8160201c90565b80611980575b5061189f8160101c90565b80611973575b506118b08160081c90565b80611966575b506118c18160041c90565b80611959575b506118d28160021c90565b8061194c575b5060011c90565b6119445760011c90565b1b6118f4818b611819565b0160011c90565b6118f4818a611819565b6118f48189611819565b6118f48188611819565b6118f48187611819565b6118f48186611819565b6118f48185611819565b8092611819565b90611d6a565b820160011c90565b60029150920191386118d8565b60049150920191386118c7565b60089150920191386118b6565b60109150920191386118a5565b6020915092019138611894565b6040915092019138611883565b6080925090506118df61186e565b50600090565b91905b8382106119be5750505090565b9091928083169080841860011c8201809211610ad2578460005265ffffffffffff82602060002001541665ffffffffffff841610600014611a035750925b91906119b1565b939250611a0f906114ab565b916119fc565b91906001600160a01b038116926001600160a01b038116908482141580611b3d575b611a43575b5050505050565b81611ad8575b505082611a58575b8080611a3c565b611acd611ab47fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72493611aae611aa86001600160d01b03956001600160a01b03166000526009602052604060002090565b91611d7c565b90611dec565b6040805192851683529316602082015291829190820190565b0390a2388080611a51565b6001600160d01b03611b33611ab4611b247fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724946001600160a01b03166000526009602052604060002090565b611b2d88611d7c565b90611daf565b0390a23880611a49565b50831515611a37565b60ff8114611b905760ff811690601f8211611b7f576040805192611b6a828561106d565b6020808552840191601f190136833783525290565b632cd44ac360e21b60005260046000fd5b5060405161020e81611ba3816005610fb3565b038261106d565b60ff8114611bce5760ff811690601f8211611b7f576040805192611b6a828561106d565b5060405161020e81611ba3816006610fb3565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611c6a579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15611c5e576000516001600160a01b03811615611c525790600090600090565b50600090600190600090565b6040513d6000823e3d90fd5b50505060009160039190565b60041115611c8057565b634e487b7160e01b600052602160045260246000fd5b611c9f81611c76565b80611ca8575050565b611cb181611c76565b60018103611cca5763f645eedf60e01b60005260046000fd5b611cd381611c76565b60028103611cf0575063fce698f760e01b60005260045260246000fd5b80611cfc600392611c76565b14611d045750565b6335e2f38360e21b60005260045260246000fd5b8054821015611d305760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90604051611d538161104c565b915465ffffffffffff8116835260301c6020830152565b9080821015611d77575090565b905090565b6001600160d01b038111611d96576001600160d01b031690565b6306dfcc6560e41b60005260d060045260245260446000fd5b906001600160d01b0380611dc2846115ef565b92169116036001600160d01b038111610ad257611de89165ffffffffffff4216906120d7565b9091565b906001600160d01b0380611dff846115ef565b92169116016001600160d01b038111610ad257611de89165ffffffffffff4216906120d7565b6001600160d01b0380611e38600a6115ef565b92169116016001600160d01b038111610ad257611de8904265ffffffffffff16600a6120d7565b6001600160d01b0380611e72600a6115ef565b92169116036001600160d01b038111610ad257611de8904265ffffffffffff16600a6120d7565b906001600160a01b0361109e92168015611f07575b611ebf611eba83611d7c565b611e5f565b50506000908152600860205260408120549080527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c7546001600160a01b039081169116611a15565b611f18611f1383611d7c565b611e25565b5050611eae565b906001600160a01b0361109e92611f38611f1384611d7c565b5050168015611f86575b60086020527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c75460009182526040909120546001600160a01b039081169116611a15565b611f92611eba83611d7c565b5050611f42565b906001600160a01b038061109e949316918215612002575b16908115611fef575b60005260086020526001600160a01b03604060002054169060005260086020526001600160a01b036040600020541690611a15565b611ffb611eba84611d7c565b5050611fba565b61200e611f1385611d7c565b5050611fb1565b9061203b575080511561202a57805190602001fd5b630a12f52160e11b60005260046000fd5b8151158061206a575b61204c575090565b6001600160a01b0390639996b31560e01b6000521660045260246000fd5b50803b15612044565b8054680100000000000000008110156110685761209591600182018155611d18565b6120c15781516020929092015160301b65ffffffffffff191665ffffffffffff92909216919091179055565b634e487b7160e01b600052600060045260246000fd5b8054929392919082156121e7576121056121006120f38561149c565b8360005260206000200190565b611d46565b9065ffffffffffff61211d835165ffffffffffff1690565b81851691829116116121d65761219a946020948892612150612145875165ffffffffffff1690565b65ffffffffffff1690565b0361219e575061218c926121666121739261149c565b9060005260206000200190565b9065ffffffffffff82549181199060301b169116179055565b01516001600160d01b031690565b9190565b9150506121d1916121be6121b061108f565b65ffffffffffff9093168352565b6001600160d01b03881682860152612073565b61218c565b632520601d60e01b60005260046000fd5b61220b92506121f76121b061108f565b6001600160d01b0385166020830152612073565b6000919056fea2646970667358221220d804d50de5a378a43f52436340ab4b4af27345cfe655f0a39978250f7ebdc05364736f6c634300081a0033';

type MockMystikoVoteTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMystikoVoteTokenConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMystikoVoteToken__factory extends ContractFactory {
  constructor(...args: MockMystikoVoteTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MockMystikoVoteToken';
  }

  deploy(
    _xzk: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): Promise<MockMystikoVoteToken> {
    return super.deploy(_xzk, overrides || {}) as Promise<MockMystikoVoteToken>;
  }
  getDeployTransaction(
    _xzk: string,
    overrides?: Overrides & { from?: string | Promise<string> },
  ): TransactionRequest {
    return super.getDeployTransaction(_xzk, overrides || {});
  }
  attach(address: string): MockMystikoVoteToken {
    return super.attach(address) as MockMystikoVoteToken;
  }
  connect(signer: Signer): MockMystikoVoteToken__factory {
    return super.connect(signer) as MockMystikoVoteToken__factory;
  }
  static readonly contractName: 'MockMystikoVoteToken';
  public readonly contractName: 'MockMystikoVoteToken';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMystikoVoteTokenInterface {
    return new utils.Interface(_abi) as MockMystikoVoteTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockMystikoVoteToken {
    return new Contract(address, _abi, signerOrProvider) as MockMystikoVoteToken;
  }
}
