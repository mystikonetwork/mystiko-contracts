/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { MockMystikoToken, MockMystikoTokenInterface } from '../MockMystikoToken';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'ECDSAInvalidSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'length',
        type: 'uint256',
      },
    ],
    name: 'ECDSAInvalidSignatureLength',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'ECDSAInvalidSignatureS',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'allowance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientAllowance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'needed',
        type: 'uint256',
      },
    ],
    name: 'ERC20InsufficientBalance',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'approver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidApprover',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'receiver',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidReceiver',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'ERC20InvalidSpender',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
    ],
    name: 'ERC2612ExpiredSignature',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'signer',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'ERC2612InvalidSigner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'currentNonce',
        type: 'uint256',
      },
    ],
    name: 'InvalidAccountNonce',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidShortString',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'string',
        name: 'str',
        type: 'string',
      },
    ],
    name: 'StringTooLong',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Approval',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [],
    name: 'EIP712DomainChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
    ],
    name: 'allowance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'approve',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'decimals',
    outputs: [
      {
        internalType: 'uint8',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'eip712Domain',
    outputs: [
      {
        internalType: 'bytes1',
        name: 'fields',
        type: 'bytes1',
      },
      {
        internalType: 'string',
        name: 'name',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'version',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'chainId',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'verifyingContract',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256[]',
        name: 'extensions',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'nonces',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'spender',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'v',
        type: 'uint8',
      },
      {
        internalType: 'bytes32',
        name: 'r',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: 's',
        type: 'bytes32',
      },
    ],
    name: 'permit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transfer',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'value',
        type: 'uint256',
      },
    ],
    name: 'transferFrom',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x610160604052346104e9576040516100186040826104ee565b600d8152602081016c26bcb9ba34b5b7902a37b5b2b760991b8152604051906100426040836104ee565b600d82526c26bcb9ba34b5b7902a37b5b2b760991b60208301526040519261006b6040856104ee565b6003845262585a4b60e81b60208501526040519361008a6040866104ee565b60018552603160f81b60208601908152845190946001600160401b0382116103e65760035490600182811c921680156104df575b60208310146103c65781601f84931161046f575b50602090601f8311600114610407576000926103fc575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116103e65760045490600182811c921680156103dc575b60208310146103c65781601f849311610356575b50602090601f83116001146102ee576000926102e3575b50508160011b916000199060031b1c1916176004555b61016c81610511565b61012052610179846106bf565b61014052519020918260e05251902080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526101e260c0826104ee565b5190206080523060c05233156102cd576002546b033b2e3c9fd0803ce800000081018091116102b757600255600033815280602052604081206b033b2e3c9fd0803ce80000008154019055604051906b033b2e3c9fd0803ce800000082527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3604051610c8a908161085e82396080518161094f015260a05181610a0c015260c05181610920015260e0518161099e015261010051816109c401526101205181610379015261014051816103a20152f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b01519050388061014d565b600460009081528281209350601f198516905b81811061033e5750908460019594939210610325575b505050811b01600455610163565b015160001960f88460031b161c19169055388080610317565b92936020600181928786015181550195019301610301565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c810191602085106103bc575b90601f859493920160051c01905b8181106103ad5750610136565b600081558493506001016103a0565b9091508190610392565b634e487b7160e01b600052602260045260246000fd5b91607f1691610122565b634e487b7160e01b600052604160045260246000fd5b0151905038806100e9565b600360009081528281209350601f198516905b818110610457575090846001959493921061043e575b505050811b016003556100ff565b015160001960f88460031b161c19169055388080610430565b9293602060018192878601518155019501930161041a565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106104d5575b90601f859493920160051c01905b8181106104c657506100d2565b600081558493506001016104b9565b90915081906104ab565b91607f16916100be565b600080fd5b601f909101601f19168101906001600160401b038211908210176103e657604052565b908151602081106000146105a9575090601f81511161054d57602081519101516020821061053d571790565b6000198260200360031b1b161790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b8381106105915750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161056f565b6001600160401b0381116103e657600554600181811c911680156106b5575b60208210146103c657601f811161067f575b50602092601f821160011461061a579281929360009261060f575b50508160011b916000199060031b1c19161760055560ff90565b0151905038806105f5565b601f198216936005600052806000209160005b868110610667575083600195961061064e575b505050811b0160055560ff90565b015160001960f88460031b161c19169055388080610640565b9192602060018192868501518155019401920161062d565b6005600052601f6020600020910160051c810190601f830160051c015b8181106106a957506105da565b6000815560010161069c565b90607f16906105c8565b90815160208110600014610747575090601f8151116106eb57602081519101516020821061053d571790565b6040519063305a27a960e01b8252602060048301528181519182602483015260005b83811061072f5750508160006044809484010152601f80199101168101030190fd5b6020828201810151604487840101528593500161070d565b6001600160401b0381116103e657600654600181811c91168015610853575b60208210146103c657601f811161081d575b50602092601f82116001146107b857928192936000926107ad575b50508160011b916000199060031b1c19161760065560ff90565b015190503880610793565b601f198216936006600052806000209160005b86811061080557508360019596106107ec575b505050811b0160065560ff90565b015160001960f88460031b161c191690553880806107de565b919260206001819286850151815501940192016107cb565b6006600052601f6020600020910160051c810190601f830160051c015b8181106108475750610778565b6000815560010161083a565b90607f169061076656fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461064a57508063095ea7b31461062457806318160ddd1461060657806323b872dd14610510578063313ce567146104f45780633644e515146104d157806370a08231146104975780637ecebe001461045d57806384b0196e1461036057806395d89b411461027b578063a9059cbb1461024a578063d505accf1461010b5763dd62ed3e146100ae57600080fd5b34610106576040366003190112610106576100c7610730565b6001600160a01b036100d7610746565b911660005260016020526001600160a01b03604060002091166000526020526020604060002054604051908152f35b600080fd5b346101065760e036600319011261010657610124610730565b61012c610746565b604435906064359260843560ff8116810361010657844211610235576102076101fe6001600160a01b0392838516978860005260076020526040600020908154916001830190556040519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c984528b6040840152878a1660608401528a608084015260a083015260c082015260c081526101cc60e082610819565b5190206101d7610916565b906040519161190160f01b83526002830152602282015260c43591604260a4359220610b37565b90929192610bcc565b1684810361021c575061021a9350610a32565b005b84906325c0072360e11b60005260045260245260446000fd5b8463313c898160e11b60005260045260246000fd5b3461010657604036600319011261010657610270610266610730565b6024359033610851565b602060405160018152f35b3461010657600036600319011261010657604051600060045461029d8161075c565b808452906001811690811561033c57506001146102dd575b6102d9836102c581850382610819565b6040519182916020835260208301906106ef565b0390f35b600460009081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b808210610322575090915081016020016102c56102b5565b91926001816020925483858801015201910190929161030a565b60ff191660208086019190915291151560051b840190910191506102c590506102b5565b34610106576000366003190112610106576103ff61039d7f0000000000000000000000000000000000000000000000000000000000000000610a99565b6103c67f0000000000000000000000000000000000000000000000000000000000000000610b00565b602061040d604051926103d98385610819565b600084526000368137604051958695600f60f81b875260e08588015260e08701906106ef565b9085820360408701526106ef565b466060850152306080850152600060a085015283810360c085015281808451928381520193019160005b82811061044657505050500390f35b835185528695509381019392810192600101610437565b34610106576020366003190112610106576001600160a01b0361047e610730565b1660005260076020526020604060002054604051908152f35b34610106576020366003190112610106576001600160a01b036104b8610730565b1660005260006020526020604060002054604051908152f35b346101065760003660031901126101065760206104ec610916565b604051908152f35b3461010657600036600319011261010657602060405160128152f35b3461010657606036600319011261010657610529610730565b610531610746565b604435906001600160a01b0383169283600052600160205260406000206001600160a01b0333166000526020526040600020546000198103610579575b506102709350610851565b8381106105e95784156105d35733156105bd5761027094600052600160205260406000206001600160a01b033316600052602052836040600020910390558461056e565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610106576000366003190112610106576020600254604051908152f35b3461010657604036600319011261010657610270610640610730565b6024359033610a32565b346101065760003660031901126101065760006003546106698161075c565b808452906001811690811561033c5750600114610690576102d9836102c581850382610819565b600360009081527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b939250905b8082106106d5575090915081016020016102c56102b5565b9192600181602092548385880101520191019092916106bd565b919082519283825260005b84811061071b575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016106fa565b600435906001600160a01b038216820361010657565b602435906001600160a01b038216820361010657565b90600182811c9216801561078c575b602083101461077657565b634e487b7160e01b600052602260045260246000fd5b91607f169161076b565b600092918154916107a68361075c565b80835292600181169081156107fc57506001146107c257505050565b60009081526020812093945091925b8383106107e2575060209250010190565b6001816020929493945483858701015201910191906107d1565b915050602093945060ff929192191683830152151560051b010190565b90601f8019910116810190811067ffffffffffffffff82111761083b57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0316908115610900576001600160a01b03169182156108ea5760008281528060205260408120548281106108d05791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fd5b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016301480610a09575b15610971577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610a0360c082610819565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610948565b6001600160a01b03169081156105d3576001600160a01b03169182156105bd5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60ff8114610ae35760ff811690601f8211610ad2576040805192610abd8285610819565b6020808552840191601f190136833783525290565b632cd44ac360e21b60005260046000fd5b50604051610afd81610af6816005610796565b0382610819565b90565b60ff8114610b245760ff811690601f8211610ad2576040805192610abd8285610819565b50604051610afd81610af6816006610796565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610bc0579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15610bb4576000516001600160a01b03811615610ba85790600090600090565b50600090600190600090565b6040513d6000823e3d90fd5b50505060009160039190565b9190916004811015610c3e5780610be257509050565b600060018203610bfd5763f645eedf60e01b60005260046000fd5b5060028103610c1b578263fce698f760e01b60005260045260246000fd5b9091600360009214610c2b575050565b6335e2f38360e21b825260045260249150fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220759280a30e1398d36554d0542c5cb83f77282a09f1009ed84fdc41b84396444164736f6c634300081a0033';

type MockMystikoTokenConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockMystikoTokenConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockMystikoToken__factory extends ContractFactory {
  constructor(...args: MockMystikoTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = 'MockMystikoToken';
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<MockMystikoToken> {
    return super.deploy(overrides || {}) as Promise<MockMystikoToken>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockMystikoToken {
    return super.attach(address) as MockMystikoToken;
  }
  connect(signer: Signer): MockMystikoToken__factory {
    return super.connect(signer) as MockMystikoToken__factory;
  }
  static readonly contractName: 'MockMystikoToken';
  public readonly contractName: 'MockMystikoToken';
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockMystikoTokenInterface {
    return new utils.Interface(_abi) as MockMystikoTokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockMystikoToken {
    return new Contract(address, _abi, signerOrProvider) as MockMystikoToken;
  }
}
