{"abi":[],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f02738066c33f2442fa769ddf7abc40d9843f15e0cfa06f1e84bea9b834219ab64736f6c63430008140033","sourceMap":"521:3235:64:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3235:64;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f02738066c33f2442fa769ddf7abc40d9843f15e0cfa06f1e84bea9b834219ab64736f6c63430008140033","sourceMap":"521:3235:64:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mystikonetwork/=node_modules/@mystikonetwork/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":forge-std/=foundry/lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@mystikonetwork/=node_modules/@mystikonetwork/","@openzeppelin/=node_modules/@openzeppelin/","forge-std/=foundry/lib/forge-std/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":52723,"exportedSymbols":{"MessageHashUtils":[52722],"Strings":[52073]},"nodeType":"SourceUnit","src":"123:3634:64","nodes":[{"id":52650,"nodeType":"PragmaDirective","src":"123:24:64","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":52652,"nodeType":"ImportDirective","src":"149:39:64","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":52723,"sourceUnit":52074,"symbolAliases":[{"foreign":{"id":52651,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52073,"src":"157:7:64","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":52722,"nodeType":"ContractDefinition","src":"521:3235:64","nodes":[{"id":52663,"nodeType":"FunctionDefinition","src":"1222:460:64","nodes":[],"body":{"id":52662,"nodeType":"Block","src":"1314:368:64","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1376:300:64","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1397:4:64","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1403:34:64","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1390:6:64"},"nodeType":"YulFunctionCall","src":"1390:48:64"},"nodeType":"YulExpressionStatement","src":"1390:48:64"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1499:4:64","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1505:11:64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1492:6:64"},"nodeType":"YulFunctionCall","src":"1492:25:64"},"nodeType":"YulExpressionStatement","src":"1492:25:64"},{"nodeType":"YulAssignment","src":"1571:31:64","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1591:4:64","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1597:4:64","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1581:9:64"},"nodeType":"YulFunctionCall","src":"1581:21:64"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1571:6:64"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":52659,"isOffset":false,"isSlot":false,"src":"1571:6:64","valueSize":1},{"declaration":52656,"isOffset":false,"isSlot":false,"src":"1505:11:64","valueSize":1}],"id":52661,"nodeType":"InlineAssembly","src":"1367:309:64"}]},"documentation":{"id":52654,"nodeType":"StructuredDocumentation","src":"552:665:64","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:64","parameters":{"id":52657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52656,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:64","nodeType":"VariableDeclaration","scope":52663,"src":"1254:19:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:64"},"returnParameters":{"id":52660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52659,"mutability":"mutable","name":"digest","nameLocation":"1306:6:64","nodeType":"VariableDeclaration","scope":52663,"src":"1298:14:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:64"},"scope":52722,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":52689,"nodeType":"FunctionDefinition","src":"2148:229:64","nodes":[],"body":{"id":52688,"nodeType":"Block","src":"2234:143:64","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":52675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:64","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":52680,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52666,"src":"2343:7:64","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":52681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:64","memberName":"length","nodeType":"MemberAccess","src":"2343:14:64","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":52678,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52073,"src":"2326:7:64","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$52073_$","typeString":"type(library Strings)"}},"id":52679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:64","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":51886,"src":"2326:16:64","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":52682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":52677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:64","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":52676,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:64","typeDescriptions":{}}},"id":52683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":52684,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52666,"src":"2361:7:64","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":52673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:64","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":52672,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:64","typeDescriptions":{}}},"id":52674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:64","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:64","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":52685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":52671,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:64","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":52686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":52670,"id":52687,"nodeType":"Return","src":"2244:126:64"}]},"documentation":{"id":52664,"nodeType":"StructuredDocumentation","src":"1688:455:64","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:64","parameters":{"id":52667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52666,"mutability":"mutable","name":"message","nameLocation":"2193:7:64","nodeType":"VariableDeclaration","scope":52689,"src":"2180:20:64","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":52665,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:64","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:64"},"returnParameters":{"id":52670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52689,"src":"2225:7:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52668,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:64"},"scope":52722,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":52709,"nodeType":"FunctionDefinition","src":"2720:191:64","nodes":[],"body":{"id":52708,"nodeType":"Block","src":"2831:80:64","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":52702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:64","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":52703,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52692,"src":"2887:9:64","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":52704,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52694,"src":"2898:4:64","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":52700,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:64","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":52701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:64","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:64","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":52705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":52699,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:64","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":52706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:64","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":52698,"id":52707,"nodeType":"Return","src":"2841:63:64"}]},"documentation":{"id":52690,"nodeType":"StructuredDocumentation","src":"2383:332:64","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:64","parameters":{"id":52695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52692,"mutability":"mutable","name":"validator","nameLocation":"2769:9:64","nodeType":"VariableDeclaration","scope":52709,"src":"2761:17:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52691,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:64","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52694,"mutability":"mutable","name":"data","nameLocation":"2793:4:64","nodeType":"VariableDeclaration","scope":52709,"src":"2780:17:64","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":52693,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:64","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:64"},"returnParameters":{"id":52698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":52709,"src":"2822:7:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52696,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:64"},"scope":52722,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":52721,"nodeType":"FunctionDefinition","src":"3353:401:64","nodes":[],"body":{"id":52720,"nodeType":"Block","src":"3462:292:64","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"3524:224:64","statements":[{"nodeType":"YulVariableDeclaration","src":"3538:22:64","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3555:4:64","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3549:5:64"},"nodeType":"YulFunctionCall","src":"3549:11:64"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"3542:3:64","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3580:3:64"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"3585:10:64","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3573:6:64"},"nodeType":"YulFunctionCall","src":"3573:23:64"},"nodeType":"YulExpressionStatement","src":"3573:23:64"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3620:3:64"},{"kind":"number","nodeType":"YulLiteral","src":"3625:4:64","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:64"},"nodeType":"YulFunctionCall","src":"3616:14:64"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"3632:15:64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3609:6:64"},"nodeType":"YulFunctionCall","src":"3609:39:64"},"nodeType":"YulExpressionStatement","src":"3609:39:64"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3672:3:64"},{"kind":"number","nodeType":"YulLiteral","src":"3677:4:64","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3668:3:64"},"nodeType":"YulFunctionCall","src":"3668:14:64"},{"name":"structHash","nodeType":"YulIdentifier","src":"3684:10:64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3661:6:64"},"nodeType":"YulFunctionCall","src":"3661:34:64"},"nodeType":"YulExpressionStatement","src":"3661:34:64"},{"nodeType":"YulAssignment","src":"3708:30:64","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3728:3:64"},{"kind":"number","nodeType":"YulLiteral","src":"3733:4:64","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3718:9:64"},"nodeType":"YulFunctionCall","src":"3718:20:64"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3708:6:64"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":52717,"isOffset":false,"isSlot":false,"src":"3708:6:64","valueSize":1},{"declaration":52712,"isOffset":false,"isSlot":false,"src":"3632:15:64","valueSize":1},{"declaration":52714,"isOffset":false,"isSlot":false,"src":"3684:10:64","valueSize":1}],"id":52719,"nodeType":"InlineAssembly","src":"3515:233:64"}]},"documentation":{"id":52710,"nodeType":"StructuredDocumentation","src":"2917:431:64","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:64","parameters":{"id":52715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52712,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:64","nodeType":"VariableDeclaration","scope":52721,"src":"3378:23:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":52714,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:64","nodeType":"VariableDeclaration","scope":52721,"src":"3403:18:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:64"},"returnParameters":{"id":52718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":52717,"mutability":"mutable","name":"digest","nameLocation":"3454:6:64","nodeType":"VariableDeclaration","scope":52721,"src":"3446:14:64","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":52716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:64","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:64"},"scope":52722,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":52653,"nodeType":"StructuredDocumentation","src":"190:330:64","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[52722],"name":"MessageHashUtils","nameLocation":"529:16:64","scope":52723,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":64}